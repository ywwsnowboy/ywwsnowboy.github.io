<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git 教程</title>
      <link href="/2023/03/14/Git/Git%20%E6%95%99%E7%A8%8B/"/>
      <url>/2023/03/14/Git/Git%20%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>Git 教程</h1><h2 id="1-概述">1 概述</h2><ul><li>集中式版本控制工具</li></ul><p>集中式版本控制工具，版本库是集中存放在中央服务器的，team里每个人work时从中央服务器下载代码，是必须联网才能工作，局域网或互联网。个人修改后然后提交到中央版本库。<br><strong>举例</strong>：SVN和CVS</p><ul><li>分布式版本控制工具</li></ul><p>分布式版本控制系统没有“中央服务器”，每个人的电脑上都是一个完整的版本库，这样工作的时候，无需要联网了，因为版本库就在你自己的电脑上。多人协作只需要各自的修改推送给对方，就能互相看到对方的修改了。<br><strong>举例</strong>：Git</p><p>Git是分布式的，Git不需要有中心服务器，我们每台电脑拥有的东西都是一样的。我们使用Git并且有个中心服务器，仅仅是为了方便交换大家的修改，但是这个服务器的地位和我们每个人的PC是一样的。我们可以把它当做一个开发者的PC就可以了，就是为了大家代码容易交流不关机用的。没有它大家一样可以工作，只不过“交换”修改不方便而已。<br>git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。Git是Linus Torvalds为了帮助管理Linux内核开发面开发的一个开放源码的版本控刺软件。</p><p><img src="https://vip2.loli.io/2023/03/15/NHuC5ViebJ79K43.png" alt=""></p><p>git 的优势：</p><ul><li>速度</li><li>简单的设计</li><li>对非线性开发模式的强力支持（允许成千上万个并行开发的分支）</li><li>完全分布式</li><li>有能力高效管理类似Liux内核一样的超大规模项目（速度和数据量）</li></ul><p><strong>Git 工作流程图</strong>：</p><p><img src="https://vip2.loli.io/2023/03/15/qJktncrX4yQhTe8.png" alt=""></p><p>命令如下：</p><ol><li><p>clone（克隆）：从远程仓库中克隆代码到本地仓库</p></li><li><p>checkout（检出）：从本地仓库中检出一个仓库分支然后进行修订</p></li><li><p>add（添加）：在提交前先将代码提交到暂存区</p></li><li><p>commit（提交）：提交到本地仓库。本地仓库中保存修改的各个历史版本</p></li><li><p>fetch（抓取）：从远程库，抓取到本地仓库，不进行任何的合并动作，一般操作比较少。</p></li><li><p>pull（拉取）：从远程库拉到本地库，自动进行合并（merge），然后放到到工作区，相当于fetch+merge</p></li><li><p>push（推送）：修改完成后，需要和团队成员共享代码时，将代码推送到远程仓库</p></li></ol><h2 id="2-Git-安装与常用命令">2 Git 安装与常用命令</h2><p>本教程里的 git 命令例子都是在Git Bash中演示的，会用到一些基本的 linux 命令，在此为大家提前列举：</p><ul><li><code>ls/ll</code>：查看当前目录</li><li><code>cat</code>：查看文件内容</li><li><code>touch</code>：创建文件</li><li><code>vi</code>：vi 编辑器（使用 vi 编辑器是为了方便展示效果，学员可以记事本、NotePad++等其它编辑器）</li></ul><h3 id="2-1-Git-环境配置">2.1 Git 环境配置</h3><h4 id="2-1-1-下载与安装">2.1.1 下载与安装</h4><p>下载地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><p>双击下载的安装文件来安装 Git。安装完成后在电脑桌面（也可以是其他目录）点击右键，如果能够看到<code>Git GUI</code>和<code>Git Bash</code>两个菜单则说明Git安装成功。</p><p>备注：</p><ul><li><code>Git GUI</code>：Git 提供的图形界面工具</li><li><code>Git Bash</code>：Git 提供的命令行工具</li></ul><p>当安装 Git 后首先要做的事情是设置用户名称和 email 地址。这是非常重要的，因为每次 Git 提交都会使用该用户信息。</p><h4 id="2-1-2-基本配置">2.1.2 基本配置</h4><ol><li>打开<code>Git Bash</code></li><li>设置用户信息</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&#x27;name&#x27;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;ywwsnowboy@outlook.com&quot;</span></span><br></pre></td></tr></table></figure><p>以后如果不更换电脑的情况下，上面的设置就不需要配置了。</p><p>查看配置信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name</span><br><span class="line">git config --global user.email</span><br></pre></td></tr></table></figure><h4 id="2-1-3-为常用指令配置别名（可选）">2.1.3 为常用指令配置别名（可选）</h4><p>有些常用的指令参数非常多，每次都要输入好多参数，我们可以使用别名。</p><ol><li>打开用户目录，创建<code>.bashrc</code>文件</li></ol><p>部分windows系统不允许用户创建点号开头的文件，可以打开<code>Git Bash</code>，执行<code>touch ~/.bashrc</code></p><ol start="2"><li>在<code>.bashrc</code>文件中输入如下内容</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用于输出git提交日志</span></span><br><span class="line"><span class="built_in">alias</span> git-log=<span class="string">&#x27;git log --pretty=oneline --all --graph --abbrev-commit&#x27;</span></span><br><span class="line"><span class="comment"># 用于输出当前目录所有文件即基本信息</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls -al&#x27;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>打开<code>Git Bash</code>，执行<code>source ~/.bashrc</code></li></ol><h4 id="2-1-4-解决Git-Bash乱码问题">2.1.4 解决Git Bash乱码问题</h4><ol><li>打开Git Bash执行下面命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.quotepath <span class="literal">false</span></span><br></pre></td></tr></table></figure><ol start="2"><li><code>$&#123;git_home&#125;/etc/bash.bashrc</code>文件最后加入下面两行（这里的<code>$&#123;git_home&#125;</code>表示 git 安装的目录）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LANG=<span class="string">&quot;zh_CN.UTF-8&quot;</span></span><br><span class="line"><span class="built_in">export</span> LC_ALL=<span class="string">&quot;zh_CN.UTF-8&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-获取本地仓库">2.2 获取本地仓库</h3><p>要使用 Git 对我们的代码进行版本控制，首先需要获得本地仓库</p><p>1）在电脑的任意位置创建一个空目录（例如test）作为我们的本地 Git 仓库</p><p>2）进入这个目录中，点击右键打开<code>Git Bash</code>窗口</p><p>3）执行命令<code>git init</code></p><p>4）如果创建成功后可在文件夹下看到隐藏的<code>.git</code>目录。</p><p><img src="https://vip2.loli.io/2023/03/15/jXqGF8gYp9uPCrM.png" alt="image-20230104085035465"></p><h3 id="2-3-基础操作指令">2.3 基础操作指令</h3><p>Git 工作目录对于文件的<strong>修改</strong>（增加、删除、更新）会存在几个状态，这些<strong>修改</strong>的状态会随着我们执行 Git 的命令儿发生变化。</p><p><img src="https://vip2.loli.io/2023/03/15/9kSryRwqYIWjVMO.png" alt="image-20230104091446173"></p><p>本章节主要讲解如何使用命令来控制这些状态之间的转换：</p><ol><li><code>git add</code>（工作区 —&gt; 暂存区）</li><li><code>git commit</code>（暂存区 —&gt; 本地仓库）</li></ol><h4 id="2-3-1-查看修改的状态（status）">2.3.1 查看修改的状态（status）</h4><ul><li>作用：查看修改的状态（暂存区、工作区）</li><li>命令形式：<code>git status</code></li></ul><h4 id="2-3-2-添加工作区到暂存区（add）">2.3.2 添加工作区到暂存区（add）</h4><ul><li>作用：添加工作区一个或多个文件的修改到暂存区</li><li>命令形式：<code>git add 单个文件名|通配符</code>，比如<code>git add file.txt</code>或<code>git add file1.txt file2.txt</code>或<code>git add .</code>，<code>git add .</code>是将所有变动的文件加入暂存区<ul><li>将所有修改加入暂存区：<code>git add .</code></li></ul></li></ul><h4 id="2-3-3-提交暂存区到本地仓库（commit）">2.3.3 提交暂存区到本地仓库（commit）</h4><ul><li>作用：提交暂存区内容到本地仓库的当前分支</li><li>命令形式：<code>git commit -m &quot;注释内容&quot;</code>或<code>git commit -m '注释内容'</code></li></ul><h4 id="2-3-4-查看提交日志">2.3.4 查看提交日志</h4><p>在2.1.3中配置的别名 git-log 就包含了这些参数，所以后续可以直接使用指令<code>git-log</code>，注意这里是<code>git-log</code>不是<code>git log</code>。</p><ul><li>作用：查看提交记录</li><li>命令形式：<code>git log [option]</code><ul><li>options<ul><li><code>--all</code>：显示所有分支</li><li><code>--pretty=oneline</code>：将提交信息显示为一行</li><li><code>--abbrev-commit</code>：使得输出的 commitID 更简短</li><li><code>–graph</code>：以图的形式显示</li></ul></li></ul></li></ul><p><img src="https://vip2.loli.io/2023/03/15/uQ3XsiTBxOdbkAY.png" alt="image-20230104101841096"></p><p><img src="https://vip2.loli.io/2023/03/15/JhRsMoyltwncmPd.png" alt="image-20230104104636139"></p><h4 id="2-3-5-版本回退">2.3.5 版本回退</h4><ul><li>作用：版本切换</li><li>命令形式：<code>git reset --hard commitID</code><ul><li>commitID 可以使用<code>git-log</code>或<code>git log</code>指令查看</li><li>commitID 至少写前四位字符</li></ul></li><li>如何查看已经删除的记录？<ul><li><code>git reflog</code>：这个指令可以看到已经删除的提交记录</li></ul></li></ul><p><img src="https://vip2.loli.io/2023/03/15/xI1RMrQoekVnm4l.png" alt="image-20230104141336052"></p><h4 id="2-3-6-忽略文件至-gitignore">2.3.6 忽略文件至.gitignore</h4><p>一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。在这种情况下，我们可以在工作目录中创建一个名为<code>.gitignore</code>的文件（文件名称固定），列出要忽略的文件模式。</p><p>忽略文件需要新建一个名为<code>.gitignore</code>的文件，该文件用于声明忽略文件或不忽略文件的规则，规则对当前目录及其子目录生效。</p><p>注意：该文件因为没有文件名，不能在 windows 目录下直接创建，可以通过Git Bash 中的<code>touch</code>命令创建。</p><p>下面是一个示例：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># no .a files</span><br><span class="line">*.a</span><br><span class="line"># but do track lib.a, even though you&#x27;re ignoring .a files above</span><br><span class="line">！lib.a</span><br><span class="line"># only ignore the TODo file in the current directory, not subdir/TODO</span><br><span class="line">/TODO</span><br><span class="line"># ignore all files in the build/ directory</span><br><span class="line">build/</span><br><span class="line"># ignore doc/notes.txt, but not doc/server/arch.txt</span><br><span class="line">doc/*.txt</span><br><span class="line"># ignore all .pdf files in the doc/ directory</span><br><span class="line">doc/**/*.pdf</span><br></pre></td></tr></table></figure><p>常见规则写法如下：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/mtk/         # 过滤整个mtk文件夹</span><br><span class="line">*.zip         # 过滤所有 .zip 文件</span><br><span class="line">/mtk/do.c     # 过滤mtk文件夹下的某个具体文件</span><br><span class="line">!index.php    # 不过滤index.php文件，!表示取反的意思</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/15/9RG7ABWlLJjTQcs.png" alt="image-20230104153258545"></p><p>内容回顾：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###############仓库初始化##################</span></span><br><span class="line"><span class="comment"># 创建目录（git_test01）并在目录下打开 git bash</span></span><br><span class="line"><span class="comment"># 略</span></span><br><span class="line"><span class="comment"># 初始化git仓库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment">##################创建文件并提交#修##################</span></span><br><span class="line"><span class="comment"># 目录下创建文件fi1e01.txt</span></span><br><span class="line"><span class="comment"># 略</span></span><br><span class="line"><span class="comment"># 将修改加入暂存区</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># 将修改提交到本地仓库，提交记录内容为：commit001</span></span><br><span class="line">git commit -m <span class="string">&#x27;commit 001&#x27;</span></span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###################修改文件并提交####################</span></span><br><span class="line"><span class="comment"># 修改fi1e01的内容为：count=1略并将修改加入暂存区</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment">##将修改提交到本地仓库，提交记录内容为：update fi1e01</span></span><br><span class="line">git commit --m <span class="string">&#x27;update file01&#x27;</span></span><br><span class="line"><span class="comment"># 查看日志git log</span></span><br><span class="line"><span class="comment"># 以精简的方式显示提交记录</span></span><br><span class="line">git-log</span><br><span class="line"><span class="comment">###################将最后一次修改还原#################</span></span><br><span class="line"><span class="comment"># 查看提交记录</span></span><br><span class="line">git-log</span><br><span class="line"><span class="comment"># 找到倒数第2次提交的commitID</span></span><br><span class="line"><span class="comment"># 略</span></span><br><span class="line"><span class="comment"># 版本回退</span></span><br><span class="line">git reset commitID --hard</span><br></pre></td></tr></table></figure><h3 id="2-4-分支">2.4 分支</h3><p>几乎所有的版本控制系统都以某种形式支持分支。使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的Bug修改、开发新的功能，以免影响开发主线。</p><h4 id="2-4-1-查看本地分支">2.4.1 查看本地分支</h4><ul><li>命令：<code>git branch</code></li></ul><h4 id="2-4-2-创建本地分支">2.4.2 创建本地分支</h4><ul><li>命令：<code>git branch 分支名</code></li></ul><h4 id="2-4-3-切换分支">2.4.3 切换分支</h4><ul><li>命令：<code>git checkout 分支名</code></li></ul><p>我们还可以直接切换到一个不存在的分支（创建并切换）</p><ul><li>命令：<code>git checkout -b 分支名</code></li></ul><h4 id="2-4-4-合并分支（merge）">2.4.4 合并分支（merge）</h4><p>一个分支上的提交可以合并到另一个分支，比如当前在master分支上，通过<code>git merge branch01</code>命令表示将branch01中的代码合并到master分支上来。</p><p>命令：<code>git merge 被合并的分支名称</code></p><p><img src="https://vip2.loli.io/2023/03/15/5967Ieb3uKXlDxy.png" alt="image-20230104161212824"></p><blockquote><p>注意：如果进行切换分支之前要将当前分支的更改提交到本地仓库，即在当前分支下执行<code>git add .</code>和<code>git commit -m &quot;注释&quot;</code>命令。</p></blockquote><h4 id="2-4-5-删除分支">2.4.5 删除分支</h4><p>不能删除当前分支，只能删除其他分支</p><ul><li><code>git branch -d b1</code>：删除分支时，需要做各种检查</li><li><code>git branch -D b1</code>：不做任何检查，强制删除。如果分支并没有合并到master上，如果删除这个分支，会出现<code>git branch -d b1</code>命令无法删除的情况，如果此时确定需要删除，需要通过<code>git branch -D b1</code>来进行删除。</li></ul><blockquote><p>注意：要切换到master分支才能删除其他分支。换而言之，不能在dev分支中删除dev分支。</p></blockquote><h4 id="2-4-6-解决冲突">2.4.6 解决冲突</h4><p>当两个分支上对文件的修改可能会存在冲突，例如同时修改了同一个文件的同一行，这时就需要手动解决冲突，解决冲突步骤如下：</p><ol><li><p>处理文件中冲突的地方</p></li><li><p>将解决完冲突的文件加入暂存区（add）</p></li><li><p>提交到仓库（commit）</p></li></ol><p>冲突部分的内容处理如下所示：</p><p><img src="https://vip2.loli.io/2023/03/15/x2PBM8XAn6dZi31.png" alt="image-20230104170600745"></p><h4 id="2-4-7-开发中分支使用原则与流程">2.4.7 开发中分支使用原则与流程</h4><p>几乎所有的版本控制系统都以某种形式支持分支。使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的Bug修改、开发新的功能，以免影响开发主线。</p><p>在开发中，一般有如下分支使用原则与流程：</p><ul><li>master（生产）分支</li></ul><p>线上分支，主分支，中小规模项目作为线上运行的应用对应的分支；</p><ul><li>develop（开发）分支</li></ul><p>是从maste创建的分支，一般作为开发部门的主要开发分支，如果没有其他并行开发不同期上线要求，都可以在此版本进行开发，阶段开发完成后，需要是合并到master分支，准备上线。</p><ul><li>feature/xxxx分支</li></ul><p>从develop创建的分支，一般是同期并行开发，但不同期上线时创建的分支，分支上的研发任务完成后合并到develop分支。</p><ul><li>hotfix/xxxx分支</li></ul><p>从master派生的分支，一般作为线上bug修复使用，修复完成后需要合并到master、test、develop分支</p><ul><li>还有一些其他分支，在此不再详述，例如test分支（用于代码测试）、pre分支（预上线分支）等等。</li></ul><p><img src="https://vip2.loli.io/2023/03/15/NVrLb2hxOpUHvFl.png" alt="image-20230104210953926"></p><p>练习：分支操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###########################创建并切换到dev01分支，在dev01分支提交</span></span><br><span class="line"><span class="comment"># [master]创建分支dev01</span></span><br><span class="line">git branch dev01</span><br><span class="line"><span class="comment"># [master]切换到dev01</span></span><br><span class="line">git checkout dev01</span><br><span class="line"><span class="comment"># [dev01]创建文件fi1e02.txt</span></span><br><span class="line"><span class="comment"># 略</span></span><br><span class="line"><span class="comment"># [dev01]将修改加入暂存区并提交到仓库，提交记录内容为：add file02 on dev </span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;add file02 on dev&#x27;</span></span><br><span class="line"><span class="comment"># [dev01]以精简的方式显示提交记录</span></span><br><span class="line">git-log</span><br><span class="line"><span class="comment">##########################切换到master分支，将devO1合并到master分支</span></span><br><span class="line"><span class="comment"># [devO1]切换到master分支</span></span><br><span class="line">git checkout master</span><br><span class="line"><span class="comment"># [master]合并dev01到master分支</span></span><br><span class="line">git merge dev01</span><br><span class="line"><span class="comment"># [master]以精简的方式显示提交记录</span></span><br><span class="line">git-log</span><br><span class="line"><span class="comment"># [master]查看文件变化（目录下也出现了file02.txt）</span></span><br><span class="line"><span class="comment"># 略</span></span><br><span class="line"><span class="comment">##########################删除dev01分支</span></span><br><span class="line"><span class="comment"># [master]删除dev01分支</span></span><br><span class="line">git branch -d dev01</span><br><span class="line"><span class="comment"># [master]以精简的方式显示提交记录</span></span><br><span class="line">git-log</span><br></pre></td></tr></table></figure><p>注意：<code>git merge dev02</code>命令可以实现快速合并，并不需要进行<code>git add .</code>和<code>git commit -m 'xxxxxx'</code>操作。</p><p><img src="https://vip2.loli.io/2023/03/15/k3yqKDn74VfgzLx.png" alt="image-20230104224433089"></p><h2 id="3-Git远程仓库">3 Git远程仓库</h2><h3 id="3-1-常用的托管服务-远程仓库">3.1 常用的托管服务[远程仓库]</h3><p>Git中存在两种类型的仓库，即本地仓库和远程仓库。那么我们如何搭建Git远程仓库呢？我们可以借助互联网上提供的一些代码托管服务来实现，其中比较常用的有GitHub、码云、GitLab等。</p><ul><li><p>GitHub（地址：<a href="https://github.com/%EF%BC%89%E6%98%AF%E4%B8%80%E4%B8%AA%E9%9D%A2%E5%90%91%E5%BC%80%E6%BA%90%E5%8F%8A%E7%A7%81%E6%9C%89%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%89%98%E7%AE%A1%E5%B9%B3%E5%8F%B0%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%8F%AA%E6%94%AF%E6%8C%81Git%E4%BD%9C%E4%B8%BA%E5%94%AF%E4%B8%80%E7%9A%84%E7%89%88%E6%9C%AC%E5%BA%93%E6%A0%BC%E5%BC%8F%E8%BF%9B%E8%A1%8C%E6%89%98%E7%AE%A1%EF%BC%8C%E6%95%85%E5%90%8DGitHub">https://github.com/）是一个面向开源及私有软件项目的托管平台，因为只支持Git作为唯一的版本库格式进行托管，故名GitHub</a></p></li><li><p>码云（地址：<a href="https://gitee.com/%EF%BC%89%E6%98%AF%E5%9B%BD%E5%86%85%E7%9A%84%E4%B8%80%E4%B8%AA%E4%BB%A3%E7%A0%81%E6%89%98%E7%AE%A1%E5%B9%B3%E5%8F%B0%EF%BC%8C%E7%94%B1%E4%BA%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9C%A8%E5%9B%BD%E5%86%85%EF%BC%8C%E6%89%80%E4%BB%A5%E7%9B%B8%E6%AF%94%E4%BA%8EGitHub%EF%BC%8C%E7%A0%81%E4%BA%91%E9%80%9F%E5%BA%A6%E4%BC%9A%E6%9B%B4%E5%BF%AB">https://gitee.com/）是国内的一个代码托管平台，由于服务器在国内，所以相比于GitHub，码云速度会更快</a></p></li><li><p>GitLab（地址：<a href="https://about.gitlab.com/%EF%BC%89%E6%98%AF%E4%B8%80%E4%B8%AA%E7%94%A8%E4%BA%8E%E4%BB%93%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%EF%BC%8C%E4%BD%BF%E7%94%A8Git%E4%BD%9C%E4%B8%BA%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%EF%BC%8C%E5%B9%B6%E5%9C%A8%E6%AD%A4%E5%9F%BA%E7%A1%80%E4%B8%8A%E6%90%AD%E5%BB%BA%E8%B5%B7%E6%9D%A5%E7%9A%84web%E6%9C%8D%E5%8A%A1%EF%BC%8C%E4%B8%80%E8%88%AC%E7%94%A8%E4%BA%8E%E5%9C%A8%E4%BC%81%E4%B8%9A%E3%80%81%E5%AD%A6%E6%A0%A1%E7%AD%89%E5%86%85%E9%83%A8%E7%BD%91%E7%BB%9C%E6%90%AD%E5%BB%BAgit%E7%A7%81%E6%9C%8D%E3%80%82">https://about.gitlab.com/）是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务，一般用于在企业、学校等内部网络搭建git私服。</a></p></li></ul><h3 id="3-2-注册并创建远程仓库">3.2 注册并创建远程仓库</h3><p>注册码云并且创建远程仓库，这里以码云为例，创建仓库：</p><p><img src="https://vip2.loli.io/2023/03/15/8GRPfNQxmg21DjI.png" alt="image-20230104230504522"></p><h3 id="3-3-配置SSH公钥或HTTPS">3.3 配置SSH公钥或HTTPS</h3><p>代码推送到远程仓库有两种方式进行，分别采用SSH协议的方式和HTTPS协议的方式，一个仓库仅仅需要配置一次即可，两种配置方式任选其一即可，推荐使用SSH的方式。分别操作如下。</p><h4 id="3-3-1-配置SSH公钥">3.3.1 配置SSH公钥</h4><ul><li>产生SSH公钥<ul><li><code>ssh-keygen -t rsa</code></li><li>不断回车。如果公钥已经存在，则自动覆盖</li></ul></li><li>Gitee 设置账户公钥<ul><li>获取公钥：<code>cat ~/.ssh/id_rsa.pub</code></li><li>验证是否配置成功：<code>ssh -T git@gitee.com</code></li></ul></li></ul><p><img src="https://vip2.loli.io/2023/03/15/1srxfJW8l7hYDjk.png" alt="image-20230104232020852"></p><p>将公钥复制粘贴到gitee网站的ssh中的操作如下：</p><p><img src="https://vip2.loli.io/2023/03/15/w3iekcxZ9GuQtMH.png" alt="image-20230104231651197"></p><h4 id="3-3-2-配置HTTPS">3.3.2 配置HTTPS</h4><p>修改当前仓库下的<code>.git</code>（该文件可能会被隐藏）文件夹中的<code>config</code>文件，将</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[remote &quot;origin&quot;]</span><br><span class="line">url = https://github.com/ywwsnowboy/test.git</span><br></pre></td></tr></table></figure><p>更改为</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[remote &quot;origin&quot;]</span><br><span class="line">url = https://ywwsnowboy:123456@github.com/ywwsnowboy/test.git</span><br></pre></td></tr></table></figure><p><code>ywwsnowboy</code>为用户名，<code>123456</code>为 Github 账号密码，即上面仅仅在<code>github</code>前面加上了<code>用户名:账号密码@</code>。</p><h3 id="3-4-操作远程仓库">3.4 操作远程仓库</h3><h4 id="3-4-1-添加远程仓库">3.4.1 添加远程仓库</h4><ul><li>命令：<code>git remote add &lt;远端名称&gt; &lt;仓库路径&gt;</code><ul><li>远端名称：默认是origin，取决于远端服务器设置</li><li>仓库路径：从远端服务器获取此URL</li><li>例如：<code>git remote add origin git@gitee.com:ywwsnowboy/git_test.git</code></li></ul></li></ul><p><img src="https://vip2.loli.io/2023/03/15/VsJr4uDlEXLbQjS.png" alt="image-20230105000340595"></p><h4 id="3-4-2-查看远程仓库">3.4.2 查看远程仓库</h4><ul><li>命令：<code>git remote</code></li></ul><p><img src="https://vip2.loli.io/2023/03/15/LdvhoDRxwt34q2i.png" alt="image-20230105000420896"></p><p>这里的<code>origin</code>为起的名称。</p><h4 id="3-4-3-推送到远程仓库">3.4.3 推送到远程仓库</h4><ul><li>命令：<code>git push [-f] [--set-upstream] [远端名称[本地分支名][:远端分支名]]</code><ul><li>如果远程分支名和本地分支名称相同，则可以只写本地分支<ul><li><code>git push origin master</code></li></ul></li><li><code>-f</code>：表示强制覆盖</li><li><code>--set-upstream</code>：推送到远端的同时并且建立起和远端分支的关联关系。<ul><li><code>git push --set-upstream origin master:master</code>或<code>git push --set-upstream origin master</code></li><li>如果通过clone得到的代码，通过后面提交不需要使用命令<code>git push --set-upstream origin master</code>，直接<code>git push</code>即可。</li></ul></li><li>如果<strong>当前分支已经和远端分支关联</strong>，则可以省略分支名和远端名<ul><li><code>git push</code>：将master分支推送到已关联的远端分支</li></ul></li></ul></li></ul><p><img src="https://vip2.loli.io/2023/03/15/lgutPhOUMHds5L6.png" alt="image-20230105001354098"></p><p><img src="https://vip2.loli.io/2023/03/15/2GmsAMfEBTeKQv6.png" alt="image-20230105002507151"></p><h4 id="3-4-4-本地分支与远程分支的关联关系">3.4.4 本地分支与远程分支的关联关系</h4><ul><li>查看关联关系：<code>git branch -vv</code></li></ul><p><img src="https://vip2.loli.io/2023/03/15/gYf51AazbsT79N8.png" alt="image-20230105101731615"></p><h4 id="3-4-5-从远程仓库克隆">3.4.5 从远程仓库克隆</h4><p>如果已经有一个远端仓库，我们可以直接clone到本地。</p><ul><li>命令：<code>git clone &lt;仓库路径&gt; [本地目录]</code><ul><li>本地目录可以省略，会自动生成一个目录，可以自定义目录，如果不指定目录名称，默认使用仓库的名称作为文件夹名。</li></ul></li></ul><p><img src="https://vip2.loli.io/2023/03/15/5vsR7PAiDL3hQFo.png" alt="image-20230105193103640"></p><h4 id="3-4-6-从远程仓库中抓取和拉取">3.4.6 从远程仓库中抓取和拉取</h4><p>远程分支和本地分支一样，可以进行merge操作，只需要先把远端仓库里的更新都下载到本地，再进行操作。</p><ul><li>抓取命令：<code>git fetch [remote name] [branch name]</code><ul><li><strong>抓取指令就是将仓库里的更新都抓取到本地，不会进行合并</strong></li><li>如果不指定远端名称和分支名，则抓取所有分支</li><li>抓取之后，还需要执行<code>git merge origin/master</code>将其合并到本地分支</li></ul></li></ul><p><img src="https://vip2.loli.io/2023/03/15/g5lUZzbtyDLmTKi.png" alt="image-20230105203342297"></p><ul><li>拉取命令：<code>git pull [remote name] [branch name]</code><ul><li><strong>拉取指令就是将远端仓库的修改拉到本地并自动进行合并，等同于<code>fetch + merge</code></strong></li><li>如果不指定远端名称和分支名，则抓取所有并更新当前分支。</li></ul></li></ul><p><img src="https://vip2.loli.io/2023/03/15/I8vVyTnZCaotFKr.png" alt="image-20230105204341214"></p><h4 id="3-4-7-解决合并冲突">3.4.7 解决合并冲突</h4><p>在一段时间，A、B用户修改了同一个文件，且修改了同一行位置的代码，此时会发生合并冲突。</p><p>A用户在本地修改代码后优先推送到远程仓库，此时用户在本地修订代码，提交到本地仓库后，也需要推送到远程仓库，此时用户晚于A用户，故需要先拉取远程仓库的提交，经过合并后才能推送到远端分支，如下图所示。</p><p><img src="https://vip2.loli.io/2023/03/15/auV5IPHhN8wUtmf.png" alt="image-20230105205728414"></p><p>在B用户拉取代码时，因为A、B用户同一段时间修改了同一个文件的相同位置代码，故会发生合并冲突。</p><p><strong>远程分支也是分支，所以合并冲突时的解决方式和解决本地分支冲突相同。</strong></p><p>练习：远程仓库操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">########################## 1-将本地仓库推送到远程仓库</span></span><br><span class="line"><span class="comment"># 完成4.1、4.2、4.3、4.4的操作</span></span><br><span class="line"><span class="comment"># 略</span></span><br><span class="line"><span class="comment"># [git_test01]添加远程仓库</span></span><br><span class="line">git remote add origin git@gitee.com/**/*.git</span><br><span class="line"><span class="comment"># [git_testo1]将master分支推送到远程仓库，并与远程仓库的master分支绑定关联关系</span></span><br><span class="line">git push --set-upstream origin master</span><br><span class="line"></span><br><span class="line"><span class="comment">########################### 2-将远程仓库克隆到木地</span></span><br><span class="line"><span class="comment"># 将远程仓库克隆到本地git_test02目录下</span></span><br><span class="line">git <span class="built_in">clone</span> git@gitee.com/**/**.git git_test02</span><br><span class="line"><span class="comment"># [git_test02]以精简的方式显示提交记录</span></span><br><span class="line">git-log</span><br><span class="line"></span><br><span class="line"><span class="comment">########################### 3-将本地修改推送到远程仓库</span></span><br><span class="line"><span class="comment"># [git_test01]创建文件file03.txt</span></span><br><span class="line"><span class="comment"># 略</span></span><br><span class="line"><span class="comment"># [git_test01] 将修改加入暂存区并提交到仓库，提交记录内容为：add file03</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;add file03&#x27;</span></span><br><span class="line"><span class="comment"># [git_test01]将master分支的修改推送到远程仓库</span></span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line"><span class="comment">########################### 4-将远程仓库的修改更新到本地</span></span><br><span class="line"><span class="comment"># [git_test02]将远程仓库修改再拉取到本地</span></span><br><span class="line">git pull</span><br><span class="line"><span class="comment"># 以精简的方式显示提交记录</span></span><br><span class="line">git-log</span><br><span class="line"><span class="comment"># 查看文件变化(目录下也出现了file03.txt)</span></span><br><span class="line"><span class="comment"># 略</span></span><br></pre></td></tr></table></figure><h2 id="4-在IDEA中使用Git">4 在IDEA中使用Git</h2><h3 id="4-1-在IDEA中配置Git">4.1 在IDEA中配置Git</h3><p>安装好 Intellij IDEA 后，如果 Git 安装在默认路径下，那么 IDEA 会自动找到 git 的位置，如果更改了 Git 的安装位置则需要手动配置下 Git 的路径。选择 File→Settings打开设置窗口，找到 Version Control 下的 git 选项：</p><p><img src="https://vip2.loli.io/2023/03/15/GaNuOKycRe6UYp3.png" alt="image-20230105222303840"></p><h3 id="4-2-在IDEA中操作Git">4.2 在IDEA中操作Git</h3><p>场景：本地已经有一个项目，但是并不是 git 项目，我们需要将这个放到码云的仓库里，和其他开发人员继续一起协作开发。</p><ol><li><p>创建项目远程仓库（参照3.2）</p></li><li><p>初始化本地仓库</p></li><li><p>设置远程仓库</p></li></ol><p><img src="https://vip2.loli.io/2023/03/15/HMw4dPb6XRVQqkO.png" alt="image-20230106175344440"></p><ol start="4"><li>提交到本地仓库</li></ol><p><img src="https://vip2.loli.io/2023/03/15/nbMvfNGXeRHsmyO.png" alt="image-20230106175949893"></p><ol start="5"><li>推送到远程仓库</li></ol><p><img src="https://vip2.loli.io/2023/03/15/lmi2JYkqzs45aMI.png" alt="image-20230106210734530"></p><ol start="6"><li>创建分支</li></ol><p><img src="https://vip2.loli.io/2023/03/15/ixUZqpSl5btDXVQ.png" alt="image-20230106211342029"></p><h3 id="4-3-IDEA常用Git操作入口">4.3 IDEA常用Git操作入口</h3><p><img src="https://vip2.loli.io/2023/03/15/B5786EfXRrJUGDp.png" alt="image-20230105232649410"></p><p><img src="https://vip2.loli.io/2023/03/15/hWp5kUjOL9xBISe.png" alt="image-20230106173731659"></p><p><img src="https://vip2.loli.io/2023/03/15/bPwTHjCzJRyhf5D.png" alt="image-20230106174304445"></p><h3 id="4-4-场景分析">4.4 场景分析</h3><p>注意：切换分支，需要提交本地代码（git commit）之后再切换分支，否则会出现代码丢失。</p><p>IDEA集成Git Bash作为Terminal</p><p><img src="https://vip2.loli.io/2023/03/15/QKHrsvXPDu3g96Z.png" alt="image-20230106212519029"></p><h2 id="5-Git图形化管理工具">5 Git图形化管理工具</h2><ol><li>Github Desktop</li></ol><p>网站：<a href="https://desktop.github.com/">https://desktop.github.com/</a></p><p>Github 出品的软件，功能完善，使用方便。对于经常使用 GitHub 的开发人员来说是非常便捷的工具。界面干净，用起来非常顺手，顶部的分支时间线非常绚丽。针对 Github 仓库该图形化管理工具很好用。</p><ol start="2"><li>Source tree</li></ol><p>老牌的<code>Git GUI</code>管理工具了，也号称是最好用的<code>Git GUI</code>工具。功能丰富，基本操作和高级操作都非常流畅，适合初学者上手。</p><ol start="3"><li>TortoiseGit</li></ol><p>对于熟悉SVN的开发人员来说，这个小乌龟图标应该是非常友善了。TortoiseGit 简称 tgit，中文名海龟Git。它与其前辈 TortoiseSVN 都是非常优秀的开源版本控制客户端软件。</p><h2 id="6-问题集锦">6 问题集锦</h2><p>出现错误：error: failed to push some refs to ‘<a href="http://toscode.gitee.com">toscode.gitee.com</a>:ywwsnowboy/minvo.git’</p><p><img src="https://vip2.loli.io/2023/03/15/ZXA5RajUrJufLtV.png" alt="image-20230215195915380"></p><p>Gitee在提交大文件时，出现如下错误，异常退出：Git LFS操作指南中可以知道，出现这个问题主要是因为Git LFS(Large File Storage ,大文件存储)是GitHub开发的一个Git的扩展，用于实现对大文件的支持。目前码云（<a href="http://Gitee.com">Gitee.com</a>）已经支持 Git LFS功能，目前改功能针对付费企业开放。可以输入以下代码解决此问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> .git/hooks/pre-push</span><br></pre></td></tr></table></figure><h2 id="附录">附录</h2><h3 id="gitignore文件配置">.gitignore文件配置</h3><p><code>.gitignore</code>配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"># Created by .ignore support plugin (hsz.mobi)</span><br><span class="line">### Java template</span><br><span class="line">*.class</span><br><span class="line"></span><br><span class="line"># Mobile Tools for Java (J2ME)</span><br><span class="line">.mtj.tmp/</span><br><span class="line"></span><br><span class="line"># Package Files</span><br><span class="line">*.jar</span><br><span class="line">*.war</span><br><span class="line">*.ear</span><br><span class="line">*.zip</span><br><span class="line"></span><br><span class="line"># virtual machine crash Logs,see http://www.java.com/en/downLoad/help/error hotspot.xml</span><br><span class="line">hs_err_pid*</span><br><span class="line"></span><br><span class="line">.idea</span><br><span class="line"></span><br><span class="line">*.iml</span><br><span class="line"></span><br><span class="line">*.bak</span><br><span class="line">*.class</span><br><span class="line">*.rar</span><br><span class="line">*.1og</span><br><span class="line">.project</span><br><span class="line">.settings</span><br><span class="line">.classpath</span><br><span class="line">target</span><br><span class="line">classes</span><br><span class="line">lib</span><br><span class="line">*.DS_Store </span><br><span class="line">.gradle</span><br><span class="line">build</span><br><span class="line">out</span><br><span class="line">log</span><br></pre></td></tr></table></figure><h3 id="所有命令总结">所有命令总结</h3><p>基本操作：</p><ul><li><code>git init</code>：初始化仓库（新建空文件夹后，在空文件夹内使用此命令）</li><li><code>git add &lt;文件名&gt;</code>或<code>git add .</code>：将文件从工作区提交到暂存区</li><li><code>git commit -m 'commit message 01'</code>：将文件从暂存区提交到本地仓库</li><li><code>git log</code> 或<code>git-log</code>：查看提交记录<ul><li><code>git log --pretty=oneline --all --graph --abbrev-commit</code>：如果<code>git-log</code>没有进行别名配置（2.1.3），则执行此命令</li></ul></li><li><code>git status</code>：查看状态</li><li><code>git merge &lt;分支名&gt;</code>：分支合并</li><li><code>git branch</code>：查看所有分支名</li><li><code>git branch -vv</code>：查看关联关系</li></ul><p>版本回退：</p><ul><li><code>git reset --hard &lt;commitID&gt;</code>：版本回退到某个版本</li><li><code>git reflog</code>：这个指令可以看到已经删除的提交记录，从记录中获得 commitID，然后通过<code>git reset --hard &lt;commitID&gt;</code>命令回退到某个版本</li></ul><p>切换分支：</p><ul><li><code>git checkout &lt;分支名&gt;</code>：切换到某个分支</li><li><code>git checkout -b &lt;分支名&gt;</code>：创建并切换分支</li></ul><p>远程操作：</p><ul><li><code>git clone &lt;远程地址&gt; [本地文件夹]</code>：clone远程仓库到本地</li><li><code>git pull</code>：拉取远端仓库的修改并合并，等同于<code>git fetch</code>+<code>git merge</code>，具体操作本文看3.4.6部分。</li><li><code>git push</code>：将本地仓库推送到远程仓库</li></ul><p>推送到远程仓库</p><ul><li>命令：<code>git push [-f] [--set-upstream] [远端名称[本地分支名][:远端分支名]]</code><ul><li>如果远程分支名和本地分支名称相同，则可以只写本地分支<ul><li><code>git push origin master</code></li></ul></li><li><code>-f</code>：表示强制覆盖</li><li><code>--set-upstream</code>：推送到远端的同时并且建立起和远端分支的关联关系。<ul><li><code>git push --set-upstream origin master:master</code>或<code>git push --set-upstream origin master</code></li><li>如果通过clone得到的代码，通过后面提交不需要使用命令<code>git push --set-upstream origin master</code>，直接<code>git push</code>即可。</li></ul></li><li>如果<strong>当前分支已经和远端分支关联</strong>，则可以省略分支名和远端名<ul><li><code>git push</code>：将master分支推送到已关联的远端分支</li></ul></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在cmd中使用cygwin命令的环境配置</title>
      <link href="/2022/12/11/Others/%E5%9C%A8cmd%E4%B8%AD%E4%BD%BF%E7%94%A8cygwin%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/12/11/Others/%E5%9C%A8cmd%E4%B8%AD%E4%BD%BF%E7%94%A8cygwin%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1>在cmd中使用cygwin命令的环境配置</h1><p>首先需要安装cygwin软件，我选择的cygwin的安装位置是默认的，不管是否默认，只要cygwin桌面快捷方式<code>Cygwin64 Terminal</code>指向的可执行文件的位置就行。</p><p><img src="https://s2.loli.net/2023/03/12/CDRioI4F7GfdcUn.png" alt="image-20221211110723489"></p><p>然后可以在cmd中使用cygwin相关的命令安装需要的包。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 环境配置 </tag>
            
            <tag> cmd </tag>
            
            <tag> cygwin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jupyter notebook更改文件默认地址</title>
      <link href="/2022/11/23/Others/Jupyter%20notebook%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B6%E9%BB%98%E8%AE%A4%E5%9C%B0%E5%9D%80/"/>
      <url>/2022/11/23/Others/Jupyter%20notebook%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B6%E9%BB%98%E8%AE%A4%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<h1>Jupyter notebook更改文件默认地址</h1><p>首先打开Anaconda Prompt，输入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook --generate-config</span><br></pre></td></tr></table></figure><p>查看配置文件所在的位置。</p><p><img src="https://s2.loli.net/2023/03/12/tueqfmRHc2KFiYx.png" alt="image-20220530172951778"></p><p>用VSCode打开<code>C:\Users\ywwsn\.jupyter\</code>文件夹下的<code>jupyter_notebook_config.py</code>文件，搜索内容<code>c.NotebookApp.notebook_dir =</code>，将该内容前面的注释去掉，然后在后面填写上自己工程的默认地址。</p><p><img src="https://s2.loli.net/2023/03/12/14LSlvcF7mne2MT.png" alt="image-20220530170502313"></p><p><img src="https://s2.loli.net/2023/03/12/7dJVIGMgXfezAa2.png" alt="image-20220530182011785"></p><p>然后找到 Jupyter notebook 的快捷方式，右键进入<code>属性</code>，删除<code>目标</code>中的<code>“%USERPROFILE%/”</code>，然后点击右下角的<code>应用</code>和<code>确认</code>。</p><p><img src="https://s2.loli.net/2023/03/12/wAdMeSpk7JbKXDH.png" alt="image-20220530170141437"></p><p>效果如图所示：</p><p><img src="https://s2.loli.net/2023/03/12/dPsu2vOSeTbmW7N.png" alt="image-20220530170212077"></p><p>重新打开Jupyter notebook即可。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
            <tag> Jupyter notebook </tag>
            
            <tag> 环境配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware安装虚拟机教程</title>
      <link href="/2022/11/23/Others/VMware%E5%AE%89%E8%A3%85%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%95%99%E7%A8%8B/"/>
      <url>/2022/11/23/Others/VMware%E5%AE%89%E8%A3%85%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>VMware安装虚拟机教程</h1><h2 id="1-VMware安装Ubuntu虚拟机">1 VMware安装Ubuntu虚拟机</h2><p>按照步骤一步一步安装虚拟机，这里安装的是Ubuntu22.04。</p><p><img src="https://s2.loli.net/2023/03/12/94RlFDvIo6QyEe8.png" alt="image-20220831112800174"></p><p><img src="https://s2.loli.net/2023/03/12/FVp7GgbjiL9QxmH.png" alt="image-20220831112917061"></p><p><img src="https://s2.loli.net/2023/03/12/egRBZ2HLpT6lMN4.png" alt="image-20220831112939838"></p><p><img src="https://s2.loli.net/2023/03/12/yT8zSIfbdlNw2em.png" alt="image-20220831113007068"></p><p><img src="https://s2.loli.net/2023/03/12/mSRHY5CqIJ2dhaB.png" alt="image-20220831113032411"></p><p><img src="https://s2.loli.net/2023/03/12/GmVXrqRWftIo4Su.png" alt="image-20220831113629838"></p><p>下面的虚拟机额内核可以设置为2：</p><p><img src="https://s2.loli.net/2023/03/12/d3PiGKcsF9xANn1.png" alt="image-20220831113144933"></p><p><img src="https://s2.loli.net/2023/03/12/KZ85zugDkEmWnRQ.png" alt="image-20220831113205569"></p><p><img src="https://s2.loli.net/2023/03/12/zaLTuC6WEgvDUXk.png" alt="image-20220831113224717"></p><p><img src="https://s2.loli.net/2023/03/12/rJHpxCs1LfalvSM.png" alt="image-20220831113243948"></p><p><img src="https://s2.loli.net/2023/03/12/1h9USFpEKaTAnM2.png" alt="image-20220831113300645"></p><p><img src="https://s2.loli.net/2023/03/12/ULWJqg69ScIT5w7.png" alt="image-20220831113332549"></p><p>下面的磁盘空间可以设置大一点，比如60G，</p><p><img src="https://s2.loli.net/2023/03/12/e6jCmAGrh5nBQ4J.png" alt="image-20220831113400767"></p><p><img src="https://s2.loli.net/2023/03/12/3nTRFwPZfeYQbyW.png" alt="image-20220831113830231"></p><p><img src="https://s2.loli.net/2023/03/12/ouh9FLMnsPI8zgX.png" alt="image-20220831113849864"></p><p>选择Ubuntu系统ISO文件</p><p><img src="https://s2.loli.net/2023/03/12/1niJuh4gyGCXsST.png" alt="image-20220831114128486"></p><p><img src="https://s2.loli.net/2023/03/12/K4r6hquSyiIBAv1.png" alt="image-20220831114159532"></p><p><img src="https://s2.loli.net/2023/03/12/mSPqz5XZoFAkVbE.png" alt="image-20220831114248665"></p><p><img src="https://s2.loli.net/2023/03/12/tkvD2il5aPIsGFU.png" alt="image-20220831114415234"></p><p><img src="https://s2.loli.net/2023/03/12/Pgi5sNUmqRCGBvJ.png" alt="image-20220831114440576"></p><p><img src="https://s2.loli.net/2023/03/12/7YPK9WjdDepxTEG.png" alt="image-20220831114501175"></p><p><img src="https://s2.loli.net/2023/03/12/9TC4p3U7NEZQgAr.png" alt="image-20220831114548006"></p><p><img src="https://s2.loli.net/2023/03/12/mO7QVqrMhXYnW3G.png" alt="image-20220831114623858"></p><p><img src="https://s2.loli.net/2023/03/12/9YDpntW1bZFHeS3.png" alt="image-20220831114707758"></p><p><img src="https://s2.loli.net/2023/03/12/fg5hnMxZU7jXzOR.png" alt="image-20220831114815857"></p><h2 id="2-安装VMware-Tools">2 安装VMware Tools</h2><p>通过<code>虚拟机</code>选项卡安装VMware Tools，然后将磁盘中的<code>VMwareTools-x.x.x-xxxxxx.tar.gz</code>文件复制到桌面，将该文件解压到桌面，并打开，到<code>vmware-tools-distrib</code>文件夹下，然后右键打开终端，通过如下命令进入管理员模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure><p>然后通过如下命令运行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./vmware-install.pl</span><br></pre></td></tr></table></figure><p>然后第一个填<code>yes</code>，后面的一直回车就行了。</p><h2 id="3-安装虚拟机后需要的软件配置">3 安装虚拟机后需要的软件配置</h2><p>首先需要安装网络相关的工具，否则无法查看IP地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install net-tools</span><br></pre></td></tr></table></figure><p>如果出现如下错误</p><p><img src="https://s2.loli.net/2023/03/12/vExu95Uz1ATipgk.png" alt="image-20220906111158331"></p><p>需要在终端中进行更新：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>然后在终端中输入<code>sudo apt install net-tools</code>命令进行安装。</p><p>如果想查看IP地址的方法，在终端中输入<code>ifconfig</code>即可查看IP地址。</p><p>如果通过SSH远程控制终端，需要依次安装相应的工具：</p><ol><li>检查是否安装了openssh-server</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -e | grep ssh</span><br></pre></td></tr></table></figure><ol start="2"><li>如果只出现了一个ssh，说明没有安装sshd,使用命令安装sshd服务</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure><ol start="3"><li>sshd未启动</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure><p>现在可以使用ssh连接了。</p><p>Bug修理厂：如果第2步出现如下问题</p><p><img src="https://s2.loli.net/2023/03/12/cwRtaDYZAoXCQlh.png" alt="image-20220906112802706"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)</span><br><span class="line">E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?</span><br></pre></td></tr></table></figure><p>首先执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo killall apt apt-get</span><br></pre></td></tr></table></figure><p>如果提示没有apt进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt: no process found</span><br><span class="line">apt-get: no process found</span><br></pre></td></tr></table></figure><p>依次执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> /var/lib/apt/lists/lock</span><br><span class="line">sudo <span class="built_in">rm</span> /var/cache/apt/archives/lock</span><br><span class="line">sudo <span class="built_in">rm</span> /var/lib/dpkg/lock*</span><br><span class="line">sudo dpkg --configure -a</span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>然后返回重新安装软件。然后返回重新进入第二步进行重新安装。</p><p>如果安装Linux系统后，设置网络连接为NAT连接，但是无法联网，可以输入以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo service network-manager stop</span><br><span class="line">sudo <span class="built_in">rm</span> /var/lib/NetworkManager/NetworkManager.state</span><br><span class="line">sudo service network-manager start</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown的简介</title>
      <link href="/2022/11/19/Others/Markdown%E6%95%99%E7%A8%8B/Markdown%E6%95%99%E7%A8%8B/"/>
      <url>/2022/11/19/Others/Markdown%E6%95%99%E7%A8%8B/Markdown%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>1 markdown的简介</h1><p>markdown是一种轻量级的标记语言  理念 markdown致力于让创作或者阅读文档变得更加的容易</p><p>hyper text markup language() 超文本标记语言</p><h1>2 标题</h1><ol><li>markdown的标题</li></ol><p>语法： # 一级标题）##（二级标题）###（三级标题）</p><p>效果：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span> 这是一级标题</span><br></pre></td></tr></table></figure><p>快捷键：</p><p>Ctrl + 数字1-5（横排数字）可以快速将选中文字调成对应级别的标题</p><p>Ctrl + 加号/减号 对标题的级别进行加减</p><h1>3 段落</h1><p>1、段落</p><p>语法：直接进行文字的编辑 如需新建下一段段落可直接换行或者在段落的末尾敲空格键回车</p><p>代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这是一个段落  </span><br><span class="line"></span><br><span class="line">这是一个段落</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、字体</p><p>语法：</p><ol><li>粗体  <strong>这是粗体</strong>   **   **   快捷键 Ctrl +b</li><li>删除线  <s>删除线</s>  ~~   ~~  快捷键 Alt + Shift + 5</li><li>下划线 <u> 这是下划线</u>    <u>      </u>   快捷键 Ctrl + U</li><li>斜体  <em>这是斜体</em>        *  *   快捷键 Ctrl + i</li></ol><hr><p>分割线：—（必须另起一行 输入三个减号，然后回车）</p><p>3.脚注（对文本进行补充说明）</p><p>这是一个技术<a href="%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E9%9D%9E%E5%B8%B8%E5%A5%BD%E7%94%A8%E7%9A%84%E6%A1%86%E6%9E%B6%E3%80%82">^计算机二级需要</a></p><p>代码：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">好好学习[<span class="built_in">^</span>study]</span><br><span class="line">[<span class="built_in">^</span>study]: 这是好好学习的一种方法</span><br></pre></td></tr></table></figure><p>eg:好好学习[^study]</p><p>study 这是好好学习的一种方法</p><p>4.高亮</p><p>==一二三四五==</p><p>5.标号</p><p>水 H~2~0</p><p>面积 x^2^</p><p>:smile:  :cry:</p><h1><strong>4 列表</strong></h1><p>1、无序列表</p><p>1.只有同一级别</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入* 然后敲空格</span><br></pre></td></tr></table></figure><ul><li>香蕉</li><li>橘子</li></ul><p>如果不想要无序列表，直接两次回车就没有了</p><p>2、子级别</p><p><em>Ctrl</em> + <em>Enter</em> 创建子级分类</p><p>如果不想创建子级分类，可以连续两次 <em>Enter</em> 就可以取消当前级别下的分类</p><p>eg:</p><ul><li>one</li><li>one<ul><li>two</li><li>two<ul><li>three</li><li>three</li></ul></li><li>光标移动到此处的时候，按 Enter会回到上一级的点<ul><li>three</li></ul></li></ul></li><li>一级分类<ul><li>二级分类<ul><li>三级分类</li></ul></li></ul></li></ul><p>如果不想继续写，可以多次回车，退出分类级别的书写</p><p>3、有序列表</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.+空格</span><br></pre></td></tr></table></figure><ol><li>第一个标题</li><li>第二个标题</li></ol><p>如果不想要可以直接敲向下的箭头即可</p><ol><li>第一个标题</li><li>第二个标题</li></ol><ul><li>分级</li><li>分级</li></ul><ol start="3"><li>第三个标题</li></ol><h1>5 区块显示</h1><blockquote><p>切换成英文模式下，通过  &gt; +空格，来创建左侧的竖横线</p><blockquote><p>二级区块</p></blockquote><p>回车取消</p></blockquote><p>如果不想使用区块显示可以通过按两次回车取消</p><h1>6 代码块</h1><p>写代码：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~~~(所用的编程语言)+鼠标选择</span><br><span class="line">eg：~~~python</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;hello wangwang&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7 链接</h1><p>方法一：直接输入网址</p><p><a href="http://www.google.com">www.google.com</a></p><p><a href="http://www.baidu.com">www.baidu.com</a></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;www.tencent.com&gt;</span><br><span class="line">&lt;ywwsnowboy@outlook.com&gt;</span><br></pre></td></tr></table></figure><p>&lt;<a href="http://www.tencent.com">www.tencent.com</a>&gt;</p><p><a href="mailto:ywwsnowboy@outlook.com">ywwsnowboy@outlook.com</a></p><p>方法二：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[百度一下](https://www.baidu.com)</span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com">百度一下</a></p><p>方法三：通过<code>[]</code>的方式，将链接放在其他敌方，比如文章最后</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[我的主页][2]</span><br><span class="line"></span><br><span class="line">[2]:https://www.baidu.com</span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com">我的主页</a></p><h1>8 图片插入</h1><p>直接拖动或者复制粘贴到markdown文档中</p><p>代码</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![自定义图片名称](图片的路径)</span><br></pre></td></tr></table></figure><h1>9. 表格</h1><p>创建表格快捷键：Ctrl + T</p><table><thead><tr><th style="text-align:center">01</th><th style="text-align:center">02</th><th style="text-align:center">03</th></tr></thead><tbody><tr><td style="text-align:center">11</td><td style="text-align:center">速度</td><td style="text-align:center">格式</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">方格</td><td style="text-align:center">公司的</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">是德国</td><td style="text-align:center">格式</td></tr></tbody></table><p>代码：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|表头|表头|表头|</span><br><span class="line">|--|--|--|   这是分割线</span><br><span class="line">|1|2|3|</span><br></pre></td></tr></table></figure><table><thead><tr><th>表头</th><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>1</td><td>2</td><td>3</td></tr></tbody></table><h1>10 公式</h1><p>数学公式有两种，一种是用在正文中的，一种是单独显示的。</p><p>正文中的公式如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span> 内容 <span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>单独一行显示的时候使用如下命令：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span> 内容 <span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>行内公式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{x^2+y^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.2822em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.9178em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2822em;"><span></span></span></span></span></span></span></span></span>行内公式</p><p>下面是单独一行显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">f(x) = x^2 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><h1>11 其他操作</h1><h2 id="11-1-显示目录">11.1 显示目录</h2><p>在文章最前面显示目录：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[TOC]</span><br></pre></td></tr></table></figure><h2 id="11-2添加脚注">11.2添加脚注</h2><p>添加脚注：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这里有一个脚注[<span class="built_in">^</span>1]</span><br><span class="line">[<span class="built_in">^</span>1]:https://www.baidu.com</span><br></pre></td></tr></table></figure><p>这里有一个脚注<a href="https://www.baidu.com">^1</a></p><h2 id="11-3-添加分页">11.3 添加分页</h2><p>在 markdown 文本中需要分页的地方添入：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div STYLE=&quot;page-break-after: always;&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>在 Preview 窗口无法看到分页的效果，但是在输出的 pdf 文件中会完成分页。</p><h2 id="11-4-文本换行">11.4 文本换行</h2><p>文本换行可以使用<code>&lt;br /&gt;</code>或<code>&lt;br/&gt;</code>或<code>&lt;br&gt;</code>标记符号，在不同编辑器中效果可能有差异，笔者在Vs Code里，这三种都是可以实现换行的。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">价值&lt;br /&gt;前瞻价值&lt;br/&gt;前瞻价值&lt;br&gt;前瞻</span><br></pre></td></tr></table></figure><p>价值<br />前瞻价值<br/>前瞻价值<br>前瞻</p>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda全新安装及环境配置</title>
      <link href="/2022/10/25/Python/Anaconda%E5%85%A8%E6%96%B0%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/10/25/Python/Anaconda%E5%85%A8%E6%96%B0%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1>Anaconda全新安装及环境配置</h1><p><strong>在Anaconda Powershell Prompt中常用的命令：</strong></p><ul><li><code>conda env list</code>   查看所有创建的conda环境</li><li><code>conda activate 环境名</code>   进入某一个环境中</li><li><code>conda deactivate</code>   退出当前环境</li><li><code>conda remove -n 环境名 --all</code>   删除某一个环境</li><li><code>python</code>   通过该命令可以进入python终端中</li><li><code>exit()</code>   通过该命令可以退回原来的环境</li><li><code>conda list</code>   查看当前环境下安装的所有软件包</li><li><code>conda -h</code> 或 <code>conda --help</code>   查看conda的帮助文档；</li><li><code>conda -V</code> 或 <code>conda --version</code>   查看conda的版本，注意第一个 V 是大写；</li><li><code>conda install 软件包</code>   安装软件包，例如<code>conda install numpy</code>，注意切换到某一个环境中使用此命令</li><li><code>conda create -n 环境名 python=版本号 </code>   创建新的环境，并配置python版本号。eg:<code>conda create -n project_test python=3.8</code></li></ul><p>当输入某一个命令不知道后面写什么的时候，可以通过在后面加<code>-h</code>，查看后面如何写，eg：<code>conda create -h</code>。</p><p><img src="https://vip2.loli.io/2023/03/13/4C7vU5kSzKOT8xY.png" alt="image-20220330165105112"></p><p>当下载好软件包之后，通过python可以查看版本，是否安装成功：</p><p><img src="https://vip2.loli.io/2023/03/13/JKjCOLcgkZ9IePh.png" alt="image-20220330180138600"></p><h2 id="1-安装Anaconda">1 安装Anaconda</h2><p>首先安装Anaconda，安装完成后打开 Anaconda Prompt。在Anaconda Prompt中依次输入以下命令添加镜像源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/</span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><p>完成之后，输入以下命令查看所有的镜像源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --get channels</span><br></pre></td></tr></table></figure><p>Pip是python自带的包管理工具，通过此工具可以在python命令窗口中下载软件包</p><p>Conda也是包管理工具，比Pip更强大</p><p><strong>Conda和Pip的区别</strong></p><table><thead><tr><th>Conda</th><th>Pip</th></tr></thead><tbody><tr><td>下载的是二进制文件，不需要安装</td><td>下载后需要安装</td></tr><tr><td>每个工程都有单独的环境管理</td><td>需要额外的环境管理工具</td></tr><tr><td>支持其他语言，安装有兼容性检测</td><td>安装时不检测兼容性</td></tr><tr><td>超过1500个包</td><td>超15000个包</td></tr></tbody></table><h2 id="2-软件包安装">2 软件包安装</h2><p>有两种安装方式，一种是通过pycharm进行安装；另外一种是通过Anaconda进行安装</p><h3 id="2-1-通过pycharm安装软件包">2.1 通过pycharm安装软件包</h3><p>在pycharm中打开设置，对工程的解释器的软件包进行安装：</p><p><img src="https://vip2.loli.io/2023/03/13/Pp9rKcqZdFJb1Hz.png" alt="image-20220330094259487"></p><p><img src="https://vip2.loli.io/2023/03/13/RAdVqrgJnXPmDjO.png" alt="image-20220330094948380"></p><h3 id="2-2-通过Conda安装软件包">2.2 通过Conda安装软件包</h3><p>安装之前通过<code>conda activate project03</code>切换到需要安装软件包的工程中，比如<code>project03</code>环境。然后通过<code>conda install numpy</code>来安装numpy软件包。</p><p><img src="https://vip2.loli.io/2023/03/13/btrcJe9dOKZAaXM.png" alt="image-20220330115138342"></p><p>安装完软件包之后，通过<code>conda list</code>命令可以查看是否安装成功。</p><p><img src="https://vip2.loli.io/2023/03/13/9zbDK6oXFpci41Z.png" alt="image-20220330115321533"></p><p>也可以在<code>D:\Anaconda\envs\project03\Lib\site-packages</code>中找到<code>numpy</code>文件夹，查看是否安装。</p><p>还可以通过在pycharm中查看是否安装，如图：</p><p><img src="https://vip2.loli.io/2023/03/13/wh5aKGj2PtkFRz7.png" alt="image-20220330115751101"></p><h2 id="3-新建一个环境">3 新建一个环境</h2><h3 id="3-1-Pycharm中新建-添加环境">3.1 Pycharm中新建/添加环境</h3><p>通过Conda创建或者添加环境，注意==一定要勾选应用于所有工程==：</p><p><img src="https://vip2.loli.io/2023/03/13/QjIYFGp2SaRhqKd.png" alt="image-20220330092159167"></p><p>在Anaconda Powershell Prompt中输入以下命令查看搭建的环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> list</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/BWw2XFgyh3178jG.png" alt="image-20220330092743210"></p><p>如果想转换到<code>project03</code>环境，在Anaconda Powershell Prompt中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate project03</span><br></pre></td></tr></table></figure><p>如果想查看环境内可用软件包，在Anaconda Powershell Prompt中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure><p>如果想查看环境内下载的软件包，在Anaconda Powershell Prompt中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list</span><br></pre></td></tr></table></figure><p><code>conda list</code>命令查看的包括base中的软件包，<code>pip list</code>命令查看的不包括base中的软件包</p><h3 id="3-2-通过Conda创建环境">3.2 通过Conda创建环境</h3><p>创建新的环境，并配置python版本号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n 环境名 python=版本号  </span><br></pre></td></tr></table></figure><p>例如：<code>conda create -n project_test python=3.8</code></p><p>如果安装最新版本的python，则不需要后面的<code>python=版本号</code></p><h2 id="4-PyTorch安装">4 PyTorch安装</h2><p>PyTorch是一个开源的Python机器学习库，基于Torch，用于自然语言处理等应用程序。</p><p>PyTorch官方网站：<a href="https://pytorch.org/">https://pytorch.org/</a></p><p>CUDA选择自己主机的英伟达显卡的版本，CUDA是英伟达显卡的架构名称，英伟达显卡开发软件包也叫CUDA。</p><p>CUDA(Compute Unified Device Architecture)，是显卡厂商NVIDIA退出的通用并行计算架构，该架构使GPU能够解决复杂的计算问题。</p><p>可以在CMD终端中，通过<code>nvidia-smi</code>命令查看CUDA版本。</p><p><img src="https://vip2.loli.io/2023/03/13/EpuKACzHn8rjM4h.png" alt="image-20220330120824019"></p><p>根据自己主机的CUDA版本选择合适的版本。</p><p><img src="https://vip2.loli.io/2023/03/13/Oe8yRKq4wIot1PL.png" alt="image-20220330121032412"></p><p>将安装命令复制，在Anaconda Powershell Prompt中输入，进行安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch</span><br></pre></td></tr></table></figure><p>如果出现安装错误，可以通过<code>conda clean --all</code>命令清除后重新安装。</p><p>如果不了解清除操作，可以通过<code>conda clean --help </code>了解其用途。</p><p>再通过<code>conda clean -t</code>清除缓存包，然后重新进行安装。</p><p>如果屡次尝试安装不成功，将<code>C:\Users\ywwsn</code>路径下的<code>.condarc</code>文件内容改为：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - defaults</span><br><span class="line">show_channel_urls: true</span><br><span class="line">default_channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span><br><span class="line">custom_channels:</span><br><span class="line">  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br></pre></td></tr></table></figure><p>然后再重新安装pytorch软件包。</p><p>最后通过如下程序测试是否安装成功：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_hi</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="comment"># Use a breakpoint in the code line below to debug your script.</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;Hi, <span class="subst">&#123;name&#125;</span>&#x27;</span>)  <span class="comment"># Press Ctrl+F8 to toggle the breakpoint.</span></span><br><span class="line">    <span class="built_in">print</span>(torch.__version__)  <span class="comment"># pytorch版本</span></span><br><span class="line">    <span class="built_in">print</span>(torch.version.cuda)  <span class="comment"># cuda版本</span></span><br><span class="line">    <span class="built_in">print</span>(torch.backends.cudnn.version())  <span class="comment"># cudnn版本</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;gpu:&#x27;</span>, torch.cuda.is_available())  <span class="comment"># gpu加速是否可用</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Press the green button in the gutter to run the script.</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print_hi(<span class="string">&#x27;PyCharm&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="5-添加-Jupyter-notebook-内核">5 添加 Jupyter notebook 内核</h2><p>Jupyter notebook的内核相当于解释器。Jupyter notebook的主题颜色就不用更改了，因为和改了之后，会有一些运行面板无法显示，用本来的主题比较好。</p><h3 id="5-1-添加内核">5.1 添加内核</h3><p>对于自己已经搭建好的环境，可以用于python文件编译和运行，但是不能用作Jupyter notebook文件的编译，需要通过以下方式在环境中安装相应的包使其能够用作Jupyter notebook的解释器。</p><p>首先在Anaconda Prompt终端中进入自己的环境中，然后通过以下命令来安装相应的包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install ipykernel</span><br></pre></td></tr></table></figure><p>再通过以下命令来对编译内核进行重命名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m ipykernel install --name all_in_env</span><br></pre></td></tr></table></figure><p><code>all_in_env</code>为我自己的环境名称，可以自定义，尽量和Anaconda中环境的名字保持一致，便于管理。</p><p>实际效果如图：</p><p><img src="https://vip2.loli.io/2023/03/13/dpV43WvEoBn7fYT.png" alt="image-20220526181953446"></p><h3 id="5-2-删除内核">5.2 删除内核</h3><p>如果想删除内核，打开Jupyter notebook，新建一个终端，如图所示：</p><p><img src="https://vip2.loli.io/2023/03/13/qTUKDVIJXvws412.png" alt="image-20220526182704206"></p><p>然后进入终端，分别输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jupyter kernelspec list</span><br><span class="line">jupyter kernelspec remove myproject03</span><br></pre></td></tr></table></figure><p>通过<code>jupyter kernelspec list</code>命令可以查看当前的内核，通过<code>jupyter kernelspec remove myproject03</code>命令可以删除相应的内核，其中<code>myproject03</code>是我之前建立的内核，效果如图：</p><p><img src="https://vip2.loli.io/2023/03/13/8hDJcaFBlPoSzUf.png" alt="image-20220526183321074"></p><h2 id="6-安装matplotlib包">6 安装matplotlib包</h2><p>在Anaconda Prompt中分别输入以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br><span class="line">python -m pip install matplotlib</span><br></pre></td></tr></table></figure><h2 id="7-Python和OpenCV">7 Python和OpenCV</h2><p>在Anaconda Prompt中可以通过<code>D:</code>切换到不同的磁盘中，可以通过<code>cd D:Anaconda\Scripts\</code>切换到Scripts文件夹下，也可以通过<code>dir</code>命令来查看该文件夹下相应的文件，也可以通过<code>pip list</code>查看安装了哪些库。</p><p><img src="https://vip2.loli.io/2023/03/13/uLJcAsjePyQM19V.png" alt="image-20220517224621280"></p><p>然后在此目录下通过<code>pip install opencv-python==3.4.1.15</code>来安装3.4.1.15这个版本的OpenCV库，这个版本不会涉及到专利，其他最新版本的OpenCV库涉及到专利无法使用，但是现在这个专利已经过期了，所以通过以下命令安装最新版本的opencv库就可以了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install opencv-python</span><br></pre></td></tr></table></figure><p>通过<code>python</code>直接进入python中：</p><p><img src="https://vip2.loli.io/2023/03/13/OEbmQo8KlAZaskh.png" alt="image-20220526090537155"></p><p>通过命令<code>import cv2</code>导入opencv库，再通过<code>cv2.__version__</code>来查看cv相应的版本号，如果不需要进行操作通过<code>exit()</code>命令来退出。</p><p><img src="https://vip2.loli.io/2023/03/13/YJNnIcOLujX1g9k.png" alt="image-20220526091414694"></p><p>进入<code>D:\Anaconda\Scripts</code>目录下，通过以下命令来安装<code>opencv-contrib-python</code>库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install opencv-contrib-python==版本号</span><br></pre></td></tr></table></figure><p>注意版本号要和<code>opencv-python</code>的版本号一致。如果安装的是最新版本的opencv，可以不用写版本号，直接通过<code>pip install opencv-contrib-python</code>命令即可。</p><p><img src="https://vip2.loli.io/2023/03/13/uSE6xRGQWfXzAL5.png" alt="image-20220526092833171"></p><p>python使用过程中可能会用到其他工具包，其他工具包的使用都是一样的。在 <a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a> 网站中可以找自己想要的额外的工具包，例如通过<code>pip install &quot;opencv_python‑4.5.5‑cp39‑cp39‑win_amd64.whl&quot;</code>来安装。</p><h2 id="8-Python运行环境多平台结合">8 Python运行环境多平台结合</h2><h3 id="8-1-Anaconda-vscode-python">8.1 Anaconda+vscode+python</h3><p>首先电脑中安装好Anaconda和vscode，并创建过工程环境：</p><p>打开vscode的命令面板，并输入命令：<code>Python:select interpreter</code>，效果如图：</p><p><img src="https://vip2.loli.io/2023/03/13/M2iwBtzyrHhckUS.png" alt="image-20220330234006634"></p><p>然后选择对应的python解释器：</p><p><img src="https://vip2.loli.io/2023/03/13/IAHX9OJBjwViQn1.png" alt="image-20220330234053444"></p><p>然后运行代码，会出现如下运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/x8CoilePgKAcXq3.png" alt="image-20220330234225053"></p><h3 id="8-2-Anaconda-pycharm-python">8.2 Anaconda+pycharm+python</h3><p>在pycharm中配置python运行的Anaconda环境</p><p><img src="https://vip2.loli.io/2023/03/13/I85Dt2iYPHybVOe.png" alt="image-20220331002831080"></p><p>选择<code>Show All</code>之后，选择合适的解释器，点击<code>OK</code>，如下所示：</p><p><img src="https://vip2.loli.io/2023/03/13/YptALdJsKuUeBPQ.png" alt="image-20220331002953335"></p><p>如果没有合适的解释器，则通过<code>+</code>添加之前添加过的解释器。</p><h2 id="9-Pycharm使用管理Conda安装包">9 Pycharm使用管理Conda安装包</h2><h3 id="9-1-仓库软件包搜索安装">9.1 仓库软件包搜索安装</h3><p><img src="https://vip2.loli.io/2023/03/13/CwkS1Eiby8UnpN7.png" alt="image-20221004091252357"></p><p>PyCharm软件包仓库：</p><p>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a></p><p>中国科技大学：<a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a></p><p>华中理工大学：<a href="http://pypi.hustunique.com/">http://pypi.hustunique.com/</a></p><p>山东理工大学：<a href="http://pypi.sdutlinux.org/">http://pypi.sdutlinux.org/</a></p><p>豆瓣：<a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a></p><h2 id="10-在windows终端中使用conda命令">10 在windows终端中使用conda命令</h2><p>在conda安装后，并不能在cmd终端中使用conda相关命令，conda的相关命令只能在Anaconda Prompt中操作，如果想在cmd中进行conda命令操作，需要进行如下环境配置：</p><p><img src="https://vip2.loli.io/2023/03/13/ipuzD3yxgMASver.png" alt="image-20221211110021026"></p><p>上述中添加的三个路径，是根据自己的安装环境确定的，我把Anaconda安装在<code>D:\Anaconda3</code>中。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
            <tag> 环境配置 </tag>
            
            <tag> Python </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu系统安装中文输入法教程</title>
      <link href="/2022/09/14/Others/others/Ubuntu%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%B3%95%E6%95%99%E7%A8%8B/"/>
      <url>/2022/09/14/Others/others/Ubuntu%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%B3%95%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>Ubuntu系统安装中文输入法教程</h1><p>在Vmware虚拟机中安装好Ubuntu系统，但是一般情况下无法使用中文输入，需要使用中午输入的时候非常不方便，可以通过在终端中输入以下命令安装中文输入法：</p><ol><li>首先需要安装搜狗输入法，<a href="https://shurufa.sogou.com/linux%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%90%8E%E5%8F%8C%E5%87%BB%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E3%80%82">https://shurufa.sogou.com/linux，下载后双击安装软件。</a></li></ol><p><img src="https://s2.loli.net/2023/03/12/UAwxrsaLEF4HXYy.png" alt="image-20220914185906289"></p><ol start="2"><li>在终端中依次输入如下命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ibus-pinyin</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install fcitx-bin</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install fcitx-bin</span><br><span class="line">sudo apt-get install fcitx-table</span><br><span class="line">sudo apt-get install fcitx-table-all</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">sudo apt-get install fcitx</span><br><span class="line">sudo apt-get --reinstall install `dpkg --get-selections | grep <span class="string">&#x27;[[:space:]]install&#x27;</span> | <span class="built_in">cut</span> -f1`</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><ol start="3"><li>通过<code>reboot</code>重启后，需要对系统进行设置：</li></ol><p><img src="https://s2.loli.net/2023/03/12/jNA2tmiBIZslFxE.png" alt="image-20220914190310895"></p><p>如图所示，<code>Keyboard input method system</code>设置为<code>IBus</code></p><p>然后<code>Keyboard</code>的Input Sources选择<code>Chinese(Intelligent Pinyin)</code>，如果没有这个输入源，通过<code>+</code>号进行添加：</p><p><img src="https://s2.loli.net/2023/03/12/u12Nx9fwvYbRWcJ.png" alt="image-20220914193729211"></p><p>然后通过屏幕右上角，打开输入设置，选择<code>Configure</code>：</p><p><img src="https://s2.loli.net/2023/03/12/bHneNkDYl6Q5rTK.png" alt="image-20220914191802454"></p><p>然后在输入中选择<code>Keyboard-English(US)</code>和<code>Pinyin</code>：</p><p><img src="https://s2.loli.net/2023/03/12/qDhtlsgOumPFwAj.png" alt="image-20220914194222115"></p><p>==注意==：这里的<code>Keyboard-English(US)</code>和<code>Pinyin</code>的上下顺序很重要，放在最上面，打开终端后默认用此输入方式，因此建议用英文输入放前面，这样每次进入就不用切换输入法了。同时在<code>Global Config</code>中可以设置输入法的切换快捷键。</p><p>然后再通过如下方式切换到中文拼音进行输入：</p><p><img src="https://s2.loli.net/2023/03/12/cWYb5XaZ92rKIUs.png" alt="202209141948125"></p><p>至此，安装中文输入法结束。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 中文输入法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言教程</title>
      <link href="/2022/08/14/R/R%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B/"/>
      <url>/2022/08/14/R/R%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>R语言教程</h1><p>数据：是指对客观事件进行记录并可以鉴别的符号，是对客观事物的性质、状态以及相互关系等进行记载的物理符号或这些物理符号的组合。</p><p>R语言的特点：</p><p>1、有效的数据处理和保存机制：<br>2、拥有一整套数组和矩阵的操作运算符。<br>3、一系列连贯而又完整的数据分析中间工具。<br>4、图形统计可以对数据直接进行分析和显示，可用于多种图形设备。<br>5、一种相当完善、简洁和高效的程序设计语言。<br>6、R语言是彻底面向对象的统计编程语言。<br>7、R语言和其它编程语言、数据库之间有很好的接口。<br>8、语言是自由软件，可以放心大胆地使用，但其功能却不比任何其它同类软件差。<br>9、R语言具有丰富的网上资源。</p><p>R语言官网：httpsmmmmmmmmmfadsfa://www.r-project.org/</p><p>推荐书籍：《R语言实战》</p><p>常用快捷键：Ctrl + L 清空终端</p><h2 id="R语言基础">R语言基础</h2><h3 id="1-1-R语言的基本功能">1.1 R语言的基本功能</h3><p>在Linux系统中，R语言中可以通过以下命令启动R软件</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> R</span><br></pre></td></tr></table></figure><p>可以通过以下命令来查找每个命令如何使用：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> R <span class="operator">-</span><span class="operator">-</span>help</span><br></pre></td></tr></table></figure><p>通过以下命令可以获取当前目录：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> getwd<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>可以通过<code>Rprofile.site</code>对R软件进行全局设置，<code>Rprofile.site</code>文件地址为<code>D:\R\R-4.2.1\etc</code>，这个文件中通过 # 进行注释，可以在最后通过<code>.First()</code>或者<code>.Last()</code>，当开始运行R软件时会执行<code>.First()</code>中的内容，当关闭R软件时执行<code>.Last()</code>中的内容。</p><p><code>.First()</code>中可以是常用的库，也可以是自己编写的常用函数的源代码文件。</p><p><code>.Last()</code>中可以是保存程序输出或者保存数据文件等。</p><p>在Rstudio软件中在命令后加括号进行区分对象和函数，R语法中对象可以是常量、变量，也可以是函数等等，函数必须加括号，便于区分。</p><p>可以通过<code>setwd</code>命令设定工作空间（这里是斜线，不是windows的反斜线）：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> setwd<span class="punctuation">(</span>dir <span class="operator">=</span> <span class="string">&quot;f:/Code/Code_R/R_proj_01&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>可以通过<code>list.files()</code>命令查看当前目录下的文件：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> list.files<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>R中不需要进行变量申明，可以进行变量赋值和计算，但是变量名不能以数字开头。</p><p>在终端中有以下三种赋值方式：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> 3</span><br><span class="line"><span class="operator">&gt;</span> <span class="number">6</span> <span class="operator">-&gt;</span> y</span><br><span class="line"><span class="operator">&gt;</span> z <span class="operator">=</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p>通过<code>xx &lt;&lt;- 9</code>命令对全局变量进行强制赋值：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> xx <span class="operator">&lt;&lt;-</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><p>在终端中通过<code>ls()</code>可以列出当前工作空间的变量：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> ls<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><code>ls()</code>命令是无法看到隐藏文件（以<code>.</code>开头的文件）的。可以通过以下命令查看所有文件（包括隐藏文件）：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> ls<span class="punctuation">(</span>all.names <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>在终端中通过<code>list.files()</code>命令列出当前文件夹下的文件：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> list.files<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>删除变量通过<code>rm</code>命令，如下所示，分别为删除单个变量、多个变量和所有变量：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> rm<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> rm<span class="punctuation">(</span>y<span class="punctuation">,</span> z<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> rm<span class="punctuation">(</span><span class="built_in">list</span> <span class="operator">=</span> ls<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>通过<code>Ctrl + L</code>将终端所有代码清屏。</p><p>为了避免电脑死机，通过<code>save.image()</code>保存工作空间：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> save.image<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>在终端中输入<code>q()</code>退出软件：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> q<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>相应的操作结果图如下：</p><p><img src="https://vip2.loli.io/2023/03/13/i2rYRenNz57QZGT.png" alt="image-20220803214112394"></p><p><img src="https://vip2.loli.io/2023/03/13/wQgrjlSt95nzNb4.png" alt="image-20220803214848744"></p><p>R表达式中常用的符号：</p><p><img src="https://vip2.loli.io/2023/03/13/Vmd6DjQlEigsfqZ.png" alt="image-20220812152701385"></p><h3 id="1-2-R包的安装">1.2 R包的安装</h3><p>R包的安装：<br><img src="https://vip2.loli.io/2023/03/13/g4FI5OWJcnP8wd9.png" alt="image-20220804084814106"></p><p>推荐使用在线安装的方式，可以自动安装需要的依赖包。</p><p>R中使用字符串要加引号，不加引号会将字符串当作对象处理，程序找不到对象就会报错：</p><p>错误用法：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> install.packages<span class="punctuation">(</span>vcd<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>正确用法：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> install.packages<span class="punctuation">(</span><span class="string">&quot;vcd&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 也可以一次性安装多个包</span></span><br><span class="line"><span class="operator">&gt;</span> install.packages<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;tidyr&quot;</span><span class="punctuation">,</span> <span class="string">&quot;dplyr&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/OpDRtd8IXQkwhCn.png" alt="image-20220804085636176"></p><p>可以通过以下命令查看库所在的位置：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> .libPaths<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>也可以通过以下命令查看库中所有的包：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果想一次安装多个包，可以通过以下命令：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> install.packages<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;AER&quot;</span><span class="punctuation">,</span><span class="string">&quot;ca&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>使用<code>update.packages()</code>命令可以更新安装的软件包：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> update.packages<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="1-3-R包的使用">1.3 R包的使用</h3><p>下载安装完包后，载入包就不需要引号了，如下：</p><p>正确用法：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>vcd<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>或者通过<code>require</code>加载包：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> require<span class="punctuation">(</span>vcd<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>R软件自带的包有：base，datasets，utils，grDevices，graphics，stats，methods，splines，stats4，tcltk</p><p>base：R基础功能相关的函数</p><p>datasets：存放R内置的数据集</p><p>grDevices：基于grid绘图相关的设备</p><p>graphics：基于base图形的R函数，R的绘图函数都在这个包中</p><p>methods：R语言一般的定义方法和类</p><p>这些包提供了种类繁多的函数和数据集，这些包集合在一起构成了R软件。</p><p>通过帮助文档进行R包的学习和使用：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> help<span class="punctuation">(</span>package <span class="operator">=</span> <span class="string">&quot;vcd&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>也可以通过以下命令查看包的基础信息：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>help <span class="operator">=</span> <span class="string">&quot;vcd&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>可以通过<code>ls(&quot;package:函数包名&quot;)</code>查看包的所有函数，例如：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> ls<span class="punctuation">(</span><span class="string">&quot;package:vcd&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>可以通过<code>data(&quot;package:函数包名&quot;)</code>查看包的所有数据集，例如：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> data<span class="punctuation">(</span><span class="string">&quot;package:vcd&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>可以通过<code>detach(&quot;package:函数包名&quot;)</code>移除加载的包，例如：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> detach<span class="punctuation">(</span><span class="string">&quot;package:vcd&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/cpHMjX4SDNw7R6v.png" alt="image-20220804094804931"></p><p>可以通过<code>remove.packages</code>函数彻底删除包：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> remove.packages<span class="punctuation">(</span><span class="string">&quot;vcd&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><strong>将R包迁移到新设备，通过以下步骤进行操作</strong>：</p><ol><li>列出当前环境已安装的包</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> installed.packages<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><ol start="2"><li>取第1列，即所有包的名字，并保存给变量<code>Rpack</code></li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> Rpack <span class="operator">&lt;-</span> installed.packages<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><ol start="3"><li>将所有的包保存到<code>Rpack.Rdata</code>文件中</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> save<span class="punctuation">(</span>Rpack<span class="punctuation">,</span>file<span class="operator">=</span><span class="string">&quot;Rpack.Rdata&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><ol start="4"><li>将<code>Rpack.Rdata</code>文件移入新设备，在新设备上R软件终端中通过以下命令安装R包：</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="keyword">for</span><span class="punctuation">(</span>i <span class="keyword">in</span> Rpack<span class="punctuation">)</span> install.packages<span class="punctuation">(</span>i<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>即使新设备已经安装了包，R会自动跳过已经安装的包。</p><h3 id="1-4-获取帮助">1.4 获取帮助</h3><p>R软件的帮助文档可以通过help命令进行查看：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> help.start<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>或者通过菜单栏中的<code>help</code>进行查看。</p><p><img src="https://vip2.loli.io/2023/03/13/GEcAZptY5wNvWgf.png" alt="image-20220804134719699"></p><p>示例：在终端中</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> help<span class="punctuation">(</span><span class="built_in">sum</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>或者<code>?</code>也可以：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="operator">?</span><span class="built_in">sum</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/QYNkfedgmvR8qCO.png" alt="image-20220804135001239"></p><p>如果想直接了解函数中的参数，可以通过<code>args</code>函数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> args<span class="punctuation">(</span>plot<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>在帮助文档中可以根据example中示例进行学习，也可以在终端中输入<code>example</code>进行实例展示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> example<span class="punctuation">(</span><span class="string">&quot;mean&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>也可以通过以下命令展示绘图demo：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> demo<span class="punctuation">(</span>graphics<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果想查看某个包的帮助文档，可以通过如下命令：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> help<span class="punctuation">(</span>package<span class="operator">=</span>vcd<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>有些R包包含vignette文档，这个文档包含简介，教程文档等，但也并不是所有的包都有：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> vignette<span class="punctuation">(</span><span class="string">&quot;xts&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>有时候明明已经安装了包，但是<code>help</code>搜索不到相应的函数，这是因为相关的包并没有加载，需要通过<code>library</code>进行加载，如果不加载，可以通过以下方式搜索：</p><ol><li><p>通过包的名字：<code>help(package = vcd)</code></p></li><li><p>需要通过双问号命令进行搜索，例如：</p></li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="operator">?</span><span class="operator">?</span>qplot</span><br></pre></td></tr></table></figure><p>有些情况下不知道函数名，可以通过<code>help.search</code>进行本地模糊搜索：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> help.search<span class="punctuation">(</span><span class="string">&quot;heatmap&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>这里的<code>help.search</code>可以通过<code>??</code>来简写：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="operator">?</span><span class="operator">?</span>heatmap</span><br></pre></td></tr></table></figure><p>apropos函数可以列出所有包含关键字的内容，例如：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> apropos<span class="punctuation">(</span><span class="string">&quot;sum&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>apropos函数也可以限定搜索范围，比如仅仅对函数进行搜索：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> apropos<span class="punctuation">(</span><span class="string">&quot;sum&quot;</span><span class="punctuation">,</span>mod<span class="operator">=</span><span class="string">&quot;function&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>也可以通过<code>RSiteSearch</code>进行官网搜索：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> RSiteSearch<span class="punctuation">(</span><span class="string">&quot;matlab&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>==注意==：<code>help.search</code>为本地搜索</p><p>也可以通过 <a href="https://rseek.org/">https://rseek.org/</a> 进行搜索，前提是要能够使用Google搜索。</p><h3 id="1-5-内置数据集">1.5 内置数据集</h3><p>R软件内置数据集存放在datasets中，某人加载这个包。</p><p>可以通过help查看数据集的具体内容：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> help<span class="punctuation">(</span><span class="string">&quot;mtcars&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>可以将一些数据组成数据框，示例：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> state <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>state.name<span class="punctuation">,</span>state.abb<span class="punctuation">,</span>state.area<span class="punctuation">,</span>state.division<span class="punctuation">,</span>state.region<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> state</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/7VElopxwPv18OhX.png" alt="image-20220804154517960"></p><p>有些数据集可以绘制对应的热图：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> heatmap<span class="punctuation">(</span>volcano<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>可以通过如下操作查看某个包中的数据集：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> data<span class="punctuation">(</span>package<span class="operator">=</span><span class="string">&quot;MASS&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>可以通过如下操作查看R软件中所有数据集（包括自己安装的包的数据集）：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> data<span class="punctuation">(</span>package<span class="operator">=</span>.packages<span class="punctuation">(</span>all.available <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果不想加载某个数据集，但是想用其数据集，可以通过以下命令（Chile为数据集，car为包名）：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> data<span class="punctuation">(</span>Chile<span class="punctuation">,</span>package<span class="operator">=</span><span class="string">&quot;car&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="2-数据结构">2 数据结构</h2><p>R语言中最重要的概念是对象。</p><p>对象：object，它是指可以赋值给变量的任何事物，包括常量、数据结构、函数，甚至图形。对象都拥有某个模式，描述了此对象是如何存储的，以及某个类。</p><h3 id="2-1-向量">2.1 向量</h3><p>向量，vector，是R中最重要的一个概念，它是构成其他数据结构的基础。R中的向量概念与数学中向量是不同的，类似于数学上的集合的概念，由一个或多个元素构成。</p><p>向量其实是用于存储数值型、字符型或逻辑型数据结构的一维数组。</p><p>用函数c来创建向量。c代表concatenate连接，也可以理解为收集collect，或者合并combine，例如：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>这里的x就是向量，也可以称为对象。</p><p>在R语言中字符串要加引号，如果不加引号，就会把字符串当成对象。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> y <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;one&quot;</span><span class="punctuation">,</span><span class="string">&quot;two&quot;</span><span class="punctuation">,</span><span class="string">&quot;three&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>对于逻辑型变量用TRUE、FALSE、T、F进行表示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> z <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="literal">TRUE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>不能够用首字母大写的模式，如 True 或 False。</p><p>用冒号构建等差数列：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">100</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果想调整等差数列的差值，可以通过seq函数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> seq<span class="punctuation">(</span>from<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span>to<span class="operator">=</span><span class="number">100</span><span class="punctuation">,</span>by<span class="operator">=</span><span class="number">2</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果想等差生成10个值，可以通过如下方式：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> seq<span class="punctuation">(</span>from<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span>to<span class="operator">=</span><span class="number">100</span><span class="punctuation">,</span>length.out<span class="operator">=</span><span class="number">10</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果想要输出重复的数值，可以通过rep函数，比如重复5次2：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="built_in">rep</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>还有其他用法：x = 1 2 3 4 5</p><p>将x向量依次重复5次：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="built_in">rep</span><span class="punctuation">(</span>x<span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>输出：1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5</p><p>将x向量每个元素重复5次：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="built_in">rep</span><span class="punctuation">(</span>x<span class="punctuation">,</span>each<span class="operator">=</span><span class="number">5</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>输出：1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 4 4 4 4 4 5 5 5 5 5</p><p>将x向量每个元素依次重复五次，并执行两次：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="built_in">rep</span><span class="punctuation">(</span>x<span class="punctuation">,</span>each<span class="operator">=</span><span class="number">5</span><span class="punctuation">,</span>times<span class="operator">=</span><span class="number">2</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>输出：1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 4 4 4 4 4 5 5 5 5 5 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 4 4 4 4 4 5 5 5 5 5</p><p>示例：</p><p><img src="https://vip2.loli.io/2023/03/13/Bw5dmfYPoKODkGj.png" alt="image-20220805174639683"></p><p>向量的数据类型都是同一类型，都是数值型或者字符型。如果不是同一类型，会自动将其转换为同一类型：</p><p><img src="https://vip2.loli.io/2023/03/13/wFL3vBG4VQXAu7P.png" alt="image-20220805175541547"></p><p>通过如果想要查看变量的类型，可以通过<code>mode</code>函数进行查看。</p><p>如果想要提取出x中大于3的值：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x<span class="punctuation">[</span>x<span class="operator">&gt;</span><span class="number">3</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>输出：4 5</p><p>例如前面的重复，也可以进行批量处理：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="built_in">rep</span><span class="punctuation">(</span>x<span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>输出：1 1 2 2 2 2 3 3 3 3 3 3 4 5 5 5</p><h3 id="2-2-向量索引">2.2 向量索引</h3><p>可以用<code>length</code>统计向量的长度，R中元素序列是从0开始。</p><p><code>x[-19]</code>表示不显示第19个数值。</p><p><code>x[c(1,23,45,67,89)]</code>表示输出对应位置的数值</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> y <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> y<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">,</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">,</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">,</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">,</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">7</span>  <span class="number">9</span></span><br><span class="line"><span class="operator">&gt;</span> y<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">,</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">,</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">,</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">,</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span></span><br><span class="line"><span class="operator">&gt;</span> y<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span></span><br><span class="line"><span class="operator">&gt;</span> y<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span>  <span class="number">4</span>  <span class="number">7</span> <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> y<span class="punctuation">[</span>y<span class="operator">&gt;</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> y<span class="punctuation">[</span>y<span class="operator">&gt;</span><span class="number">5</span> <span class="operator">&amp;</span> y<span class="operator">&lt;</span><span class="number">9</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">6</span> <span class="number">7</span> <span class="number">8</span></span><br><span class="line"><span class="operator">&gt;</span> z <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;one&quot;</span><span class="punctuation">,</span><span class="string">&quot;two&quot;</span><span class="punctuation">,</span><span class="string">&quot;three&quot;</span><span class="punctuation">,</span><span class="string">&quot;four&quot;</span><span class="punctuation">,</span><span class="string">&quot;five&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> z</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="string">&quot;one&quot;</span>   <span class="string">&quot;two&quot;</span>   <span class="string">&quot;three&quot;</span> <span class="string">&quot;four&quot;</span>  <span class="string">&quot;five&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="string">&quot;one&quot;</span> <span class="operator">%in%</span> z</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="literal">TRUE</span></span><br><span class="line"><span class="operator">&gt;</span> z<span class="punctuation">[</span>z <span class="operator">%in%</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;one&quot;</span><span class="punctuation">,</span><span class="string">&quot;two&quot;</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="string">&quot;one&quot;</span> <span class="string">&quot;two&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> z <span class="operator">%in%</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;one&quot;</span><span class="punctuation">,</span><span class="string">&quot;two&quot;</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="literal">TRUE</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="operator">&gt;</span> k <span class="operator">&lt;-</span> z <span class="operator">%in%</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;one&quot;</span><span class="punctuation">,</span><span class="string">&quot;two&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> z<span class="punctuation">[</span>k<span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="string">&quot;one&quot;</span> <span class="string">&quot;two&quot;</span></span><br></pre></td></tr></table></figure><p>也可以通过names函数对变量进行命名：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> y <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">,</span><span class="number">7</span><span class="punctuation">,</span><span class="number">8</span><span class="punctuation">,</span><span class="number">9</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> y</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">names</span><span class="punctuation">(</span>y<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;one&quot;</span><span class="punctuation">,</span><span class="string">&quot;two&quot;</span><span class="punctuation">,</span><span class="string">&quot;three&quot;</span><span class="punctuation">,</span><span class="string">&quot;four&quot;</span><span class="punctuation">,</span><span class="string">&quot;five&quot;</span><span class="punctuation">,</span><span class="string">&quot;six&quot;</span><span class="punctuation">,</span><span class="string">&quot;seven&quot;</span><span class="punctuation">,</span><span class="string">&quot;eight&quot;</span><span class="punctuation">,</span><span class="string">&quot;nine&quot;</span><span class="punctuation">,</span><span class="string">&quot;ten&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> y</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   one   two three  four  five   six seven eight  nine   ten </span><br><span class="line"> <span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span>     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span>    <span class="number">10</span> </span><br><span class="line"><span class="operator">&gt;</span> y<span class="punctuation">[</span><span class="string">&quot;two&quot;</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   two </span><br><span class="line"> <span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span>   <span class="number">2</span> </span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/Y1AriO65Vt2GQn3.png" alt="image-20220805222807259"></p><p>添加和删除元素：x为1到100的向量</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x<span class="punctuation">[</span><span class="number">101</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> <span class="number">101</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">31</span><span class="punctuation">]</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span>  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span>  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">61</span><span class="punctuation">]</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span>  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">91</span><span class="punctuation">]</span>  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span> <span class="number">101</span></span><br></pre></td></tr></table></figure><p>还可以通过以下方式添加向量：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> v <span class="operator">&lt;-</span> 1<span class="operator">:</span><span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> v</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> v<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">)</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> v</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="operator">&gt;</span> v<span class="punctuation">[</span><span class="number">20</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> <span class="number">4</span></span><br><span class="line"><span class="operator">&gt;</span> v</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span>  <span class="number">4</span></span><br><span class="line"><span class="operator">&gt;</span> append<span class="punctuation">(</span>x <span class="operator">=</span> v<span class="punctuation">,</span> values <span class="operator">=</span> <span class="number">99</span><span class="punctuation">,</span> after <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span> <span class="number">99</span>  <span class="number">6</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span>  <span class="number">4</span></span><br><span class="line"><span class="operator">&gt;</span> append<span class="punctuation">(</span>x <span class="operator">=</span> v<span class="punctuation">,</span> values <span class="operator">=</span> <span class="number">88</span><span class="punctuation">,</span> after <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">88</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span>  <span class="number">4</span></span><br></pre></td></tr></table></figure><p>如果想要删除某个元素：</p><p>方法一：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm<span class="punctuation">(</span>v<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>方法二：通过不显示想删除的部分，然后赋值给自身就相当于删除部分元素了</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y <span class="operator">&lt;-</span> y<span class="punctuation">[</span><span class="operator">-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>如果想替换某个元素：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y<span class="punctuation">[</span><span class="string">&quot;four&quot;</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><p>不能够将字符串赋值给数值，否则都会变成字符串。</p><h3 id="2-3-向量运算">2.3 向量运算</h3><p>向量的基本用法：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> 1<span class="operator">:</span><span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="operator">+</span><span class="number">1</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="operator">-</span><span class="number">3</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">2</span> <span class="operator">-</span><span class="number">1</span>  <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span></span><br><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> x<span class="operator">+</span><span class="number">1</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span></span><br></pre></td></tr></table></figure><p>总结：<code>+</code>为给所有元素相加某一值</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span></span><br><span class="line"><span class="operator">&gt;</span> y <span class="operator">&lt;-</span> seq<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">,</span>length.out <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> y</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span>  <span class="number">12</span>  <span class="number">23</span>  <span class="number">34</span>  <span class="number">45</span>  <span class="number">56</span>  <span class="number">67</span>  <span class="number">78</span>  <span class="number">89</span> <span class="number">100</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="operator">*</span>y</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>    <span class="number">2</span>   <span class="number">36</span>   <span class="number">92</span>  <span class="number">170</span>  <span class="number">270</span>  <span class="number">392</span>  <span class="number">536</span>  <span class="number">702</span>  <span class="number">890</span> <span class="number">1100</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="operator">**</span><span class="number">2</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">4</span>   <span class="number">9</span>  <span class="number">16</span>  <span class="number">25</span>  <span class="number">36</span>  <span class="number">49</span>  <span class="number">64</span>  <span class="number">81</span> <span class="number">100</span> <span class="number">121</span></span><br><span class="line"> <span class="operator">&gt;</span> x<span class="operator">^</span><span class="number">2</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">4</span>   <span class="number">9</span>  <span class="number">16</span>  <span class="number">25</span>  <span class="number">36</span>  <span class="number">49</span>  <span class="number">64</span>  <span class="number">81</span> <span class="number">100</span> <span class="number">121</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="operator">%%</span>y</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">0</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="operator">%/%</span><span class="number">5</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>总结：<code>*</code>为元素相乘符，<code>**</code>和<code>^</code>均为幂运算，<code>%%</code>为取余符号，<code>%/%</code>为整除符号。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> z <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> z</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="operator">+</span>z</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">7</span>  <span class="number">7</span>  <span class="number">9</span>  <span class="number">9</span> <span class="number">11</span> <span class="number">11</span> <span class="number">13</span></span><br><span class="line"><span class="operator">&gt;</span> x <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="operator">+</span>z</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">2</span> <span class="number">4</span> <span class="number">4</span></span><br><span class="line">Warning message<span class="operator">:</span></span><br><span class="line">In x <span class="operator">+</span> z <span class="operator">:</span> longer object <span class="built_in">length</span> is not a multiple of shorter object <span class="built_in">length</span></span><br></pre></td></tr></table></figure><p>总结：长的向量和短的向量相加，长的向量中元素个数必须为短的向量个数的整数倍。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> 1<span class="operator">:</span><span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> y <span class="operator">&lt;-</span> seq<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">,</span>length.out <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> y</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span>  <span class="number">12</span>  <span class="number">23</span>  <span class="number">34</span>  <span class="number">45</span>  <span class="number">56</span>  <span class="number">67</span>  <span class="number">78</span>  <span class="number">89</span> <span class="number">100</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span>  <span class="literal">TRUE</span>  <span class="literal">TRUE</span>  <span class="literal">TRUE</span>  <span class="literal">TRUE</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="operator">&gt;</span>y</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></span><br><span class="line"> <span class="operator">&gt;</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span> <span class="operator">%in%</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="literal">TRUE</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> y</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span>  <span class="number">12</span>  <span class="number">23</span>  <span class="number">34</span>  <span class="number">45</span>  <span class="number">56</span>  <span class="number">67</span>  <span class="number">78</span>  <span class="number">89</span> <span class="number">100</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="operator">==</span>y</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></span><br><span class="line"> <span class="operator">&gt;</span> x <span class="operator">&lt;-</span> <span class="operator">-</span><span class="number">5</span><span class="operator">:</span><span class="number">5</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">5</span> <span class="operator">-</span><span class="number">4</span> <span class="operator">-</span><span class="number">3</span> <span class="operator">-</span><span class="number">2</span> <span class="operator">-</span><span class="number">1</span>  <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">abs</span><span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">sqrt</span><span class="punctuation">(</span><span class="number">25</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">5</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">log</span><span class="punctuation">(</span><span class="number">16</span><span class="punctuation">,</span>base <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">4</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">log</span><span class="punctuation">(</span><span class="number">16</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">2.772589</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">log</span><span class="punctuation">(</span><span class="number">16</span><span class="punctuation">,</span>base <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1.20412</span></span><br><span class="line"><span class="operator">&gt;</span> log10<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">5</span> <span class="operator">-</span><span class="number">4</span> <span class="operator">-</span><span class="number">3</span> <span class="operator">-</span><span class="number">2</span> <span class="operator">-</span><span class="number">1</span>  <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">exp</span><span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">6.737947e-03</span> <span class="number">1.831564e-02</span> <span class="number">4.978707e-02</span> <span class="number">1.353353e-01</span> <span class="number">3.678794e-01</span> <span class="number">1.000000e+00</span> <span class="number">2.718282e+00</span> <span class="number">7.389056e+00</span> <span class="number">2.008554e+01</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">]</span> <span class="number">5.459815e+01</span> <span class="number">1.484132e+02</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">ceiling</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">2.3</span><span class="punctuation">,</span><span class="number">3.1415</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">2</span>  <span class="number">4</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">floor</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">2.3</span><span class="punctuation">,</span><span class="number">3.1415</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">3</span>  <span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">trunc</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">2.3</span><span class="punctuation">,</span><span class="number">3.1415</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">2</span>  <span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">round</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">2.3</span><span class="punctuation">,</span><span class="number">3.1415</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">2</span>  <span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">round</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">2.3</span><span class="punctuation">,</span><span class="number">3.1415</span><span class="punctuation">)</span><span class="punctuation">,</span>digits <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">2.30</span>  <span class="number">3.14</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">signif</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">2.3</span><span class="punctuation">,</span><span class="number">3.1415</span><span class="punctuation">)</span><span class="punctuation">,</span>digits <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">2.3</span>  <span class="number">3.1</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">sin</span><span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">0.9589243</span>  <span class="number">0.7568025</span> <span class="operator">-</span><span class="number">0.1411200</span> <span class="operator">-</span><span class="number">0.9092974</span> <span class="operator">-</span><span class="number">0.8414710</span>  <span class="number">0.0000000</span>  <span class="number">0.8414710</span>  <span class="number">0.9092974</span>  <span class="number">0.1411200</span> <span class="operator">-</span><span class="number">0.7568025</span> <span class="operator">-</span><span class="number">0.9589243</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">cos</span><span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">0.2836622</span> <span class="operator">-</span><span class="number">0.6536436</span> <span class="operator">-</span><span class="number">0.9899925</span> <span class="operator">-</span><span class="number">0.4161468</span>  <span class="number">0.5403023</span>  <span class="number">1.0000000</span>  <span class="number">0.5403023</span> <span class="operator">-</span><span class="number">0.4161468</span> <span class="operator">-</span><span class="number">0.9899925</span> <span class="operator">-</span><span class="number">0.6536436</span>  <span class="number">0.2836622</span></span><br></pre></td></tr></table></figure><p>总结：<code>log(x)</code>默认为以常数e为底的自然对数，<code>log10(x)</code>为以10为底的对数，<code>log(16,base = 10)</code>为以10为底的10的对数，<code>exp</code>表示以e为底的指数，<code>ceiling</code>为大于给定值的最小整数，<code>floor</code>为小于给定值的最大整数，<code>trunc</code>为给定值的整数部分，<code>round</code>为给定值四舍五入，默认为整数，如果设定值<code>digits</code>为2，则为保留两个小数。<code>signif</code>和<code>round</code>功能类似，如果<code>digits</code>为2时，表示保留两位有效数字，<code>sin</code>和<code>cos</code>分别为正弦函数和余弦函数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> vec <span class="operator">&lt;-</span> 1<span class="operator">:</span><span class="number">100</span></span><br><span class="line"><span class="operator">&gt;</span> vec</span><br><span class="line">  <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">31</span><span class="punctuation">]</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span>  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span>  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">61</span><span class="punctuation">]</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span>  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">91</span><span class="punctuation">]</span>  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">sum</span><span class="punctuation">(</span>vec<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">5050</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">max</span><span class="punctuation">(</span>vec<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">100</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">min</span><span class="punctuation">(</span>vec<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">range</span><span class="punctuation">(</span>vec<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line"><span class="operator">&gt;</span> mean<span class="punctuation">(</span>vec<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">50.5</span></span><br><span class="line"><span class="operator">&gt;</span> var<span class="punctuation">(</span>vec<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">841.6667</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">round</span><span class="punctuation">(</span>var<span class="punctuation">(</span>vec<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">842</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">round</span><span class="punctuation">(</span>var<span class="punctuation">(</span>vec<span class="punctuation">)</span><span class="punctuation">,</span>digits <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">841.67</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">round</span><span class="punctuation">(</span>sd<span class="punctuation">(</span>vec<span class="punctuation">)</span><span class="punctuation">,</span>digits <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">29.01</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">prod</span><span class="punctuation">(</span>vec<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">9.332622e+157</span></span><br><span class="line"><span class="operator">&gt;</span> quantile<span class="punctuation">(</span>vec<span class="punctuation">)</span></span><br><span class="line">    <span class="number">0</span><span class="operator">%    25%</span>    <span class="number">50</span><span class="operator">%    75%</span>   <span class="number">100</span><span class="operator">% </span></span><br><span class="line"><span class="operator">  1.00  25.75  50.50  75.25 100.00 </span></span><br><span class="line"><span class="operator">&gt; quantile(vec,c(0.4,0.5,0.8))</span></span><br><span class="line"><span class="operator"> 40%</span>  <span class="number">50</span><span class="operator">%  80%</span> </span><br><span class="line"><span class="number">40.6</span> <span class="number">50.5</span> <span class="number">80.2</span> </span><br></pre></td></tr></table></figure><p>总结：<code>sum</code>返回向量的求和，<code>max</code>返回向量最大值，<code>min</code>返回向量最小值，<code>range</code>返回向量最小值和最大值，<code>mean</code>返回向量均值，<code>var</code>返回向量方差，<code>sd</code>返回向量标准差，<code>prod</code>返回向量连乘的积。<code>quantile</code>为计算分位数中的值，<code>quantile(vec,c(0.4,0.5,0.8))</code>为计算四分位、中位和八分位数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> t <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">7</span><span class="punctuation">,</span><span class="number">9</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> t</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1</span> <span class="number">4</span> <span class="number">2</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">6</span></span><br><span class="line"><span class="operator">&gt;</span> which.max<span class="punctuation">(</span>t<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">6</span></span><br><span class="line"><span class="operator">&gt;</span> which.min<span class="punctuation">(</span>t<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1</span></span><br><span class="line"><span class="operator">&gt;</span> which<span class="punctuation">(</span>t<span class="operator">==</span><span class="number">7</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">5</span></span><br><span class="line"><span class="operator">&gt;</span> which<span class="punctuation">(</span>t<span class="operator">&gt;</span><span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span></span><br><span class="line"><span class="operator">&gt;</span> t<span class="punctuation">[</span>which<span class="punctuation">(</span>t<span class="operator">&gt;</span><span class="number">5</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">7</span> <span class="number">9</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><p>总结：<code>which</code>返回的是对应的位置，<code>which.max(t)</code>返回最大值对应的位置，<code>which.min(t)</code>返回最小值对应的位置，<code>which(t==7)</code>返回数值为7的元素对应的位置，<code>which(t&gt;5)</code>返回<code>t&gt;5</code>对应的元素的位置，<code>t[which(t&gt;5)]</code>返回<code>t&gt;5</code>对应的元素。</p><h3 id="2-4-矩阵">2.4 矩阵</h3><p>矩阵（Matrix）是一个按照长方阵列排列的复数或实数集合。向量是一维的，而矩阵是二维的，需要有行和列。</p><p>在R软件中，矩阵是有维数的向量，这里的矩阵元素可以是数值型，字符型或者逻辑型，但是每个元素必须都拥有相同的模式，这个和向量一致。</p><p>矩阵相关操作如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x<span class="operator">&lt;-</span> <span class="number">1</span><span class="operator">:</span><span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> m <span class="operator">&lt;-</span>matrix<span class="punctuation">(</span>x<span class="punctuation">,</span>nrow <span class="operator">=</span> <span class="number">4</span><span class="punctuation">,</span>ncol <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> m</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span>   <span class="number">13</span>   <span class="number">17</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span>   <span class="number">14</span>   <span class="number">18</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span>   <span class="number">15</span>   <span class="number">19</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span>   <span class="number">16</span>   <span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> t <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> t</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span>   <span class="number">13</span>   <span class="number">17</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span>   <span class="number">14</span>   <span class="number">18</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span>   <span class="number">15</span>   <span class="number">19</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span>   <span class="number">16</span>   <span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> t <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> t</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span>   <span class="number">13</span>   <span class="number">17</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span>   <span class="number">14</span>   <span class="number">18</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span>   <span class="number">15</span>   <span class="number">19</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span>   <span class="number">16</span>   <span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> t <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span>byrow <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> t</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">2</span>    <span class="number">3</span>    <span class="number">4</span>    <span class="number">5</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">6</span>    <span class="number">7</span>    <span class="number">8</span>    <span class="number">9</span>   <span class="number">10</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">11</span>   <span class="number">12</span>   <span class="number">13</span>   <span class="number">14</span>   <span class="number">15</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">16</span>   <span class="number">17</span>   <span class="number">18</span>   <span class="number">19</span>   <span class="number">20</span></span><br></pre></td></tr></table></figure><p>总结：可以通过<code>matrix</code>创建矩阵，需要自己设定行数或者列数，也可以只设定列数或行数，默认按照列进行排列，如果<code>byrow</code>为<code>T</code>则按照行进行排列。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> m <span class="operator">&lt;-</span>matrix<span class="punctuation">(</span>x<span class="punctuation">,</span>nrow <span class="operator">=</span> <span class="number">4</span><span class="punctuation">,</span>ncol <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> m</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span>   <span class="number">13</span>   <span class="number">17</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span>   <span class="number">14</span>   <span class="number">18</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span>   <span class="number">15</span>   <span class="number">19</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span>   <span class="number">16</span>   <span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> rnames <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;R1&quot;</span><span class="punctuation">,</span><span class="string">&quot;R2&quot;</span><span class="punctuation">,</span><span class="string">&quot;R3&quot;</span><span class="punctuation">,</span><span class="string">&quot;R4&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> rnames</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;R1&quot;</span> <span class="string">&quot;R2&quot;</span> <span class="string">&quot;R3&quot;</span> <span class="string">&quot;R4&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> cnames <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;C1&quot;</span><span class="punctuation">,</span><span class="string">&quot;C2&quot;</span><span class="punctuation">,</span><span class="string">&quot;C3&quot;</span><span class="punctuation">,</span><span class="string">&quot;C4&quot;</span><span class="punctuation">,</span><span class="string">&quot;C5&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> cnames</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;C1&quot;</span> <span class="string">&quot;C2&quot;</span> <span class="string">&quot;C3&quot;</span> <span class="string">&quot;C4&quot;</span> <span class="string">&quot;C5&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">dimnames</span><span class="punctuation">(</span>m<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">list</span><span class="punctuation">(</span>rnames<span class="punctuation">,</span>cnames<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> m</span><br><span class="line">   C1 C2 C3 C4 C5</span><br><span class="line">R1  <span class="number">1</span>  <span class="number">5</span>  <span class="number">9</span> <span class="number">13</span> <span class="number">17</span></span><br><span class="line">R2  <span class="number">2</span>  <span class="number">6</span> <span class="number">10</span> <span class="number">14</span> <span class="number">18</span></span><br><span class="line">R3  <span class="number">3</span>  <span class="number">7</span> <span class="number">11</span> <span class="number">15</span> <span class="number">19</span></span><br><span class="line">R4  <span class="number">4</span>  <span class="number">8</span> <span class="number">12</span> <span class="number">16</span> <span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> 1<span class="operator">:</span><span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">dim</span><span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">dim</span><span class="punctuation">(</span>x<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span>   <span class="number">13</span>   <span class="number">17</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span>   <span class="number">14</span>   <span class="number">18</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span>   <span class="number">15</span>   <span class="number">19</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span>   <span class="number">16</span>   <span class="number">20</span></span><br></pre></td></tr></table></figure><p>总结：可以通过<code>dimnames</code>给矩阵的行和列进行命名，也可以通过<code>dim</code>将向量变为矩阵。</p><p>数组：示例1</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> 1<span class="operator">:</span><span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">dim</span><span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">dim</span><span class="punctuation">(</span>x<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">3</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">5</span>    <span class="number">7</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">6</span>    <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">9</span>   <span class="number">11</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">10</span>   <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> <span class="number">4</span></span><br><span class="line"></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">13</span>   <span class="number">15</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">14</span>   <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> <span class="number">5</span></span><br><span class="line"></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">17</span>   <span class="number">19</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">18</span>   <span class="number">20</span></span><br></pre></td></tr></table></figure><p>示例2：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> dim1 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;A1&quot;</span><span class="punctuation">,</span><span class="string">&quot;A2&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> dim2 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;B1&quot;</span><span class="punctuation">,</span><span class="string">&quot;B2&quot;</span><span class="punctuation">,</span><span class="string">&quot;B3&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> dim3 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;C1&quot;</span><span class="punctuation">,</span><span class="string">&quot;C2&quot;</span><span class="punctuation">,</span><span class="string">&quot;C3&quot;</span><span class="punctuation">,</span><span class="string">&quot;C4&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> z <span class="operator">&lt;-</span> array<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">24</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">dimnames</span> <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span>dim1<span class="punctuation">,</span>dim2<span class="punctuation">,</span>dim3<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> z</span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> C1</span><br><span class="line"></span><br><span class="line">   B1 B2 B3</span><br><span class="line">A1  <span class="number">1</span>  <span class="number">3</span>  <span class="number">5</span></span><br><span class="line">A2  <span class="number">2</span>  <span class="number">4</span>  <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> C2</span><br><span class="line"></span><br><span class="line">   B1 B2 B3</span><br><span class="line">A1  <span class="number">7</span>  <span class="number">9</span> <span class="number">11</span></span><br><span class="line">A2  <span class="number">8</span> <span class="number">10</span> <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> C3</span><br><span class="line"></span><br><span class="line">   B1 B2 B3</span><br><span class="line">A1 <span class="number">13</span> <span class="number">15</span> <span class="number">17</span></span><br><span class="line">A2 <span class="number">14</span> <span class="number">16</span> <span class="number">18</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> C4</span><br><span class="line"></span><br><span class="line">   B1 B2 B3</span><br><span class="line">A1 <span class="number">19</span> <span class="number">21</span> <span class="number">23</span></span><br><span class="line">A2 <span class="number">20</span> <span class="number">22</span> <span class="number">24</span></span><br></pre></td></tr></table></figure><p>总结：可以通过<code>array</code>创建矩阵，同时给矩阵命名。</p><p>读取矩阵中的元素，示例：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> m <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span>byrow <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> m</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">2</span>    <span class="number">3</span>    <span class="number">4</span>    <span class="number">5</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">6</span>    <span class="number">7</span>    <span class="number">8</span>    <span class="number">9</span>   <span class="number">10</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">11</span>   <span class="number">12</span>   <span class="number">13</span>   <span class="number">14</span>   <span class="number">15</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">16</span>   <span class="number">17</span>   <span class="number">18</span>   <span class="number">19</span>   <span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> m<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> m<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="operator">&gt;</span> m<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="operator">:</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">7</span>    <span class="number">8</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">12</span>   <span class="number">13</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">17</span>   <span class="number">18</span></span><br><span class="line"><span class="operator">&gt;</span> m<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> m<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">2</span>  <span class="number">7</span> <span class="number">12</span> <span class="number">17</span></span><br><span class="line"><span class="operator">&gt;</span> m<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">6</span></span><br><span class="line"><span class="operator">&gt;</span> m<span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">11</span></span><br><span class="line"><span class="operator">&gt;</span> m<span class="punctuation">[</span><span class="operator">-</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">7</span> <span class="number">12</span> <span class="number">17</span></span><br><span class="line"><span class="operator">&gt;</span> rnames <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;R1&quot;</span><span class="punctuation">,</span><span class="string">&quot;R2&quot;</span><span class="punctuation">,</span><span class="string">&quot;R3&quot;</span><span class="punctuation">,</span><span class="string">&quot;R4&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> rnames</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;R1&quot;</span> <span class="string">&quot;R2&quot;</span> <span class="string">&quot;R3&quot;</span> <span class="string">&quot;R4&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> cnames <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;C1&quot;</span><span class="punctuation">,</span><span class="string">&quot;C2&quot;</span><span class="punctuation">,</span><span class="string">&quot;C3&quot;</span><span class="punctuation">,</span><span class="string">&quot;C4&quot;</span><span class="punctuation">,</span><span class="string">&quot;C5&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> cnames</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;C1&quot;</span> <span class="string">&quot;C2&quot;</span> <span class="string">&quot;C3&quot;</span> <span class="string">&quot;C4&quot;</span> <span class="string">&quot;C5&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">dimnames</span><span class="punctuation">(</span>m<span class="punctuation">)</span><span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span>rnames<span class="punctuation">,</span>cnames<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> m</span><br><span class="line">   C1 C2 C3 C4 C5</span><br><span class="line">R1  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span></span><br><span class="line">R2  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line">R3 <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span></span><br><span class="line">R4 <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> m<span class="punctuation">[</span><span class="string">&quot;R1&quot;</span><span class="punctuation">,</span><span class="string">&quot;C2&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">2</span></span><br><span class="line"><span class="built_in">sum</span><span class="punctuation">(</span>m<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">210</span></span><br><span class="line"><span class="operator">&gt;</span> colSums<span class="punctuation">(</span>m<span class="punctuation">)</span></span><br><span class="line">C1 C2 C3 C4 C5 </span><br><span class="line"><span class="number">34</span> <span class="number">38</span> <span class="number">42</span> <span class="number">46</span> <span class="number">50</span> </span><br><span class="line"><span class="operator">&gt;</span> rowSums<span class="punctuation">(</span>m<span class="punctuation">)</span></span><br><span class="line">R1 R2 R3 R4 </span><br><span class="line"><span class="number">15</span> <span class="number">40</span> <span class="number">65</span> <span class="number">90</span> </span><br><span class="line"><span class="operator">&gt;</span> colMeans<span class="punctuation">(</span>m<span class="punctuation">)</span></span><br><span class="line">  C1   C2   C3   C4   C5 </span><br><span class="line"> <span class="number">8.5</span>  <span class="number">9.5</span> <span class="number">10.5</span> <span class="number">11.5</span> <span class="number">12.5</span> </span><br><span class="line"><span class="operator">&gt;</span> rowMeans<span class="punctuation">(</span>m<span class="punctuation">)</span></span><br><span class="line">R1 R2 R3 R4 </span><br><span class="line"> <span class="number">3</span>  <span class="number">8</span> <span class="number">13</span> <span class="number">18</span></span><br></pre></td></tr></table></figure><p>矩阵的内积和外积：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> n <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">9</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> w <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span><span class="number">2</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> n</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">4</span>    <span class="number">7</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">6</span>    <span class="number">9</span></span><br><span class="line"><span class="operator">&gt;</span> w</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">6</span>    <span class="number">9</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">7</span>   <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> n<span class="operator">*</span>w</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>   <span class="number">20</span>   <span class="number">56</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">6</span>   <span class="number">30</span>   <span class="number">72</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">12</span>   <span class="number">42</span>   <span class="number">90</span></span><br><span class="line"><span class="operator">&gt;</span> n <span class="operator">%*%</span> w</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">42</span>   <span class="number">78</span>  <span class="number">114</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">51</span>   <span class="number">96</span>  <span class="number">141</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">60</span>  <span class="number">114</span>  <span class="number">168</span></span><br><span class="line"><span class="operator">&gt;</span> diag<span class="punctuation">(</span>n<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1</span> <span class="number">5</span> <span class="number">9</span></span><br><span class="line"><span class="operator">&gt;</span> t<span class="punctuation">(</span>n<span class="punctuation">)</span></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">2</span>    <span class="number">3</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">7</span>    <span class="number">8</span>    <span class="number">9</span></span><br></pre></td></tr></table></figure><p>总结：函数内积可通过<code>*</code>将矩阵对应位置进行相乘，外积可以通过<code>%*%</code>符号实现，矩阵对角线的值可以通过<code>diag</code>取得，函数<code>t</code>可以对矩阵进行转置。</p><h3 id="2-5-列表">2.5 列表</h3><p>列表就是用来存储很多内容的一个集合，在其他编程语言中，列表一般和数组是等同的，但是在R语言中，列表却是最复杂的一种数据结构，也是非常重要的一种数据结构。</p><p>列表是一些对象的有序集合。列表中可以存储若干向量、矩阵、数据框，甚至其他列表的组合。</p><p>向量与类表：</p><ol><li>在模式上和向量类似，都是一维数据集合。</li><li>向量智能存储一种数据类型，列表中的对象可以是R中的任何数据结构，甚至列表本身。</li></ol><p>示例：<code>mtcars</code>为数据集</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> a <span class="operator">&lt;-</span> 1<span class="operator">:</span><span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> b <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">c</span> <span class="operator">&lt;-</span> mtcars</span><br><span class="line"><span class="operator">&gt;</span> d <span class="operator">&lt;-</span> <span class="string">&quot;This is a test list&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> mlist<span class="operator">&lt;-</span> <span class="built_in">list</span><span class="punctuation">(</span>a<span class="punctuation">,</span>b<span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">,</span>d<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> mlist</span><br><span class="line"><span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span>   <span class="number">13</span>   <span class="number">17</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span>   <span class="number">14</span>   <span class="number">18</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span>   <span class="number">15</span>   <span class="number">19</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span>   <span class="number">16</span>   <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line">Mazda RX4           <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Mazda RX4 Wag       <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Datsun <span class="number">710</span>          <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">...</span><br><span class="line">Ferrari Dino        <span class="number">19.7</span>   <span class="number">6</span> <span class="number">145.0</span> <span class="number">175</span> <span class="number">3.62</span> <span class="number">2.770</span> <span class="number">15.50</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line">Maserati Bora       <span class="number">15.0</span>   <span class="number">8</span> <span class="number">301.0</span> <span class="number">335</span> <span class="number">3.54</span> <span class="number">3.570</span> <span class="number">14.60</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line">Volvo <span class="number">142</span>E          <span class="number">21.4</span>   <span class="number">4</span> <span class="number">121.0</span> <span class="number">109</span> <span class="number">4.11</span> <span class="number">2.780</span> <span class="number">18.60</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">4</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;This is a test list&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> mlist <span class="operator">&lt;-</span> <span class="built_in">list</span><span class="punctuation">(</span>first<span class="operator">=</span>a<span class="punctuation">,</span>second<span class="operator">=</span>b<span class="punctuation">,</span>third<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">,</span>forth<span class="operator">=</span>d<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> mlist</span><br><span class="line"><span class="operator">$</span>first</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>second</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span>   <span class="number">13</span>   <span class="number">17</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span>   <span class="number">14</span>   <span class="number">18</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span>   <span class="number">15</span>   <span class="number">19</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span>   <span class="number">16</span>   <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>third</span><br><span class="line">                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line">Mazda RX4           <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Mazda RX4 Wag       <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Datsun <span class="number">710</span>          <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">...</span><br><span class="line">Ferrari Dino        <span class="number">19.7</span>   <span class="number">6</span> <span class="number">145.0</span> <span class="number">175</span> <span class="number">3.62</span> <span class="number">2.770</span> <span class="number">15.50</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line">Maserati Bora       <span class="number">15.0</span>   <span class="number">8</span> <span class="number">301.0</span> <span class="number">335</span> <span class="number">3.54</span> <span class="number">3.570</span> <span class="number">14.60</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line">Volvo <span class="number">142</span>E          <span class="number">21.4</span>   <span class="number">4</span> <span class="number">121.0</span> <span class="number">109</span> <span class="number">4.11</span> <span class="number">2.780</span> <span class="number">18.60</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>forth</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;This is a test list&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> mlist<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">$</span>first</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> mlist<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">$</span>first</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>forth</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;This is a test list&quot;</span></span><br></pre></td></tr></table></figure><p>总结：可以通过以上的方式进行命名，并根据需要输出相关内容。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> state.center<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;x&quot;</span><span class="punctuation">,</span><span class="string">&quot;y&quot;</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">$</span>x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="operator">-</span><span class="number">86.7509</span> <span class="operator">-</span><span class="number">127.2500</span> <span class="operator">-</span><span class="number">111.6250</span>  <span class="operator">-</span><span class="number">92.2992</span> <span class="operator">-</span><span class="number">119.7730</span> <span class="operator">-</span><span class="number">105.5130</span>  <span class="operator">-</span><span class="number">72.3573</span>  <span class="operator">-</span><span class="number">74.9841</span>  <span class="operator">-</span><span class="number">81.6850</span>  <span class="operator">-</span><span class="number">83.3736</span> <span class="operator">-</span><span class="number">126.2500</span> <span class="operator">-</span><span class="number">113.9300</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">13</span><span class="punctuation">]</span>  <span class="operator">-</span><span class="number">89.3776</span>  <span class="operator">-</span><span class="number">86.0808</span>  <span class="operator">-</span><span class="number">93.3714</span>  <span class="operator">-</span><span class="number">98.1156</span>  <span class="operator">-</span><span class="number">84.7674</span>  <span class="operator">-</span><span class="number">92.2724</span>  <span class="operator">-</span><span class="number">68.9801</span>  <span class="operator">-</span><span class="number">76.6459</span>  <span class="operator">-</span><span class="number">71.5800</span>  <span class="operator">-</span><span class="number">84.6870</span>  <span class="operator">-</span><span class="number">94.6043</span>  <span class="operator">-</span><span class="number">89.8065</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">25</span><span class="punctuation">]</span>  <span class="operator">-</span><span class="number">92.5137</span> <span class="operator">-</span><span class="number">109.3200</span>  <span class="operator">-</span><span class="number">99.5898</span> <span class="operator">-</span><span class="number">116.8510</span>  <span class="operator">-</span><span class="number">71.3924</span>  <span class="operator">-</span><span class="number">74.2336</span> <span class="operator">-</span><span class="number">105.9420</span>  <span class="operator">-</span><span class="number">75.1449</span>  <span class="operator">-</span><span class="number">78.4686</span> <span class="operator">-</span><span class="number">100.0990</span>  <span class="operator">-</span><span class="number">82.5963</span>  <span class="operator">-</span><span class="number">97.1239</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">37</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">120.0680</span>  <span class="operator">-</span><span class="number">77.4500</span>  <span class="operator">-</span><span class="number">71.1244</span>  <span class="operator">-</span><span class="number">80.5056</span>  <span class="operator">-</span><span class="number">99.7238</span>  <span class="operator">-</span><span class="number">86.4560</span>  <span class="operator">-</span><span class="number">98.7857</span> <span class="operator">-</span><span class="number">111.3300</span>  <span class="operator">-</span><span class="number">72.5450</span>  <span class="operator">-</span><span class="number">78.2005</span> <span class="operator">-</span><span class="number">119.7460</span>  <span class="operator">-</span><span class="number">80.6665</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">49</span><span class="punctuation">]</span>  <span class="operator">-</span><span class="number">89.9941</span> <span class="operator">-</span><span class="number">107.2560</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>y</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">32.5901</span> <span class="number">49.2500</span> <span class="number">34.2192</span> <span class="number">34.7336</span> <span class="number">36.5341</span> <span class="number">38.6777</span> <span class="number">41.5928</span> <span class="number">38.6777</span> <span class="number">27.8744</span> <span class="number">32.3329</span> <span class="number">31.7500</span> <span class="number">43.5648</span> <span class="number">40.0495</span> <span class="number">40.0495</span> <span class="number">41.9358</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">16</span><span class="punctuation">]</span> <span class="number">38.4204</span> <span class="number">37.3915</span> <span class="number">30.6181</span> <span class="number">45.6226</span> <span class="number">39.2778</span> <span class="number">42.3645</span> <span class="number">43.1361</span> <span class="number">46.3943</span> <span class="number">32.6758</span> <span class="number">38.3347</span> <span class="number">46.8230</span> <span class="number">41.3356</span> <span class="number">39.1063</span> <span class="number">43.3934</span> <span class="number">39.9637</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">31</span><span class="punctuation">]</span> <span class="number">34.4764</span> <span class="number">43.1361</span> <span class="number">35.4195</span> <span class="number">47.2517</span> <span class="number">40.2210</span> <span class="number">35.5053</span> <span class="number">43.9078</span> <span class="number">40.9069</span> <span class="number">41.5928</span> <span class="number">33.6190</span> <span class="number">44.3365</span> <span class="number">35.6767</span> <span class="number">31.3897</span> <span class="number">39.1063</span> <span class="number">44.2508</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">46</span><span class="punctuation">]</span> <span class="number">37.5630</span> <span class="number">47.4231</span> <span class="number">38.4204</span> <span class="number">44.5937</span> <span class="number">43.0504</span></span><br></pre></td></tr></table></figure><p>总结：可以通过命名提取相应的列表</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mlist<span class="operator">$</span>first</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"> </span><br><span class="line"> <span class="operator">&gt;</span> mlist<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">$</span>first</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"> </span><br><span class="line"><span class="operator">&gt;</span> mlist<span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"> </span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>mlist<span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;integer&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>mlist<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;list&quot;</span></span><br></pre></td></tr></table></figure><p>总结：可以通过class查看数据类型，<code>mlist[1]</code>和<code>mlist[[1]]</code>是不同的数据类型。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mlist <span class="operator">&lt;-</span> mlist<span class="punctuation">[</span><span class="operator">-</span><span class="number">3</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> mlist</span><br><span class="line"><span class="operator">$</span>first</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>second</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span>   <span class="number">13</span>   <span class="number">17</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span>   <span class="number">14</span>   <span class="number">18</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span>   <span class="number">15</span>   <span class="number">19</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span>   <span class="number">16</span>   <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>forth</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;This is a test list&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> mlist<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> <span class="literal">NULL</span></span><br><span class="line"><span class="operator">&gt;</span> mlist</span><br><span class="line"><span class="operator">$</span>first</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>forth</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;This is a test list&quot;</span></span><br></pre></td></tr></table></figure><p>总结：可以通过负号去掉不需要的部分，然后赋值给自身，这样可以删除部分列表内容。或者给相应的列表置空。<code>first</code>、<code>second</code>和<code>forth</code>只是名称并不代表相应的顺序。</p><h3 id="2-6-数据框">2.6 数据框</h3><p>数据框是一种表格式的数据结构。数据框旨在模拟数据集，与其他统计软件如SAS或者SPSS中的数据集的概念一致。</p><p>数据集通常是由数据构成的一个矩形数组，行表示观测，列表示变量。不同的行业对于数据集的行和列的叫法不同。</p><p>数据框实际上是一个列表，列表中的元素是向量，这些向量构成数据框的列，每一列必须具有相同的长度，所以数据框是矩形结构，而且数据框的列必须命名。</p><p>矩阵和数据框：</p><ol><li>数据框形状上很像矩阵；</li><li>数据框是比较规则的列表；</li><li>矩阵必须为同一数据类型；</li><li>数据框每一列必须同一类型，每一行可以不同。</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> state <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>state.name<span class="punctuation">,</span>state.abb<span class="punctuation">,</span>state.region<span class="punctuation">,</span>state.x77<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> state</span><br></pre></td></tr></table></figure><p>总结：通过<code>data.frame</code>将向量组成数据框。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">state<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">state<span class="punctuation">[</span><span class="punctuation">,</span><span class="string">&quot;state.abb&quot;</span><span class="punctuation">]</span></span><br><span class="line">state<span class="punctuation">[</span><span class="string">&quot;Alabama&quot;</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">state<span class="operator">$</span>state.abb</span><br></pre></td></tr></table></figure><p>总结：通过以上方式可以提取相关行或列中的数据。</p><p>示例：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> women</span><br><span class="line">   height weight</span><br><span class="line"><span class="number">1</span>      <span class="number">58</span>    <span class="number">115</span></span><br><span class="line"><span class="number">2</span>      <span class="number">59</span>    <span class="number">117</span></span><br><span class="line"><span class="number">3</span>      <span class="number">60</span>    <span class="number">120</span></span><br><span class="line"><span class="number">4</span>      <span class="number">61</span>    <span class="number">123</span></span><br><span class="line"><span class="number">5</span>      <span class="number">62</span>    <span class="number">126</span></span><br><span class="line"><span class="number">6</span>      <span class="number">63</span>    <span class="number">129</span></span><br><span class="line"><span class="number">7</span>      <span class="number">64</span>    <span class="number">132</span></span><br><span class="line"><span class="number">8</span>      <span class="number">65</span>    <span class="number">135</span></span><br><span class="line"><span class="number">9</span>      <span class="number">66</span>    <span class="number">139</span></span><br><span class="line"><span class="number">10</span>     <span class="number">67</span>    <span class="number">142</span></span><br><span class="line"><span class="number">11</span>     <span class="number">68</span>    <span class="number">146</span></span><br><span class="line"><span class="number">12</span>     <span class="number">69</span>    <span class="number">150</span></span><br><span class="line"><span class="number">13</span>     <span class="number">70</span>    <span class="number">154</span></span><br><span class="line"><span class="number">14</span>     <span class="number">71</span>    <span class="number">159</span></span><br><span class="line"><span class="number">15</span>     <span class="number">72</span>    <span class="number">164</span></span><br><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>women<span class="operator">$</span>height<span class="punctuation">,</span>women<span class="operator">$</span>weight<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/yCSWdJP6ghZiDUr.png" alt="image-20220806162002083"></p><p>在<code>lm</code>函数进行线性回归的时候，直接给出列名即可：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> lm<span class="punctuation">(</span>height<span class="operator">~</span>weight<span class="punctuation">,</span>data <span class="operator">=</span> women<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> height <span class="operator">~</span> weight<span class="punctuation">,</span> data <span class="operator">=</span> women<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>       weight  </span><br><span class="line">    <span class="number">25.7235</span>       <span class="number">0.2872</span>  </span><br></pre></td></tr></table></figure><p>R语言中提供了<code>attach</code>函数，将数据框加载到搜索框中，不需要再使用<code>$</code>符号，直接输入列的名字即可：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> attach<span class="punctuation">(</span>mtcars<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> mpg</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">21.0</span> <span class="number">21.0</span> <span class="number">22.8</span> <span class="number">21.4</span> <span class="number">18.7</span> <span class="number">18.1</span> <span class="number">14.3</span> <span class="number">24.4</span> <span class="number">22.8</span> <span class="number">19.2</span> <span class="number">17.8</span> <span class="number">16.4</span> <span class="number">17.3</span> <span class="number">15.2</span> <span class="number">10.4</span> <span class="number">10.4</span> <span class="number">14.7</span> <span class="number">32.4</span> <span class="number">30.4</span> <span class="number">33.9</span> <span class="number">21.5</span> <span class="number">15.5</span> <span class="number">15.2</span> <span class="number">13.3</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">25</span><span class="punctuation">]</span> <span class="number">19.2</span> <span class="number">27.3</span> <span class="number">26.0</span> <span class="number">30.4</span> <span class="number">15.8</span> <span class="number">19.7</span> <span class="number">15.0</span> <span class="number">21.4</span></span><br><span class="line"><span class="operator">&gt;</span> colnames<span class="punctuation">(</span>mtcars<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;mpg&quot;</span>  <span class="string">&quot;cyl&quot;</span>  <span class="string">&quot;disp&quot;</span> <span class="string">&quot;hp&quot;</span>   <span class="string">&quot;drat&quot;</span> <span class="string">&quot;wt&quot;</span>   <span class="string">&quot;qsec&quot;</span> <span class="string">&quot;vs&quot;</span>   <span class="string">&quot;am&quot;</span>   <span class="string">&quot;gear&quot;</span> <span class="string">&quot;carb&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> rownames<span class="punctuation">(</span>mtcars<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Mazda RX4&quot;</span>           <span class="string">&quot;Mazda RX4 Wag&quot;</span>       <span class="string">&quot;Datsun 710&quot;</span>          <span class="string">&quot;Hornet 4 Drive&quot;</span>      <span class="string">&quot;Hornet Sportabout&quot;</span>  </span><br><span class="line"> <span class="punctuation">[</span><span class="number">6</span><span class="punctuation">]</span> <span class="string">&quot;Valiant&quot;</span>             <span class="string">&quot;Duster 360&quot;</span>          <span class="string">&quot;Merc 240D&quot;</span>           <span class="string">&quot;Merc 230&quot;</span>            <span class="string">&quot;Merc 280&quot;</span>           </span><br><span class="line"><span class="punctuation">[</span><span class="number">11</span><span class="punctuation">]</span> <span class="string">&quot;Merc 280C&quot;</span>           <span class="string">&quot;Merc 450SE&quot;</span>          <span class="string">&quot;Merc 450SL&quot;</span>          <span class="string">&quot;Merc 450SLC&quot;</span>         <span class="string">&quot;Cadillac Fleetwood&quot;</span> </span><br><span class="line"><span class="punctuation">[</span><span class="number">16</span><span class="punctuation">]</span> <span class="string">&quot;Lincoln Continental&quot;</span> <span class="string">&quot;Chrysler Imperial&quot;</span>   <span class="string">&quot;Fiat 128&quot;</span>            <span class="string">&quot;Honda Civic&quot;</span>         <span class="string">&quot;Toyota Corolla&quot;</span>     </span><br><span class="line"><span class="punctuation">[</span><span class="number">21</span><span class="punctuation">]</span> <span class="string">&quot;Toyota Corona&quot;</span>       <span class="string">&quot;Dodge Challenger&quot;</span>    <span class="string">&quot;AMC Javelin&quot;</span>         <span class="string">&quot;Camaro Z28&quot;</span>          <span class="string">&quot;Pontiac Firebird&quot;</span>   </span><br><span class="line"><span class="punctuation">[</span><span class="number">26</span><span class="punctuation">]</span> <span class="string">&quot;Fiat X1-9&quot;</span>           <span class="string">&quot;Porsche 914-2&quot;</span>       <span class="string">&quot;Lotus Europa&quot;</span>        <span class="string">&quot;Ford Pantera L&quot;</span>      <span class="string">&quot;Ferrari Dino&quot;</span>       </span><br><span class="line"><span class="punctuation">[</span><span class="number">31</span><span class="punctuation">]</span> <span class="string">&quot;Maserati Bora&quot;</span>       <span class="string">&quot;Volvo 142E&quot;</span> </span><br><span class="line"><span class="operator">&gt;</span> detach<span class="punctuation">(</span>mtcars<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>也可以使用<code>with</code>实现数据集的调用：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> with<span class="punctuation">(</span>mtcars<span class="punctuation">,</span><span class="punctuation">&#123;</span>hp<span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">110</span> <span class="number">110</span>  <span class="number">93</span> <span class="number">110</span> <span class="number">175</span> <span class="number">105</span> <span class="number">245</span>  <span class="number">62</span>  <span class="number">95</span> <span class="number">123</span> <span class="number">123</span> <span class="number">180</span> <span class="number">180</span> <span class="number">180</span> <span class="number">205</span> <span class="number">215</span> <span class="number">230</span>  <span class="number">66</span>  <span class="number">52</span>  <span class="number">65</span>  <span class="number">97</span> <span class="number">150</span> <span class="number">150</span> <span class="number">245</span> <span class="number">175</span>  <span class="number">66</span>  <span class="number">91</span> <span class="number">113</span> <span class="number">264</span> <span class="number">175</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">31</span><span class="punctuation">]</span> <span class="number">335</span> <span class="number">109</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> with<span class="punctuation">(</span>mtcars<span class="punctuation">,</span><span class="punctuation">&#123;</span>mpg<span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">21.0</span> <span class="number">21.0</span> <span class="number">22.8</span> <span class="number">21.4</span> <span class="number">18.7</span> <span class="number">18.1</span> <span class="number">14.3</span> <span class="number">24.4</span> <span class="number">22.8</span> <span class="number">19.2</span> <span class="number">17.8</span> <span class="number">16.4</span> <span class="number">17.3</span> <span class="number">15.2</span> <span class="number">10.4</span> <span class="number">10.4</span> <span class="number">14.7</span> <span class="number">32.4</span> <span class="number">30.4</span> <span class="number">33.9</span> <span class="number">21.5</span> <span class="number">15.5</span> <span class="number">15.2</span> <span class="number">13.3</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">25</span><span class="punctuation">]</span> <span class="number">19.2</span> <span class="number">27.3</span> <span class="number">26.0</span> <span class="number">30.4</span> <span class="number">15.8</span> <span class="number">19.7</span> <span class="number">15.0</span> <span class="number">21.4</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> with<span class="punctuation">(</span>mtcars<span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="built_in">sum</span><span class="punctuation">(</span>mpg<span class="punctuation">)</span><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">642.9</span></span><br></pre></td></tr></table></figure><p>单双中括号的区别：</p><p><img src="https://vip2.loli.io/2023/03/13/XIzQDip8whylaev.png" alt="image-20220806163817291"></p><h3 id="2-7-因子">2.7 因子</h3><p>变量分类：</p><ol><li>名义型变量</li><li>有序型变量</li><li>连续型变量</li></ol><p>因子：在R中名义型变量和有序型变量称为因子，factor。这些分类变量的可能值成为一个水平，level，例如good、better、better，都称为一个level。由这些水平值构成的向量就称为因子。因子本身也是一个向量，一个集合，只不过里面的元素可以用来分类。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mtcars</span><br><span class="line">                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line">Mazda RX4           <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Mazda RX4 Wag       <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Datsun <span class="number">710</span>          <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">...</span><br><span class="line">Ferrari Dino        <span class="number">19.7</span>   <span class="number">6</span> <span class="number">145.0</span> <span class="number">175</span> <span class="number">3.62</span> <span class="number">2.770</span> <span class="number">15.50</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line">Maserati Bora       <span class="number">15.0</span>   <span class="number">8</span> <span class="number">301.0</span> <span class="number">335</span> <span class="number">3.54</span> <span class="number">3.570</span> <span class="number">14.60</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line">Volvo <span class="number">142</span>E          <span class="number">21.4</span>   <span class="number">4</span> <span class="number">121.0</span> <span class="number">109</span> <span class="number">4.11</span> <span class="number">2.780</span> <span class="number">18.60</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> mtcars<span class="operator">$</span>cyl</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">6</span> <span class="number">6</span> <span class="number">4</span> <span class="number">6</span> <span class="number">8</span> <span class="number">6</span> <span class="number">8</span> <span class="number">4</span> <span class="number">4</span> <span class="number">6</span> <span class="number">6</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">8</span> <span class="number">6</span> <span class="number">8</span> <span class="number">4</span></span><br><span class="line"><span class="operator">&gt;</span> table<span class="punctuation">(</span>mtcars<span class="operator">$</span>cyl<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"> <span class="number">4</span>  <span class="number">6</span>  <span class="number">8</span> </span><br><span class="line"><span class="number">11</span>  <span class="number">7</span> <span class="number">14</span> </span><br><span class="line"><span class="operator">&gt;</span> table<span class="punctuation">(</span>mtcars<span class="operator">$</span>am<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"> <span class="number">0</span>  <span class="number">1</span> </span><br><span class="line"><span class="number">19</span> <span class="number">13</span> </span><br></pre></td></tr></table></figure><p>总结：上面的4、6、8并不是因子，而是<code>cyl</code>这一列可以当作因子类型来处理，4、6或8为一个level。使用<code>table</code>函数进行频数统计。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> f <span class="operator">&lt;-</span> factor<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;red&quot;</span><span class="punctuation">,</span><span class="string">&quot;red&quot;</span><span class="punctuation">,</span><span class="string">&quot;green&quot;</span><span class="punctuation">,</span><span class="string">&quot;blue&quot;</span><span class="punctuation">,</span><span class="string">&quot;green&quot;</span><span class="punctuation">,</span><span class="string">&quot;blue&quot;</span><span class="punctuation">,</span><span class="string">&quot;blue&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> f</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> red   red   green blue  green blue  blue </span><br><span class="line">Levels<span class="operator">:</span> blue green red</span><br><span class="line"><span class="operator">&gt;</span> week <span class="operator">&lt;-</span> factor<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Mon&quot;</span><span class="punctuation">,</span><span class="string">&quot;Fri&quot;</span><span class="punctuation">,</span><span class="string">&quot;Thu&quot;</span><span class="punctuation">,</span><span class="string">&quot;Wed&quot;</span><span class="punctuation">,</span><span class="string">&quot;Mon&quot;</span><span class="punctuation">,</span><span class="string">&quot;Fri&quot;</span><span class="punctuation">,</span><span class="string">&quot;Sun&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> week</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> Mon Fri Thu Wed Mon Fri Sun</span><br><span class="line">Levels<span class="operator">:</span> Fri Mon Sun Thu Wed</span><br><span class="line"><span class="operator">&gt;</span> week <span class="operator">&lt;-</span> factor<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Mon&quot;</span><span class="punctuation">,</span><span class="string">&quot;Fri&quot;</span><span class="punctuation">,</span><span class="string">&quot;Thu&quot;</span><span class="punctuation">,</span><span class="string">&quot;Wed&quot;</span><span class="punctuation">,</span><span class="string">&quot;Mon&quot;</span><span class="punctuation">,</span><span class="string">&quot;Fri&quot;</span><span class="punctuation">,</span><span class="string">&quot;Sun&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span>ordered <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">,</span>levels <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Mon&quot;</span><span class="punctuation">,</span><span class="string">&quot;Tue&quot;</span><span class="punctuation">,</span><span class="string">&quot;Wed&quot;</span><span class="punctuation">,</span><span class="string">&quot;Thu&quot;</span><span class="punctuation">,</span><span class="string">&quot;Fri&quot;</span><span class="punctuation">,</span><span class="string">&quot;Sat&quot;</span><span class="punctuation">,</span><span class="string">&quot;Sun&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> week</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> Mon Fri Thu Wed Mon Fri Sun</span><br><span class="line">Levels<span class="operator">:</span> Mon <span class="operator">&lt;</span> Tue <span class="operator">&lt;</span> Wed <span class="operator">&lt;</span> Thu <span class="operator">&lt;</span> Fri <span class="operator">&lt;</span> Sat <span class="operator">&lt;</span> Sun</span><br><span class="line"><span class="operator">&gt;</span> fcyl <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>mtcars<span class="operator">$</span>cyl<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fcyl</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">6</span> <span class="number">6</span> <span class="number">4</span> <span class="number">6</span> <span class="number">8</span> <span class="number">6</span> <span class="number">8</span> <span class="number">4</span> <span class="number">4</span> <span class="number">6</span> <span class="number">6</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">8</span> <span class="number">6</span> <span class="number">8</span> <span class="number">4</span></span><br><span class="line">Levels<span class="operator">:</span> <span class="number">4</span> <span class="number">6</span> <span class="number">8</span></span><br><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>mtcars<span class="operator">$</span>cyl<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>factor<span class="punctuation">(</span>mtcars<span class="operator">$</span>cyl<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>总结：可以通过factor创建因子类型。有序型变量也可以作为因子。<code>fcyl &lt;- factor(mtcars$cyl)</code>可以将<code>cyl</code>向量变为因子。向量输出的是散点图，而因子输出的是条形图。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> num <span class="operator">&lt;-</span> 1<span class="operator">:</span><span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> num</span><br><span class="line">  <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">31</span><span class="punctuation">]</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span>  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span>  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">61</span><span class="punctuation">]</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span>  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">91</span><span class="punctuation">]</span>  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span></span><br><span class="line"> </span><br><span class="line"><span class="operator">&gt;</span> cut<span class="punctuation">(</span>num<span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span>seq<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span>   <span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span>   <span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span>   <span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span>   <span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span>   <span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span>   <span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span>   <span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span>   <span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span>   <span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span>   <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> </span><br><span class="line"> <span class="punctuation">[</span><span class="number">14</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> </span><br><span class="line"> <span class="punctuation">[</span><span class="number">27</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span> </span><br><span class="line"> <span class="punctuation">[</span><span class="number">40</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">50</span><span class="punctuation">,</span><span class="number">60</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">50</span><span class="punctuation">,</span><span class="number">60</span><span class="punctuation">]</span> </span><br><span class="line"> <span class="punctuation">[</span><span class="number">53</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">50</span><span class="punctuation">,</span><span class="number">60</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">50</span><span class="punctuation">,</span><span class="number">60</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">50</span><span class="punctuation">,</span><span class="number">60</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">50</span><span class="punctuation">,</span><span class="number">60</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">50</span><span class="punctuation">,</span><span class="number">60</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">50</span><span class="punctuation">,</span><span class="number">60</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">50</span><span class="punctuation">,</span><span class="number">60</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">50</span><span class="punctuation">,</span><span class="number">60</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">60</span><span class="punctuation">,</span><span class="number">70</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">60</span><span class="punctuation">,</span><span class="number">70</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">60</span><span class="punctuation">,</span><span class="number">70</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">60</span><span class="punctuation">,</span><span class="number">70</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">60</span><span class="punctuation">,</span><span class="number">70</span><span class="punctuation">]</span> </span><br><span class="line"> <span class="punctuation">[</span><span class="number">66</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">60</span><span class="punctuation">,</span><span class="number">70</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">60</span><span class="punctuation">,</span><span class="number">70</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">60</span><span class="punctuation">,</span><span class="number">70</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">60</span><span class="punctuation">,</span><span class="number">70</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">60</span><span class="punctuation">,</span><span class="number">70</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">70</span><span class="punctuation">,</span><span class="number">80</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">70</span><span class="punctuation">,</span><span class="number">80</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">70</span><span class="punctuation">,</span><span class="number">80</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">70</span><span class="punctuation">,</span><span class="number">80</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">70</span><span class="punctuation">,</span><span class="number">80</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">70</span><span class="punctuation">,</span><span class="number">80</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">70</span><span class="punctuation">,</span><span class="number">80</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">70</span><span class="punctuation">,</span><span class="number">80</span><span class="punctuation">]</span> </span><br><span class="line"> <span class="punctuation">[</span><span class="number">79</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">70</span><span class="punctuation">,</span><span class="number">80</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">70</span><span class="punctuation">,</span><span class="number">80</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">80</span><span class="punctuation">,</span><span class="number">90</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">80</span><span class="punctuation">,</span><span class="number">90</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">80</span><span class="punctuation">,</span><span class="number">90</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">80</span><span class="punctuation">,</span><span class="number">90</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">80</span><span class="punctuation">,</span><span class="number">90</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">80</span><span class="punctuation">,</span><span class="number">90</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">80</span><span class="punctuation">,</span><span class="number">90</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">80</span><span class="punctuation">,</span><span class="number">90</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">80</span><span class="punctuation">,</span><span class="number">90</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">80</span><span class="punctuation">,</span><span class="number">90</span><span class="punctuation">]</span>  <span class="punctuation">(</span><span class="number">90</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">92</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">90</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">90</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">90</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">90</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">90</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">90</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">90</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">90</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">90</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">]</span></span><br><span class="line">Levels<span class="operator">:</span> <span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">50</span><span class="punctuation">,</span><span class="number">60</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">60</span><span class="punctuation">,</span><span class="number">70</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">70</span><span class="punctuation">,</span><span class="number">80</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">80</span><span class="punctuation">,</span><span class="number">90</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">90</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>cut<span class="punctuation">(</span>num<span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span>seq<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">100</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;factor&quot;</span></span><br></pre></td></tr></table></figure><p>通过<code>cut</code>可以统计每个区间分别有多少。</p><h3 id="2-8-缺失数据">2.8 缺失数据</h3><p>缺失数据的分类</p><p>统计学家通常将缺失数据分为三类。它们都用概率术语进行描述，但思想都非常直观。我们将用sleep研究中对做梦时长的测量（有12个动物有缺失值）来依次阐述三种类型。</p><ol><li>完全随机缺失若某变量的缺失数据与其他任何观测或未观测变量都不相关，则数据为完全随机缺失（MCAR）。若12个动物的做梦时长值缺失不是由于系统原因，那么可认为数据是MCAR。注意，如果每个有缺失值的变量都是MCAR，那么可以将数据完整的实例看做是对更大数据集的一个简单随机抽样。</li><li>随机缺失若某变量上的缺失数据与其他观测变量相关，与它自己的未观测值不相关，则数据为随机缺失（MAR）。例如，体重较小的动物更可能有做梦时长的缺失值（可能因为较小的动物较难观察），“缺失”与动物的做梦时长无关，那么该数据就可以认为是MAR。<br>此时，一旦你控制了体重变量，做梦时长数据的缺失与出现将是随机的。</li><li>非随机缺失若缺失数据不属于MCAR或MAR，则数据为非随机缺失（NMAR）。例如，做梦时长越短的动物也更可能有做梦数据的缺失（可能由于难以测量时长较短的事件），那么数据可认为是NMAR。</li></ol><p>为何会出现缺失数据：</p><ol><li>机器断电，设备故障导致某个测量值发生了丢失。</li><li>测量根本没有发生，例如在做调查问卷时，有些问题没有回答，或者有些问题是无效回答等。</li></ol><p>缺失值NA</p><p>在R中，NA代表缺失值，NA是不可用，not available的简称，用来存储缺失信息。</p><p>这里缺失值NA表示没有，但注意没有并不一定就是0，NA是不知道是多少，也能是0，也可能是任何值，缺失值和值为0是完全不同的。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="number">1</span><span class="operator">+</span><span class="literal">NA</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">NA</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="literal">NA</span><span class="operator">==</span><span class="number">0</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">NA</span></span><br></pre></td></tr></table></figure><p>在运行中NA的处理：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> a <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="literal">NA</span><span class="punctuation">,</span><span class="number">1</span><span class="operator">:</span><span class="number">49</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> a</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">NA</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span> <span class="number">21</span> <span class="number">22</span> <span class="number">23</span> <span class="number">24</span> <span class="number">25</span> <span class="number">26</span> <span class="number">27</span> <span class="number">28</span> <span class="number">29</span> <span class="number">30</span> <span class="number">31</span> <span class="number">32</span> <span class="number">33</span> <span class="number">34</span> <span class="number">35</span> <span class="number">36</span> <span class="number">37</span> <span class="number">38</span> <span class="number">39</span> <span class="number">40</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">42</span><span class="punctuation">]</span> <span class="number">41</span> <span class="number">42</span> <span class="number">43</span> <span class="number">44</span> <span class="number">45</span> <span class="number">46</span> <span class="number">47</span> <span class="number">48</span> <span class="number">49</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">sum</span><span class="punctuation">(</span>a<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">NA</span></span><br><span class="line"><span class="operator">&gt;</span> mean<span class="punctuation">(</span>a<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">NA</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">sum</span><span class="punctuation">(</span>a<span class="punctuation">,</span>na.rm <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1225</span></span><br><span class="line"><span class="operator">&gt;</span> mean<span class="punctuation">(</span>a<span class="punctuation">,</span>na.rm <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">25</span></span><br><span class="line"><span class="operator">&gt;</span> mean<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">49</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">25</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">is.na</span><span class="punctuation">(</span>a<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">21</span><span class="punctuation">]</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">41</span><span class="punctuation">]</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></span><br></pre></td></tr></table></figure><p>总结：可以通过<code>na.rm</code>将NA进行剔除，剔除后，不会将NA的位置保留进行计算。通过<code>is.na</code>判断是否存在NA。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="built_in">c</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">NA</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span> <span class="literal">NA</span> <span class="literal">NA</span></span><br><span class="line"> </span><br><span class="line"><span class="operator">&gt;</span> d <span class="operator">&lt;-</span> na.omit<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> d</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></span><br><span class="line"><span class="built_in">attr</span><span class="punctuation">(</span><span class="punctuation">,</span><span class="string">&quot;na.action&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span> <span class="number">22</span> <span class="number">23</span></span><br><span class="line"><span class="built_in">attr</span><span class="punctuation">(</span><span class="punctuation">,</span><span class="string">&quot;class&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;omit&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">is.na</span><span class="punctuation">(</span>d<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></span><br><span class="line"> </span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">sum</span><span class="punctuation">(</span>d<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">210</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> mean<span class="punctuation">(</span>d<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">10.5</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> na.omit<span class="punctuation">(</span>sleep<span class="punctuation">)</span></span><br><span class="line">    BodyWgt BrainWgt NonD Dream Sleep  Span  Gest Pred Exp Danger</span><br><span class="line"><span class="number">2</span>     <span class="number">1.000</span>     <span class="number">6.60</span>  <span class="number">6.3</span>   <span class="number">2.0</span>   <span class="number">8.3</span>   <span class="number">4.5</span>  <span class="number">42.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">3</span></span><br><span class="line"><span class="number">5</span>  <span class="number">2547.000</span>  <span class="number">4603.00</span>  <span class="number">2.1</span>   <span class="number">1.8</span>   <span class="number">3.9</span>  <span class="number">69.0</span> <span class="number">624.0</span>    <span class="number">3</span>   <span class="number">5</span>      <span class="number">4</span></span><br><span class="line"><span class="number">6</span>    <span class="number">10.550</span>   <span class="number">179.50</span>  <span class="number">9.1</span>   <span class="number">0.7</span>   <span class="number">9.8</span>  <span class="number">27.0</span> <span class="number">180.0</span>    <span class="number">4</span>   <span class="number">4</span>      <span class="number">4</span></span><br><span class="line"><span class="number">7</span>     <span class="number">0.023</span>     <span class="number">0.30</span> <span class="number">15.8</span>   <span class="number">3.9</span>  <span class="number">19.7</span>  <span class="number">19.0</span>  <span class="number">35.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></span><br><span class="line"><span class="number">8</span>   <span class="number">160.000</span>   <span class="number">169.00</span>  <span class="number">5.2</span>   <span class="number">1.0</span>   <span class="number">6.2</span>  <span class="number">30.4</span> <span class="number">392.0</span>    <span class="number">4</span>   <span class="number">5</span>      <span class="number">4</span></span><br><span class="line">...</span><br><span class="line"><span class="number">57</span>    <span class="number">0.900</span>     <span class="number">2.60</span> <span class="number">11.0</span>   <span class="number">2.3</span>  <span class="number">13.3</span>   <span class="number">4.5</span>  <span class="number">60.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">2</span></span><br><span class="line"><span class="number">58</span>    <span class="number">2.000</span>    <span class="number">12.30</span>  <span class="number">4.9</span>   <span class="number">0.5</span>   <span class="number">5.4</span>   <span class="number">7.5</span> <span class="number">200.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">3</span></span><br><span class="line"><span class="number">59</span>    <span class="number">0.104</span>     <span class="number">2.50</span> <span class="number">13.2</span>   <span class="number">2.6</span>  <span class="number">15.8</span>   <span class="number">2.3</span>  <span class="number">46.0</span>    <span class="number">3</span>   <span class="number">2</span>      <span class="number">2</span></span><br><span class="line"><span class="number">60</span>    <span class="number">4.190</span>    <span class="number">58.00</span>  <span class="number">9.7</span>   <span class="number">0.6</span>  <span class="number">10.3</span>  <span class="number">24.0</span> <span class="number">210.0</span>    <span class="number">4</span>   <span class="number">3</span>      <span class="number">4</span></span><br><span class="line"><span class="number">61</span>    <span class="number">3.500</span>     <span class="number">3.90</span> <span class="number">12.8</span>   <span class="number">6.6</span>  <span class="number">19.4</span>   <span class="number">3.0</span>  <span class="number">14.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">1</span></span><br></pre></td></tr></table></figure><p>总结：可以通过<code>na.omit(sleep)</code>将数据框中的NA对应的这一行的数据删除。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="built_in">length</span><span class="punctuation">(</span>rownames<span class="punctuation">(</span>sleep<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">62</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">length</span><span class="punctuation">(</span>rownames<span class="punctuation">(</span>na.omit<span class="punctuation">(</span>sleep<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">42</span></span><br></pre></td></tr></table></figure><p>但是这样也会出现问题，比如NA占据的行数有一半，则会导致大量数据丢失，影响分析结果。</p><p>R提供了多种处理缺失值的方法：</p><p><img src="https://vip2.loli.io/2023/03/13/XP1x2LVI4KEhmqC.png" alt="image-20220806180034271"></p><p>其他缺失数据：</p><ol><li>缺失数据NaN，代表不可能的值；</li><li>Inf代表无穷，分为正无穷Inf和负无穷-Inf，代表无穷大或者无穷小。</li></ol><p>不同缺失值之间的差别：</p><ol><li>NA是存在的值，但是不知道是多少；</li><li>NaN是不存在的；</li><li>Inf存在，是无穷大或者无穷小，但是表示不可能的值。</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="number">1</span><span class="operator">/</span><span class="number">0</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">Inf</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="operator">-</span><span class="number">1</span><span class="operator">/</span><span class="number">0</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="operator">-</span><span class="literal">Inf</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="number">0</span><span class="operator">/</span><span class="number">0</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">NaN</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">is.nan</span><span class="punctuation">(</span><span class="number">0</span><span class="operator">/</span><span class="number">0</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">TRUE</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">is.infinite</span><span class="punctuation">(</span><span class="number">1</span><span class="operator">/</span><span class="number">0</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">TRUE</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">is.infinite</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">1</span><span class="operator">/</span><span class="number">0</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">TRUE</span></span><br></pre></td></tr></table></figure><h3 id="2-9-字符串">2.9 字符串</h3><p>R语言支持正则表达式，正则表达式如下：</p><p><img src="https://vip2.loli.io/2023/03/13/kiVJt3FIcszSBga.png" alt="image-20220806190036731"></p><p>下面介绍处理字符串的函数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> nchar<span class="punctuation">(</span><span class="string">&quot;hello world&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">11</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">month.name</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;January&quot;</span>   <span class="string">&quot;February&quot;</span>  <span class="string">&quot;March&quot;</span>     <span class="string">&quot;April&quot;</span>     <span class="string">&quot;May&quot;</span>       <span class="string">&quot;June&quot;</span>      <span class="string">&quot;July&quot;</span>      <span class="string">&quot;August&quot;</span>    <span class="string">&quot;September&quot;</span> <span class="string">&quot;October&quot;</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">11</span><span class="punctuation">]</span> <span class="string">&quot;November&quot;</span>  <span class="string">&quot;December&quot;</span> </span><br><span class="line"><span class="operator">&gt;</span> nchar<span class="punctuation">(</span><span class="built_in">month.name</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">7</span> <span class="number">8</span> <span class="number">5</span> <span class="number">5</span> <span class="number">3</span> <span class="number">4</span> <span class="number">4</span> <span class="number">6</span> <span class="number">9</span> <span class="number">7</span> <span class="number">8</span> <span class="number">8</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">length</span><span class="punctuation">(</span><span class="built_in">month.name</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">12</span></span><br><span class="line"><span class="operator">&gt;</span> nchar<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">12</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">345</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">2</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> paste<span class="punctuation">(</span><span class="string">&quot;Everybody&quot;</span><span class="punctuation">,</span><span class="string">&quot;loves&quot;</span><span class="punctuation">,</span><span class="string">&quot;stats&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Everybody loves stats&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> paste<span class="punctuation">(</span><span class="string">&quot;Everybody&quot;</span><span class="punctuation">,</span><span class="string">&quot;loves&quot;</span><span class="punctuation">,</span><span class="string">&quot;stats&quot;</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;-&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Everybody-loves-stats&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">names</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Moe&quot;</span><span class="punctuation">,</span><span class="string">&quot;Larry&quot;</span><span class="punctuation">,</span><span class="string">&quot;Curly&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> paste<span class="punctuation">(</span><span class="built_in">names</span><span class="punctuation">,</span><span class="string">&quot;loves stats&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Moe loves stats&quot;</span>   <span class="string">&quot;Larry loves stats&quot;</span> <span class="string">&quot;Curly loves stats&quot;</span></span><br></pre></td></tr></table></figure><p>总结：<code>nchar</code>可以用来统计字符数，空格也算一个字符。<code>length</code>计算的是元素的个数，而<code>nchar</code>计算的是每个元素字符的长度。<code>paste</code>是将多个字符串连成一个字符串，通过空格进行连接，也可以通过<code>sep</code>设定连接符，也可以将多个字符串分别和某一个固定的字符串进行连接。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> substr<span class="punctuation">(</span>x <span class="operator">=</span> <span class="built_in">month.name</span><span class="punctuation">,</span>start <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span>stop <span class="operator">=</span> <span class="number">3</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Jan&quot;</span> <span class="string">&quot;Feb&quot;</span> <span class="string">&quot;Mar&quot;</span> <span class="string">&quot;Apr&quot;</span> <span class="string">&quot;May&quot;</span> <span class="string">&quot;Jun&quot;</span> <span class="string">&quot;Jul&quot;</span> <span class="string">&quot;Aug&quot;</span> <span class="string">&quot;Sep&quot;</span> <span class="string">&quot;Oct&quot;</span> <span class="string">&quot;Nov&quot;</span> <span class="string">&quot;Dec&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> temp <span class="operator">&lt;-</span> substr<span class="punctuation">(</span>x <span class="operator">=</span> <span class="built_in">month.name</span><span class="punctuation">,</span>start <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span>stop <span class="operator">=</span> <span class="number">3</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> toupper<span class="punctuation">(</span>temp<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;JAN&quot;</span> <span class="string">&quot;FEB&quot;</span> <span class="string">&quot;MAR&quot;</span> <span class="string">&quot;APR&quot;</span> <span class="string">&quot;MAY&quot;</span> <span class="string">&quot;JUN&quot;</span> <span class="string">&quot;JUL&quot;</span> <span class="string">&quot;AUG&quot;</span> <span class="string">&quot;SEP&quot;</span> <span class="string">&quot;OCT&quot;</span> <span class="string">&quot;NOV&quot;</span> <span class="string">&quot;DEC&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> tolower<span class="punctuation">(</span>temp<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;jan&quot;</span> <span class="string">&quot;feb&quot;</span> <span class="string">&quot;mar&quot;</span> <span class="string">&quot;apr&quot;</span> <span class="string">&quot;may&quot;</span> <span class="string">&quot;jun&quot;</span> <span class="string">&quot;jul&quot;</span> <span class="string">&quot;aug&quot;</span> <span class="string">&quot;sep&quot;</span> <span class="string">&quot;oct&quot;</span> <span class="string">&quot;nov&quot;</span> <span class="string">&quot;dec&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> gsub<span class="punctuation">(</span><span class="string">&quot;^(\\w)&quot;</span><span class="punctuation">,</span><span class="string">&quot;\\U\\1&quot;</span><span class="punctuation">,</span>tolower<span class="punctuation">(</span>temp<span class="punctuation">)</span><span class="punctuation">,</span>perl <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Jan&quot;</span> <span class="string">&quot;Feb&quot;</span> <span class="string">&quot;Mar&quot;</span> <span class="string">&quot;Apr&quot;</span> <span class="string">&quot;May&quot;</span> <span class="string">&quot;Jun&quot;</span> <span class="string">&quot;Jul&quot;</span> <span class="string">&quot;Aug&quot;</span> <span class="string">&quot;Sep&quot;</span> <span class="string">&quot;Oct&quot;</span> <span class="string">&quot;Nov&quot;</span> <span class="string">&quot;Dec&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> gsub<span class="punctuation">(</span><span class="string">&quot;^(\\w)&quot;</span><span class="punctuation">,</span><span class="string">&quot;\\L\\1&quot;</span><span class="punctuation">,</span>tolower<span class="punctuation">(</span>temp<span class="punctuation">)</span><span class="punctuation">,</span>perl <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;jan&quot;</span> <span class="string">&quot;feb&quot;</span> <span class="string">&quot;mar&quot;</span> <span class="string">&quot;apr&quot;</span> <span class="string">&quot;may&quot;</span> <span class="string">&quot;jun&quot;</span> <span class="string">&quot;jul&quot;</span> <span class="string">&quot;aug&quot;</span> <span class="string">&quot;sep&quot;</span> <span class="string">&quot;oct&quot;</span> <span class="string">&quot;nov&quot;</span> <span class="string">&quot;dec&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> gsub<span class="punctuation">(</span><span class="string">&quot;^(\\w)&quot;</span><span class="punctuation">,</span><span class="string">&quot;\\L\\1&quot;</span><span class="punctuation">,</span>toupper<span class="punctuation">(</span>temp<span class="punctuation">)</span><span class="punctuation">,</span>perl <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;jAN&quot;</span> <span class="string">&quot;fEB&quot;</span> <span class="string">&quot;mAR&quot;</span> <span class="string">&quot;aPR&quot;</span> <span class="string">&quot;mAY&quot;</span> <span class="string">&quot;jUN&quot;</span> <span class="string">&quot;jUL&quot;</span> <span class="string">&quot;aUG&quot;</span> <span class="string">&quot;sEP&quot;</span> <span class="string">&quot;oCT&quot;</span> <span class="string">&quot;nOV&quot;</span> <span class="string">&quot;dEC&quot;</span></span><br></pre></td></tr></table></figure><p>总结：字符串分隔符<code>substr</code>可以进行字符串分割，<code>sub</code>进行一次字符替换，而<code>gsub</code>可以进行全局替换，需要使用正则表达式进行操作。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;b&quot;</span><span class="punctuation">,</span><span class="string">&quot;A+&quot;</span><span class="punctuation">,</span><span class="string">&quot;AC&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;b&quot;</span>  <span class="string">&quot;A+&quot;</span> <span class="string">&quot;AC&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> grep<span class="punctuation">(</span><span class="string">&quot;A+&quot;</span><span class="punctuation">,</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> grep<span class="punctuation">(</span><span class="string">&quot;A+&quot;</span><span class="punctuation">,</span>x<span class="punctuation">,</span>fixed <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> grep<span class="punctuation">(</span><span class="string">&quot;A+&quot;</span><span class="punctuation">,</span>x<span class="punctuation">,</span>fixed <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">2</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>总结：<code>grep</code>可以用来查找字符串，如果<code>grep</code>参数中<code>fixed</code>为<code>T</code>，则不支持正则表达式，返回值为匹配的下标，<code>grep</code>支持正则表达式，如果<code>Fixed</code>为<code>F</code>，则支持正则表达式，其中<code>A+</code>中的<code>+</code>号表示所有字符。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;b&quot;</span><span class="punctuation">,</span><span class="string">&quot;A+&quot;</span><span class="punctuation">,</span><span class="string">&quot;AC&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;b&quot;</span>  <span class="string">&quot;A+&quot;</span> <span class="string">&quot;AC&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> match<span class="punctuation">(</span><span class="string">&quot;AC&quot;</span><span class="punctuation">,</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>总结：<code>match</code>也可以进行字符串匹配，但是不支持正则表达式，没有<code>grep</code>强大。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> path <span class="operator">&lt;-</span> <span class="string">&quot;/use/local/bin/R&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> strsplit<span class="punctuation">(</span>path<span class="punctuation">,</span><span class="string">&quot;/&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;&quot;</span>      <span class="string">&quot;use&quot;</span>   <span class="string">&quot;local&quot;</span> <span class="string">&quot;bin&quot;</span>   <span class="string">&quot;R&quot;</span>  </span><br><span class="line"><span class="operator">&gt;</span> strsplit<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span>path<span class="punctuation">,</span>path<span class="punctuation">)</span><span class="punctuation">,</span><span class="string">&quot;/&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;&quot;</span>      <span class="string">&quot;use&quot;</span>   <span class="string">&quot;local&quot;</span> <span class="string">&quot;bin&quot;</span>   <span class="string">&quot;R&quot;</span>    </span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;&quot;</span>      <span class="string">&quot;use&quot;</span>   <span class="string">&quot;local&quot;</span> <span class="string">&quot;bin&quot;</span>   <span class="string">&quot;R&quot;</span>    </span><br></pre></td></tr></table></figure><p>总结：<code>strsplit</code>为字符串分割函数，需要指定分隔符，在上面的例子中，分隔符为<code>/</code>。<code>strsplit</code>返回的值是一个列表而不是一个向量。可以同时处理分割多个字符串，也方便后面的处理。</p><p>许多函数都有<code>fixed</code>参数设置，表示是否支持正则表达式，使用正则表达式很方便进行处理。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">face <span class="operator">&lt;-</span> 1<span class="operator">:</span><span class="number">13</span></span><br><span class="line">suit <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;spades&quot;</span><span class="punctuation">,</span><span class="string">&quot;clubs&quot;</span><span class="punctuation">,</span><span class="string">&quot;hearts&quot;</span><span class="punctuation">,</span><span class="string">&quot;diamonds&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> outer<span class="punctuation">(</span>suit<span class="punctuation">,</span>face<span class="punctuation">,</span>FUN<span class="operator">=</span>paste<span class="punctuation">)</span></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">7</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">8</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">9</span><span class="punctuation">]</span>        </span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;spades 1&quot;</span>   <span class="string">&quot;spades 2&quot;</span>   <span class="string">&quot;spades 3&quot;</span>   <span class="string">&quot;spades 4&quot;</span>   <span class="string">&quot;spades 5&quot;</span>   <span class="string">&quot;spades 6&quot;</span>   <span class="string">&quot;spades 7&quot;</span>   <span class="string">&quot;spades 8&quot;</span>   <span class="string">&quot;spades 9&quot;</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;clubs 1&quot;</span>    <span class="string">&quot;clubs 2&quot;</span>    <span class="string">&quot;clubs 3&quot;</span>    <span class="string">&quot;clubs 4&quot;</span>    <span class="string">&quot;clubs 5&quot;</span>    <span class="string">&quot;clubs 6&quot;</span>    <span class="string">&quot;clubs 7&quot;</span>    <span class="string">&quot;clubs 8&quot;</span>    <span class="string">&quot;clubs 9&quot;</span>   </span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;hearts 1&quot;</span>   <span class="string">&quot;hearts 2&quot;</span>   <span class="string">&quot;hearts 3&quot;</span>   <span class="string">&quot;hearts 4&quot;</span>   <span class="string">&quot;hearts 5&quot;</span>   <span class="string">&quot;hearts 6&quot;</span>   <span class="string">&quot;hearts 7&quot;</span>   <span class="string">&quot;hearts 8&quot;</span>   <span class="string">&quot;hearts 9&quot;</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;diamonds 1&quot;</span> <span class="string">&quot;diamonds 2&quot;</span> <span class="string">&quot;diamonds 3&quot;</span> <span class="string">&quot;diamonds 4&quot;</span> <span class="string">&quot;diamonds 5&quot;</span> <span class="string">&quot;diamonds 6&quot;</span> <span class="string">&quot;diamonds 7&quot;</span> <span class="string">&quot;diamonds 8&quot;</span> <span class="string">&quot;diamonds 9&quot;</span></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">12</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">13</span><span class="punctuation">]</span>        </span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;spades 10&quot;</span>   <span class="string">&quot;spades 11&quot;</span>   <span class="string">&quot;spades 12&quot;</span>   <span class="string">&quot;spades 13&quot;</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;clubs 10&quot;</span>    <span class="string">&quot;clubs 11&quot;</span>    <span class="string">&quot;clubs 12&quot;</span>    <span class="string">&quot;clubs 13&quot;</span>   </span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;hearts 10&quot;</span>   <span class="string">&quot;hearts 11&quot;</span>   <span class="string">&quot;hearts 12&quot;</span>   <span class="string">&quot;hearts 13&quot;</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;diamonds 10&quot;</span> <span class="string">&quot;diamonds 11&quot;</span> <span class="string">&quot;diamonds 12&quot;</span> <span class="string">&quot;diamonds 13&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> outer<span class="punctuation">(</span>suit<span class="punctuation">,</span>face<span class="punctuation">,</span>FUN<span class="operator">=</span>paste<span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;-&quot;</span><span class="punctuation">)</span></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">7</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">8</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">9</span><span class="punctuation">]</span>        </span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;spades-1&quot;</span>   <span class="string">&quot;spades-2&quot;</span>   <span class="string">&quot;spades-3&quot;</span>   <span class="string">&quot;spades-4&quot;</span>   <span class="string">&quot;spades-5&quot;</span>   <span class="string">&quot;spades-6&quot;</span>   <span class="string">&quot;spades-7&quot;</span>   <span class="string">&quot;spades-8&quot;</span>   <span class="string">&quot;spades-9&quot;</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;clubs-1&quot;</span>    <span class="string">&quot;clubs-2&quot;</span>    <span class="string">&quot;clubs-3&quot;</span>    <span class="string">&quot;clubs-4&quot;</span>    <span class="string">&quot;clubs-5&quot;</span>    <span class="string">&quot;clubs-6&quot;</span>    <span class="string">&quot;clubs-7&quot;</span>    <span class="string">&quot;clubs-8&quot;</span>    <span class="string">&quot;clubs-9&quot;</span>   </span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;hearts-1&quot;</span>   <span class="string">&quot;hearts-2&quot;</span>   <span class="string">&quot;hearts-3&quot;</span>   <span class="string">&quot;hearts-4&quot;</span>   <span class="string">&quot;hearts-5&quot;</span>   <span class="string">&quot;hearts-6&quot;</span>   <span class="string">&quot;hearts-7&quot;</span>   <span class="string">&quot;hearts-8&quot;</span>   <span class="string">&quot;hearts-9&quot;</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;diamonds-1&quot;</span> <span class="string">&quot;diamonds-2&quot;</span> <span class="string">&quot;diamonds-3&quot;</span> <span class="string">&quot;diamonds-4&quot;</span> <span class="string">&quot;diamonds-5&quot;</span> <span class="string">&quot;diamonds-6&quot;</span> <span class="string">&quot;diamonds-7&quot;</span> <span class="string">&quot;diamonds-8&quot;</span> <span class="string">&quot;diamonds-9&quot;</span></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">12</span><span class="punctuation">]</span>         <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">13</span><span class="punctuation">]</span>        </span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;spades-10&quot;</span>   <span class="string">&quot;spades-11&quot;</span>   <span class="string">&quot;spades-12&quot;</span>   <span class="string">&quot;spades-13&quot;</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;clubs-10&quot;</span>    <span class="string">&quot;clubs-11&quot;</span>    <span class="string">&quot;clubs-12&quot;</span>    <span class="string">&quot;clubs-13&quot;</span>   </span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;hearts-10&quot;</span>   <span class="string">&quot;hearts-11&quot;</span>   <span class="string">&quot;hearts-12&quot;</span>   <span class="string">&quot;hearts-13&quot;</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;diamonds-10&quot;</span> <span class="string">&quot;diamonds-11&quot;</span> <span class="string">&quot;diamonds-12&quot;</span> <span class="string">&quot;diamonds-13&quot;</span></span><br></pre></td></tr></table></figure><p>总结：<code>outer</code>函数可以生成两个字符串的所有组合，两个字符串的连接默认通过空格的形式，也可以自定义连接符。</p><h3 id="2-10-日期和时间">2.10 日期和时间</h3><p>时间序列分析：</p><ol><li>对时间序列的描述；</li><li>利用前面的结果进行预测。</li></ol><p>时间序列包：TimeSeries</p><p>时间数据集：sunspots、presidents、airmiles</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>presidents<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;ts&quot;</span></span><br></pre></td></tr></table></figure><p>总结：这里的<code>ts</code>表示时间序列，有些数据集是时间序列数据，但是数据形式是数据框。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> Sys.Date<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;2022-08-06&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>Sys.Date<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Date&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> a <span class="operator">&lt;-</span> <span class="string">&quot;2017-01-01&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> a</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;2017-01-01&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> as.Date<span class="punctuation">(</span>a<span class="punctuation">,</span>format <span class="operator">=</span> <span class="string">&quot;%Y-%m-%d&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;2017-01-01&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>as.Date<span class="punctuation">(</span>a<span class="punctuation">,</span>format <span class="operator">=</span> <span class="string">&quot;%Y-%m-%d&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Date&quot;</span></span><br></pre></td></tr></table></figure><p>总结：<code>Sys.Date</code>函数可以查看当前的年月日，<code>Sys.Date()</code>中的数据类型为<code>Date</code>类型，可以通过<code>as.Date</code>函数将字符串类型转换成<code>Date</code>类型。</p><p>更多格式化参数，可以通过<code>?strftime</code>命令参看<code>strftime</code>函数中的介绍。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> seq<span class="punctuation">(</span>as.Date<span class="punctuation">(</span><span class="string">&quot;2017-01-01&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span>as.Date<span class="punctuation">(</span><span class="string">&quot;2017-06-23&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span>by <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;2017-01-01&quot;</span> <span class="string">&quot;2017-01-06&quot;</span> <span class="string">&quot;2017-01-11&quot;</span> <span class="string">&quot;2017-01-16&quot;</span> <span class="string">&quot;2017-01-21&quot;</span> <span class="string">&quot;2017-01-26&quot;</span> <span class="string">&quot;2017-01-31&quot;</span> <span class="string">&quot;2017-02-05&quot;</span> <span class="string">&quot;2017-02-10&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">]</span> <span class="string">&quot;2017-02-15&quot;</span> <span class="string">&quot;2017-02-20&quot;</span> <span class="string">&quot;2017-02-25&quot;</span> <span class="string">&quot;2017-03-02&quot;</span> <span class="string">&quot;2017-03-07&quot;</span> <span class="string">&quot;2017-03-12&quot;</span> <span class="string">&quot;2017-03-17&quot;</span> <span class="string">&quot;2017-03-22&quot;</span> <span class="string">&quot;2017-03-27&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">19</span><span class="punctuation">]</span> <span class="string">&quot;2017-04-01&quot;</span> <span class="string">&quot;2017-04-06&quot;</span> <span class="string">&quot;2017-04-11&quot;</span> <span class="string">&quot;2017-04-16&quot;</span> <span class="string">&quot;2017-04-21&quot;</span> <span class="string">&quot;2017-04-26&quot;</span> <span class="string">&quot;2017-05-01&quot;</span> <span class="string">&quot;2017-05-06&quot;</span> <span class="string">&quot;2017-05-11&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">28</span><span class="punctuation">]</span> <span class="string">&quot;2017-05-16&quot;</span> <span class="string">&quot;2017-05-21&quot;</span> <span class="string">&quot;2017-05-26&quot;</span> <span class="string">&quot;2017-05-31&quot;</span> <span class="string">&quot;2017-06-05&quot;</span> <span class="string">&quot;2017-06-10&quot;</span> <span class="string">&quot;2017-06-15&quot;</span> <span class="string">&quot;2017-06-20&quot;</span></span><br></pre></td></tr></table></figure><p>总结：可以使用<code>seq</code>函数创建连续的时间点，<code>by</code>表示间隔五天。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> sales <span class="operator">&lt;-</span> <span class="built_in">round</span><span class="punctuation">(</span>runif<span class="punctuation">(</span><span class="number">48</span><span class="punctuation">,</span><span class="built_in">min</span><span class="operator">=</span><span class="number">50</span><span class="punctuation">,</span><span class="built_in">max</span><span class="operator">=</span><span class="number">100</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> sales</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">56</span>  <span class="number">88</span>  <span class="number">87</span>  <span class="number">91</span>  <span class="number">83</span>  <span class="number">82</span>  <span class="number">90</span>  <span class="number">68</span> <span class="number">100</span>  <span class="number">64</span>  <span class="number">64</span>  <span class="number">62</span>  <span class="number">85</span>  <span class="number">51</span>  <span class="number">76</span>  <span class="number">91</span>  <span class="number">53</span>  <span class="number">94</span>  <span class="number">80</span>  <span class="number">93</span>  <span class="number">77</span>  <span class="number">73</span>  <span class="number">53</span>  <span class="number">59</span>  <span class="number">88</span>  <span class="number">71</span>  <span class="number">98</span>  <span class="number">89</span>  <span class="number">74</span>  <span class="number">66</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">31</span><span class="punctuation">]</span>  <span class="number">91</span>  <span class="number">57</span>  <span class="number">71</span>  <span class="number">50</span>  <span class="number">67</span>  <span class="number">91</span>  <span class="number">70</span>  <span class="number">60</span>  <span class="number">51</span>  <span class="number">71</span>  <span class="number">99</span>  <span class="number">73</span>  <span class="number">95</span>  <span class="number">52</span>  <span class="number">57</span>  <span class="number">72</span>  <span class="number">82</span>  <span class="number">72</span></span><br><span class="line"><span class="operator">&gt;</span> ts<span class="punctuation">(</span>sales<span class="punctuation">,</span>start <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2010</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span><span class="punctuation">,</span>end <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2014</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">,</span>frequency <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">Time Series<span class="operator">:</span></span><br><span class="line">Start <span class="operator">=</span> <span class="number">2014</span> </span><br><span class="line">End <span class="operator">=</span> <span class="number">2017</span> </span><br><span class="line">Frequency <span class="operator">=</span> <span class="number">1</span> </span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">56</span> <span class="number">88</span> <span class="number">87</span> <span class="number">91</span></span><br><span class="line"><span class="operator">&gt;</span> ts<span class="punctuation">(</span>sales<span class="punctuation">,</span>start <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2010</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span><span class="punctuation">,</span>end <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2014</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">,</span>frequency <span class="operator">=</span> <span class="number">4</span><span class="punctuation">)</span></span><br><span class="line">     Qtr1 Qtr2 Qtr3 Qtr4</span><br><span class="line"><span class="number">2011</span>   <span class="number">56</span>   <span class="number">88</span>   <span class="number">87</span>   <span class="number">91</span></span><br><span class="line"><span class="number">2012</span>   <span class="number">83</span>   <span class="number">82</span>   <span class="number">90</span>   <span class="number">68</span></span><br><span class="line"><span class="number">2013</span>  <span class="number">100</span>   <span class="number">64</span>   <span class="number">64</span>   <span class="number">62</span></span><br><span class="line"><span class="number">2014</span>   <span class="number">85</span>   <span class="number">51</span>   <span class="number">76</span>   <span class="number">91</span></span><br><span class="line"><span class="operator">&gt;</span> ts<span class="punctuation">(</span>sales<span class="punctuation">,</span>start <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2010</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span><span class="punctuation">,</span>end <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2014</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">,</span>frequency <span class="operator">=</span> <span class="number">12</span><span class="punctuation">)</span></span><br><span class="line">     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec</span><br><span class="line"><span class="number">2010</span>                  <span class="number">56</span>  <span class="number">88</span>  <span class="number">87</span>  <span class="number">91</span>  <span class="number">83</span>  <span class="number">82</span>  <span class="number">90</span>  <span class="number">68</span></span><br><span class="line"><span class="number">2011</span> <span class="number">100</span>  <span class="number">64</span>  <span class="number">64</span>  <span class="number">62</span>  <span class="number">85</span>  <span class="number">51</span>  <span class="number">76</span>  <span class="number">91</span>  <span class="number">53</span>  <span class="number">94</span>  <span class="number">80</span>  <span class="number">93</span></span><br><span class="line"><span class="number">2012</span>  <span class="number">77</span>  <span class="number">73</span>  <span class="number">53</span>  <span class="number">59</span>  <span class="number">88</span>  <span class="number">71</span>  <span class="number">98</span>  <span class="number">89</span>  <span class="number">74</span>  <span class="number">66</span>  <span class="number">91</span>  <span class="number">57</span></span><br><span class="line"><span class="number">2013</span>  <span class="number">71</span>  <span class="number">50</span>  <span class="number">67</span>  <span class="number">91</span>  <span class="number">70</span>  <span class="number">60</span>  <span class="number">51</span>  <span class="number">71</span>  <span class="number">99</span>  <span class="number">73</span>  <span class="number">95</span>  <span class="number">52</span></span><br><span class="line"><span class="number">2014</span>  <span class="number">57</span>  <span class="number">72</span>  <span class="number">82</span>  <span class="number">72</span>                 </span><br></pre></td></tr></table></figure><p>总结：<code>runif(48,min=50,max=100)</code>表示随机生成均匀分布d48个数值，最小值为50，最大值为100。<code>round</code>表示四舍五入取整。<code>ts</code>可以将向量转换为时间序列，<code>ts</code>中的<code>frequency</code>值为1，表示以年为单位，如果值为4，表示以季度为单位，如果值为12，表示以月为单位，没有以天为单位的，一般时间序列不用天为单位。</p><h3 id="2-11-常见错误">2.11 常见错误</h3><p>注意：变量赋值要用<code>c</code>，需要注意括号的使用，字符串需要加上引号。在R语言中文件地址用正斜线，反斜线用来转义。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">,</span>seq<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">12</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">      <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">5</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">6</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">6</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">7</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">7</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">8</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">8</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">9</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">9</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">10</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">11</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">11</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">12</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">12</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">13</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">13</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">14</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">14</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">15</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">15</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">16</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">16</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">17</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">17</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">18</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">18</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">19</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">19</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">20</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">20</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">21</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">22</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">23</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">7</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">24</span><span class="punctuation">,</span><span class="punctuation">]</span>   <span class="number">10</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">25</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">26</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span></span><br><span class="line"><span class="operator">&gt;</span> getwd<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;C:/Users/ywwsn/Documents&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> setwd<span class="punctuation">(</span><span class="string">&quot;c:\\Users\\Default&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> setwd<span class="punctuation">(</span><span class="string">&quot;c:/Users/Default&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果出现错误，可以访问网站进行解决，比如Google、Rblogger、quickR、stackoverflow等。</p><h2 id="3-数据基本操作">3 数据基本操作</h2><h3 id="3-1-获取数据">3.1 获取数据</h3><p>R获取数据三种途径：</p><ol><li>利用键盘来输入数据；</li><li>通过读取存储在外部文件上的数据；</li><li>通过访问数据库系统来获取数据。</li></ol><p>手动输入方式：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> status <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Poor&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Improved&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Excellent&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Poor&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> data <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>patientID<span class="punctuation">,</span> age<span class="punctuation">,</span> diabetes<span class="punctuation">,</span> status<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> data</span><br><span class="line">  patientID age diabetes    status</span><br><span class="line"><span class="number">1</span>         <span class="number">1</span>  <span class="number">25</span>    Type1      Poor</span><br><span class="line"><span class="number">2</span>         <span class="number">2</span>  <span class="number">34</span>    Type2  Improved</span><br><span class="line"><span class="number">3</span>         <span class="number">3</span>  <span class="number">28</span>    Type1 Excellent</span><br><span class="line"><span class="number">4</span>         <span class="number">4</span>  <span class="number">52</span>    Type1      Poor</span><br><span class="line"><span class="operator">&gt;</span> data2 <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>patientID<span class="operator">=</span>character<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span>admdate<span class="operator">=</span>character<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span>age<span class="operator">=</span>numeric<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span>diabetes<span class="operator">=</span>character<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span>status<span class="operator">=</span>character<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> data2</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> patientID admdate   age       diabetes  status   </span><br><span class="line"><span class="operator">&lt;</span><span class="number">0</span> 行<span class="operator">&gt;</span> <span class="punctuation">(</span>或<span class="number">0</span><span class="operator">-</span>长度的row.names<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> data2 <span class="operator">&lt;-</span> edit<span class="punctuation">(</span>data2<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> data2</span><br><span class="line">  patientID    admdate age diabetes    status</span><br><span class="line"><span class="number">1</span>         <span class="number">1</span>  <span class="number">10</span><span class="operator">/</span><span class="number">15</span><span class="operator">/</span><span class="number">200</span>  <span class="number">25</span>    Type1      Poor</span><br><span class="line"><span class="number">2</span>         <span class="number">2</span> <span class="number">11</span><span class="operator">/</span><span class="number">01</span><span class="operator">/</span><span class="number">2009</span>  <span class="number">34</span>    Type2  Improved</span><br><span class="line"><span class="number">3</span>         <span class="number">3</span> <span class="number">10</span><span class="operator">/</span><span class="number">21</span><span class="operator">/</span><span class="number">2009</span>  <span class="number">28</span>    Type1 Excellent</span><br><span class="line"><span class="number">4</span>         <span class="number">4</span> <span class="number">10</span><span class="operator">/</span><span class="number">28</span><span class="operator">/</span><span class="number">2009</span>  <span class="number">52</span>    Type1      Poor</span><br></pre></td></tr></table></figure><p>在运行<code>data2 &lt;- edit(data2)</code>命令时会弹出下面的数据编辑器，进行数据输入：</p><p><img src="https://vip2.loli.io/2023/03/13/8tToc6379qGXUV5.png" alt="image-20220807100838951"></p><p>在linux系统中如果无法打开数据编辑器，可以用vim进行编辑。</p><p>也可以使用<code>fix</code>函数启动数据编辑器进行边界，<code>fix</code>修改后会直接保存。</p><p>通过IDBC访问数据库，ODBC（Open Database Connectivity）是开放数据库连接。</p><p>在R中，可以RODBC包连接和访问数据库。：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> install.packages<span class="punctuation">(</span><span class="string">&quot;RODBC&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>RODBC包允许R和一个通过ODBC连接的SQL数据库之间进行双向的通信，这样不仅可以用R读取数据库的内容，同时还可以将R处理过的数据写入数据库中。需要使用MySQL、SQLlite包就下载相应的包。</p><h3 id="3-2-读取文件">3.2 读取文件</h3><p>读取纯文本文件，可以使用<code>read.table</code>函数，将读取的文件赋值给一个参数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;input.txt&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">  Ozone Solar.R Wind Temp Month Day</span><br><span class="line"><span class="number">1</span>    <span class="number">41</span>     <span class="number">190</span>  <span class="number">7.4</span>   <span class="number">67</span>     <span class="number">5</span>   <span class="number">1</span></span><br><span class="line"><span class="number">2</span>    <span class="number">36</span>     <span class="number">118</span>  <span class="number">8.0</span>   <span class="number">72</span>     <span class="number">5</span>   <span class="number">2</span></span><br><span class="line"><span class="number">3</span>    <span class="number">12</span>     <span class="number">149</span> <span class="number">12.6</span>   <span class="number">74</span>     <span class="number">5</span>   <span class="number">3</span></span><br><span class="line"><span class="number">4</span>    <span class="number">18</span>     <span class="number">313</span> <span class="number">11.5</span>   <span class="number">62</span>     <span class="number">5</span>   <span class="number">4</span></span><br><span class="line"><span class="number">5</span>    <span class="literal">NA</span>      <span class="literal">NA</span> <span class="number">14.3</span>   <span class="number">56</span>     <span class="number">5</span>   <span class="number">5</span></span><br><span class="line"><span class="number">6</span>    <span class="number">28</span>      <span class="literal">NA</span> <span class="number">14.9</span>   <span class="number">66</span>     <span class="number">5</span>   <span class="number">6</span></span><br><span class="line"><span class="operator">&gt;</span> tail<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">    Ozone Solar.R Wind Temp Month Day</span><br><span class="line"><span class="number">148</span>    <span class="number">14</span>      <span class="number">20</span> <span class="number">16.6</span>   <span class="number">63</span>     <span class="number">9</span>  <span class="number">25</span></span><br><span class="line"><span class="number">149</span>    <span class="number">30</span>     <span class="number">193</span>  <span class="number">6.9</span>   <span class="number">70</span>     <span class="number">9</span>  <span class="number">26</span></span><br><span class="line"><span class="number">150</span>    <span class="literal">NA</span>     <span class="number">145</span> <span class="number">13.2</span>   <span class="number">77</span>     <span class="number">9</span>  <span class="number">27</span></span><br><span class="line"><span class="number">151</span>    <span class="number">14</span>     <span class="number">191</span> <span class="number">14.3</span>   <span class="number">75</span>     <span class="number">9</span>  <span class="number">28</span></span><br><span class="line"><span class="number">152</span>    <span class="number">18</span>     <span class="number">131</span>  <span class="number">8.0</span>   <span class="number">76</span>     <span class="number">9</span>  <span class="number">29</span></span><br><span class="line"><span class="number">153</span>    <span class="number">20</span>     <span class="number">223</span> <span class="number">11.5</span>   <span class="number">68</span>     <span class="number">9</span>  <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;f:/Learning/R语言入门与数据分析/RData/input.txt&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;input.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">                    V1                                                                  V2</span><br><span class="line"><span class="number">1</span>                      <span class="punctuation">,</span><span class="string">&quot;mpg&quot;</span><span class="punctuation">,</span><span class="string">&quot;cyl&quot;</span><span class="punctuation">,</span><span class="string">&quot;disp&quot;</span><span class="punctuation">,</span><span class="string">&quot;hp&quot;</span><span class="punctuation">,</span><span class="string">&quot;drat&quot;</span><span class="punctuation">,</span><span class="string">&quot;wt&quot;</span><span class="punctuation">,</span><span class="string">&quot;qsec&quot;</span><span class="punctuation">,</span><span class="string">&quot;vs&quot;</span><span class="punctuation">,</span><span class="string">&quot;am&quot;</span><span class="punctuation">,</span><span class="string">&quot;gear&quot;</span><span class="punctuation">,</span><span class="string">&quot;carb&quot;</span></span><br><span class="line"><span class="number">2</span>            Mazda RX4                                <span class="punctuation">,</span><span class="number">21</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">,</span><span class="number">160</span><span class="punctuation">,</span><span class="number">110</span><span class="punctuation">,</span><span class="number">3.9</span><span class="punctuation">,</span><span class="number">2.62</span><span class="punctuation">,</span><span class="number">16.46</span><span class="punctuation">,</span><span class="number">0</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">4</span></span><br><span class="line"><span class="number">3</span>        Mazda RX4 Wag                               <span class="punctuation">,</span><span class="number">21</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">,</span><span class="number">160</span><span class="punctuation">,</span><span class="number">110</span><span class="punctuation">,</span><span class="number">3.9</span><span class="punctuation">,</span><span class="number">2.875</span><span class="punctuation">,</span><span class="number">17.02</span><span class="punctuation">,</span><span class="number">0</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">4</span></span><br><span class="line"><span class="number">4</span>           Datsun <span class="number">710</span>                              <span class="punctuation">,</span><span class="number">22.8</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">108</span><span class="punctuation">,</span><span class="number">93</span><span class="punctuation">,</span><span class="number">3.85</span><span class="punctuation">,</span><span class="number">2.32</span><span class="punctuation">,</span><span class="number">18.61</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">1</span></span><br><span class="line">...</span><br><span class="line"><span class="number">31</span>        Ferrari Dino                              <span class="punctuation">,</span><span class="number">19.7</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">,</span><span class="number">145</span><span class="punctuation">,</span><span class="number">175</span><span class="punctuation">,</span><span class="number">3.62</span><span class="punctuation">,</span><span class="number">2.77</span><span class="punctuation">,</span><span class="number">15.5</span><span class="punctuation">,</span><span class="number">0</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">6</span></span><br><span class="line"><span class="number">32</span>       Maserati Bora                                <span class="punctuation">,</span><span class="number">15</span><span class="punctuation">,</span><span class="number">8</span><span class="punctuation">,</span><span class="number">301</span><span class="punctuation">,</span><span class="number">335</span><span class="punctuation">,</span><span class="number">3.54</span><span class="punctuation">,</span><span class="number">3.57</span><span class="punctuation">,</span><span class="number">14.6</span><span class="punctuation">,</span><span class="number">0</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">8</span></span><br><span class="line"><span class="number">33</span>          Volvo <span class="number">142</span>E                              <span class="punctuation">,</span><span class="number">21.4</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">121</span><span class="punctuation">,</span><span class="number">109</span><span class="punctuation">,</span><span class="number">4.11</span><span class="punctuation">,</span><span class="number">2.78</span><span class="punctuation">,</span><span class="number">18.6</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;input.csv&quot;</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;,&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">                    V1   V2  V3    V4  V5   V6    V7    V8 V9 V10  V11  V12</span><br><span class="line"><span class="number">1</span>                       mpg cyl  disp  hp drat    wt  qsec vs  am gear carb</span><br><span class="line"><span class="number">2</span>            Mazda RX4   <span class="number">21</span>   <span class="number">6</span>   <span class="number">160</span> <span class="number">110</span>  <span class="number">3.9</span>  <span class="number">2.62</span> <span class="number">16.46</span>  <span class="number">0</span>   <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">3</span>        Mazda RX4 Wag   <span class="number">21</span>   <span class="number">6</span>   <span class="number">160</span> <span class="number">110</span>  <span class="number">3.9</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>   <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">4</span>           Datsun <span class="number">710</span> <span class="number">22.8</span>   <span class="number">4</span>   <span class="number">108</span>  <span class="number">93</span> <span class="number">3.85</span>  <span class="number">2.32</span> <span class="number">18.61</span>  <span class="number">1</span>   <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">...</span><br><span class="line"><span class="number">31</span>        Ferrari Dino <span class="number">19.7</span>   <span class="number">6</span>   <span class="number">145</span> <span class="number">175</span> <span class="number">3.62</span>  <span class="number">2.77</span>  <span class="number">15.5</span>  <span class="number">0</span>   <span class="number">1</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line"><span class="number">32</span>       Maserati Bora   <span class="number">15</span>   <span class="number">8</span>   <span class="number">301</span> <span class="number">335</span> <span class="number">3.54</span>  <span class="number">3.57</span>  <span class="number">14.6</span>  <span class="number">0</span>   <span class="number">1</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line"><span class="number">33</span>          Volvo <span class="number">142</span>E <span class="number">21.4</span>   <span class="number">4</span>   <span class="number">121</span> <span class="number">109</span> <span class="number">4.11</span>  <span class="number">2.78</span>  <span class="number">18.6</span>  <span class="number">1</span>   <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;input.csv&quot;</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;,&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">                     X  mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line"><span class="number">1</span>            Mazda RX4 <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">2</span>        Mazda RX4 Wag <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">3</span>           Datsun <span class="number">710</span> <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">...</span><br><span class="line"><span class="number">30</span>        Ferrari Dino <span class="number">19.7</span>   <span class="number">6</span>   <span class="number">145</span> <span class="number">175</span> <span class="number">3.62</span>  <span class="number">2.77</span>  <span class="number">15.5</span>  <span class="number">0</span>   <span class="number">1</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line"><span class="number">31</span>       Maserati Bora <span class="number">15.0</span>   <span class="number">8</span> <span class="number">301.0</span> <span class="number">335</span> <span class="number">3.54</span> <span class="number">3.570</span> <span class="number">14.60</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line"><span class="number">32</span>          Volvo <span class="number">142</span>E <span class="number">21.4</span>   <span class="number">4</span> <span class="number">121.0</span> <span class="number">109</span> <span class="number">4.11</span> <span class="number">2.780</span> <span class="number">18.60</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;input 1.txt&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span>skip <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">    Ozone Solar.R Wind Temp Month Day</span><br><span class="line"><span class="number">1</span>      <span class="number">41</span>     <span class="number">190</span>  <span class="number">7.4</span>   <span class="number">67</span>     <span class="number">5</span>   <span class="number">1</span></span><br><span class="line"><span class="number">2</span>      <span class="number">36</span>     <span class="number">118</span>  <span class="number">8.0</span>   <span class="number">72</span>     <span class="number">5</span>   <span class="number">2</span></span><br><span class="line"><span class="number">3</span>      <span class="number">12</span>     <span class="number">149</span> <span class="number">12.6</span>   <span class="number">74</span>     <span class="number">5</span>   <span class="number">3</span></span><br><span class="line">...</span><br><span class="line"><span class="number">151</span>    <span class="number">14</span>     <span class="number">191</span> <span class="number">14.3</span>   <span class="number">75</span>     <span class="number">9</span>  <span class="number">28</span></span><br><span class="line"><span class="number">152</span>    <span class="number">18</span>     <span class="number">131</span>  <span class="number">8.0</span>   <span class="number">76</span>     <span class="number">9</span>  <span class="number">29</span></span><br><span class="line"><span class="number">153</span>    <span class="number">20</span>     <span class="number">223</span> <span class="number">11.5</span>   <span class="number">68</span>     <span class="number">9</span>  <span class="number">30</span></span><br><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;input 1.txt&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span>skip <span class="operator">=</span> <span class="number">6</span><span class="punctuation">,</span>nrows <span class="operator">=</span> <span class="number">6</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">  X1 X41 X190 X7.4 X67 X5 X1.1</span><br><span class="line"><span class="number">1</span>  <span class="number">2</span>  <span class="number">36</span>  <span class="number">118</span>  <span class="number">8.0</span>  <span class="number">72</span>  <span class="number">5</span>    <span class="number">2</span></span><br><span class="line"><span class="number">2</span>  <span class="number">3</span>  <span class="number">12</span>  <span class="number">149</span> <span class="number">12.6</span>  <span class="number">74</span>  <span class="number">5</span>    <span class="number">3</span></span><br><span class="line"><span class="number">3</span>  <span class="number">4</span>  <span class="number">18</span>  <span class="number">313</span> <span class="number">11.5</span>  <span class="number">62</span>  <span class="number">5</span>    <span class="number">4</span></span><br><span class="line"><span class="number">4</span>  <span class="number">5</span>  <span class="literal">NA</span>   <span class="literal">NA</span> <span class="number">14.3</span>  <span class="number">56</span>  <span class="number">5</span>    <span class="number">5</span></span><br><span class="line"><span class="number">5</span>  <span class="number">6</span>  <span class="number">28</span>   <span class="literal">NA</span> <span class="number">14.9</span>  <span class="number">66</span>  <span class="number">5</span>    <span class="number">6</span></span><br><span class="line"><span class="number">6</span>  <span class="number">7</span>  <span class="number">23</span>  <span class="number">299</span>  <span class="number">8.6</span>  <span class="number">65</span>  <span class="number">5</span>    <span class="number">7</span></span><br></pre></td></tr></table></figure><p>总结：这里的<code>head</code>为显示<code>x</code>的头部6行，<code>tail</code>为显示<code>x</code>的尾部6行。<code>read.table</code>读取的文件可以写全局路径。如果读写的是csv文件，需要将分隔符设为<code>,</code>。否则会出现问题，如果想知道用什么分隔符，可以打开文件看看。<code>header</code>参数如果为TRUE表示将第一行作为变量名称。<code>skip</code>参数用来跳过部分内容，比如有些数据会有介绍性文字。通过<code>skip</code>和<code>nrows</code>组合可以读取任意一段数据。<code>na.strings</code>参数可以将设定的其他软件中的缺失符号替换为NA，NA属于R中的缺失值。<code>stringAsFactors</code>控制读入的字符串是否转换成因子，R读取数据时，数字被读取成数值型数据，而在读取字符串时，会默认将读取的字符串转为因子类型，但是很多情况下不需要这样的转换，因此需要将<code>stringAsFactors</code>设为FALSE。</p><p>除了<code>read.table</code>函数，还有<code>read.csv</code>函数，<code>read.csv</code>函数默认用<code>,</code>分隔。<code>read.delim</code>表示读取用制表符分割的文件，<code>read.fwf</code>表示读取固定宽度的文件，每一列都开始于固定的位置，例如：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">read.fwf<span class="punctuation">(</span><span class="string">&quot;fwf.txt&quot;</span><span class="punctuation">,</span>widths <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>使用<code>read.fwf</code>需要用<code>widths</code>参数给定每一列所占用的宽度值。这种文件使用的不多。</p><p>R还支持读取网络文件，<code>read.table</code>会将文件下载到本地。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;https://codeload.github.com/mperdeck/LINQtoCSV/zip/master&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果读取网页中的数据，需要安装包<code>XML</code>，然后通过<code>readHTMLTable</code>函数进行读取，如果想读取网页中第三个表格的数据，可以将<code>which</code>参数值设为3。</p><p>可以通过<code>foreign</code>包中的函数对其他软件格式的数据进行导入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help(package = &quot;foreign&quot;)</span><br></pre></td></tr></table></figure><p>如果其他格式的文件不在<code>foreign</code>包中，一种方法就是另存为文本文件，另一种就是搜索R中对应的包，例如搜索能够读取Matlab相关格式的包，如下所示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RSiteSearch<span class="punctuation">(</span><span class="string">&quot;Matlab&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>R还支持读取剪贴板的数据：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;clipboard&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">                   X  mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line"><span class="number">1</span>          Mazda RX4 <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">2</span>      Mazda RX4 Wag <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">3</span>         Datsun <span class="number">710</span> <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line"><span class="number">4</span>     Hornet <span class="number">4</span> Drive <span class="number">21.4</span>   <span class="number">6</span> <span class="number">258.0</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line"><span class="number">5</span>  Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> readClipboard<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;\tmpg\tcyl\tdisp\thp\tdrat\twt\tqsec\tvs\tam\tgear\tcarb&quot;</span>           </span><br><span class="line"> <span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span> <span class="string">&quot;Mazda RX4\t21\t6\t160\t110\t3.9\t2.62\t16.46\t0\t1\t4\t4&quot;</span>           </span><br><span class="line"> <span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span> <span class="string">&quot;Mazda RX4 Wag\t21\t6\t160\t110\t3.9\t2.875\t17.02\t0\t1\t4\t4&quot;</span>      </span><br><span class="line"> <span class="punctuation">[</span><span class="number">4</span><span class="punctuation">]</span> <span class="string">&quot;Datsun 710\t22.8\t4\t108\t93\t3.85\t2.32\t18.61\t1\t1\t4\t1&quot;</span>        </span><br><span class="line"> <span class="punctuation">[</span><span class="number">5</span><span class="punctuation">]</span> <span class="string">&quot;Hornet 4 Drive\t21.4\t6\t258\t110\t3.08\t3.215\t19.44\t1\t0\t3\t1&quot;</span>  </span><br><span class="line"> <span class="punctuation">[</span><span class="number">6</span><span class="punctuation">]</span> <span class="string">&quot;Hornet Sportabout\t18.7\t8\t360\t175\t3.15\t3.44\t17.02\t0\t0\t3\t2&quot;</span>    </span><br></pre></td></tr></table></figure><p>总结：可以通过<code>read.table(&quot;clipboard&quot;,header = T, sep = &quot;\t&quot;)</code>来读取剪贴板中的表格数据；或者通过<code>readClipboard</code>函数也可以直接读取。</p><p>R也可以直接读取压缩文件：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> read.table<span class="punctuation">(</span>gzfile<span class="punctuation">(</span><span class="string">&quot;input.txt.gz&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果遇到不标准的文件格式，可以通过<code>readLines</code>函数和<code>scan</code>函数来处理，根据每一行甚至每一单元来读取文件。<code>readLines</code>通过字符串的形式显示访问结果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readLines<span class="punctuation">(</span><span class="string">&quot;input.csv&quot;</span><span class="punctuation">,</span>n<span class="operator">=</span><span class="number">5</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>其中<code>n</code>表示读入的最大行数</p><p><code>scan</code>每读取一个单元，根据指令进行处理，第一个参数为文件的地址，用来描述<code>scan</code>所期望输入文件的单元，第二个参数为<code>what</code>，指定读写数据的类型，是数值型、整型还是逻辑型，scan函数可以重复执行指定的模式，直到读取所有需要的数据。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> scan<span class="punctuation">(</span><span class="string">&quot;scan.txt&quot;</span><span class="punctuation">,</span>what <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span>X1 <span class="operator">=</span> character<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span>X2 <span class="operator">=</span> numeric<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span>X3 <span class="operator">=</span> numeric<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">Read <span class="number">20</span> records</span><br><span class="line"><span class="operator">$</span>X1</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;one&quot;</span>  <span class="string">&quot;four&quot;</span> <span class="string">&quot;one&quot;</span>  <span class="string">&quot;four&quot;</span> <span class="string">&quot;one&quot;</span>  <span class="string">&quot;four&quot;</span> <span class="string">&quot;one&quot;</span>  <span class="string">&quot;four&quot;</span> <span class="string">&quot;one&quot;</span>  <span class="string">&quot;four&quot;</span> <span class="string">&quot;one&quot;</span>  <span class="string">&quot;four&quot;</span> <span class="string">&quot;one&quot;</span>  <span class="string">&quot;four&quot;</span> <span class="string">&quot;one&quot;</span>  <span class="string">&quot;four&quot;</span> <span class="string">&quot;one&quot;</span> </span><br><span class="line"><span class="punctuation">[</span><span class="number">18</span><span class="punctuation">]</span> <span class="string">&quot;four&quot;</span> <span class="string">&quot;one&quot;</span>  <span class="string">&quot;four&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>X2</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">2</span> <span class="number">5</span> <span class="number">2</span> <span class="number">5</span> <span class="number">2</span> <span class="number">5</span> <span class="number">2</span> <span class="number">5</span> <span class="number">2</span> <span class="number">5</span> <span class="number">2</span> <span class="number">5</span> <span class="number">2</span> <span class="number">5</span> <span class="number">2</span> <span class="number">5</span> <span class="number">2</span> <span class="number">5</span> <span class="number">2</span> <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>X3</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">3</span> <span class="number">6</span> <span class="number">3</span> <span class="number">6</span> <span class="number">3</span> <span class="number">6</span> <span class="number">3</span> <span class="number">6</span> <span class="number">3</span> <span class="number">6</span> <span class="number">3</span> <span class="number">6</span> <span class="number">3</span> <span class="number">6</span> <span class="number">3</span> <span class="number">6</span> <span class="number">3</span> <span class="number">6</span> <span class="number">3</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><p>这里<code>character</code>表示首先读取3个字符串内容，然后再分别读取两次数值，因为给定的数据呈现一个规律：第一列先是一个字符，然后两列数字，后面第四列往后也是同样的规律。</p><p><img src="https://vip2.loli.io/2023/03/13/WpJtvNFPCf1R7rY.png" alt="image-20220807191906338"></p><h3 id="3-3-写入文件">3.3 写入文件</h3><p>写入文件有两种方法，分别为write和cat，write是将数据写入文件中，而cat是将数据显示在屏幕上。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">write<span class="punctuation">(</span>x<span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;x.txt&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>也可以将文件保存某个存在的目录中，因为R不能够创建不存在的目录。如果不设定目录，就会自动保存在当前目录中。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> write.table<span class="punctuation">(</span>x<span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;newfile.txt&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> write.table<span class="punctuation">(</span>x<span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;f:/Learning/R语言入门与数据分析/RData/newnew.txt&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> write.table<span class="punctuation">(</span>x<span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;f:/Learning/R语言入门与数据分析/RData/newnew.csv&quot;</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;,&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>写入的时候会自动添加行号，可以设定<code>write.table</code>函数中的参数<code>row.names</code>为FALSE，这样写入的文档就不会包含行号：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> write.table<span class="punctuation">(</span>x<span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;f:/Learning/R语言入门与数据分析/RData/newnew.txt&quot;</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;,&quot;</span><span class="punctuation">,</span>row.names <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>写入文件为<code>txt</code>格式时，会默认会添加双引号，如果不需要，可以设定<code>write.table</code>函数中的参数<code>quote</code>为FALSE。</p><p>默认如果写入的是同名的文件，R会覆盖掉原来的文件，如果要将数据写入同一个文件，可以设定<code>write.table</code>函数中的参数<code>append</code>为TRUE，数据会写入文件的结尾；如果为FALSE会覆盖掉原来的文件，和R语言默认相同。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> write.table<span class="punctuation">(</span>iris<span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;f:/Learning/R语言入门与数据分析/RData/newnew.txt&quot;</span><span class="punctuation">,</span> append <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line">Warning message<span class="operator">:</span></span><br><span class="line">In write.table<span class="punctuation">(</span>iris<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;f:/Learning/R语言入门与数据分析/RData/newnew.txt&quot;</span><span class="punctuation">,</span>  <span class="operator">:</span></span><br><span class="line">  给文件加列名</span><br></pre></td></tr></table></figure><p>虽然有警告，但是已经成功将数据追加到<code>newnew.txt</code>文件后面。</p><p>R也支持写入压缩文件：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">write.table<span class="punctuation">(</span>mtcars<span class="punctuation">,</span>gzfile<span class="punctuation">(</span><span class="string">&quot;newfile.txt.gz&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果想将数据结果写为其他软件的数据格式，可以通过<code>foreign</code>包来学习保存什么格式：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help<span class="punctuation">(</span>package <span class="operator">=</span> <span class="string">&quot;foreign&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="3-4-读Excel文件">3.4 读Excel文件</h3><p>如果涉及到<code>xlsx</code>文件格式，需要安装<code>XLConnect</code>包</p><p>读入Excel文件：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;mtcars.csv&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">                     X  mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line"><span class="number">1</span>            Mazda RX4 <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">2</span>        Mazda RX4 Wag <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">3</span>           Datsun <span class="number">710</span> <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">...</span><br><span class="line"><span class="number">30</span>        Ferrari Dino <span class="number">19.7</span>   <span class="number">6</span> <span class="number">145.0</span> <span class="number">175</span> <span class="number">3.62</span> <span class="number">2.770</span> <span class="number">15.50</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line"><span class="number">31</span>       Maserati Bora <span class="number">15.0</span>   <span class="number">8</span> <span class="number">301.0</span> <span class="number">335</span> <span class="number">3.54</span> <span class="number">3.570</span> <span class="number">14.60</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line"><span class="number">32</span>          Volvo <span class="number">142</span>E <span class="number">21.4</span>   <span class="number">4</span> <span class="number">121.0</span> <span class="number">109</span> <span class="number">4.11</span> <span class="number">2.780</span> <span class="number">18.60</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br></pre></td></tr></table></figure><p>也可以复制表格中相应的内容，然后读取剪贴板内容：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;clipboard&quot;</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">                  X  mpg cyl disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line"><span class="number">1</span>         Mazda RX4 <span class="number">21.0</span>   <span class="number">6</span>  <span class="number">160</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">2</span>     Mazda RX4 Wag <span class="number">21.0</span>   <span class="number">6</span>  <span class="number">160</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">3</span>        Datsun <span class="number">710</span> <span class="number">22.8</span>   <span class="number">4</span>  <span class="number">108</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line"><span class="number">4</span>    Hornet <span class="number">4</span> Drive <span class="number">21.4</span>   <span class="number">6</span>  <span class="number">258</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line"><span class="number">5</span> Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span>  <span class="number">360</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span></span><br></pre></td></tr></table></figure><p>如果涉及到<code>xlsx</code>文件格式，需要加载<code>XLConnect</code>包</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>XLConnect<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><strong>一步法</strong>：通过<code>readWorksheetFromFile</code>函数进行操作。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> readWorksheetFromFile<span class="punctuation">(</span><span class="string">&quot;data.xlsx&quot;</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">                  Col1  mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line"><span class="number">1</span>            Mazda RX4 <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">2</span>        Mazda RX4 Wag <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">3</span>           Datsun <span class="number">710</span> <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">...</span><br><span class="line"><span class="number">30</span>        Ferrari Dino <span class="number">19.7</span>   <span class="number">6</span> <span class="number">145.0</span> <span class="number">175</span> <span class="number">3.62</span> <span class="number">2.770</span> <span class="number">15.50</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line"><span class="number">31</span>       Maserati Bora <span class="number">15.0</span>   <span class="number">8</span> <span class="number">301.0</span> <span class="number">335</span> <span class="number">3.54</span> <span class="number">3.570</span> <span class="number">14.60</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line"><span class="number">32</span>          Volvo <span class="number">142</span>E <span class="number">21.4</span>   <span class="number">4</span> <span class="number">121.0</span> <span class="number">109</span> <span class="number">4.11</span> <span class="number">2.780</span> <span class="number">18.60</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br></pre></td></tr></table></figure><p>其中数字<code>1</code>表示第几个工作簿。</p><p><strong>两步法</strong>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> ex <span class="operator">&lt;-</span> loadWorkbook<span class="punctuation">(</span><span class="string">&quot;data.xlsx&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> edata <span class="operator">&lt;-</span> readWorksheet<span class="punctuation">(</span>ex<span class="punctuation">,</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>edata<span class="punctuation">)</span></span><br><span class="line">               Col1  mpg cyl disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line"><span class="number">1</span>         Mazda RX4 <span class="number">21.0</span>   <span class="number">6</span>  <span class="number">160</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">2</span>     Mazda RX4 Wag <span class="number">21.0</span>   <span class="number">6</span>  <span class="number">160</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">3</span>        Datsun <span class="number">710</span> <span class="number">22.8</span>   <span class="number">4</span>  <span class="number">108</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line"><span class="number">4</span>    Hornet <span class="number">4</span> Drive <span class="number">21.4</span>   <span class="number">6</span>  <span class="number">258</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line"><span class="number">5</span> Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span>  <span class="number">360</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span></span><br><span class="line"><span class="number">6</span>           Valiant <span class="number">18.1</span>   <span class="number">6</span>  <span class="number">225</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br></pre></td></tr></table></figure><p><code>loadWorkbook</code>表示读取的是<code>xlsx</code>文件，通过<code>readWorksheet</code>函数读取<code>ex</code>的第1个工作表。</p><p>可以使用<code>header</code>函数查看是否有问题。</p><p>也可以通过<code>readWorksheet</code>函数指定工作表的范围，如下所示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> readWorksheet<span class="punctuation">(</span>ex<span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span>startRow <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span>startCol <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> endRow <span class="operator">=</span> <span class="number">10</span><span class="punctuation">,</span> endCol <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">               Col1  mpg cyl</span><br><span class="line"><span class="number">1</span>         Mazda RX4 <span class="number">21.0</span>   <span class="number">6</span></span><br><span class="line"><span class="number">2</span>     Mazda RX4 Wag <span class="number">21.0</span>   <span class="number">6</span></span><br><span class="line"><span class="number">3</span>        Datsun <span class="number">710</span> <span class="number">22.8</span>   <span class="number">4</span></span><br><span class="line"><span class="number">4</span>    Hornet <span class="number">4</span> Drive <span class="number">21.4</span>   <span class="number">6</span></span><br><span class="line"><span class="number">5</span> Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span></span><br><span class="line"><span class="number">6</span>           Valiant <span class="number">18.1</span>   <span class="number">6</span></span><br><span class="line"><span class="number">7</span>        Duster <span class="number">360</span> <span class="number">14.3</span>   <span class="number">8</span></span><br><span class="line"><span class="number">8</span>         Merc <span class="number">240</span>D <span class="number">24.4</span>   <span class="number">4</span></span><br><span class="line"><span class="number">9</span>          Merc <span class="number">230</span> <span class="number">22.8</span>   <span class="number">4</span></span><br></pre></td></tr></table></figure><p><code>header</code>表示是否读取表头，如果为TRUE，表示读取表头。</p><h3 id="3-5-写Excel文件">3.5 写Excel文件</h3><p><strong>一步法</strong>：通过<code>writeWorksheetToFile</code>函数即可完成。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> writeWorksheetToFile<span class="punctuation">(</span><span class="string">&quot;file.xlsx&quot;</span><span class="punctuation">,</span>data <span class="operator">=</span> mtcars<span class="punctuation">,</span> sheet <span class="operator">=</span> <span class="string">&quot;sheet 1&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>这里<code>file.xlsx</code>为写入的文件名，<code>data</code>为写入的数据，<code>sheet</code>为工作簿编号。<code>data</code>和<code>sheet</code>都支持列表的数据格式。</p><p><strong>四步法</strong>：</p><ol><li>使用<code>loadWorkbook</code>创建一个工作表，即一个文件；</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> wb <span class="operator">=</span> loadWorkbook<span class="punctuation">(</span><span class="string">&quot;file.xlsx&quot;</span><span class="punctuation">,</span>create <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><ol start="2"><li>使用<code>createSheet</code>函数在工作表中创建工作簿；</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> createSheet<span class="punctuation">(</span>wb<span class="punctuation">,</span><span class="string">&quot;Sheet 1&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><ol start="3"><li>使用<code>writeWorksheet</code>函数将数据保存到工作簿中；</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> writeWorksheet<span class="punctuation">(</span>wb<span class="punctuation">,</span>data<span class="operator">=</span>mtcars<span class="punctuation">,</span>sheet <span class="operator">=</span> <span class="string">&quot;sheet 1&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><ol start="4"><li>使用<code>saveWorkbook</code>函数将工作表存储为Excel文件。</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> saveWorkbook<span class="punctuation">(</span>wb<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>更多内容可以查看这个包的帮助文档<code>vignette</code>，可以通过以下命令查看：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> vignette<span class="punctuation">(</span><span class="string">&quot;XLConnect&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果只是简单读写Excel文件，也可以用<code>xlsl</code>包。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;xlsx&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>xlsx<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>可以通过<code>help(package=xlsx)</code>进行查看相关使用方法。</p><p>示例：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> read.xlsx<span class="punctuation">(</span><span class="string">&quot;data.xlsx&quot;</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span>startRow <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span>endRow <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> write.xlsx<span class="punctuation">(</span>x<span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;rdata.xlsx&quot;</span><span class="punctuation">,</span>sheetName <span class="operator">=</span> <span class="string">&quot;Sheet 1&quot;</span><span class="punctuation">,</span>append <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="3-6-读写R格式文件">3.6 读写R格式文件</h3><p>RDS文件可以存储单个R对象，而RData可以保存多个R对象。RDS文件和RData文件不能保存图形，只能单独保存图片。</p><p>存储为R文件有很多优势，R会对存储为内部文件格式的数据进行自动压缩处理，并且会存储所有与待存储对象相关的R元数据。如果数据中包含了因子，日期和时间或者类的属性等信息。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> saveRDS<span class="punctuation">(</span>iris<span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;iris.RDS&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>总结：<code>saveRDS</code>函数将数据保存为RDS文件。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> readRDS<span class="punctuation">(</span><span class="string">&quot;iris.RDS&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>总结：<code>readRDS</code>是读取RDS文件的函数。</p><p>可以通过<code>load</code>函数载入RData文件，例如：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load<span class="punctuation">(</span><span class="string">&quot;ch03.R&quot;</span><span class="punctuation">)</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;.RData&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>注意：如果需要载入的对象和当前R工作空间中的对象重名，会将当前工作空间中的对象数据进行覆盖。在加载文件之前需要对文件内容有所了解，如果打开新的文件，就不用担心这些问题了。</p><p>保存为RData文件直接使用save函数即可：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> save<span class="punctuation">(</span>iris<span class="punctuation">,</span>iris3<span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;newiris.Rdata&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>前几个是保存的对象名称，file为保存的文件地址。</p><p>如果想保存当前工作空间中所有对象，直接通过<code>save.image</code>函数即可。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">save.image<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="4-数据转换">4 数据转换</h2><p>数据转换是对R进行数据操作的核心内容。</p><h3 id="4-1-数据格式转换">4.1 数据格式转换</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>xlsx<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> cars32 <span class="operator">&lt;-</span> read.xlsx<span class="punctuation">(</span><span class="string">&quot;mtcars.xlsx&quot;</span><span class="punctuation">,</span>sheetIndex <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> cars32</span><br><span class="line">                   NA.  mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line"><span class="number">1</span>            Mazda RX4 <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">2</span>        Mazda RX4 Wag <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">...</span><br><span class="line"><span class="number">30</span>        Ferrari Dino <span class="number">19.7</span>   <span class="number">6</span> <span class="number">145.0</span> <span class="number">175</span> <span class="number">3.62</span> <span class="number">2.770</span> <span class="number">15.50</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line"><span class="number">31</span>       Maserati Bora <span class="number">15.0</span>   <span class="number">8</span> <span class="number">301.0</span> <span class="number">335</span> <span class="number">3.54</span> <span class="number">3.570</span> <span class="number">14.60</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line"><span class="number">32</span>          Volvo <span class="number">142</span>E <span class="number">21.4</span>   <span class="number">4</span> <span class="number">121.0</span> <span class="number">109</span> <span class="number">4.11</span> <span class="number">2.780</span> <span class="number">18.60</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> is.data.frame<span class="punctuation">(</span>cars32<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">TRUE</span></span><br><span class="line"><span class="operator">&gt;</span> state.x77</span><br><span class="line">               Population Income Illiteracy Life Exp Murder HS Grad Frost   Area</span><br><span class="line">Alabama              <span class="number">3615</span>   <span class="number">3624</span>        <span class="number">2.1</span>    <span class="number">69.05</span>   <span class="number">15.1</span>    <span class="number">41.3</span>    <span class="number">20</span>  <span class="number">50708</span></span><br><span class="line">Alaska                <span class="number">365</span>   <span class="number">6315</span>        <span class="number">1.5</span>    <span class="number">69.31</span>   <span class="number">11.3</span>    <span class="number">66.7</span>   <span class="number">152</span> <span class="number">566432</span></span><br><span class="line">Arizona              <span class="number">2212</span>   <span class="number">4530</span>        <span class="number">1.8</span>    <span class="number">70.55</span>    <span class="number">7.8</span>    <span class="number">58.1</span>    <span class="number">15</span> <span class="number">113417</span></span><br><span class="line">...</span><br><span class="line">West Virginia        <span class="number">1799</span>   <span class="number">3617</span>        <span class="number">1.4</span>    <span class="number">69.48</span>    <span class="number">6.7</span>    <span class="number">41.6</span>   <span class="number">100</span>  <span class="number">24070</span></span><br><span class="line">Wisconsin            <span class="number">4589</span>   <span class="number">4468</span>        <span class="number">0.7</span>    <span class="number">72.48</span>    <span class="number">3.0</span>    <span class="number">54.5</span>   <span class="number">149</span>  <span class="number">54464</span></span><br><span class="line">Wyoming               <span class="number">376</span>   <span class="number">4566</span>        <span class="number">0.6</span>    <span class="number">70.29</span>    <span class="number">6.9</span>    <span class="number">62.9</span>   <span class="number">173</span>  <span class="number">97203</span></span><br><span class="line"><span class="operator">&gt;</span> is.data.frame<span class="punctuation">(</span>state.x77<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="operator">&gt;</span> dstate.x77 <span class="operator">&lt;-</span> as.data.frame<span class="punctuation">(</span>state.x77<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> is.data.frame<span class="punctuation">(</span>dstate.x77<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">TRUE</span></span><br></pre></td></tr></table></figure><p>总结：<code>is.data.frame</code>函数可以判断对象是否为数据框，<code>as.data.frame</code>可以将对象强制转换成数据框的结构。上面的示例为矩阵转为数据框。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> data.frame<span class="punctuation">(</span>state.region<span class="punctuation">,</span>state.x77<span class="punctuation">)</span></span><br><span class="line">                state.region Population Income Illiteracy Life.Exp Murder HS.Grad Frost   Area</span><br><span class="line">Alabama                South       <span class="number">3615</span>   <span class="number">3624</span>        <span class="number">2.1</span>    <span class="number">69.05</span>   <span class="number">15.1</span>    <span class="number">41.3</span>    <span class="number">20</span>  <span class="number">50708</span></span><br><span class="line">Alaska                  West        <span class="number">365</span>   <span class="number">6315</span>        <span class="number">1.5</span>    <span class="number">69.31</span>   <span class="number">11.3</span>    <span class="number">66.7</span>   <span class="number">152</span> <span class="number">566432</span></span><br><span class="line">Arizona                 West       <span class="number">2212</span>   <span class="number">4530</span>        <span class="number">1.8</span>    <span class="number">70.55</span>    <span class="number">7.8</span>    <span class="number">58.1</span>    <span class="number">15</span> <span class="number">113417</span></span><br><span class="line">...</span><br><span class="line">West Virginia          South       <span class="number">1799</span>   <span class="number">3617</span>        <span class="number">1.4</span>    <span class="number">69.48</span>    <span class="number">6.7</span>    <span class="number">41.6</span>   <span class="number">100</span>  <span class="number">24070</span></span><br><span class="line">Wisconsin      North Central       <span class="number">4589</span>   <span class="number">4468</span>        <span class="number">0.7</span>    <span class="number">72.48</span>    <span class="number">3.0</span>    <span class="number">54.5</span>   <span class="number">149</span>  <span class="number">54464</span></span><br><span class="line">Wyoming                 West        <span class="number">376</span>   <span class="number">4566</span>        <span class="number">0.6</span>    <span class="number">70.29</span>    <span class="number">6.9</span>    <span class="number">62.9</span>   <span class="number">173</span>  <span class="number">97203</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> as.matrix<span class="punctuation">(</span>data.frame<span class="punctuation">(</span>state.region<span class="punctuation">,</span>state.x77<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">               state.region    Population Income Illiteracy Life.Exp Murder HS.Grad Frost Area    </span><br><span class="line">Alabama        <span class="string">&quot;South&quot;</span>         <span class="string">&quot; 3615&quot;</span>    <span class="string">&quot;3624&quot;</span> <span class="string">&quot;2.1&quot;</span>      <span class="string">&quot;69.05&quot;</span>  <span class="string">&quot;15.1&quot;</span> <span class="string">&quot;41.3&quot;</span>  <span class="string">&quot; 20&quot;</span> <span class="string">&quot; 50708&quot;</span></span><br><span class="line">Alaska         <span class="string">&quot;West&quot;</span>          <span class="string">&quot;  365&quot;</span>    <span class="string">&quot;6315&quot;</span> <span class="string">&quot;1.5&quot;</span>      <span class="string">&quot;69.31&quot;</span>  <span class="string">&quot;11.3&quot;</span> <span class="string">&quot;66.7&quot;</span>  <span class="string">&quot;152&quot;</span> <span class="string">&quot;566432&quot;</span></span><br><span class="line">Arizona        <span class="string">&quot;West&quot;</span>          <span class="string">&quot; 2212&quot;</span>    <span class="string">&quot;4530&quot;</span> <span class="string">&quot;1.8&quot;</span>      <span class="string">&quot;70.55&quot;</span>  <span class="string">&quot; 7.8&quot;</span> <span class="string">&quot;58.1&quot;</span>  <span class="string">&quot; 15&quot;</span> <span class="string">&quot;113417&quot;</span></span><br><span class="line">...</span><br><span class="line">West Virginia  <span class="string">&quot;South&quot;</span>         <span class="string">&quot; 1799&quot;</span>    <span class="string">&quot;3617&quot;</span> <span class="string">&quot;1.4&quot;</span>      <span class="string">&quot;69.48&quot;</span>  <span class="string">&quot; 6.7&quot;</span> <span class="string">&quot;41.6&quot;</span>  <span class="string">&quot;100&quot;</span> <span class="string">&quot; 24070&quot;</span></span><br><span class="line">Wisconsin      <span class="string">&quot;North Central&quot;</span> <span class="string">&quot; 4589&quot;</span>    <span class="string">&quot;4468&quot;</span> <span class="string">&quot;0.7&quot;</span>      <span class="string">&quot;72.48&quot;</span>  <span class="string">&quot; 3.0&quot;</span> <span class="string">&quot;54.5&quot;</span>  <span class="string">&quot;149&quot;</span> <span class="string">&quot; 54464&quot;</span></span><br><span class="line">Wyoming        <span class="string">&quot;West&quot;</span>          <span class="string">&quot;  376&quot;</span>    <span class="string">&quot;4566&quot;</span> <span class="string">&quot;0.6&quot;</span>      <span class="string">&quot;70.29&quot;</span>  <span class="string">&quot; 6.9&quot;</span> <span class="string">&quot;62.9&quot;</span>  <span class="string">&quot;173&quot;</span> <span class="string">&quot; 97203&quot;</span></span><br></pre></td></tr></table></figure><p>总结：如果数据框中存在字符串，在将数据框转换成矩阵时，会将数值也转换成字符串进行处理。</p><blockquote><p>注意：并不是所有的数据转换都起作用，有些无法进行转换。</p></blockquote><p>更多示例可以通过<code>methods</code>函数查看示例：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">methods<span class="punctuation">(</span>is<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>R中最基础的就是向量，可以转换成多种数据格式：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> state.abb</span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;AL&quot;</span> <span class="string">&quot;AK&quot;</span> <span class="string">&quot;AZ&quot;</span> <span class="string">&quot;AR&quot;</span> <span class="string">&quot;CA&quot;</span> <span class="string">&quot;CO&quot;</span> <span class="string">&quot;CT&quot;</span> <span class="string">&quot;DE&quot;</span> <span class="string">&quot;FL&quot;</span> <span class="string">&quot;GA&quot;</span> <span class="string">&quot;HI&quot;</span> <span class="string">&quot;ID&quot;</span> <span class="string">&quot;IL&quot;</span> <span class="string">&quot;IN&quot;</span> <span class="string">&quot;IA&quot;</span> <span class="string">&quot;KS&quot;</span> <span class="string">&quot;KY&quot;</span> <span class="string">&quot;LA&quot;</span> <span class="string">&quot;ME&quot;</span> <span class="string">&quot;MD&quot;</span> <span class="string">&quot;MA&quot;</span> <span class="string">&quot;MI&quot;</span> <span class="string">&quot;MN&quot;</span> <span class="string">&quot;MS&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">25</span><span class="punctuation">]</span> <span class="string">&quot;MO&quot;</span> <span class="string">&quot;MT&quot;</span> <span class="string">&quot;NE&quot;</span> <span class="string">&quot;NV&quot;</span> <span class="string">&quot;NH&quot;</span> <span class="string">&quot;NJ&quot;</span> <span class="string">&quot;NM&quot;</span> <span class="string">&quot;NY&quot;</span> <span class="string">&quot;NC&quot;</span> <span class="string">&quot;ND&quot;</span> <span class="string">&quot;OH&quot;</span> <span class="string">&quot;OK&quot;</span> <span class="string">&quot;OR&quot;</span> <span class="string">&quot;PA&quot;</span> <span class="string">&quot;RI&quot;</span> <span class="string">&quot;SC&quot;</span> <span class="string">&quot;SD&quot;</span> <span class="string">&quot;TN&quot;</span> <span class="string">&quot;TX&quot;</span> <span class="string">&quot;UT&quot;</span> <span class="string">&quot;VT&quot;</span> <span class="string">&quot;VA&quot;</span> <span class="string">&quot;WA&quot;</span> <span class="string">&quot;WV&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">49</span><span class="punctuation">]</span> <span class="string">&quot;WI&quot;</span> <span class="string">&quot;WY&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">dim</span><span class="punctuation">(</span>x<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">5</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">7</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">8</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">9</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;AL&quot;</span> <span class="string">&quot;CO&quot;</span> <span class="string">&quot;HI&quot;</span> <span class="string">&quot;KS&quot;</span> <span class="string">&quot;MA&quot;</span> <span class="string">&quot;MT&quot;</span> <span class="string">&quot;NM&quot;</span> <span class="string">&quot;OK&quot;</span> <span class="string">&quot;SD&quot;</span> <span class="string">&quot;VA&quot;</span> </span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;AK&quot;</span> <span class="string">&quot;CT&quot;</span> <span class="string">&quot;ID&quot;</span> <span class="string">&quot;KY&quot;</span> <span class="string">&quot;MI&quot;</span> <span class="string">&quot;NE&quot;</span> <span class="string">&quot;NY&quot;</span> <span class="string">&quot;OR&quot;</span> <span class="string">&quot;TN&quot;</span> <span class="string">&quot;WA&quot;</span> </span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;AZ&quot;</span> <span class="string">&quot;DE&quot;</span> <span class="string">&quot;IL&quot;</span> <span class="string">&quot;LA&quot;</span> <span class="string">&quot;MN&quot;</span> <span class="string">&quot;NV&quot;</span> <span class="string">&quot;NC&quot;</span> <span class="string">&quot;PA&quot;</span> <span class="string">&quot;TX&quot;</span> <span class="string">&quot;WV&quot;</span> </span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;AR&quot;</span> <span class="string">&quot;FL&quot;</span> <span class="string">&quot;IN&quot;</span> <span class="string">&quot;ME&quot;</span> <span class="string">&quot;MS&quot;</span> <span class="string">&quot;NH&quot;</span> <span class="string">&quot;ND&quot;</span> <span class="string">&quot;RI&quot;</span> <span class="string">&quot;UT&quot;</span> <span class="string">&quot;WI&quot;</span> </span><br><span class="line"><span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;CA&quot;</span> <span class="string">&quot;GA&quot;</span> <span class="string">&quot;IA&quot;</span> <span class="string">&quot;MD&quot;</span> <span class="string">&quot;MO&quot;</span> <span class="string">&quot;NJ&quot;</span> <span class="string">&quot;OH&quot;</span> <span class="string">&quot;SC&quot;</span> <span class="string">&quot;VT&quot;</span> <span class="string">&quot;WY&quot;</span> </span><br><span class="line"><span class="operator">&gt;</span> as.factor<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> AL AK AZ AR CA CO CT DE FL GA HI ID IL IN IA KS KY LA ME MD MA MI MN MS MO MT NE NV NH NJ NM NY NC ND OH OK OR PA RI SC SD</span><br><span class="line"><span class="punctuation">[</span><span class="number">42</span><span class="punctuation">]</span> TN TX UT VT VA WA WV WI WY</span><br><span class="line"><span class="number">50</span> Levels<span class="operator">:</span> AK AL AR AZ CA CO CT DE FL GA HI IA ID IL IN KS KY LA MA MD ME MI MN MO MS MT NC ND NE NH NJ NM NV NY OH OK ... WY</span><br><span class="line"><span class="operator">&gt;</span> as.list<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;AL&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;AZ&quot;</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">48</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;WV&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">49</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;WI&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">50</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;WY&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> state <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>x<span class="punctuation">,</span>state.region<span class="punctuation">,</span>state.x77<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> state<span class="operator">$</span>Income</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">3624</span> <span class="number">6315</span> <span class="number">4530</span> <span class="number">3378</span> <span class="number">5114</span> <span class="number">4884</span> <span class="number">5348</span> <span class="number">4809</span> <span class="number">4815</span> <span class="number">4091</span> <span class="number">4963</span> <span class="number">4119</span> <span class="number">5107</span> <span class="number">4458</span> <span class="number">4628</span> <span class="number">4669</span> <span class="number">3712</span> <span class="number">3545</span> <span class="number">3694</span> <span class="number">5299</span> <span class="number">4755</span> <span class="number">4751</span> <span class="number">4675</span> <span class="number">3098</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">25</span><span class="punctuation">]</span> <span class="number">4254</span> <span class="number">4347</span> <span class="number">4508</span> <span class="number">5149</span> <span class="number">4281</span> <span class="number">5237</span> <span class="number">3601</span> <span class="number">4903</span> <span class="number">3875</span> <span class="number">5087</span> <span class="number">4561</span> <span class="number">3983</span> <span class="number">4660</span> <span class="number">4449</span> <span class="number">4558</span> <span class="number">3635</span> <span class="number">4167</span> <span class="number">3821</span> <span class="number">4188</span> <span class="number">4022</span> <span class="number">3907</span> <span class="number">4701</span> <span class="number">4864</span> <span class="number">3617</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">49</span><span class="punctuation">]</span> <span class="number">4468</span> <span class="number">4566</span></span><br><span class="line"><span class="operator">&gt;</span> state<span class="punctuation">[</span><span class="string">&quot;Nevada&quot;</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">       X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 state.region Population Income Illiteracy Life.Exp Murder HS.Grad Frost   Area</span><br><span class="line">Nevada AZ DE IL LA MN NV NC PA TX  WV         West        <span class="number">590</span>   <span class="number">5149</span>        <span class="number">0.5</span>    <span class="number">69.03</span>   <span class="number">11.5</span>    <span class="number">65.2</span>   <span class="number">188</span> <span class="number">109889</span></span><br><span class="line"><span class="operator">&gt;</span> is.data.frame<span class="punctuation">(</span>state<span class="punctuation">[</span><span class="string">&quot;Nevada&quot;</span><span class="punctuation">,</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">TRUE</span></span><br><span class="line"><span class="operator">&gt;</span> y <span class="operator">&lt;-</span> state<span class="punctuation">[</span><span class="string">&quot;Nevada&quot;</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> y</span><br><span class="line">       X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 state.region Population Income Illiteracy Life.Exp Murder HS.Grad Frost   Area</span><br><span class="line">Nevada AZ DE IL LA MN NV NC PA TX  WV         West        <span class="number">590</span>   <span class="number">5149</span>        <span class="number">0.5</span>    <span class="number">69.03</span>   <span class="number">11.5</span>    <span class="number">65.2</span>   <span class="number">188</span> <span class="number">109889</span></span><br><span class="line"><span class="operator">&gt;</span> unname<span class="punctuation">(</span>y<span class="punctuation">)</span></span><br><span class="line">                                                                                 </span><br><span class="line">Nevada AZ DE IL LA MN NV NC PA TX WV West <span class="number">590</span> <span class="number">5149</span> <span class="number">0.5</span> <span class="number">69.03</span> <span class="number">11.5</span> <span class="number">65.2</span> <span class="number">188</span> <span class="number">109889</span></span><br><span class="line"><span class="operator">&gt;</span> unlist<span class="punctuation">(</span>y<span class="punctuation">)</span></span><br><span class="line">          X1           X2           X3           X4           X5           X6           X7           X8           X9 </span><br><span class="line">        <span class="string">&quot;AZ&quot;</span>         <span class="string">&quot;DE&quot;</span>         <span class="string">&quot;IL&quot;</span>         <span class="string">&quot;LA&quot;</span>         <span class="string">&quot;MN&quot;</span>         <span class="string">&quot;NV&quot;</span>         <span class="string">&quot;NC&quot;</span>         <span class="string">&quot;PA&quot;</span>         <span class="string">&quot;TX&quot;</span> </span><br><span class="line">         X10 state.region   Population       Income   Illiteracy     Life.Exp       Murder      HS.Grad        Frost </span><br><span class="line">        <span class="string">&quot;WV&quot;</span>          <span class="string">&quot;4&quot;</span>        <span class="string">&quot;590&quot;</span>       <span class="string">&quot;5149&quot;</span>        <span class="string">&quot;0.5&quot;</span>      <span class="string">&quot;69.03&quot;</span>       <span class="string">&quot;11.5&quot;</span>       <span class="string">&quot;65.2&quot;</span>        <span class="string">&quot;188&quot;</span> </span><br><span class="line">        Area </span><br><span class="line">    <span class="string">&quot;109889&quot;</span> </span><br></pre></td></tr></table></figure><p>数据框取出列可以用<code>$</code>符号，取出行用<code>state[&quot;Nevada&quot;,]</code>，注意不要忘记逗号。如果想去除列名，可以通过<code>unname</code>函数。如果想将其转换成向量，可以使用<code>unlist</code>函数。</p><h3 id="4-2-数据部分提取">4.2 数据部分提取</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> who <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;WHO.csv&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> who1 <span class="operator">&lt;-</span> who<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">50</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> who2 <span class="operator">&lt;-</span> who<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">8</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">14</span><span class="punctuation">,</span><span class="number">16</span><span class="punctuation">,</span><span class="number">18</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> who3 <span class="operator">&lt;-</span> who<span class="punctuation">[</span>which<span class="punctuation">(</span>who<span class="operator">$</span>Continent<span class="operator">==</span><span class="number">7</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> who4 <span class="operator">&lt;-</span> who<span class="punctuation">[</span>which<span class="punctuation">(</span>who<span class="operator">$</span>CountryID<span class="operator">&gt;</span><span class="number">50</span> <span class="operator">&amp;</span> who<span class="operator">$</span>CountryID<span class="operator">&lt;=</span><span class="number">100</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>总结：可以提取连续的部分内容，如who1；也可以提取零散的部分内容，如who2；也可以根据逻辑值进行提取，如who3；也可以取某个范围的值，如who4。</p><p>取子集也可以用<code>subset</code>函数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> who4 <span class="operator">&lt;-</span> subset<span class="punctuation">(</span>who<span class="punctuation">,</span>who<span class="operator">$</span>CountryID<span class="operator">&gt;</span><span class="number">50</span> <span class="operator">&amp;</span> who<span class="operator">$</span>CountryID<span class="operator">&lt;=</span><span class="number">100</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>在数学挖掘和机器学习领域，从更大的数据集中抽样是常见的做法，例如随机抽取两个样本，一个样本用来建模，另一类样本用来验证有效性。R中可以用sample函数用来随机抽样。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> 1<span class="operator">:</span><span class="number">100</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">  <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span>   <span class="number">8</span>   <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span>  <span class="number">12</span>  <span class="number">13</span>  <span class="number">14</span>  <span class="number">15</span>  <span class="number">16</span>  <span class="number">17</span>  <span class="number">18</span>  <span class="number">19</span>  <span class="number">20</span>  <span class="number">21</span>  <span class="number">22</span>  <span class="number">23</span>  <span class="number">24</span>  <span class="number">25</span>  <span class="number">26</span>  <span class="number">27</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">28</span><span class="punctuation">]</span>  <span class="number">28</span>  <span class="number">29</span>  <span class="number">30</span>  <span class="number">31</span>  <span class="number">32</span>  <span class="number">33</span>  <span class="number">34</span>  <span class="number">35</span>  <span class="number">36</span>  <span class="number">37</span>  <span class="number">38</span>  <span class="number">39</span>  <span class="number">40</span>  <span class="number">41</span>  <span class="number">42</span>  <span class="number">43</span>  <span class="number">44</span>  <span class="number">45</span>  <span class="number">46</span>  <span class="number">47</span>  <span class="number">48</span>  <span class="number">49</span>  <span class="number">50</span>  <span class="number">51</span>  <span class="number">52</span>  <span class="number">53</span>  <span class="number">54</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">55</span><span class="punctuation">]</span>  <span class="number">55</span>  <span class="number">56</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">59</span>  <span class="number">60</span>  <span class="number">61</span>  <span class="number">62</span>  <span class="number">63</span>  <span class="number">64</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">67</span>  <span class="number">68</span>  <span class="number">69</span>  <span class="number">70</span>  <span class="number">71</span>  <span class="number">72</span>  <span class="number">73</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">76</span>  <span class="number">77</span>  <span class="number">78</span>  <span class="number">79</span>  <span class="number">80</span>  <span class="number">81</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">82</span><span class="punctuation">]</span>  <span class="number">82</span>  <span class="number">83</span>  <span class="number">84</span>  <span class="number">85</span>  <span class="number">86</span>  <span class="number">87</span>  <span class="number">88</span>  <span class="number">89</span>  <span class="number">90</span>  <span class="number">91</span>  <span class="number">92</span>  <span class="number">93</span>  <span class="number">94</span>  <span class="number">95</span>  <span class="number">96</span>  <span class="number">97</span>  <span class="number">98</span>  <span class="number">99</span> <span class="number">100</span></span><br><span class="line"><span class="operator">&gt;</span> sample<span class="punctuation">(</span>x<span class="punctuation">,</span><span class="number">60</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">97</span>   <span class="number">8</span>   <span class="number">5</span>  <span class="number">33</span>  <span class="number">88</span>  <span class="number">28</span>  <span class="number">48</span>  <span class="number">34</span>  <span class="number">39</span>  <span class="number">69</span>  <span class="number">35</span>  <span class="number">82</span>  <span class="number">81</span>  <span class="number">50</span>  <span class="number">92</span>  <span class="number">12</span>  <span class="number">16</span>  <span class="number">87</span>  <span class="number">17</span>  <span class="number">76</span>  <span class="number">98</span>  <span class="number">40</span>  <span class="number">74</span>  <span class="number">75</span>  <span class="number">19</span>  <span class="number">54</span>  <span class="number">11</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">28</span><span class="punctuation">]</span>  <span class="number">49</span>  <span class="number">30</span>  <span class="number">32</span>  <span class="number">89</span>  <span class="number">70</span>  <span class="number">37</span>  <span class="number">13</span>  <span class="number">96</span>  <span class="number">72</span>  <span class="number">25</span>   <span class="number">1</span>  <span class="number">78</span>  <span class="number">14</span>  <span class="number">60</span>  <span class="number">57</span>  <span class="number">58</span>  <span class="number">23</span>  <span class="number">95</span>  <span class="number">90</span>  <span class="number">15</span>  <span class="number">83</span>  <span class="number">52</span> <span class="number">100</span>  <span class="number">64</span>  <span class="number">38</span>  <span class="number">86</span>  <span class="number">51</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">55</span><span class="punctuation">]</span>  <span class="number">45</span>   <span class="number">3</span>  <span class="number">99</span>   <span class="number">2</span>  <span class="number">93</span>  <span class="number">27</span></span><br><span class="line"><span class="operator">&gt;</span> sample<span class="punctuation">(</span>x<span class="punctuation">,</span><span class="number">60</span><span class="punctuation">,</span>replace <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">41</span>  <span class="number">57</span>  <span class="number">24</span>   <span class="number">1</span>  <span class="number">67</span>  <span class="number">25</span>  <span class="number">41</span>  <span class="number">64</span>  <span class="number">23</span>   <span class="number">6</span>  <span class="number">65</span>  <span class="number">72</span>  <span class="number">65</span>  <span class="number">68</span>  <span class="number">29</span>  <span class="number">37</span>  <span class="number">78</span>  <span class="number">72</span>  <span class="number">26</span>  <span class="number">55</span>  <span class="number">86</span>  <span class="number">25</span>   <span class="number">2</span>  <span class="number">69</span>  <span class="number">93</span>  <span class="number">58</span>  <span class="number">68</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">28</span><span class="punctuation">]</span>  <span class="number">92</span>  <span class="number">26</span>  <span class="number">69</span>  <span class="number">64</span>  <span class="number">72</span>  <span class="number">54</span>  <span class="number">77</span>  <span class="number">65</span>  <span class="number">75</span>  <span class="number">25</span>  <span class="number">45</span>  <span class="number">68</span>  <span class="number">53</span>  <span class="number">60</span>  <span class="number">20</span>  <span class="number">95</span>  <span class="number">94</span>  <span class="number">28</span>  <span class="number">18</span>  <span class="number">99</span>  <span class="number">22</span>   <span class="number">8</span>  <span class="number">90</span>  <span class="number">82</span>  <span class="number">14</span>  <span class="number">95</span>  <span class="number">32</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">55</span><span class="punctuation">]</span>  <span class="number">42</span>  <span class="number">88</span>  <span class="number">76</span>  <span class="number">78</span> <span class="number">100</span>  <span class="number">25</span></span><br><span class="line"><span class="operator">&gt;</span> sort<span class="punctuation">(</span>sample<span class="punctuation">(</span>x<span class="punctuation">,</span><span class="number">60</span><span class="punctuation">,</span>replace <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">4</span>  <span class="number">8</span>  <span class="number">8</span>  <span class="number">9</span>  <span class="number">9</span> <span class="number">14</span> <span class="number">14</span> <span class="number">17</span> <span class="number">19</span> <span class="number">21</span> <span class="number">26</span> <span class="number">26</span> <span class="number">27</span> <span class="number">27</span> <span class="number">28</span> <span class="number">29</span> <span class="number">30</span> <span class="number">30</span> <span class="number">32</span> <span class="number">34</span> <span class="number">34</span> <span class="number">39</span> <span class="number">41</span> <span class="number">44</span> <span class="number">50</span> <span class="number">50</span> <span class="number">51</span> <span class="number">53</span> <span class="number">56</span> <span class="number">56</span> <span class="number">57</span> <span class="number">58</span> <span class="number">59</span> <span class="number">59</span> <span class="number">60</span> <span class="number">64</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">37</span><span class="punctuation">]</span> <span class="number">66</span> <span class="number">67</span> <span class="number">68</span> <span class="number">71</span> <span class="number">71</span> <span class="number">72</span> <span class="number">72</span> <span class="number">75</span> <span class="number">75</span> <span class="number">76</span> <span class="number">76</span> <span class="number">81</span> <span class="number">85</span> <span class="number">86</span> <span class="number">87</span> <span class="number">88</span> <span class="number">90</span> <span class="number">90</span> <span class="number">92</span> <span class="number">93</span> <span class="number">93</span> <span class="number">96</span> <span class="number">96</span> <span class="number">98</span></span><br><span class="line"><span class="operator">&gt;</span> who <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;WHO.csv&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> who<span class="punctuation">[</span>sample<span class="punctuation">(</span>who<span class="operator">$</span>CountryID<span class="punctuation">,</span><span class="number">30</span><span class="punctuation">,</span>replace <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>总结：<code>sample</code>抽样默认是无返回抽样，如果<code>sample</code>函数中<code>replace</code>逻辑值设为T，则为有放回抽样。</p><p>删除固定行，最简单的方式就是负索引的方式：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mtcars</span><br><span class="line">                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line">Mazda RX4           <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Mazda RX4 Wag       <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Datsun <span class="number">710</span>          <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">Hornet <span class="number">4</span> Drive      <span class="number">21.4</span>   <span class="number">6</span> <span class="number">258.0</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line">Hornet Sportabout   <span class="number">18.7</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span></span><br><span class="line">Valiant             <span class="number">18.1</span>   <span class="number">6</span> <span class="number">225.0</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line">Duster <span class="number">360</span>          <span class="number">14.3</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">245</span> <span class="number">3.21</span> <span class="number">3.570</span> <span class="number">15.84</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Merc <span class="number">240</span>D           <span class="number">24.4</span>   <span class="number">4</span> <span class="number">146.7</span>  <span class="number">62</span> <span class="number">3.69</span> <span class="number">3.190</span> <span class="number">20.00</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line">...</span><br><span class="line">Ferrari Dino        <span class="number">19.7</span>   <span class="number">6</span> <span class="number">145.0</span> <span class="number">175</span> <span class="number">3.62</span> <span class="number">2.770</span> <span class="number">15.50</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line">Maserati Bora       <span class="number">15.0</span>   <span class="number">8</span> <span class="number">301.0</span> <span class="number">335</span> <span class="number">3.54</span> <span class="number">3.570</span> <span class="number">14.60</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line">Volvo <span class="number">142</span>E          <span class="number">21.4</span>   <span class="number">4</span> <span class="number">121.0</span> <span class="number">109</span> <span class="number">4.11</span> <span class="number">2.780</span> <span class="number">18.60</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> mtcars<span class="punctuation">[</span><span class="operator">-</span><span class="number">1</span><span class="operator">:</span><span class="operator">-</span><span class="number">5</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line">Valiant             <span class="number">18.1</span>   <span class="number">6</span> <span class="number">225.0</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line">Duster <span class="number">360</span>          <span class="number">14.3</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">245</span> <span class="number">3.21</span> <span class="number">3.570</span> <span class="number">15.84</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Merc <span class="number">240</span>D           <span class="number">24.4</span>   <span class="number">4</span> <span class="number">146.7</span>  <span class="number">62</span> <span class="number">3.69</span> <span class="number">3.190</span> <span class="number">20.00</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line">...</span><br><span class="line">Ferrari Dino        <span class="number">19.7</span>   <span class="number">6</span> <span class="number">145.0</span> <span class="number">175</span> <span class="number">3.62</span> <span class="number">2.770</span> <span class="number">15.50</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line">Maserati Bora       <span class="number">15.0</span>   <span class="number">8</span> <span class="number">301.0</span> <span class="number">335</span> <span class="number">3.54</span> <span class="number">3.570</span> <span class="number">14.60</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line">Volvo <span class="number">142</span>E          <span class="number">21.4</span>   <span class="number">4</span> <span class="number">121.0</span> <span class="number">109</span> <span class="number">4.11</span> <span class="number">2.780</span> <span class="number">18.60</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> mtcars<span class="punctuation">[</span><span class="punctuation">,</span><span class="operator">-</span><span class="number">1</span><span class="operator">:</span><span class="operator">-</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line">                       wt  qsec vs am gear carb</span><br><span class="line">Mazda RX4           <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Mazda RX4 Wag       <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Datsun <span class="number">710</span>          <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">Hornet <span class="number">4</span> Drive      <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line">Hornet Sportabout   <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span></span><br><span class="line">Valiant             <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line">Duster <span class="number">360</span>          <span class="number">3.570</span> <span class="number">15.84</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Merc <span class="number">240</span>D           <span class="number">3.190</span> <span class="number">20.00</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line">...</span><br><span class="line">Ferrari Dino        <span class="number">2.770</span> <span class="number">15.50</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line">Maserati Bora       <span class="number">3.570</span> <span class="number">14.60</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">8</span></span><br><span class="line">Volvo <span class="number">142</span>E          <span class="number">2.780</span> <span class="number">18.60</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br></pre></td></tr></table></figure><p>总结：可以通过负索引的方式进行删除相应的行或列。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mtcars<span class="operator">$</span>mpg <span class="operator">&lt;-</span><span class="literal">NULL</span></span><br><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>mtcars<span class="punctuation">)</span></span><br><span class="line">                  cyl disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line">Mazda RX4           <span class="number">6</span>  <span class="number">160</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Mazda RX4 Wag       <span class="number">6</span>  <span class="number">160</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Datsun <span class="number">710</span>          <span class="number">4</span>  <span class="number">108</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">Hornet <span class="number">4</span> Drive      <span class="number">6</span>  <span class="number">258</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line">Hornet Sportabout   <span class="number">8</span>  <span class="number">360</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span></span><br><span class="line">Valiant             <span class="number">6</span>  <span class="number">225</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br></pre></td></tr></table></figure><p>总结：也可以通过置空来进行删除相应的列，例如<code>mtcars$mpg &lt;-NULL</code>。注意NULL要大写。</p><h3 id="4-3-数据合并与去重">4.3 数据合并与去重</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> USArrests</span><br><span class="line">               Murder Assault UrbanPop Rape</span><br><span class="line">Alabama          <span class="number">13.2</span>     <span class="number">236</span>       <span class="number">58</span> <span class="number">21.2</span></span><br><span class="line">Alaska           <span class="number">10.0</span>     <span class="number">263</span>       <span class="number">48</span> <span class="number">44.5</span></span><br><span class="line">Arizona           <span class="number">8.1</span>     <span class="number">294</span>       <span class="number">80</span> <span class="number">31.0</span></span><br><span class="line">...</span><br><span class="line">West Virginia     <span class="number">5.7</span>      <span class="number">81</span>       <span class="number">39</span>  <span class="number">9.3</span></span><br><span class="line">Wisconsin         <span class="number">2.6</span>      <span class="number">53</span>       <span class="number">66</span> <span class="number">10.8</span></span><br><span class="line">Wyoming           <span class="number">6.8</span>     <span class="number">161</span>       <span class="number">60</span> <span class="number">15.6</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> state.division</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> East South Central Pacific            Mountain           West South Central Pacific           </span><br><span class="line"> <span class="punctuation">[</span><span class="number">6</span><span class="punctuation">]</span> Mountain           New England        South Atlantic     South Atlantic     South Atlantic    </span><br><span class="line"><span class="punctuation">[</span><span class="number">11</span><span class="punctuation">]</span> Pacific            Mountain           East North Central East North Central West North Central</span><br><span class="line"><span class="punctuation">[</span><span class="number">16</span><span class="punctuation">]</span> West North Central East South Central West South Central New England        South Atlantic    </span><br><span class="line"><span class="punctuation">[</span><span class="number">21</span><span class="punctuation">]</span> New England        East North Central West North Central East South Central West North Central</span><br><span class="line"><span class="punctuation">[</span><span class="number">26</span><span class="punctuation">]</span> Mountain           West North Central Mountain           New England        Middle Atlantic   </span><br><span class="line"><span class="punctuation">[</span><span class="number">31</span><span class="punctuation">]</span> Mountain           Middle Atlantic    South Atlantic     West North Central East North Central</span><br><span class="line"><span class="punctuation">[</span><span class="number">36</span><span class="punctuation">]</span> West South Central Pacific            Middle Atlantic    New England        South Atlantic    </span><br><span class="line"><span class="punctuation">[</span><span class="number">41</span><span class="punctuation">]</span> West North Central East South Central West South Central Mountain           New England       </span><br><span class="line"><span class="punctuation">[</span><span class="number">46</span><span class="punctuation">]</span> South Atlantic     Pacific            South Atlantic     East North Central Mountain          </span><br><span class="line"><span class="number">9</span> Levels<span class="operator">:</span> New England Middle Atlantic South Atlantic East South Central ... Pacific</span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> data.frame<span class="punctuation">(</span>USArrests<span class="punctuation">,</span>state.division<span class="punctuation">)</span></span><br><span class="line">               Murder Assault UrbanPop Rape     state.division</span><br><span class="line">Alabama          <span class="number">13.2</span>     <span class="number">236</span>       <span class="number">58</span> <span class="number">21.2</span> East South Central</span><br><span class="line">Alaska           <span class="number">10.0</span>     <span class="number">263</span>       <span class="number">48</span> <span class="number">44.5</span>            Pacific</span><br><span class="line">Arizona           <span class="number">8.1</span>     <span class="number">294</span>       <span class="number">80</span> <span class="number">31.0</span>           Mountain</span><br><span class="line">...</span><br><span class="line">West Virginia     <span class="number">5.7</span>      <span class="number">81</span>       <span class="number">39</span>  <span class="number">9.3</span>     South Atlantic</span><br><span class="line">Wisconsin         <span class="number">2.6</span>      <span class="number">53</span>       <span class="number">66</span> <span class="number">10.8</span> East North Central</span><br><span class="line">Wyoming           <span class="number">6.8</span>     <span class="number">161</span>       <span class="number">60</span> <span class="number">15.6</span>           Mountain</span><br></pre></td></tr></table></figure><p>总结：<code>data.frame</code>函数可以来合并两个对象为数据框。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> cbind<span class="punctuation">(</span>USArrests<span class="punctuation">,</span>state.division<span class="punctuation">)</span></span><br><span class="line">               Murder Assault UrbanPop Rape     state.division</span><br><span class="line">Alabama          <span class="number">13.2</span>     <span class="number">236</span>       <span class="number">58</span> <span class="number">21.2</span> East South Central</span><br><span class="line">Alaska           <span class="number">10.0</span>     <span class="number">263</span>       <span class="number">48</span> <span class="number">44.5</span>            Pacific</span><br><span class="line">Arizona           <span class="number">8.1</span>     <span class="number">294</span>       <span class="number">80</span> <span class="number">31.0</span>           Mountain</span><br><span class="line">...</span><br><span class="line">West Virginia     <span class="number">5.7</span>      <span class="number">81</span>       <span class="number">39</span>  <span class="number">9.3</span>     South Atlantic</span><br><span class="line">Wisconsin         <span class="number">2.6</span>      <span class="number">53</span>       <span class="number">66</span> <span class="number">10.8</span> East North Central</span><br><span class="line">Wyoming           <span class="number">6.8</span>     <span class="number">161</span>       <span class="number">60</span> <span class="number">15.6</span>           Mountain</span><br><span class="line"><span class="operator">&gt;</span> data1 <span class="operator">&lt;-</span>head<span class="punctuation">(</span>USArrests<span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> data1</span><br><span class="line">        Murder Assault UrbanPop Rape</span><br><span class="line">Alabama   <span class="number">13.2</span>     <span class="number">236</span>       <span class="number">58</span> <span class="number">21.2</span></span><br><span class="line">Alaska    <span class="number">10.0</span>     <span class="number">263</span>       <span class="number">48</span> <span class="number">44.5</span></span><br><span class="line"><span class="operator">&gt;</span> data2 <span class="operator">&lt;-</span>tail<span class="punctuation">(</span>USArrests<span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> data2</span><br><span class="line">          Murder Assault UrbanPop Rape</span><br><span class="line">Wisconsin    <span class="number">2.6</span>      <span class="number">53</span>       <span class="number">66</span> <span class="number">10.8</span></span><br><span class="line">Wyoming      <span class="number">6.8</span>     <span class="number">161</span>       <span class="number">60</span> <span class="number">15.6</span></span><br><span class="line"><span class="operator">&gt;</span> rbind<span class="punctuation">(</span>data1<span class="punctuation">,</span>data2<span class="punctuation">)</span></span><br><span class="line">          Murder Assault UrbanPop Rape</span><br><span class="line">Alabama     <span class="number">13.2</span>     <span class="number">236</span>       <span class="number">58</span> <span class="number">21.2</span></span><br><span class="line">Alaska      <span class="number">10.0</span>     <span class="number">263</span>       <span class="number">48</span> <span class="number">44.5</span></span><br><span class="line">Wisconsin    <span class="number">2.6</span>      <span class="number">53</span>       <span class="number">66</span> <span class="number">10.8</span></span><br><span class="line">Wyoming      <span class="number">6.8</span>     <span class="number">161</span>       <span class="number">60</span> <span class="number">15.6</span></span><br></pre></td></tr></table></figure><p>总结：可以通过<code>cbind</code>和<code>rbind</code>函数进行列合并和行合并，合并列很容易，合并行需要有相同的列名。<code>cbind</code>和<code>rbind</code>也可以用于矩阵合并。在使用<code>cbind</code>和<code>rbind</code>中需要有相同的行数和列数，否则会出现问题。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> datadata1 <span class="operator">&lt;-</span> USArrests<span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> datadata1</span><br><span class="line">           Murder Assault UrbanPop Rape</span><br><span class="line">Alabama      <span class="number">13.2</span>     <span class="number">236</span>       <span class="number">58</span> <span class="number">21.2</span></span><br><span class="line">Alaska       <span class="number">10.0</span>     <span class="number">263</span>       <span class="number">48</span> <span class="number">44.5</span></span><br><span class="line">Arizona       <span class="number">8.1</span>     <span class="number">294</span>       <span class="number">80</span> <span class="number">31.0</span></span><br><span class="line">Arkansas      <span class="number">8.8</span>     <span class="number">190</span>       <span class="number">50</span> <span class="number">19.5</span></span><br><span class="line">California    <span class="number">9.0</span>     <span class="number">276</span>       <span class="number">91</span> <span class="number">40.6</span></span><br><span class="line"><span class="operator">&gt;</span> datadata2 <span class="operator">&lt;-</span> USArrests<span class="punctuation">[</span><span class="number">3</span><span class="operator">:</span><span class="number">8</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> datadata2</span><br><span class="line">            Murder Assault UrbanPop Rape</span><br><span class="line">Arizona        <span class="number">8.1</span>     <span class="number">294</span>       <span class="number">80</span> <span class="number">31.0</span></span><br><span class="line">Arkansas       <span class="number">8.8</span>     <span class="number">190</span>       <span class="number">50</span> <span class="number">19.5</span></span><br><span class="line">California     <span class="number">9.0</span>     <span class="number">276</span>       <span class="number">91</span> <span class="number">40.6</span></span><br><span class="line">Colorado       <span class="number">7.9</span>     <span class="number">204</span>       <span class="number">78</span> <span class="number">38.7</span></span><br><span class="line">Connecticut    <span class="number">3.3</span>     <span class="number">110</span>       <span class="number">77</span> <span class="number">11.1</span></span><br><span class="line">Delaware       <span class="number">5.9</span>     <span class="number">238</span>       <span class="number">72</span> <span class="number">15.8</span></span><br><span class="line"><span class="operator">&gt;</span> datadata3 <span class="operator">&lt;-</span> rbind<span class="punctuation">(</span>datadata1<span class="punctuation">,</span>datadata2<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> datadata3</span><br><span class="line">            Murder Assault UrbanPop Rape</span><br><span class="line">Alabama       <span class="number">13.2</span>     <span class="number">236</span>       <span class="number">58</span> <span class="number">21.2</span></span><br><span class="line">Alaska        <span class="number">10.0</span>     <span class="number">263</span>       <span class="number">48</span> <span class="number">44.5</span></span><br><span class="line">Arizona        <span class="number">8.1</span>     <span class="number">294</span>       <span class="number">80</span> <span class="number">31.0</span></span><br><span class="line">Arkansas       <span class="number">8.8</span>     <span class="number">190</span>       <span class="number">50</span> <span class="number">19.5</span></span><br><span class="line">California     <span class="number">9.0</span>     <span class="number">276</span>       <span class="number">91</span> <span class="number">40.6</span></span><br><span class="line">Arizona1       <span class="number">8.1</span>     <span class="number">294</span>       <span class="number">80</span> <span class="number">31.0</span></span><br><span class="line">Arkansas1      <span class="number">8.8</span>     <span class="number">190</span>       <span class="number">50</span> <span class="number">19.5</span></span><br><span class="line">California1    <span class="number">9.0</span>     <span class="number">276</span>       <span class="number">91</span> <span class="number">40.6</span></span><br><span class="line">Colorado       <span class="number">7.9</span>     <span class="number">204</span>       <span class="number">78</span> <span class="number">38.7</span></span><br><span class="line">Connecticut    <span class="number">3.3</span>     <span class="number">110</span>       <span class="number">77</span> <span class="number">11.1</span></span><br><span class="line">Delaware       <span class="number">5.9</span>     <span class="number">238</span>       <span class="number">72</span> <span class="number">15.8</span></span><br><span class="line"><span class="operator">&gt;</span> duplicated<span class="punctuation">(</span>datadata3<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span>  <span class="literal">TRUE</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></span><br><span class="line"> <span class="operator">&gt;</span> datadata3<span class="punctuation">[</span>duplicated<span class="punctuation">(</span>datadata3<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">            Murder Assault UrbanPop Rape</span><br><span class="line">Arizona1       <span class="number">8.1</span>     <span class="number">294</span>       <span class="number">80</span> <span class="number">31.0</span></span><br><span class="line">Arkansas1      <span class="number">8.8</span>     <span class="number">190</span>       <span class="number">50</span> <span class="number">19.5</span></span><br><span class="line">California1    <span class="number">9.0</span>     <span class="number">276</span>       <span class="number">91</span> <span class="number">40.6</span></span><br><span class="line"><span class="operator">&gt;</span> datadata3<span class="punctuation">[</span><span class="operator">!</span>duplicated<span class="punctuation">(</span>datadata3<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">            Murder Assault UrbanPop Rape</span><br><span class="line">Alabama       <span class="number">13.2</span>     <span class="number">236</span>       <span class="number">58</span> <span class="number">21.2</span></span><br><span class="line">Alaska        <span class="number">10.0</span>     <span class="number">263</span>       <span class="number">48</span> <span class="number">44.5</span></span><br><span class="line">Arizona        <span class="number">8.1</span>     <span class="number">294</span>       <span class="number">80</span> <span class="number">31.0</span></span><br><span class="line">Arkansas       <span class="number">8.8</span>     <span class="number">190</span>       <span class="number">50</span> <span class="number">19.5</span></span><br><span class="line">California     <span class="number">9.0</span>     <span class="number">276</span>       <span class="number">91</span> <span class="number">40.6</span></span><br><span class="line">Colorado       <span class="number">7.9</span>     <span class="number">204</span>       <span class="number">78</span> <span class="number">38.7</span></span><br><span class="line">Connecticut    <span class="number">3.3</span>     <span class="number">110</span>       <span class="number">77</span> <span class="number">11.1</span></span><br><span class="line">Delaware       <span class="number">5.9</span>     <span class="number">238</span>       <span class="number">72</span> <span class="number">15.8</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">length</span><span class="punctuation">(</span>rownames<span class="punctuation">(</span>datadata3<span class="punctuation">[</span><span class="operator">!</span>duplicated<span class="punctuation">(</span>datadata3<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><p>总结：<code>rbind</code>合并并不会去除重复，可以通过行名来判断是否重复。可以通过<code>duplicated</code>来判断是否重复，还可以通过<code>datadata3[duplicated(datadata3),]</code>来提取重复的部分，且重复的行名后面自动添加了<code>1</code>。如果加上取反符号<code>!</code>则取出非重复的部分。这里使用逻辑值对函数进行索引。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> unique<span class="punctuation">(</span>datadata3<span class="punctuation">)</span></span><br><span class="line">            Murder Assault UrbanPop Rape</span><br><span class="line">Alabama       <span class="number">13.2</span>     <span class="number">236</span>       <span class="number">58</span> <span class="number">21.2</span></span><br><span class="line">Alaska        <span class="number">10.0</span>     <span class="number">263</span>       <span class="number">48</span> <span class="number">44.5</span></span><br><span class="line">Arizona        <span class="number">8.1</span>     <span class="number">294</span>       <span class="number">80</span> <span class="number">31.0</span></span><br><span class="line">Arkansas       <span class="number">8.8</span>     <span class="number">190</span>       <span class="number">50</span> <span class="number">19.5</span></span><br><span class="line">California     <span class="number">9.0</span>     <span class="number">276</span>       <span class="number">91</span> <span class="number">40.6</span></span><br><span class="line">Colorado       <span class="number">7.9</span>     <span class="number">204</span>       <span class="number">78</span> <span class="number">38.7</span></span><br><span class="line">Connecticut    <span class="number">3.3</span>     <span class="number">110</span>       <span class="number">77</span> <span class="number">11.1</span></span><br><span class="line">Delaware       <span class="number">5.9</span>     <span class="number">238</span>       <span class="number">72</span> <span class="number">15.8</span></span><br></pre></td></tr></table></figure><p>总结：也可以用<code>unique</code>函数直接去除重复的行。</p><h3 id="4-4-数据翻转">4.4 数据翻转</h3><p>翻转操作：将所有的行和列进行翻转</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> newdata <span class="operator">&lt;-</span> USArrests<span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> newdata</span><br><span class="line">           Murder Assault UrbanPop Rape</span><br><span class="line">Alabama      <span class="number">13.2</span>     <span class="number">236</span>       <span class="number">58</span> <span class="number">21.2</span></span><br><span class="line">Alaska       <span class="number">10.0</span>     <span class="number">263</span>       <span class="number">48</span> <span class="number">44.5</span></span><br><span class="line">Arizona       <span class="number">8.1</span>     <span class="number">294</span>       <span class="number">80</span> <span class="number">31.0</span></span><br><span class="line">Arkansas      <span class="number">8.8</span>     <span class="number">190</span>       <span class="number">50</span> <span class="number">19.5</span></span><br><span class="line">California    <span class="number">9.0</span>     <span class="number">276</span>       <span class="number">91</span> <span class="number">40.6</span></span><br><span class="line"><span class="operator">&gt;</span> scractm_newdata <span class="operator">&lt;-</span> t<span class="punctuation">(</span>newdata<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> scractm_newdata</span><br><span class="line">         Alabama Alaska Arizona Arkansas California</span><br><span class="line">Murder      <span class="number">13.2</span>   <span class="number">10.0</span>     <span class="number">8.1</span>      <span class="number">8.8</span>        <span class="number">9.0</span></span><br><span class="line">Assault    <span class="number">236.0</span>  <span class="number">263.0</span>   <span class="number">294.0</span>    <span class="number">190.0</span>      <span class="number">276.0</span></span><br><span class="line">UrbanPop    <span class="number">58.0</span>   <span class="number">48.0</span>    <span class="number">80.0</span>     <span class="number">50.0</span>       <span class="number">91.0</span></span><br><span class="line">Rape        <span class="number">21.2</span>   <span class="number">44.5</span>    <span class="number">31.0</span>     <span class="number">19.5</span>       <span class="number">40.6</span></span><br></pre></td></tr></table></figure><p>单独进行某一行或者列进行反向，即进行前后顺序调换</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="built_in">letters</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;a&quot;</span> <span class="string">&quot;b&quot;</span> <span class="string">&quot;c&quot;</span> <span class="string">&quot;d&quot;</span> <span class="string">&quot;e&quot;</span> <span class="string">&quot;f&quot;</span> <span class="string">&quot;g&quot;</span> <span class="string">&quot;h&quot;</span> <span class="string">&quot;i&quot;</span> <span class="string">&quot;j&quot;</span> <span class="string">&quot;k&quot;</span> <span class="string">&quot;l&quot;</span> <span class="string">&quot;m&quot;</span> <span class="string">&quot;n&quot;</span> <span class="string">&quot;o&quot;</span> <span class="string">&quot;p&quot;</span> <span class="string">&quot;q&quot;</span> <span class="string">&quot;r&quot;</span> <span class="string">&quot;s&quot;</span> <span class="string">&quot;t&quot;</span> <span class="string">&quot;u&quot;</span> <span class="string">&quot;v&quot;</span> <span class="string">&quot;w&quot;</span> <span class="string">&quot;x&quot;</span> <span class="string">&quot;y&quot;</span> <span class="string">&quot;z&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> rev<span class="punctuation">(</span><span class="built_in">letters</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;z&quot;</span> <span class="string">&quot;y&quot;</span> <span class="string">&quot;x&quot;</span> <span class="string">&quot;w&quot;</span> <span class="string">&quot;v&quot;</span> <span class="string">&quot;u&quot;</span> <span class="string">&quot;t&quot;</span> <span class="string">&quot;s&quot;</span> <span class="string">&quot;r&quot;</span> <span class="string">&quot;q&quot;</span> <span class="string">&quot;p&quot;</span> <span class="string">&quot;o&quot;</span> <span class="string">&quot;n&quot;</span> <span class="string">&quot;m&quot;</span> <span class="string">&quot;l&quot;</span> <span class="string">&quot;k&quot;</span> <span class="string">&quot;j&quot;</span> <span class="string">&quot;i&quot;</span> <span class="string">&quot;h&quot;</span> <span class="string">&quot;g&quot;</span> <span class="string">&quot;f&quot;</span> <span class="string">&quot;e&quot;</span> <span class="string">&quot;d&quot;</span> <span class="string">&quot;c&quot;</span> <span class="string">&quot;b&quot;</span> <span class="string">&quot;a&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> women</span><br><span class="line">   height weight</span><br><span class="line"><span class="number">1</span>      <span class="number">58</span>    <span class="number">115</span></span><br><span class="line"><span class="number">2</span>      <span class="number">59</span>    <span class="number">117</span></span><br><span class="line"><span class="number">3</span>      <span class="number">60</span>    <span class="number">120</span></span><br><span class="line">...</span><br><span class="line"><span class="number">13</span>     <span class="number">70</span>    <span class="number">154</span></span><br><span class="line"><span class="number">14</span>     <span class="number">71</span>    <span class="number">159</span></span><br><span class="line"><span class="number">15</span>     <span class="number">72</span>    <span class="number">164</span></span><br><span class="line"><span class="operator">&gt;</span> rownames<span class="punctuation">(</span>women<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;1&quot;</span>  <span class="string">&quot;2&quot;</span>  <span class="string">&quot;3&quot;</span>  <span class="string">&quot;4&quot;</span>  <span class="string">&quot;5&quot;</span>  <span class="string">&quot;6&quot;</span>  <span class="string">&quot;7&quot;</span>  <span class="string">&quot;8&quot;</span>  <span class="string">&quot;9&quot;</span>  <span class="string">&quot;10&quot;</span> <span class="string">&quot;11&quot;</span> <span class="string">&quot;12&quot;</span> <span class="string">&quot;13&quot;</span> <span class="string">&quot;14&quot;</span> <span class="string">&quot;15&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> rev<span class="punctuation">(</span>rownames<span class="punctuation">(</span>women<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;15&quot;</span> <span class="string">&quot;14&quot;</span> <span class="string">&quot;13&quot;</span> <span class="string">&quot;12&quot;</span> <span class="string">&quot;11&quot;</span> <span class="string">&quot;10&quot;</span> <span class="string">&quot;9&quot;</span>  <span class="string">&quot;8&quot;</span>  <span class="string">&quot;7&quot;</span>  <span class="string">&quot;6&quot;</span>  <span class="string">&quot;5&quot;</span>  <span class="string">&quot;4&quot;</span>  <span class="string">&quot;3&quot;</span>  <span class="string">&quot;2&quot;</span>  <span class="string">&quot;1&quot;</span> </span><br><span class="line"><span class="operator">&gt;</span> women<span class="punctuation">[</span>rev<span class="punctuation">(</span>rownames<span class="punctuation">(</span>women<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">   height weight</span><br><span class="line"><span class="number">15</span>     <span class="number">72</span>    <span class="number">164</span></span><br><span class="line"><span class="number">14</span>     <span class="number">71</span>    <span class="number">159</span></span><br><span class="line"><span class="number">13</span>     <span class="number">70</span>    <span class="number">154</span></span><br><span class="line">...</span><br><span class="line"><span class="number">3</span>      <span class="number">60</span>    <span class="number">120</span></span><br><span class="line"><span class="number">2</span>      <span class="number">59</span>    <span class="number">117</span></span><br><span class="line"><span class="number">1</span>      <span class="number">58</span>    <span class="number">115</span></span><br></pre></td></tr></table></figure><p>总结：可以通过<code>rev</code>函数进行前后顺序翻转。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> data.frame<span class="punctuation">(</span>women<span class="operator">$</span>height<span class="operator">*</span><span class="number">2.54</span><span class="punctuation">,</span>women<span class="operator">$</span>weight<span class="punctuation">)</span></span><br><span class="line">   women.height...2.54 women.weight</span><br><span class="line"><span class="number">1</span>               <span class="number">147.32</span>          <span class="number">115</span></span><br><span class="line"><span class="number">2</span>               <span class="number">149.86</span>          <span class="number">117</span></span><br><span class="line"><span class="number">3</span>               <span class="number">152.40</span>          <span class="number">120</span></span><br><span class="line">...</span><br><span class="line"><span class="number">13</span>              <span class="number">177.80</span>          <span class="number">154</span></span><br><span class="line"><span class="number">14</span>              <span class="number">180.34</span>          <span class="number">159</span></span><br><span class="line"><span class="number">15</span>              <span class="number">182.88</span>          <span class="number">164</span></span><br><span class="line"><span class="operator">&gt;</span> data.frame<span class="punctuation">(</span>height <span class="operator">=</span> women<span class="operator">$</span>height<span class="operator">*</span><span class="number">2.54</span><span class="punctuation">,</span>weight <span class="operator">=</span> women<span class="operator">$</span>weight<span class="punctuation">)</span></span><br><span class="line">   height weight</span><br><span class="line"><span class="number">1</span>  <span class="number">147.32</span>    <span class="number">115</span></span><br><span class="line"><span class="number">2</span>  <span class="number">149.86</span>    <span class="number">117</span></span><br><span class="line"><span class="number">3</span>  <span class="number">152.40</span>    <span class="number">120</span></span><br><span class="line">...</span><br><span class="line"><span class="number">13</span> <span class="number">177.80</span>    <span class="number">154</span></span><br><span class="line"><span class="number">14</span> <span class="number">180.34</span>    <span class="number">159</span></span><br><span class="line"><span class="number">15</span> <span class="number">182.88</span>    <span class="number">164</span></span><br><span class="line"><span class="operator">&gt;</span> transform<span class="punctuation">(</span>women<span class="punctuation">,</span>height<span class="operator">=</span>height<span class="operator">*</span><span class="number">2.54</span><span class="punctuation">)</span></span><br><span class="line">   height weight</span><br><span class="line"><span class="number">1</span>  <span class="number">147.32</span>    <span class="number">115</span></span><br><span class="line"><span class="number">2</span>  <span class="number">149.86</span>    <span class="number">117</span></span><br><span class="line"><span class="number">3</span>  <span class="number">152.40</span>    <span class="number">120</span></span><br><span class="line">...</span><br><span class="line"><span class="number">13</span> <span class="number">177.80</span>    <span class="number">154</span></span><br><span class="line"><span class="number">14</span> <span class="number">180.34</span>    <span class="number">159</span></span><br><span class="line"><span class="number">15</span> <span class="number">182.88</span>    <span class="number">164</span></span><br><span class="line"><span class="operator">&gt;</span> transform<span class="punctuation">(</span>women<span class="punctuation">,</span>cm<span class="operator">=</span>height<span class="operator">*</span><span class="number">2.54</span><span class="punctuation">)</span></span><br><span class="line">   height weight     cm</span><br><span class="line"><span class="number">1</span>      <span class="number">58</span>    <span class="number">115</span> <span class="number">147.32</span></span><br><span class="line"><span class="number">2</span>      <span class="number">59</span>    <span class="number">117</span> <span class="number">149.86</span></span><br><span class="line"><span class="number">3</span>      <span class="number">60</span>    <span class="number">120</span> <span class="number">152.40</span></span><br><span class="line">...</span><br><span class="line"><span class="number">13</span>     <span class="number">70</span>    <span class="number">154</span> <span class="number">177.80</span></span><br><span class="line"><span class="number">14</span>     <span class="number">71</span>    <span class="number">159</span> <span class="number">180.34</span></span><br><span class="line"><span class="number">15</span>     <span class="number">72</span>    <span class="number">164</span> <span class="number">182.88</span></span><br></pre></td></tr></table></figure><p>总结：如果想修改某一行或者某一列的数据，可以通过<code>data.frame</code>进行重新组合，也可以采用更高效的方法，通过<code>transform</code>函数进行修改，也可以新增加一列。</p><h3 id="4-5-数据排序">4.5 数据排序</h3><p>数据排序有三种函数：<code>sort</code>、<code>order</code>、<code>rank</code></p><p>sort是对向量进行排序，返回值是排序后的结果向量。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> rivers</span><br><span class="line">  <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">735</span>  <span class="number">320</span>  <span class="number">325</span>  <span class="number">392</span>  <span class="number">524</span>  <span class="number">450</span> <span class="number">1459</span>  <span class="number">135</span>  <span class="number">465</span>  <span class="number">600</span>  <span class="number">330</span>  <span class="number">336</span>  <span class="number">280</span>  <span class="number">315</span>  <span class="number">870</span>  <span class="number">906</span>  <span class="number">202</span>  <span class="number">329</span>  <span class="number">290</span> <span class="number">1000</span>  <span class="number">600</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">22</span><span class="punctuation">]</span>  <span class="number">505</span> <span class="number">1450</span>  <span class="number">840</span> <span class="number">1243</span>  <span class="number">890</span>  <span class="number">350</span>  <span class="number">407</span>  <span class="number">286</span>  <span class="number">280</span>  <span class="number">525</span>  <span class="number">720</span>  <span class="number">390</span>  <span class="number">250</span>  <span class="number">327</span>  <span class="number">230</span>  <span class="number">265</span>  <span class="number">850</span>  <span class="number">210</span>  <span class="number">630</span>  <span class="number">260</span>  <span class="number">230</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">43</span><span class="punctuation">]</span>  <span class="number">360</span>  <span class="number">730</span>  <span class="number">600</span>  <span class="number">306</span>  <span class="number">390</span>  <span class="number">420</span>  <span class="number">291</span>  <span class="number">710</span>  <span class="number">340</span>  <span class="number">217</span>  <span class="number">281</span>  <span class="number">352</span>  <span class="number">259</span>  <span class="number">250</span>  <span class="number">470</span>  <span class="number">680</span>  <span class="number">570</span>  <span class="number">350</span>  <span class="number">300</span>  <span class="number">560</span>  <span class="number">900</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">64</span><span class="punctuation">]</span>  <span class="number">625</span>  <span class="number">332</span> <span class="number">2348</span> <span class="number">1171</span> <span class="number">3710</span> <span class="number">2315</span> <span class="number">2533</span>  <span class="number">780</span>  <span class="number">280</span>  <span class="number">410</span>  <span class="number">460</span>  <span class="number">260</span>  <span class="number">255</span>  <span class="number">431</span>  <span class="number">350</span>  <span class="number">760</span>  <span class="number">618</span>  <span class="number">338</span>  <span class="number">981</span> <span class="number">1306</span>  <span class="number">500</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">85</span><span class="punctuation">]</span>  <span class="number">696</span>  <span class="number">605</span>  <span class="number">250</span>  <span class="number">411</span> <span class="number">1054</span>  <span class="number">735</span>  <span class="number">233</span>  <span class="number">435</span>  <span class="number">490</span>  <span class="number">310</span>  <span class="number">460</span>  <span class="number">383</span>  <span class="number">375</span> <span class="number">1270</span>  <span class="number">545</span>  <span class="number">445</span> <span class="number">1885</span>  <span class="number">380</span>  <span class="number">300</span>  <span class="number">380</span>  <span class="number">377</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">106</span><span class="punctuation">]</span>  <span class="number">425</span>  <span class="number">276</span>  <span class="number">210</span>  <span class="number">800</span>  <span class="number">420</span>  <span class="number">350</span>  <span class="number">360</span>  <span class="number">538</span> <span class="number">1100</span> <span class="number">1205</span>  <span class="number">314</span>  <span class="number">237</span>  <span class="number">610</span>  <span class="number">360</span>  <span class="number">540</span> <span class="number">1038</span>  <span class="number">424</span>  <span class="number">310</span>  <span class="number">300</span>  <span class="number">444</span>  <span class="number">301</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">127</span><span class="punctuation">]</span>  <span class="number">268</span>  <span class="number">620</span>  <span class="number">215</span>  <span class="number">652</span>  <span class="number">900</span>  <span class="number">525</span>  <span class="number">246</span>  <span class="number">360</span>  <span class="number">529</span>  <span class="number">500</span>  <span class="number">720</span>  <span class="number">270</span>  <span class="number">430</span>  <span class="number">671</span> <span class="number">1770</span></span><br><span class="line"><span class="operator">&gt;</span> sort<span class="punctuation">(</span>rivers<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">135</span>  <span class="number">202</span>  <span class="number">210</span>  <span class="number">210</span>  <span class="number">215</span>  <span class="number">217</span>  <span class="number">230</span>  <span class="number">230</span>  <span class="number">233</span>  <span class="number">237</span>  <span class="number">246</span>  <span class="number">250</span>  <span class="number">250</span>  <span class="number">250</span>  <span class="number">255</span>  <span class="number">259</span>  <span class="number">260</span>  <span class="number">260</span>  <span class="number">265</span>  <span class="number">268</span>  <span class="number">270</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">22</span><span class="punctuation">]</span>  <span class="number">276</span>  <span class="number">280</span>  <span class="number">280</span>  <span class="number">280</span>  <span class="number">281</span>  <span class="number">286</span>  <span class="number">290</span>  <span class="number">291</span>  <span class="number">300</span>  <span class="number">300</span>  <span class="number">300</span>  <span class="number">301</span>  <span class="number">306</span>  <span class="number">310</span>  <span class="number">310</span>  <span class="number">314</span>  <span class="number">315</span>  <span class="number">320</span>  <span class="number">325</span>  <span class="number">327</span>  <span class="number">329</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">43</span><span class="punctuation">]</span>  <span class="number">330</span>  <span class="number">332</span>  <span class="number">336</span>  <span class="number">338</span>  <span class="number">340</span>  <span class="number">350</span>  <span class="number">350</span>  <span class="number">350</span>  <span class="number">350</span>  <span class="number">352</span>  <span class="number">360</span>  <span class="number">360</span>  <span class="number">360</span>  <span class="number">360</span>  <span class="number">375</span>  <span class="number">377</span>  <span class="number">380</span>  <span class="number">380</span>  <span class="number">383</span>  <span class="number">390</span>  <span class="number">390</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">64</span><span class="punctuation">]</span>  <span class="number">392</span>  <span class="number">407</span>  <span class="number">410</span>  <span class="number">411</span>  <span class="number">420</span>  <span class="number">420</span>  <span class="number">424</span>  <span class="number">425</span>  <span class="number">430</span>  <span class="number">431</span>  <span class="number">435</span>  <span class="number">444</span>  <span class="number">445</span>  <span class="number">450</span>  <span class="number">460</span>  <span class="number">460</span>  <span class="number">465</span>  <span class="number">470</span>  <span class="number">490</span>  <span class="number">500</span>  <span class="number">500</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">85</span><span class="punctuation">]</span>  <span class="number">505</span>  <span class="number">524</span>  <span class="number">525</span>  <span class="number">525</span>  <span class="number">529</span>  <span class="number">538</span>  <span class="number">540</span>  <span class="number">545</span>  <span class="number">560</span>  <span class="number">570</span>  <span class="number">600</span>  <span class="number">600</span>  <span class="number">600</span>  <span class="number">605</span>  <span class="number">610</span>  <span class="number">618</span>  <span class="number">620</span>  <span class="number">625</span>  <span class="number">630</span>  <span class="number">652</span>  <span class="number">671</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">106</span><span class="punctuation">]</span>  <span class="number">680</span>  <span class="number">696</span>  <span class="number">710</span>  <span class="number">720</span>  <span class="number">720</span>  <span class="number">730</span>  <span class="number">735</span>  <span class="number">735</span>  <span class="number">760</span>  <span class="number">780</span>  <span class="number">800</span>  <span class="number">840</span>  <span class="number">850</span>  <span class="number">870</span>  <span class="number">890</span>  <span class="number">900</span>  <span class="number">900</span>  <span class="number">906</span>  <span class="number">981</span> <span class="number">1000</span> <span class="number">1038</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">127</span><span class="punctuation">]</span> <span class="number">1054</span> <span class="number">1100</span> <span class="number">1171</span> <span class="number">1205</span> <span class="number">1243</span> <span class="number">1270</span> <span class="number">1306</span> <span class="number">1450</span> <span class="number">1459</span> <span class="number">1770</span> <span class="number">1885</span> <span class="number">2315</span> <span class="number">2348</span> <span class="number">2533</span> <span class="number">3710</span></span><br><span class="line"><span class="operator">&gt;</span> rev<span class="punctuation">(</span>sort<span class="punctuation">(</span>rivers<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">3710</span> <span class="number">2533</span> <span class="number">2348</span> <span class="number">2315</span> <span class="number">1885</span> <span class="number">1770</span> <span class="number">1459</span> <span class="number">1450</span> <span class="number">1306</span> <span class="number">1270</span> <span class="number">1243</span> <span class="number">1205</span> <span class="number">1171</span> <span class="number">1100</span> <span class="number">1054</span> <span class="number">1038</span> <span class="number">1000</span>  <span class="number">981</span>  <span class="number">906</span>  <span class="number">900</span>  <span class="number">900</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">22</span><span class="punctuation">]</span>  <span class="number">890</span>  <span class="number">870</span>  <span class="number">850</span>  <span class="number">840</span>  <span class="number">800</span>  <span class="number">780</span>  <span class="number">760</span>  <span class="number">735</span>  <span class="number">735</span>  <span class="number">730</span>  <span class="number">720</span>  <span class="number">720</span>  <span class="number">710</span>  <span class="number">696</span>  <span class="number">680</span>  <span class="number">671</span>  <span class="number">652</span>  <span class="number">630</span>  <span class="number">625</span>  <span class="number">620</span>  <span class="number">618</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">43</span><span class="punctuation">]</span>  <span class="number">610</span>  <span class="number">605</span>  <span class="number">600</span>  <span class="number">600</span>  <span class="number">600</span>  <span class="number">570</span>  <span class="number">560</span>  <span class="number">545</span>  <span class="number">540</span>  <span class="number">538</span>  <span class="number">529</span>  <span class="number">525</span>  <span class="number">525</span>  <span class="number">524</span>  <span class="number">505</span>  <span class="number">500</span>  <span class="number">500</span>  <span class="number">490</span>  <span class="number">470</span>  <span class="number">465</span>  <span class="number">460</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">64</span><span class="punctuation">]</span>  <span class="number">460</span>  <span class="number">450</span>  <span class="number">445</span>  <span class="number">444</span>  <span class="number">435</span>  <span class="number">431</span>  <span class="number">430</span>  <span class="number">425</span>  <span class="number">424</span>  <span class="number">420</span>  <span class="number">420</span>  <span class="number">411</span>  <span class="number">410</span>  <span class="number">407</span>  <span class="number">392</span>  <span class="number">390</span>  <span class="number">390</span>  <span class="number">383</span>  <span class="number">380</span>  <span class="number">380</span>  <span class="number">377</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">85</span><span class="punctuation">]</span>  <span class="number">375</span>  <span class="number">360</span>  <span class="number">360</span>  <span class="number">360</span>  <span class="number">360</span>  <span class="number">352</span>  <span class="number">350</span>  <span class="number">350</span>  <span class="number">350</span>  <span class="number">350</span>  <span class="number">340</span>  <span class="number">338</span>  <span class="number">336</span>  <span class="number">332</span>  <span class="number">330</span>  <span class="number">329</span>  <span class="number">327</span>  <span class="number">325</span>  <span class="number">320</span>  <span class="number">315</span>  <span class="number">314</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">106</span><span class="punctuation">]</span>  <span class="number">310</span>  <span class="number">310</span>  <span class="number">306</span>  <span class="number">301</span>  <span class="number">300</span>  <span class="number">300</span>  <span class="number">300</span>  <span class="number">291</span>  <span class="number">290</span>  <span class="number">286</span>  <span class="number">281</span>  <span class="number">280</span>  <span class="number">280</span>  <span class="number">280</span>  <span class="number">276</span>  <span class="number">270</span>  <span class="number">268</span>  <span class="number">265</span>  <span class="number">260</span>  <span class="number">260</span>  <span class="number">259</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">127</span><span class="punctuation">]</span>  <span class="number">255</span>  <span class="number">250</span>  <span class="number">250</span>  <span class="number">250</span>  <span class="number">246</span>  <span class="number">237</span>  <span class="number">233</span>  <span class="number">230</span>  <span class="number">230</span>  <span class="number">217</span>  <span class="number">215</span>  <span class="number">210</span>  <span class="number">210</span>  <span class="number">202</span>  <span class="number">135</span></span><br><span class="line"><span class="operator">&gt;</span> sort<span class="punctuation">(</span>state.name<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Alabama&quot;</span>        <span class="string">&quot;Alaska&quot;</span>         <span class="string">&quot;Arizona&quot;</span>        <span class="string">&quot;Arkansas&quot;</span>       <span class="string">&quot;California&quot;</span>     <span class="string">&quot;Colorado&quot;</span>      </span><br><span class="line"> <span class="punctuation">[</span><span class="number">7</span><span class="punctuation">]</span> <span class="string">&quot;Connecticut&quot;</span>    <span class="string">&quot;Delaware&quot;</span>       <span class="string">&quot;Florida&quot;</span>        <span class="string">&quot;Georgia&quot;</span>        <span class="string">&quot;Hawaii&quot;</span>         <span class="string">&quot;Idaho&quot;</span>         </span><br><span class="line"><span class="punctuation">[</span><span class="number">13</span><span class="punctuation">]</span> <span class="string">&quot;Illinois&quot;</span>       <span class="string">&quot;Indiana&quot;</span>        <span class="string">&quot;Iowa&quot;</span>           <span class="string">&quot;Kansas&quot;</span>         <span class="string">&quot;Kentucky&quot;</span>       <span class="string">&quot;Louisiana&quot;</span>     </span><br><span class="line"><span class="punctuation">[</span><span class="number">19</span><span class="punctuation">]</span> <span class="string">&quot;Maine&quot;</span>          <span class="string">&quot;Maryland&quot;</span>       <span class="string">&quot;Massachusetts&quot;</span>  <span class="string">&quot;Michigan&quot;</span>       <span class="string">&quot;Minnesota&quot;</span>      <span class="string">&quot;Mississippi&quot;</span>   </span><br><span class="line"><span class="punctuation">[</span><span class="number">25</span><span class="punctuation">]</span> <span class="string">&quot;Missouri&quot;</span>       <span class="string">&quot;Montana&quot;</span>        <span class="string">&quot;Nebraska&quot;</span>       <span class="string">&quot;Nevada&quot;</span>         <span class="string">&quot;New Hampshire&quot;</span>  <span class="string">&quot;New Jersey&quot;</span>    </span><br><span class="line"><span class="punctuation">[</span><span class="number">31</span><span class="punctuation">]</span> <span class="string">&quot;New Mexico&quot;</span>     <span class="string">&quot;New York&quot;</span>       <span class="string">&quot;North Carolina&quot;</span> <span class="string">&quot;North Dakota&quot;</span>   <span class="string">&quot;Ohio&quot;</span>           <span class="string">&quot;Oklahoma&quot;</span>      </span><br><span class="line"><span class="punctuation">[</span><span class="number">37</span><span class="punctuation">]</span> <span class="string">&quot;Oregon&quot;</span>         <span class="string">&quot;Pennsylvania&quot;</span>   <span class="string">&quot;Rhode Island&quot;</span>   <span class="string">&quot;South Carolina&quot;</span> <span class="string">&quot;South Dakota&quot;</span>   <span class="string">&quot;Tennessee&quot;</span>     </span><br><span class="line"><span class="punctuation">[</span><span class="number">43</span><span class="punctuation">]</span> <span class="string">&quot;Texas&quot;</span>          <span class="string">&quot;Utah&quot;</span>           <span class="string">&quot;Vermont&quot;</span>        <span class="string">&quot;Virginia&quot;</span>       <span class="string">&quot;Washington&quot;</span>     <span class="string">&quot;West Virginia&quot;</span> </span><br><span class="line"><span class="punctuation">[</span><span class="number">49</span><span class="punctuation">]</span> <span class="string">&quot;Wisconsin&quot;</span>      <span class="string">&quot;Wyoming&quot;</span>       </span><br></pre></td></tr></table></figure><p>总结：<code>sort</code>默认从小到大排列。字符串是按照ASCII码值顺序。如果需要从大到小排序，可以通过<code>rev</code>函数组合使用。sort只能用于向量，不能用于数据框的排序。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mtcars<span class="punctuation">[</span>sort<span class="punctuation">(</span>rownames<span class="punctuation">(</span>mtcars<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">                    cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line">AMC Javelin           <span class="number">8</span> <span class="number">304.0</span> <span class="number">150</span> <span class="number">3.15</span> <span class="number">3.435</span> <span class="number">17.30</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span></span><br><span class="line">Cadillac Fleetwood    <span class="number">8</span> <span class="number">472.0</span> <span class="number">205</span> <span class="number">2.93</span> <span class="number">5.250</span> <span class="number">17.98</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Camaro Z28            <span class="number">8</span> <span class="number">350.0</span> <span class="number">245</span> <span class="number">3.73</span> <span class="number">3.840</span> <span class="number">15.41</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">...</span><br><span class="line">Toyota Corona         <span class="number">4</span> <span class="number">120.1</span>  <span class="number">97</span> <span class="number">3.70</span> <span class="number">2.465</span> <span class="number">20.01</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line">Valiant               <span class="number">6</span> <span class="number">225.0</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line">Volvo <span class="number">142</span>E            <span class="number">4</span> <span class="number">121.0</span> <span class="number">109</span> <span class="number">4.11</span> <span class="number">2.780</span> <span class="number">18.60</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br></pre></td></tr></table></figure><p>总结：可以根据行的名称进行排序。</p><p>order排序：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> sort<span class="punctuation">(</span>rivers<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">135</span>  <span class="number">202</span>  <span class="number">210</span>  <span class="number">210</span>  <span class="number">215</span>  <span class="number">217</span>  <span class="number">230</span>  <span class="number">230</span>  <span class="number">233</span>  <span class="number">237</span>  <span class="number">246</span>  <span class="number">250</span>  <span class="number">250</span>  <span class="number">250</span>  <span class="number">255</span>  <span class="number">259</span>  <span class="number">260</span>  <span class="number">260</span>  <span class="number">265</span>  <span class="number">268</span>  <span class="number">270</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">22</span><span class="punctuation">]</span>  <span class="number">276</span>  <span class="number">280</span>  <span class="number">280</span>  <span class="number">280</span>  <span class="number">281</span>  <span class="number">286</span>  <span class="number">290</span>  <span class="number">291</span>  <span class="number">300</span>  <span class="number">300</span>  <span class="number">300</span>  <span class="number">301</span>  <span class="number">306</span>  <span class="number">310</span>  <span class="number">310</span>  <span class="number">314</span>  <span class="number">315</span>  <span class="number">320</span>  <span class="number">325</span>  <span class="number">327</span>  <span class="number">329</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">43</span><span class="punctuation">]</span>  <span class="number">330</span>  <span class="number">332</span>  <span class="number">336</span>  <span class="number">338</span>  <span class="number">340</span>  <span class="number">350</span>  <span class="number">350</span>  <span class="number">350</span>  <span class="number">350</span>  <span class="number">352</span>  <span class="number">360</span>  <span class="number">360</span>  <span class="number">360</span>  <span class="number">360</span>  <span class="number">375</span>  <span class="number">377</span>  <span class="number">380</span>  <span class="number">380</span>  <span class="number">383</span>  <span class="number">390</span>  <span class="number">390</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">64</span><span class="punctuation">]</span>  <span class="number">392</span>  <span class="number">407</span>  <span class="number">410</span>  <span class="number">411</span>  <span class="number">420</span>  <span class="number">420</span>  <span class="number">424</span>  <span class="number">425</span>  <span class="number">430</span>  <span class="number">431</span>  <span class="number">435</span>  <span class="number">444</span>  <span class="number">445</span>  <span class="number">450</span>  <span class="number">460</span>  <span class="number">460</span>  <span class="number">465</span>  <span class="number">470</span>  <span class="number">490</span>  <span class="number">500</span>  <span class="number">500</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">85</span><span class="punctuation">]</span>  <span class="number">505</span>  <span class="number">524</span>  <span class="number">525</span>  <span class="number">525</span>  <span class="number">529</span>  <span class="number">538</span>  <span class="number">540</span>  <span class="number">545</span>  <span class="number">560</span>  <span class="number">570</span>  <span class="number">600</span>  <span class="number">600</span>  <span class="number">600</span>  <span class="number">605</span>  <span class="number">610</span>  <span class="number">618</span>  <span class="number">620</span>  <span class="number">625</span>  <span class="number">630</span>  <span class="number">652</span>  <span class="number">671</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">106</span><span class="punctuation">]</span>  <span class="number">680</span>  <span class="number">696</span>  <span class="number">710</span>  <span class="number">720</span>  <span class="number">720</span>  <span class="number">730</span>  <span class="number">735</span>  <span class="number">735</span>  <span class="number">760</span>  <span class="number">780</span>  <span class="number">800</span>  <span class="number">840</span>  <span class="number">850</span>  <span class="number">870</span>  <span class="number">890</span>  <span class="number">900</span>  <span class="number">900</span>  <span class="number">906</span>  <span class="number">981</span> <span class="number">1000</span> <span class="number">1038</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">127</span><span class="punctuation">]</span> <span class="number">1054</span> <span class="number">1100</span> <span class="number">1171</span> <span class="number">1205</span> <span class="number">1243</span> <span class="number">1270</span> <span class="number">1306</span> <span class="number">1450</span> <span class="number">1459</span> <span class="number">1770</span> <span class="number">1885</span> <span class="number">2315</span> <span class="number">2348</span> <span class="number">2533</span> <span class="number">3710</span></span><br><span class="line"><span class="operator">&gt;</span> rivers</span><br><span class="line">  <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">735</span>  <span class="number">320</span>  <span class="number">325</span>  <span class="number">392</span>  <span class="number">524</span>  <span class="number">450</span> <span class="number">1459</span>  <span class="number">135</span>  <span class="number">465</span>  <span class="number">600</span>  <span class="number">330</span>  <span class="number">336</span>  <span class="number">280</span>  <span class="number">315</span>  <span class="number">870</span>  <span class="number">906</span>  <span class="number">202</span>  <span class="number">329</span>  <span class="number">290</span> <span class="number">1000</span>  <span class="number">600</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">22</span><span class="punctuation">]</span>  <span class="number">505</span> <span class="number">1450</span>  <span class="number">840</span> <span class="number">1243</span>  <span class="number">890</span>  <span class="number">350</span>  <span class="number">407</span>  <span class="number">286</span>  <span class="number">280</span>  <span class="number">525</span>  <span class="number">720</span>  <span class="number">390</span>  <span class="number">250</span>  <span class="number">327</span>  <span class="number">230</span>  <span class="number">265</span>  <span class="number">850</span>  <span class="number">210</span>  <span class="number">630</span>  <span class="number">260</span>  <span class="number">230</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">43</span><span class="punctuation">]</span>  <span class="number">360</span>  <span class="number">730</span>  <span class="number">600</span>  <span class="number">306</span>  <span class="number">390</span>  <span class="number">420</span>  <span class="number">291</span>  <span class="number">710</span>  <span class="number">340</span>  <span class="number">217</span>  <span class="number">281</span>  <span class="number">352</span>  <span class="number">259</span>  <span class="number">250</span>  <span class="number">470</span>  <span class="number">680</span>  <span class="number">570</span>  <span class="number">350</span>  <span class="number">300</span>  <span class="number">560</span>  <span class="number">900</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">64</span><span class="punctuation">]</span>  <span class="number">625</span>  <span class="number">332</span> <span class="number">2348</span> <span class="number">1171</span> <span class="number">3710</span> <span class="number">2315</span> <span class="number">2533</span>  <span class="number">780</span>  <span class="number">280</span>  <span class="number">410</span>  <span class="number">460</span>  <span class="number">260</span>  <span class="number">255</span>  <span class="number">431</span>  <span class="number">350</span>  <span class="number">760</span>  <span class="number">618</span>  <span class="number">338</span>  <span class="number">981</span> <span class="number">1306</span>  <span class="number">500</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">85</span><span class="punctuation">]</span>  <span class="number">696</span>  <span class="number">605</span>  <span class="number">250</span>  <span class="number">411</span> <span class="number">1054</span>  <span class="number">735</span>  <span class="number">233</span>  <span class="number">435</span>  <span class="number">490</span>  <span class="number">310</span>  <span class="number">460</span>  <span class="number">383</span>  <span class="number">375</span> <span class="number">1270</span>  <span class="number">545</span>  <span class="number">445</span> <span class="number">1885</span>  <span class="number">380</span>  <span class="number">300</span>  <span class="number">380</span>  <span class="number">377</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">106</span><span class="punctuation">]</span>  <span class="number">425</span>  <span class="number">276</span>  <span class="number">210</span>  <span class="number">800</span>  <span class="number">420</span>  <span class="number">350</span>  <span class="number">360</span>  <span class="number">538</span> <span class="number">1100</span> <span class="number">1205</span>  <span class="number">314</span>  <span class="number">237</span>  <span class="number">610</span>  <span class="number">360</span>  <span class="number">540</span> <span class="number">1038</span>  <span class="number">424</span>  <span class="number">310</span>  <span class="number">300</span>  <span class="number">444</span>  <span class="number">301</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">127</span><span class="punctuation">]</span>  <span class="number">268</span>  <span class="number">620</span>  <span class="number">215</span>  <span class="number">652</span>  <span class="number">900</span>  <span class="number">525</span>  <span class="number">246</span>  <span class="number">360</span>  <span class="number">529</span>  <span class="number">500</span>  <span class="number">720</span>  <span class="number">270</span>  <span class="number">430</span>  <span class="number">671</span> <span class="number">1770</span></span><br><span class="line"><span class="operator">&gt;</span> order<span class="punctuation">(</span>rivers<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>   <span class="number">8</span>  <span class="number">17</span>  <span class="number">39</span> <span class="number">108</span> <span class="number">129</span>  <span class="number">52</span>  <span class="number">36</span>  <span class="number">42</span>  <span class="number">91</span> <span class="number">117</span> <span class="number">133</span>  <span class="number">34</span>  <span class="number">56</span>  <span class="number">87</span>  <span class="number">76</span>  <span class="number">55</span>  <span class="number">41</span>  <span class="number">75</span>  <span class="number">37</span> <span class="number">127</span> <span class="number">138</span> <span class="number">107</span>  <span class="number">13</span>  <span class="number">30</span>  <span class="number">72</span>  <span class="number">53</span>  <span class="number">29</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">28</span><span class="punctuation">]</span>  <span class="number">19</span>  <span class="number">49</span>  <span class="number">61</span> <span class="number">103</span> <span class="number">124</span> <span class="number">126</span>  <span class="number">46</span>  <span class="number">94</span> <span class="number">123</span> <span class="number">116</span>  <span class="number">14</span>   <span class="number">2</span>   <span class="number">3</span>  <span class="number">35</span>  <span class="number">18</span>  <span class="number">11</span>  <span class="number">65</span>  <span class="number">12</span>  <span class="number">81</span>  <span class="number">51</span>  <span class="number">27</span>  <span class="number">60</span>  <span class="number">78</span> <span class="number">111</span>  <span class="number">54</span>  <span class="number">43</span> <span class="number">112</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">55</span><span class="punctuation">]</span> <span class="number">119</span> <span class="number">134</span>  <span class="number">97</span> <span class="number">105</span> <span class="number">102</span> <span class="number">104</span>  <span class="number">96</span>  <span class="number">33</span>  <span class="number">47</span>   <span class="number">4</span>  <span class="number">28</span>  <span class="number">73</span>  <span class="number">88</span>  <span class="number">48</span> <span class="number">110</span> <span class="number">122</span> <span class="number">106</span> <span class="number">139</span>  <span class="number">77</span>  <span class="number">92</span> <span class="number">125</span> <span class="number">100</span>   <span class="number">6</span>  <span class="number">74</span>  <span class="number">95</span>   <span class="number">9</span>  <span class="number">57</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">82</span><span class="punctuation">]</span>  <span class="number">93</span>  <span class="number">84</span> <span class="number">136</span>  <span class="number">22</span>   <span class="number">5</span>  <span class="number">31</span> <span class="number">132</span> <span class="number">135</span> <span class="number">113</span> <span class="number">120</span>  <span class="number">99</span>  <span class="number">62</span>  <span class="number">59</span>  <span class="number">10</span>  <span class="number">21</span>  <span class="number">45</span>  <span class="number">86</span> <span class="number">118</span>  <span class="number">80</span> <span class="number">128</span>  <span class="number">64</span>  <span class="number">40</span> <span class="number">130</span> <span class="number">140</span>  <span class="number">58</span>  <span class="number">85</span>  <span class="number">50</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">109</span><span class="punctuation">]</span>  <span class="number">32</span> <span class="number">137</span>  <span class="number">44</span>   <span class="number">1</span>  <span class="number">90</span>  <span class="number">79</span>  <span class="number">71</span> <span class="number">109</span>  <span class="number">24</span>  <span class="number">38</span>  <span class="number">15</span>  <span class="number">26</span>  <span class="number">63</span> <span class="number">131</span>  <span class="number">16</span>  <span class="number">82</span>  <span class="number">20</span> <span class="number">121</span>  <span class="number">89</span> <span class="number">114</span>  <span class="number">67</span> <span class="number">115</span>  <span class="number">25</span>  <span class="number">98</span>  <span class="number">83</span>  <span class="number">23</span>   <span class="number">7</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">136</span><span class="punctuation">]</span> <span class="number">141</span> <span class="number">101</span>  <span class="number">69</span>  <span class="number">66</span>  <span class="number">70</span>  <span class="number">68</span></span><br><span class="line"><span class="operator">&gt;</span> mtcars<span class="punctuation">[</span>order<span class="punctuation">(</span>mtcars<span class="operator">$</span>mpg<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line">Cadillac Fleetwood  <span class="number">10.4</span>   <span class="number">8</span> <span class="number">472.0</span> <span class="number">205</span> <span class="number">2.93</span> <span class="number">5.250</span> <span class="number">17.98</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Lincoln Continental <span class="number">10.4</span>   <span class="number">8</span> <span class="number">460.0</span> <span class="number">215</span> <span class="number">3.00</span> <span class="number">5.424</span> <span class="number">17.82</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Camaro Z28          <span class="number">13.3</span>   <span class="number">8</span> <span class="number">350.0</span> <span class="number">245</span> <span class="number">3.73</span> <span class="number">3.840</span> <span class="number">15.41</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Duster <span class="number">360</span>          <span class="number">14.3</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">245</span> <span class="number">3.21</span> <span class="number">3.570</span> <span class="number">15.84</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Chrysler Imperial   <span class="number">14.7</span>   <span class="number">8</span> <span class="number">440.0</span> <span class="number">230</span> <span class="number">3.23</span> <span class="number">5.345</span> <span class="number">17.42</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">...</span><br><span class="line">Fiat X1<span class="operator">-</span><span class="number">9</span>           <span class="number">27.3</span>   <span class="number">4</span>  <span class="number">79.0</span>  <span class="number">66</span> <span class="number">4.08</span> <span class="number">1.935</span> <span class="number">18.90</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">Honda Civic         <span class="number">30.4</span>   <span class="number">4</span>  <span class="number">75.7</span>  <span class="number">52</span> <span class="number">4.93</span> <span class="number">1.615</span> <span class="number">18.52</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line">Lotus Europa        <span class="number">30.4</span>   <span class="number">4</span>  <span class="number">95.1</span> <span class="number">113</span> <span class="number">3.77</span> <span class="number">1.513</span> <span class="number">16.90</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">2</span></span><br><span class="line">Fiat <span class="number">128</span>            <span class="number">32.4</span>   <span class="number">4</span>  <span class="number">78.7</span>  <span class="number">66</span> <span class="number">4.08</span> <span class="number">2.200</span> <span class="number">19.47</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">Toyota Corolla      <span class="number">33.9</span>   <span class="number">4</span>  <span class="number">71.1</span>  <span class="number">65</span> <span class="number">4.22</span> <span class="number">1.835</span> <span class="number">19.90</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line"><span class="operator">&gt;</span> mtcars<span class="punctuation">[</span>order<span class="punctuation">(</span><span class="operator">-</span>mtcars<span class="operator">$</span>mpg<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line">Toyota Corolla      <span class="number">33.9</span>   <span class="number">4</span>  <span class="number">71.1</span>  <span class="number">65</span> <span class="number">4.22</span> <span class="number">1.835</span> <span class="number">19.90</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">Fiat <span class="number">128</span>            <span class="number">32.4</span>   <span class="number">4</span>  <span class="number">78.7</span>  <span class="number">66</span> <span class="number">4.08</span> <span class="number">2.200</span> <span class="number">19.47</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">Honda Civic         <span class="number">30.4</span>   <span class="number">4</span>  <span class="number">75.7</span>  <span class="number">52</span> <span class="number">4.93</span> <span class="number">1.615</span> <span class="number">18.52</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line">Lotus Europa        <span class="number">30.4</span>   <span class="number">4</span>  <span class="number">95.1</span> <span class="number">113</span> <span class="number">3.77</span> <span class="number">1.513</span> <span class="number">16.90</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">2</span></span><br><span class="line">Fiat X1<span class="operator">-</span><span class="number">9</span>           <span class="number">27.3</span>   <span class="number">4</span>  <span class="number">79.0</span>  <span class="number">66</span> <span class="number">4.08</span> <span class="number">1.935</span> <span class="number">18.90</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">...</span><br><span class="line">Chrysler Imperial   <span class="number">14.7</span>   <span class="number">8</span> <span class="number">440.0</span> <span class="number">230</span> <span class="number">3.23</span> <span class="number">5.345</span> <span class="number">17.42</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Duster <span class="number">360</span>          <span class="number">14.3</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">245</span> <span class="number">3.21</span> <span class="number">3.570</span> <span class="number">15.84</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Camaro Z28          <span class="number">13.3</span>   <span class="number">8</span> <span class="number">350.0</span> <span class="number">245</span> <span class="number">3.73</span> <span class="number">3.840</span> <span class="number">15.41</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Cadillac Fleetwood  <span class="number">10.4</span>   <span class="number">8</span> <span class="number">472.0</span> <span class="number">205</span> <span class="number">2.93</span> <span class="number">5.250</span> <span class="number">17.98</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Lincoln Continental <span class="number">10.4</span>   <span class="number">8</span> <span class="number">460.0</span> <span class="number">215</span> <span class="number">3.00</span> <span class="number">5.424</span> <span class="number">17.82</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br></pre></td></tr></table></figure><p>总结：<code>order</code>也可以进行排序，返回的值是排序的位置，而不是排序后的结果。如果使<code>order</code>排序从大到小，需要在<code>order</code>参数中添加<code>-</code>号。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mtcars<span class="punctuation">[</span>order<span class="punctuation">(</span>mtcars<span class="operator">$</span>mpg<span class="punctuation">,</span>mtcars<span class="operator">$</span>disp<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line">Lincoln Continental <span class="number">10.4</span>   <span class="number">8</span> <span class="number">460.0</span> <span class="number">215</span> <span class="number">3.00</span> <span class="number">5.424</span> <span class="number">17.82</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Cadillac Fleetwood  <span class="number">10.4</span>   <span class="number">8</span> <span class="number">472.0</span> <span class="number">205</span> <span class="number">2.93</span> <span class="number">5.250</span> <span class="number">17.98</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Camaro Z28          <span class="number">13.3</span>   <span class="number">8</span> <span class="number">350.0</span> <span class="number">245</span> <span class="number">3.73</span> <span class="number">3.840</span> <span class="number">15.41</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Duster <span class="number">360</span>          <span class="number">14.3</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">245</span> <span class="number">3.21</span> <span class="number">3.570</span> <span class="number">15.84</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Chrysler Imperial   <span class="number">14.7</span>   <span class="number">8</span> <span class="number">440.0</span> <span class="number">230</span> <span class="number">3.23</span> <span class="number">5.345</span> <span class="number">17.42</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">...</span><br><span class="line">Fiat X1<span class="operator">-</span><span class="number">9</span>           <span class="number">27.3</span>   <span class="number">4</span>  <span class="number">79.0</span>  <span class="number">66</span> <span class="number">4.08</span> <span class="number">1.935</span> <span class="number">18.90</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">Honda Civic         <span class="number">30.4</span>   <span class="number">4</span>  <span class="number">75.7</span>  <span class="number">52</span> <span class="number">4.93</span> <span class="number">1.615</span> <span class="number">18.52</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line">Lotus Europa        <span class="number">30.4</span>   <span class="number">4</span>  <span class="number">95.1</span> <span class="number">113</span> <span class="number">3.77</span> <span class="number">1.513</span> <span class="number">16.90</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">2</span></span><br><span class="line">Fiat <span class="number">128</span>            <span class="number">32.4</span>   <span class="number">4</span>  <span class="number">78.7</span>  <span class="number">66</span> <span class="number">4.08</span> <span class="number">2.200</span> <span class="number">19.47</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">Toyota Corolla      <span class="number">33.9</span>   <span class="number">4</span>  <span class="number">71.1</span>  <span class="number">65</span> <span class="number">4.22</span> <span class="number">1.835</span> <span class="number">19.90</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br></pre></td></tr></table></figure><p>总结：也可以通过多个条件进行排序，比如在<code>mpg</code>相同时，<code>disp</code>越小的排在前面。</p><p><code>rank</code>和<code>sort</code>、<code>order</code>不同，它是求秩的函数，它的返回值是这个向量对应元素的排名，具体操作不做介绍，可以通过<code>?rank</code>查看帮助文档。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="operator">?</span>rank</span><br></pre></td></tr></table></figure><h3 id="4-6-数据统计">4.6 数据统计</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> WorldPhones</span><br><span class="line">     N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer</span><br><span class="line"><span class="number">1951</span>  <span class="number">45939</span>  <span class="number">21574</span> <span class="number">2876</span>   <span class="number">1815</span>    <span class="number">1646</span>     <span class="number">89</span>      <span class="number">555</span></span><br><span class="line"><span class="number">1956</span>  <span class="number">60423</span>  <span class="number">29990</span> <span class="number">4708</span>   <span class="number">2568</span>    <span class="number">2366</span>   <span class="number">1411</span>      <span class="number">733</span></span><br><span class="line"><span class="number">1957</span>  <span class="number">64721</span>  <span class="number">32510</span> <span class="number">5230</span>   <span class="number">2695</span>    <span class="number">2526</span>   <span class="number">1546</span>      <span class="number">773</span></span><br><span class="line"><span class="number">1958</span>  <span class="number">68484</span>  <span class="number">35218</span> <span class="number">6662</span>   <span class="number">2845</span>    <span class="number">2691</span>   <span class="number">1663</span>      <span class="number">836</span></span><br><span class="line"><span class="number">1959</span>  <span class="number">71799</span>  <span class="number">37598</span> <span class="number">6856</span>   <span class="number">3000</span>    <span class="number">2868</span>   <span class="number">1769</span>      <span class="number">911</span></span><br><span class="line"><span class="number">1960</span>  <span class="number">76036</span>  <span class="number">40341</span> <span class="number">8220</span>   <span class="number">3145</span>    <span class="number">3054</span>   <span class="number">1905</span>     <span class="number">1008</span></span><br><span class="line"><span class="number">1961</span>  <span class="number">79831</span>  <span class="number">43173</span> <span class="number">9053</span>   <span class="number">3338</span>    <span class="number">3224</span>   <span class="number">2005</span>     <span class="number">1076</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> worldphone <span class="operator">&lt;-</span> as.data.frame<span class="punctuation">(</span>WorldPhones<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> worldphone</span><br><span class="line">     N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer</span><br><span class="line"><span class="number">1951</span>  <span class="number">45939</span>  <span class="number">21574</span> <span class="number">2876</span>   <span class="number">1815</span>    <span class="number">1646</span>     <span class="number">89</span>      <span class="number">555</span></span><br><span class="line"><span class="number">1956</span>  <span class="number">60423</span>  <span class="number">29990</span> <span class="number">4708</span>   <span class="number">2568</span>    <span class="number">2366</span>   <span class="number">1411</span>      <span class="number">733</span></span><br><span class="line"><span class="number">1957</span>  <span class="number">64721</span>  <span class="number">32510</span> <span class="number">5230</span>   <span class="number">2695</span>    <span class="number">2526</span>   <span class="number">1546</span>      <span class="number">773</span></span><br><span class="line"><span class="number">1958</span>  <span class="number">68484</span>  <span class="number">35218</span> <span class="number">6662</span>   <span class="number">2845</span>    <span class="number">2691</span>   <span class="number">1663</span>      <span class="number">836</span></span><br><span class="line"><span class="number">1959</span>  <span class="number">71799</span>  <span class="number">37598</span> <span class="number">6856</span>   <span class="number">3000</span>    <span class="number">2868</span>   <span class="number">1769</span>      <span class="number">911</span></span><br><span class="line"><span class="number">1960</span>  <span class="number">76036</span>  <span class="number">40341</span> <span class="number">8220</span>   <span class="number">3145</span>    <span class="number">3054</span>   <span class="number">1905</span>     <span class="number">1008</span></span><br><span class="line"><span class="number">1961</span>  <span class="number">79831</span>  <span class="number">43173</span> <span class="number">9053</span>   <span class="number">3338</span>    <span class="number">3224</span>   <span class="number">2005</span>     <span class="number">1076</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> rs <span class="operator">&lt;-</span> rowSums<span class="punctuation">(</span>worldphone<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> rs</span><br><span class="line">  <span class="number">1951</span>   <span class="number">1956</span>   <span class="number">1957</span>   <span class="number">1958</span>   <span class="number">1959</span>   <span class="number">1960</span>   <span class="number">1961</span> </span><br><span class="line"> <span class="number">74494</span> <span class="number">102199</span> <span class="number">110001</span> <span class="number">118399</span> <span class="number">124801</span> <span class="number">133709</span> <span class="number">141700</span> </span><br><span class="line"> </span><br><span class="line"><span class="operator">&gt;</span> cm <span class="operator">&lt;-</span> colMeans<span class="punctuation">(</span>worldphone<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> cm</span><br><span class="line">    N.Amer     Europe       Asia     S.Amer    Oceania     Africa   Mid.Amer </span><br><span class="line"><span class="number">66747.5714</span> <span class="number">34343.4286</span>  <span class="number">6229.2857</span>  <span class="number">2772.2857</span>  <span class="number">2625.0000</span>  <span class="number">1484.0000</span>   <span class="number">841.7143</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> total <span class="operator">&lt;-</span> cbind<span class="punctuation">(</span>worldphone<span class="punctuation">,</span>Total<span class="operator">=</span>rs<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> total</span><br><span class="line">     N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer  Total</span><br><span class="line"><span class="number">1951</span>  <span class="number">45939</span>  <span class="number">21574</span> <span class="number">2876</span>   <span class="number">1815</span>    <span class="number">1646</span>     <span class="number">89</span>      <span class="number">555</span>  <span class="number">74494</span></span><br><span class="line"><span class="number">1956</span>  <span class="number">60423</span>  <span class="number">29990</span> <span class="number">4708</span>   <span class="number">2568</span>    <span class="number">2366</span>   <span class="number">1411</span>      <span class="number">733</span> <span class="number">102199</span></span><br><span class="line"><span class="number">1957</span>  <span class="number">64721</span>  <span class="number">32510</span> <span class="number">5230</span>   <span class="number">2695</span>    <span class="number">2526</span>   <span class="number">1546</span>      <span class="number">773</span> <span class="number">110001</span></span><br><span class="line"><span class="number">1958</span>  <span class="number">68484</span>  <span class="number">35218</span> <span class="number">6662</span>   <span class="number">2845</span>    <span class="number">2691</span>   <span class="number">1663</span>      <span class="number">836</span> <span class="number">118399</span></span><br><span class="line"><span class="number">1959</span>  <span class="number">71799</span>  <span class="number">37598</span> <span class="number">6856</span>   <span class="number">3000</span>    <span class="number">2868</span>   <span class="number">1769</span>      <span class="number">911</span> <span class="number">124801</span></span><br><span class="line"><span class="number">1960</span>  <span class="number">76036</span>  <span class="number">40341</span> <span class="number">8220</span>   <span class="number">3145</span>    <span class="number">3054</span>   <span class="number">1905</span>     <span class="number">1008</span> <span class="number">133709</span></span><br><span class="line"><span class="number">1961</span>  <span class="number">79831</span>  <span class="number">43173</span> <span class="number">9053</span>   <span class="number">3338</span>    <span class="number">3224</span>   <span class="number">2005</span>     <span class="number">1076</span> <span class="number">141700</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> rbind<span class="punctuation">(</span>total<span class="punctuation">,</span>Mean <span class="operator">=</span> cm<span class="punctuation">)</span></span><br><span class="line">       N.Amer   Europe     Asia   S.Amer Oceania Africa  Mid.Amer     Total</span><br><span class="line"><span class="number">1951</span> <span class="number">45939.00</span> <span class="number">21574.00</span> <span class="number">2876.000</span> <span class="number">1815.000</span>    <span class="number">1646</span>     <span class="number">89</span>  <span class="number">555.0000</span>  <span class="number">74494.00</span></span><br><span class="line"><span class="number">1956</span> <span class="number">60423.00</span> <span class="number">29990.00</span> <span class="number">4708.000</span> <span class="number">2568.000</span>    <span class="number">2366</span>   <span class="number">1411</span>  <span class="number">733.0000</span> <span class="number">102199.00</span></span><br><span class="line"><span class="number">1957</span> <span class="number">64721.00</span> <span class="number">32510.00</span> <span class="number">5230.000</span> <span class="number">2695.000</span>    <span class="number">2526</span>   <span class="number">1546</span>  <span class="number">773.0000</span> <span class="number">110001.00</span></span><br><span class="line"><span class="number">1958</span> <span class="number">68484.00</span> <span class="number">35218.00</span> <span class="number">6662.000</span> <span class="number">2845.000</span>    <span class="number">2691</span>   <span class="number">1663</span>  <span class="number">836.0000</span> <span class="number">118399.00</span></span><br><span class="line"><span class="number">1959</span> <span class="number">71799.00</span> <span class="number">37598.00</span> <span class="number">6856.000</span> <span class="number">3000.000</span>    <span class="number">2868</span>   <span class="number">1769</span>  <span class="number">911.0000</span> <span class="number">124801.00</span></span><br><span class="line"><span class="number">1960</span> <span class="number">76036.00</span> <span class="number">40341.00</span> <span class="number">8220.000</span> <span class="number">3145.000</span>    <span class="number">3054</span>   <span class="number">1905</span> <span class="number">1008.0000</span> <span class="number">133709.00</span></span><br><span class="line"><span class="number">1961</span> <span class="number">79831.00</span> <span class="number">43173.00</span> <span class="number">9053.000</span> <span class="number">3338.000</span>    <span class="number">3224</span>   <span class="number">2005</span> <span class="number">1076.0000</span> <span class="number">141700.00</span></span><br><span class="line">Mean <span class="number">66747.57</span> <span class="number">34343.43</span> <span class="number">6229.286</span> <span class="number">2772.286</span>    <span class="number">2625</span>   <span class="number">1484</span>  <span class="number">841.7143</span>  <span class="number">66747.57</span></span><br><span class="line">Warning message<span class="operator">:</span></span><br><span class="line">In rbind<span class="punctuation">(</span>deparse.level<span class="punctuation">,</span> ...<span class="punctuation">)</span> <span class="operator">:</span></span><br><span class="line">  number of columns of result<span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> is not a multiple of vector <span class="built_in">length</span> <span class="number">7</span> of arg <span class="number">2</span></span><br></pre></td></tr></table></figure><p>也可以通过如下方式计算：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> apply<span class="punctuation">(</span>WorldPhones<span class="punctuation">,</span>MARGIN <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span>FUN<span class="operator">=</span><span class="built_in">sum</span><span class="punctuation">)</span></span><br><span class="line">  <span class="number">1951</span>   <span class="number">1956</span>   <span class="number">1957</span>   <span class="number">1958</span>   <span class="number">1959</span>   <span class="number">1960</span>   <span class="number">1961</span> </span><br><span class="line"> <span class="number">74494</span> <span class="number">102199</span> <span class="number">110001</span> <span class="number">118399</span> <span class="number">124801</span> <span class="number">133709</span> <span class="number">141700</span> </span><br><span class="line"><span class="operator">&gt;</span> apply<span class="punctuation">(</span>WorldPhones<span class="punctuation">,</span>MARGIN <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span>FUN<span class="operator">=</span>mean<span class="punctuation">)</span></span><br><span class="line">    N.Amer     Europe       Asia     S.Amer    Oceania     Africa   Mid.Amer </span><br><span class="line"><span class="number">66747.5714</span> <span class="number">34343.4286</span>  <span class="number">6229.2857</span>  <span class="number">2772.2857</span>  <span class="number">2625.0000</span>  <span class="number">1484.0000</span>   <span class="number">841.7143</span> </span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> state.center</span><br><span class="line"><span class="operator">$</span>x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="operator">-</span><span class="number">86.7509</span> <span class="operator">-</span><span class="number">127.2500</span> <span class="operator">-</span><span class="number">111.6250</span>  <span class="operator">-</span><span class="number">92.2992</span> <span class="operator">-</span><span class="number">119.7730</span> <span class="operator">-</span><span class="number">105.5130</span>  <span class="operator">-</span><span class="number">72.3573</span>  <span class="operator">-</span><span class="number">74.9841</span>  <span class="operator">-</span><span class="number">81.6850</span>  <span class="operator">-</span><span class="number">83.3736</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">11</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">126.2500</span> <span class="operator">-</span><span class="number">113.9300</span>  <span class="operator">-</span><span class="number">89.3776</span>  <span class="operator">-</span><span class="number">86.0808</span>  <span class="operator">-</span><span class="number">93.3714</span>  <span class="operator">-</span><span class="number">98.1156</span>  <span class="operator">-</span><span class="number">84.7674</span>  <span class="operator">-</span><span class="number">92.2724</span>  <span class="operator">-</span><span class="number">68.9801</span>  <span class="operator">-</span><span class="number">76.6459</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">21</span><span class="punctuation">]</span>  <span class="operator">-</span><span class="number">71.5800</span>  <span class="operator">-</span><span class="number">84.6870</span>  <span class="operator">-</span><span class="number">94.6043</span>  <span class="operator">-</span><span class="number">89.8065</span>  <span class="operator">-</span><span class="number">92.5137</span> <span class="operator">-</span><span class="number">109.3200</span>  <span class="operator">-</span><span class="number">99.5898</span> <span class="operator">-</span><span class="number">116.8510</span>  <span class="operator">-</span><span class="number">71.3924</span>  <span class="operator">-</span><span class="number">74.2336</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">31</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">105.9420</span>  <span class="operator">-</span><span class="number">75.1449</span>  <span class="operator">-</span><span class="number">78.4686</span> <span class="operator">-</span><span class="number">100.0990</span>  <span class="operator">-</span><span class="number">82.5963</span>  <span class="operator">-</span><span class="number">97.1239</span> <span class="operator">-</span><span class="number">120.0680</span>  <span class="operator">-</span><span class="number">77.4500</span>  <span class="operator">-</span><span class="number">71.1244</span>  <span class="operator">-</span><span class="number">80.5056</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">41</span><span class="punctuation">]</span>  <span class="operator">-</span><span class="number">99.7238</span>  <span class="operator">-</span><span class="number">86.4560</span>  <span class="operator">-</span><span class="number">98.7857</span> <span class="operator">-</span><span class="number">111.3300</span>  <span class="operator">-</span><span class="number">72.5450</span>  <span class="operator">-</span><span class="number">78.2005</span> <span class="operator">-</span><span class="number">119.7460</span>  <span class="operator">-</span><span class="number">80.6665</span>  <span class="operator">-</span><span class="number">89.9941</span> <span class="operator">-</span><span class="number">107.2560</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>y</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">32.5901</span> <span class="number">49.2500</span> <span class="number">34.2192</span> <span class="number">34.7336</span> <span class="number">36.5341</span> <span class="number">38.6777</span> <span class="number">41.5928</span> <span class="number">38.6777</span> <span class="number">27.8744</span> <span class="number">32.3329</span> <span class="number">31.7500</span> <span class="number">43.5648</span> <span class="number">40.0495</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">14</span><span class="punctuation">]</span> <span class="number">40.0495</span> <span class="number">41.9358</span> <span class="number">38.4204</span> <span class="number">37.3915</span> <span class="number">30.6181</span> <span class="number">45.6226</span> <span class="number">39.2778</span> <span class="number">42.3645</span> <span class="number">43.1361</span> <span class="number">46.3943</span> <span class="number">32.6758</span> <span class="number">38.3347</span> <span class="number">46.8230</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">27</span><span class="punctuation">]</span> <span class="number">41.3356</span> <span class="number">39.1063</span> <span class="number">43.3934</span> <span class="number">39.9637</span> <span class="number">34.4764</span> <span class="number">43.1361</span> <span class="number">35.4195</span> <span class="number">47.2517</span> <span class="number">40.2210</span> <span class="number">35.5053</span> <span class="number">43.9078</span> <span class="number">40.9069</span> <span class="number">41.5928</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">40</span><span class="punctuation">]</span> <span class="number">33.6190</span> <span class="number">44.3365</span> <span class="number">35.6767</span> <span class="number">31.3897</span> <span class="number">39.1063</span> <span class="number">44.2508</span> <span class="number">37.5630</span> <span class="number">47.4231</span> <span class="number">38.4204</span> <span class="number">44.5937</span> <span class="number">43.0504</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> lapply<span class="punctuation">(</span>state.center<span class="punctuation">,</span>FUN<span class="operator">=</span><span class="built_in">length</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">$</span>x</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>y</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">50</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>lapply<span class="punctuation">(</span>state.center<span class="punctuation">,</span>FUN<span class="operator">=</span><span class="built_in">length</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;list&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>sapply<span class="punctuation">(</span>state.center<span class="punctuation">,</span>FUN<span class="operator">=</span><span class="built_in">length</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;integer&quot;</span></span><br></pre></td></tr></table></figure><p>下面是通过<code>tapply</code>统计每个区有几个州：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> state.name</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Alabama&quot;</span>        <span class="string">&quot;Alaska&quot;</span>         <span class="string">&quot;Arizona&quot;</span>        <span class="string">&quot;Arkansas&quot;</span>       <span class="string">&quot;California&quot;</span>     <span class="string">&quot;Colorado&quot;</span>      </span><br><span class="line"> <span class="punctuation">[</span><span class="number">7</span><span class="punctuation">]</span> <span class="string">&quot;Connecticut&quot;</span>    <span class="string">&quot;Delaware&quot;</span>       <span class="string">&quot;Florida&quot;</span>        <span class="string">&quot;Georgia&quot;</span>        <span class="string">&quot;Hawaii&quot;</span>         <span class="string">&quot;Idaho&quot;</span>         </span><br><span class="line"><span class="punctuation">[</span><span class="number">13</span><span class="punctuation">]</span> <span class="string">&quot;Illinois&quot;</span>       <span class="string">&quot;Indiana&quot;</span>        <span class="string">&quot;Iowa&quot;</span>           <span class="string">&quot;Kansas&quot;</span>         <span class="string">&quot;Kentucky&quot;</span>       <span class="string">&quot;Louisiana&quot;</span>     </span><br><span class="line"><span class="punctuation">[</span><span class="number">19</span><span class="punctuation">]</span> <span class="string">&quot;Maine&quot;</span>          <span class="string">&quot;Maryland&quot;</span>       <span class="string">&quot;Massachusetts&quot;</span>  <span class="string">&quot;Michigan&quot;</span>       <span class="string">&quot;Minnesota&quot;</span>      <span class="string">&quot;Mississippi&quot;</span>   </span><br><span class="line"><span class="punctuation">[</span><span class="number">25</span><span class="punctuation">]</span> <span class="string">&quot;Missouri&quot;</span>       <span class="string">&quot;Montana&quot;</span>        <span class="string">&quot;Nebraska&quot;</span>       <span class="string">&quot;Nevada&quot;</span>         <span class="string">&quot;New Hampshire&quot;</span>  <span class="string">&quot;New Jersey&quot;</span>    </span><br><span class="line"><span class="punctuation">[</span><span class="number">31</span><span class="punctuation">]</span> <span class="string">&quot;New Mexico&quot;</span>     <span class="string">&quot;New York&quot;</span>       <span class="string">&quot;North Carolina&quot;</span> <span class="string">&quot;North Dakota&quot;</span>   <span class="string">&quot;Ohio&quot;</span>           <span class="string">&quot;Oklahoma&quot;</span>      </span><br><span class="line"><span class="punctuation">[</span><span class="number">37</span><span class="punctuation">]</span> <span class="string">&quot;Oregon&quot;</span>         <span class="string">&quot;Pennsylvania&quot;</span>   <span class="string">&quot;Rhode Island&quot;</span>   <span class="string">&quot;South Carolina&quot;</span> <span class="string">&quot;South Dakota&quot;</span>   <span class="string">&quot;Tennessee&quot;</span>     </span><br><span class="line"><span class="punctuation">[</span><span class="number">43</span><span class="punctuation">]</span> <span class="string">&quot;Texas&quot;</span>          <span class="string">&quot;Utah&quot;</span>           <span class="string">&quot;Vermont&quot;</span>        <span class="string">&quot;Virginia&quot;</span>       <span class="string">&quot;Washington&quot;</span>     <span class="string">&quot;West Virginia&quot;</span> </span><br><span class="line"><span class="punctuation">[</span><span class="number">49</span><span class="punctuation">]</span> <span class="string">&quot;Wisconsin&quot;</span>      <span class="string">&quot;Wyoming&quot;</span>  </span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> state.division</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> East South Central Pacific            Mountain           West South Central Pacific           </span><br><span class="line"> <span class="punctuation">[</span><span class="number">6</span><span class="punctuation">]</span> Mountain           New England        South Atlantic     South Atlantic     South Atlantic    </span><br><span class="line"><span class="punctuation">[</span><span class="number">11</span><span class="punctuation">]</span> Pacific            Mountain           East North Central East North Central West North Central</span><br><span class="line"><span class="punctuation">[</span><span class="number">16</span><span class="punctuation">]</span> West North Central East South Central West South Central New England        South Atlantic    </span><br><span class="line"><span class="punctuation">[</span><span class="number">21</span><span class="punctuation">]</span> New England        East North Central West North Central East South Central West North Central</span><br><span class="line"><span class="punctuation">[</span><span class="number">26</span><span class="punctuation">]</span> Mountain           West North Central Mountain           New England        Middle Atlantic   </span><br><span class="line"><span class="punctuation">[</span><span class="number">31</span><span class="punctuation">]</span> Mountain           Middle Atlantic    South Atlantic     West North Central East North Central</span><br><span class="line"><span class="punctuation">[</span><span class="number">36</span><span class="punctuation">]</span> West South Central Pacific            Middle Atlantic    New England        South Atlantic    </span><br><span class="line"><span class="punctuation">[</span><span class="number">41</span><span class="punctuation">]</span> West North Central East South Central West South Central Mountain           New England       </span><br><span class="line"><span class="punctuation">[</span><span class="number">46</span><span class="punctuation">]</span> South Atlantic     Pacific            South Atlantic     East North Central Mountain          </span><br><span class="line"><span class="number">9</span> Levels<span class="operator">:</span> New England Middle Atlantic South Atlantic East South Central ... Pacific</span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> tapply<span class="punctuation">(</span>state.name<span class="punctuation">,</span>state.division<span class="punctuation">,</span>FUN<span class="operator">=</span><span class="built_in">length</span><span class="punctuation">)</span></span><br><span class="line">       New England    Middle Atlantic     South Atlantic East South Central West South Central </span><br><span class="line">                 <span class="number">6</span>                  <span class="number">3</span>                  <span class="number">8</span>                  <span class="number">4</span>                  <span class="number">4</span> </span><br><span class="line">East North Central West North Central           Mountain            Pacific </span><br><span class="line">                 <span class="number">5</span>                  <span class="number">7</span>                  <span class="number">8</span>                  <span class="number">5</span> </span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ol><li><p><code>apply</code>适用于数据框或矩阵。</p></li><li><p><code>lapply</code>和<code>sapply</code>返回值的形式不同，<code>lapply</code>返回的是列表的形式，<code>sapply</code>返回的是向量或矩阵，比列表简单。列表没有行和列之分，不需要边界MARGIN参数。FUN函数可以是自带的函数，也可以是自定义函数。</p></li><li><p><code>tapply</code>是用来处理因子数据，根据因子来分组，然后对每组分别处理。和apply类似，第一个参数为数据集，第二个必须为因子数据类型，通过因子对第一个参数进行分组，第三个参数FUN为要使用的函数。</p></li></ol></blockquote><p>还有相关函数的用法：</p><p><img src="https://vip2.loli.io/2023/03/13/LVNn98HXzgwG4EB.jpg" alt="微信图片_20220808165937"></p><h3 id="4-7-数据的中心化与标准化">4.7 数据的中心化与标准化</h3><p>数据中心化：是指数据集中的各项数据减去数据集的均值。</p><p>数据标准化：是指在中心化之后再除以数据集的标准差，即数据集中的各项数据减去数据集的均值再除以数据集的标准差。</p><p>标准差计算用<code>sd</code>函数，例如某个向量标准化处理后如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> mean<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> sd<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">1.870829</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">(</span>x<span class="operator">-</span>mean<span class="punctuation">(</span>x<span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">/</span>sd<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="operator">-</span><span class="number">1.0690450</span> <span class="operator">-</span><span class="number">0.5345225</span>  <span class="number">0.0000000</span>  <span class="number">1.6035675</span>  <span class="number">0.0000000</span></span><br></pre></td></tr></table></figure><p>可以看出，标准化处理后的值之间相差变小。</p><p>R实现中心化和标准化可以使用scale函数：<code>scale(x, center = TRUE, scale = TRUE)</code>。如果center为TRUE，则为中心化处理，如果scale为TRUE，则为标准化处理。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>state.x77<span class="punctuation">)</span></span><br><span class="line">           Population Income Illiteracy Life Exp Murder HS Grad Frost   Area</span><br><span class="line">Alabama          <span class="number">3615</span>   <span class="number">3624</span>        <span class="number">2.1</span>    <span class="number">69.05</span>   <span class="number">15.1</span>    <span class="number">41.3</span>    <span class="number">20</span>  <span class="number">50708</span></span><br><span class="line">Alaska            <span class="number">365</span>   <span class="number">6315</span>        <span class="number">1.5</span>    <span class="number">69.31</span>   <span class="number">11.3</span>    <span class="number">66.7</span>   <span class="number">152</span> <span class="number">566432</span></span><br><span class="line">Arizona          <span class="number">2212</span>   <span class="number">4530</span>        <span class="number">1.8</span>    <span class="number">70.55</span>    <span class="number">7.8</span>    <span class="number">58.1</span>    <span class="number">15</span> <span class="number">113417</span></span><br><span class="line">Arkansas         <span class="number">2110</span>   <span class="number">3378</span>        <span class="number">1.9</span>    <span class="number">70.66</span>   <span class="number">10.1</span>    <span class="number">39.9</span>    <span class="number">65</span>  <span class="number">51945</span></span><br><span class="line">California      <span class="number">21198</span>   <span class="number">5114</span>        <span class="number">1.1</span>    <span class="number">71.71</span>   <span class="number">10.3</span>    <span class="number">62.6</span>    <span class="number">20</span> <span class="number">156361</span></span><br><span class="line">Colorado         <span class="number">2541</span>   <span class="number">4884</span>        <span class="number">0.7</span>    <span class="number">72.06</span>    <span class="number">6.8</span>    <span class="number">63.9</span>   <span class="number">166</span> <span class="number">103766</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> xcenter <span class="operator">&lt;-</span> scale<span class="punctuation">(</span>state.x77<span class="punctuation">,</span>center <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>xcenter<span class="punctuation">)</span></span><br><span class="line">           Population     Income Illiteracy   Life Exp     Murder    HS Grad      Frost       Area</span><br><span class="line">Alabama    <span class="operator">-</span><span class="number">0.1414316</span> <span class="operator">-</span><span class="number">1.3211387</span>   <span class="number">1.525758</span> <span class="operator">-</span><span class="number">1.3621937</span>  <span class="number">2.0918101</span> <span class="operator">-</span><span class="number">1.4619293</span> <span class="operator">-</span><span class="number">1.6248292</span> <span class="operator">-</span><span class="number">0.2347183</span></span><br><span class="line">Alaska     <span class="operator">-</span><span class="number">0.8693980</span>  <span class="number">3.0582456</span>   <span class="number">0.541398</span> <span class="operator">-</span><span class="number">1.1685098</span>  <span class="number">1.0624293</span>  <span class="number">1.6828035</span>  <span class="number">0.9145676</span>  <span class="number">5.8093497</span></span><br><span class="line">Arizona    <span class="operator">-</span><span class="number">0.4556891</span>  <span class="number">0.1533029</span>   <span class="number">1.033578</span> <span class="operator">-</span><span class="number">0.2447866</span>  <span class="number">0.1143154</span>  <span class="number">0.6180514</span> <span class="operator">-</span><span class="number">1.7210185</span>  <span class="number">0.5002047</span></span><br><span class="line">Arkansas   <span class="operator">-</span><span class="number">0.4785360</span> <span class="operator">-</span><span class="number">1.7214837</span>   <span class="number">1.197638</span> <span class="operator">-</span><span class="number">0.1628435</span>  <span class="number">0.7373617</span> <span class="operator">-</span><span class="number">1.6352611</span> <span class="operator">-</span><span class="number">0.7591257</span> <span class="operator">-</span><span class="number">0.2202212</span></span><br><span class="line">California  <span class="number">3.7969790</span>  <span class="number">1.1037155</span>  <span class="operator">-</span><span class="number">0.114842</span>  <span class="number">0.6193415</span>  <span class="number">0.7915396</span>  <span class="number">1.1751891</span> <span class="operator">-</span><span class="number">1.6248292</span>  <span class="number">1.0034903</span></span><br><span class="line">Colorado   <span class="operator">-</span><span class="number">0.3819965</span>  <span class="number">0.7294092</span>  <span class="operator">-</span><span class="number">0.771082</span>  <span class="number">0.8800698</span> <span class="operator">-</span><span class="number">0.1565742</span>  <span class="number">1.3361400</span>  <span class="number">1.1838976</span>  <span class="number">0.3870991</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> xcenter <span class="operator">&lt;-</span> scale<span class="punctuation">(</span>state.x77<span class="punctuation">,</span>center <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">,</span>scale <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>xcenter<span class="punctuation">)</span></span><br><span class="line">           Population  Income Illiteracy Life Exp Murder HS Grad  Frost      Area</span><br><span class="line">Alabama       <span class="operator">-</span><span class="number">631.42</span>  <span class="operator">-</span><span class="number">811.8</span>       <span class="number">0.93</span>  <span class="operator">-</span><span class="number">1.8286</span>  <span class="number">7.722</span> <span class="operator">-</span><span class="number">11.808</span> <span class="operator">-</span><span class="number">84.46</span> <span class="operator">-</span><span class="number">20027.88</span></span><br><span class="line">Alaska       <span class="operator">-</span><span class="number">3881.42</span>  <span class="number">1879.2</span>       <span class="number">0.33</span>  <span class="operator">-</span><span class="number">1.5686</span>  <span class="number">3.922</span>  <span class="number">13.592</span>  <span class="number">47.54</span> <span class="number">495696.12</span></span><br><span class="line">Arizona      <span class="operator">-</span><span class="number">2034.42</span>    <span class="number">94.2</span>       <span class="number">0.63</span>  <span class="operator">-</span><span class="number">0.3286</span>  <span class="number">0.422</span>   <span class="number">4.992</span> <span class="operator">-</span><span class="number">89.46</span>  <span class="number">42681.12</span></span><br><span class="line">Arkansas     <span class="operator">-</span><span class="number">2136.42</span> <span class="operator">-</span><span class="number">1057.8</span>       <span class="number">0.73</span>  <span class="operator">-</span><span class="number">0.2186</span>  <span class="number">2.722</span> <span class="operator">-</span><span class="number">13.208</span> <span class="operator">-</span><span class="number">39.46</span> <span class="operator">-</span><span class="number">18790.88</span></span><br><span class="line">California   <span class="number">16951.58</span>   <span class="number">678.2</span>      <span class="operator">-</span><span class="number">0.07</span>   <span class="number">0.8314</span>  <span class="number">2.922</span>   <span class="number">9.492</span> <span class="operator">-</span><span class="number">84.46</span>  <span class="number">85625.12</span></span><br><span class="line">Colorado     <span class="operator">-</span><span class="number">1705.42</span>   <span class="number">448.2</span>      <span class="operator">-</span><span class="number">0.47</span>   <span class="number">1.1814</span> <span class="operator">-</span><span class="number">0.578</span>  <span class="number">10.792</span>  <span class="number">61.54</span>  <span class="number">33030.12</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> xcale <span class="operator">&lt;-</span> scale<span class="punctuation">(</span>state.x77<span class="punctuation">,</span>center <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">,</span>scale <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>xcale<span class="punctuation">)</span></span><br><span class="line">           Population     Income Illiteracy   Life Exp     Murder    HS Grad      Frost       Area</span><br><span class="line">Alabama    <span class="operator">-</span><span class="number">0.1414316</span> <span class="operator">-</span><span class="number">1.3211387</span>   <span class="number">1.525758</span> <span class="operator">-</span><span class="number">1.3621937</span>  <span class="number">2.0918101</span> <span class="operator">-</span><span class="number">1.4619293</span> <span class="operator">-</span><span class="number">1.6248292</span> <span class="operator">-</span><span class="number">0.2347183</span></span><br><span class="line">Alaska     <span class="operator">-</span><span class="number">0.8693980</span>  <span class="number">3.0582456</span>   <span class="number">0.541398</span> <span class="operator">-</span><span class="number">1.1685098</span>  <span class="number">1.0624293</span>  <span class="number">1.6828035</span>  <span class="number">0.9145676</span>  <span class="number">5.8093497</span></span><br><span class="line">Arizona    <span class="operator">-</span><span class="number">0.4556891</span>  <span class="number">0.1533029</span>   <span class="number">1.033578</span> <span class="operator">-</span><span class="number">0.2447866</span>  <span class="number">0.1143154</span>  <span class="number">0.6180514</span> <span class="operator">-</span><span class="number">1.7210185</span>  <span class="number">0.5002047</span></span><br><span class="line">Arkansas   <span class="operator">-</span><span class="number">0.4785360</span> <span class="operator">-</span><span class="number">1.7214837</span>   <span class="number">1.197638</span> <span class="operator">-</span><span class="number">0.1628435</span>  <span class="number">0.7373617</span> <span class="operator">-</span><span class="number">1.6352611</span> <span class="operator">-</span><span class="number">0.7591257</span> <span class="operator">-</span><span class="number">0.2202212</span></span><br><span class="line">California  <span class="number">3.7969790</span>  <span class="number">1.1037155</span>  <span class="operator">-</span><span class="number">0.114842</span>  <span class="number">0.6193415</span>  <span class="number">0.7915396</span>  <span class="number">1.1751891</span> <span class="operator">-</span><span class="number">1.6248292</span>  <span class="number">1.0034903</span></span><br><span class="line">Colorado   <span class="operator">-</span><span class="number">0.3819965</span>  <span class="number">0.7294092</span>  <span class="operator">-</span><span class="number">0.771082</span>  <span class="number">0.8800698</span> <span class="operator">-</span><span class="number">0.1565742</span>  <span class="number">1.3361400</span>  <span class="number">1.1838976</span>  <span class="number">0.3870991</span></span><br><span class="line"><span class="operator">&gt;</span> heatmap<span class="punctuation">(</span>xcale<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>总结：可以通过标准化处理后，就能够进行绘制热图。否则，列之间的数据大小相差太多，无法看出实际效果。</p><p>中心化处理后：</p><p><img src="https://vip2.loli.io/2023/03/13/kVx7F1sNgCMrmU6.png" alt="image-20220808173232695"></p><p>未中心化处理和中心化处理后的效果相同，所有的值之间还是相差很多。</p><p>标准化处理后：</p><p><img src="https://vip2.loli.io/2023/03/13/1Wcl5L36GSNJHBf.png" alt="image-20220808172849327"></p><p>标准化处理后，可以看出之间的差异，虽然进行标准化处理，但是并不影响每一列之间的差异。</p><h3 id="4-8-merge函数">4.8 merge函数</h3><p>定义：Merge two data frames by common columns or row names</p><p>merge函数会将相同的部分进行组合：</p><p>参数：merge(x, y, by = intersect(names(x), names(y)),<br>by.x = by, by.y = by, all = FALSE, all.x = all, all.y = all,<br>sort = TRUE, suffixes = c(“.x”,“.y”), no.dups = TRUE,<br>incomparables = NULL, …)</p><p>x,y：要合并的数据框</p><p>by，by.x，by.y：指定依据什么合并数据框，默认为相同colname的列</p><p>all，all.x，all.y：指定x和y的行是否应该全部输出</p><p>sort by：by后指定的列是否排序</p><p>suffixes：指定不用于合并的列中拥有相同列名的后缀</p><p>incomparables：指定合并的列中，哪些值不需要进行合并（NULL or NA or 其他）</p><p>当两个数据框有相同的观测量（rowname或colname相同），但观测量下的观测值不同时，使用merge函数进行合并。通过“by=观测因子”，得到共有的观测值对应的其他观测量。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>k1 <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="literal">NA</span><span class="punctuation">,</span><span class="literal">NA</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span><span class="punctuation">,</span> k2 <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="literal">NA</span><span class="punctuation">,</span><span class="literal">NA</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span><span class="punctuation">,</span>data <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">  k1 k2 data</span><br><span class="line"><span class="number">1</span> <span class="literal">NA</span>  <span class="number">1</span>    <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="literal">NA</span> <span class="literal">NA</span>    <span class="number">2</span></span><br><span class="line"><span class="number">3</span>  <span class="number">3</span> <span class="literal">NA</span>    <span class="number">3</span></span><br><span class="line"><span class="number">4</span>  <span class="number">4</span>  <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span>    <span class="number">5</span></span><br><span class="line"><span class="operator">&gt;</span> y <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>k1 <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="literal">NA</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="literal">NA</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span><span class="punctuation">,</span> k2 <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="literal">NA</span><span class="punctuation">,</span><span class="literal">NA</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span><span class="punctuation">,</span>data <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> y</span><br><span class="line">  k1 k2 data</span><br><span class="line"><span class="number">1</span> <span class="literal">NA</span> <span class="literal">NA</span>    <span class="number">1</span></span><br><span class="line"><span class="number">2</span>  <span class="number">2</span> <span class="literal">NA</span>    <span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="literal">NA</span>  <span class="number">3</span>    <span class="number">3</span></span><br><span class="line"><span class="number">4</span>  <span class="number">4</span>  <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span>    <span class="number">5</span></span><br><span class="line"><span class="operator">&gt;</span> rbind<span class="punctuation">(</span>x<span class="punctuation">,</span>y<span class="punctuation">)</span></span><br><span class="line">   k1 k2 data</span><br><span class="line"><span class="number">1</span>  <span class="literal">NA</span>  <span class="number">1</span>    <span class="number">1</span></span><br><span class="line"><span class="number">2</span>  <span class="literal">NA</span> <span class="literal">NA</span>    <span class="number">2</span></span><br><span class="line"><span class="number">3</span>   <span class="number">3</span> <span class="literal">NA</span>    <span class="number">3</span></span><br><span class="line"><span class="number">4</span>   <span class="number">4</span>  <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">5</span>   <span class="number">5</span>  <span class="number">5</span>    <span class="number">5</span></span><br><span class="line"><span class="number">6</span>  <span class="literal">NA</span> <span class="literal">NA</span>    <span class="number">1</span></span><br><span class="line"><span class="number">7</span>   <span class="number">2</span> <span class="literal">NA</span>    <span class="number">2</span></span><br><span class="line"><span class="number">8</span>  <span class="literal">NA</span>  <span class="number">3</span>    <span class="number">3</span></span><br><span class="line"><span class="number">9</span>   <span class="number">4</span>  <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">10</span>  <span class="number">5</span>  <span class="number">5</span>    <span class="number">5</span></span><br><span class="line"><span class="operator">&gt;</span> merge<span class="punctuation">(</span>x<span class="punctuation">,</span>y<span class="punctuation">,</span>by<span class="operator">=</span><span class="string">&quot;k1&quot;</span><span class="punctuation">)</span></span><br><span class="line">  k1 k2.x data.x k2.y data.y</span><br><span class="line"><span class="number">1</span>  <span class="number">4</span>    <span class="number">4</span>      <span class="number">4</span>    <span class="number">4</span>      <span class="number">4</span></span><br><span class="line"><span class="number">2</span>  <span class="number">5</span>    <span class="number">5</span>      <span class="number">5</span>    <span class="number">5</span>      <span class="number">5</span></span><br><span class="line"><span class="number">3</span> <span class="literal">NA</span>    <span class="number">1</span>      <span class="number">1</span>   <span class="literal">NA</span>      <span class="number">1</span></span><br><span class="line"><span class="number">4</span> <span class="literal">NA</span>    <span class="number">1</span>      <span class="number">1</span>    <span class="number">3</span>      <span class="number">3</span></span><br><span class="line"><span class="number">5</span> <span class="literal">NA</span>   <span class="literal">NA</span>      <span class="number">2</span>   <span class="literal">NA</span>      <span class="number">1</span></span><br><span class="line"><span class="number">6</span> <span class="literal">NA</span>   <span class="literal">NA</span>      <span class="number">2</span>    <span class="number">3</span>      <span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> merge<span class="punctuation">(</span>x<span class="punctuation">,</span>y<span class="punctuation">,</span>by<span class="operator">=</span><span class="string">&quot;k2&quot;</span><span class="punctuation">)</span></span><br><span class="line">  k2 k1.x data.x k1.y data.y</span><br><span class="line"><span class="number">1</span>  <span class="number">4</span>    <span class="number">4</span>      <span class="number">4</span>    <span class="number">4</span>      <span class="number">4</span></span><br><span class="line"><span class="number">2</span>  <span class="number">5</span>    <span class="number">5</span>      <span class="number">5</span>    <span class="number">5</span>      <span class="number">5</span></span><br><span class="line"><span class="number">3</span> <span class="literal">NA</span>   <span class="literal">NA</span>      <span class="number">2</span>   <span class="literal">NA</span>      <span class="number">1</span></span><br><span class="line"><span class="number">4</span> <span class="literal">NA</span>   <span class="literal">NA</span>      <span class="number">2</span>    <span class="number">2</span>      <span class="number">2</span></span><br><span class="line"><span class="number">5</span> <span class="literal">NA</span>    <span class="number">3</span>      <span class="number">3</span>   <span class="literal">NA</span>      <span class="number">1</span></span><br><span class="line"><span class="number">6</span> <span class="literal">NA</span>    <span class="number">3</span>      <span class="number">3</span>    <span class="number">2</span>      <span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> merge<span class="punctuation">(</span>x<span class="punctuation">,</span>y<span class="punctuation">,</span>by<span class="operator">=</span><span class="string">&quot;k2&quot;</span><span class="punctuation">,</span>incomparables <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line">  k2 k1.x data.x k1.y data.y</span><br><span class="line"><span class="number">1</span>  <span class="number">4</span>    <span class="number">4</span>      <span class="number">4</span>    <span class="number">4</span>      <span class="number">4</span></span><br><span class="line"><span class="number">2</span>  <span class="number">5</span>    <span class="number">5</span>      <span class="number">5</span>    <span class="number">5</span>      <span class="number">5</span></span><br><span class="line"><span class="number">3</span> <span class="literal">NA</span>   <span class="literal">NA</span>      <span class="number">2</span>   <span class="literal">NA</span>      <span class="number">1</span></span><br><span class="line"><span class="number">4</span> <span class="literal">NA</span>   <span class="literal">NA</span>      <span class="number">2</span>    <span class="number">2</span>      <span class="number">2</span></span><br><span class="line"><span class="number">5</span> <span class="literal">NA</span>    <span class="number">3</span>      <span class="number">3</span>   <span class="literal">NA</span>      <span class="number">1</span></span><br><span class="line"><span class="number">6</span> <span class="literal">NA</span>    <span class="number">3</span>      <span class="number">3</span>    <span class="number">2</span>      <span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> merge<span class="punctuation">(</span>x<span class="punctuation">,</span>y<span class="punctuation">,</span>by<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;k1&quot;</span><span class="punctuation">,</span><span class="string">&quot;k2&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  k1 k2 data.x data.y</span><br><span class="line"><span class="number">1</span>  <span class="number">4</span>  <span class="number">4</span>      <span class="number">4</span>      <span class="number">4</span></span><br><span class="line"><span class="number">2</span>  <span class="number">5</span>  <span class="number">5</span>      <span class="number">5</span>      <span class="number">5</span></span><br><span class="line"><span class="number">3</span> <span class="literal">NA</span> <span class="literal">NA</span>      <span class="number">2</span>      <span class="number">1</span></span><br></pre></td></tr></table></figure><p>总结：merge会组合合并，<code>merge(x,y,by=&quot;k2&quot;,incomparables = T)</code>表示根据<code>k2</code>进行合并，<code>incomparables</code>表示丢掉NA的情况。<code>merge(x,y,by=c(&quot;k1&quot;,&quot;k2&quot;))</code>表示同时合并<code>k1</code>，<code>k2</code>。</p><p>不推荐使用merge函数。</p><h3 id="4-9-reshape2包">4.9 reshape2包</h3><p><code>reshape2</code>包功能更强大，学习难度大。</p><p>需要安装<code>reshape2</code>包。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> install.packages<span class="punctuation">(</span><span class="string">&quot;reshape2&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>reshape2<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>重塑数据，首先把宽数据融合（melt），以使每一行都只表示一个变量，然后把数据重塑（cast）为想要的任何形状。在重塑过程中，可以使用任何函数对数据进行整合，也可以把长格式转换为宽格式，这种操作类似于Excel的透视和逆透视。</p><p>在同一行，标识变量（一列或多列）能够唯一标识两个或多个变量的值，这种数据显示叫做数据的<strong>宽格式，也叫做宽数据</strong>。</p><h4 id="4-9-1-melt函数">4.9.1 melt函数</h4><p>使用方法：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">melt<span class="punctuation">(</span>data<span class="punctuation">,</span>id.vars<span class="punctuation">,</span>measure.vars<span class="punctuation">,</span>variable.name<span class="operator">=</span><span class="string">&#x27;variable&#x27;</span><span class="punctuation">,</span>...<span class="punctuation">,</span>na.rm<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span>value.name<span class="operator">=</span><span class="string">&#x27;value&#x27;</span><span class="punctuation">,</span>factorAsStrings<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数注释：</p><ul><li><p>data：融合的数据框</p></li><li><p>id.vars：由标识变量构成的向量，用于标识观测的变量</p></li><li><p>measure.vars ：由观测变量构成的向量</p></li><li><p><a href="http://variable.name">variable.name</a>：用于保存原始变量名的变量的名称</p></li><li><p><a href="http://value.name">value.name</a>：用于保存原始值的名称</p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>reshape2<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> newdata <span class="operator">&lt;-</span> airquality<span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> newdata</span><br><span class="line">   ozone solar.r wind temp month day</span><br><span class="line"><span class="number">1</span>     <span class="number">41</span>     <span class="number">190</span>  <span class="number">7.4</span>   <span class="number">67</span>     <span class="number">5</span>   <span class="number">1</span></span><br><span class="line"><span class="number">2</span>     <span class="number">36</span>     <span class="number">118</span>  <span class="number">8.0</span>   <span class="number">72</span>     <span class="number">5</span>   <span class="number">2</span></span><br><span class="line"><span class="number">3</span>     <span class="number">12</span>     <span class="number">149</span> <span class="number">12.6</span>   <span class="number">74</span>     <span class="number">5</span>   <span class="number">3</span></span><br><span class="line"><span class="number">4</span>     <span class="number">18</span>     <span class="number">313</span> <span class="number">11.5</span>   <span class="number">62</span>     <span class="number">5</span>   <span class="number">4</span></span><br><span class="line"><span class="number">5</span>     <span class="literal">NA</span>      <span class="literal">NA</span> <span class="number">14.3</span>   <span class="number">56</span>     <span class="number">5</span>   <span class="number">5</span></span><br><span class="line"><span class="number">6</span>     <span class="number">28</span>      <span class="literal">NA</span> <span class="number">14.9</span>   <span class="number">66</span>     <span class="number">5</span>   <span class="number">6</span></span><br><span class="line"><span class="number">7</span>     <span class="number">23</span>     <span class="number">299</span>  <span class="number">8.6</span>   <span class="number">65</span>     <span class="number">5</span>   <span class="number">7</span></span><br><span class="line"><span class="number">8</span>     <span class="number">19</span>      <span class="number">99</span> <span class="number">13.8</span>   <span class="number">59</span>     <span class="number">5</span>   <span class="number">8</span></span><br><span class="line"><span class="number">9</span>      <span class="number">8</span>      <span class="number">19</span> <span class="number">20.1</span>   <span class="number">61</span>     <span class="number">5</span>   <span class="number">9</span></span><br><span class="line"><span class="number">10</span>    <span class="literal">NA</span>     <span class="number">194</span>  <span class="number">8.6</span>   <span class="number">69</span>     <span class="number">5</span>  <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> melt<span class="punctuation">(</span>newdata<span class="punctuation">)</span></span><br><span class="line">No id variables; using <span class="built_in">all</span> as measure variables</span><br><span class="line">   variable value</span><br><span class="line"><span class="number">1</span>     ozone  <span class="number">41.0</span></span><br><span class="line"><span class="number">2</span>     ozone  <span class="number">36.0</span></span><br><span class="line"><span class="number">3</span>     ozone  <span class="number">12.0</span></span><br><span class="line"><span class="number">4</span>     ozone  <span class="number">18.0</span></span><br><span class="line"><span class="number">5</span>     ozone    <span class="literal">NA</span></span><br><span class="line"><span class="number">6</span>     ozone  <span class="number">28.0</span></span><br><span class="line"><span class="number">7</span>     ozone  <span class="number">23.0</span></span><br><span class="line"><span class="number">8</span>     ozone  <span class="number">19.0</span></span><br><span class="line"><span class="number">9</span>     ozone   <span class="number">8.0</span></span><br><span class="line"><span class="number">10</span>    ozone    <span class="literal">NA</span></span><br><span class="line"><span class="number">11</span>  solar.r <span class="number">190.0</span></span><br><span class="line"><span class="number">12</span>  solar.r <span class="number">118.0</span></span><br><span class="line"><span class="number">13</span>  solar.r <span class="number">149.0</span></span><br><span class="line"><span class="number">14</span>  solar.r <span class="number">313.0</span></span><br><span class="line"><span class="number">15</span>  solar.r    <span class="literal">NA</span></span><br><span class="line"><span class="number">16</span>  solar.r    <span class="literal">NA</span></span><br><span class="line"><span class="number">17</span>  solar.r <span class="number">299.0</span></span><br><span class="line"><span class="number">18</span>  solar.r  <span class="number">99.0</span></span><br><span class="line"><span class="number">19</span>  solar.r  <span class="number">19.0</span></span><br><span class="line"><span class="number">20</span>  solar.r <span class="number">194.0</span></span><br><span class="line"><span class="number">21</span>     wind   <span class="number">7.4</span></span><br><span class="line"><span class="number">22</span>     wind   <span class="number">8.0</span></span><br><span class="line"><span class="number">23</span>     wind  <span class="number">12.6</span></span><br><span class="line"><span class="number">24</span>     wind  <span class="number">11.5</span></span><br><span class="line"><span class="number">25</span>     wind  <span class="number">14.3</span></span><br><span class="line"><span class="number">26</span>     wind  <span class="number">14.9</span></span><br><span class="line"><span class="number">27</span>     wind   <span class="number">8.6</span></span><br><span class="line"><span class="number">28</span>     wind  <span class="number">13.8</span></span><br><span class="line"><span class="number">29</span>     wind  <span class="number">20.1</span></span><br><span class="line"><span class="number">30</span>     wind   <span class="number">8.6</span></span><br><span class="line"><span class="number">31</span>     temp  <span class="number">67.0</span></span><br><span class="line"><span class="number">32</span>     temp  <span class="number">72.0</span></span><br><span class="line"><span class="number">33</span>     temp  <span class="number">74.0</span></span><br><span class="line"><span class="number">34</span>     temp  <span class="number">62.0</span></span><br><span class="line"><span class="number">35</span>     temp  <span class="number">56.0</span></span><br><span class="line"><span class="number">36</span>     temp  <span class="number">66.0</span></span><br><span class="line"><span class="number">37</span>     temp  <span class="number">65.0</span></span><br><span class="line"><span class="number">38</span>     temp  <span class="number">59.0</span></span><br><span class="line"><span class="number">39</span>     temp  <span class="number">61.0</span></span><br><span class="line"><span class="number">40</span>     temp  <span class="number">69.0</span></span><br><span class="line"><span class="number">41</span>    month   <span class="number">5.0</span></span><br><span class="line"><span class="number">42</span>    month   <span class="number">5.0</span></span><br><span class="line"><span class="number">43</span>    month   <span class="number">5.0</span></span><br><span class="line"><span class="number">44</span>    month   <span class="number">5.0</span></span><br><span class="line"><span class="number">45</span>    month   <span class="number">5.0</span></span><br><span class="line"><span class="number">46</span>    month   <span class="number">5.0</span></span><br><span class="line"><span class="number">47</span>    month   <span class="number">5.0</span></span><br><span class="line"><span class="number">48</span>    month   <span class="number">5.0</span></span><br><span class="line"><span class="number">49</span>    month   <span class="number">5.0</span></span><br><span class="line"><span class="number">50</span>    month   <span class="number">5.0</span></span><br><span class="line"><span class="number">51</span>      day   <span class="number">1.0</span></span><br><span class="line"><span class="number">52</span>      day   <span class="number">2.0</span></span><br><span class="line"><span class="number">53</span>      day   <span class="number">3.0</span></span><br><span class="line"><span class="number">54</span>      day   <span class="number">4.0</span></span><br><span class="line"><span class="number">55</span>      day   <span class="number">5.0</span></span><br><span class="line"><span class="number">56</span>      day   <span class="number">6.0</span></span><br><span class="line"><span class="number">57</span>      day   <span class="number">7.0</span></span><br><span class="line"><span class="number">58</span>      day   <span class="number">8.0</span></span><br><span class="line"><span class="number">59</span>      day   <span class="number">9.0</span></span><br><span class="line"><span class="number">60</span>      day  <span class="number">10.0</span></span><br></pre></td></tr></table></figure><p>总结：<code>melt</code>函数将所有的向量在一列表示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> melt<span class="punctuation">(</span>newdata<span class="punctuation">,</span>id.vars <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;month&quot;</span><span class="punctuation">,</span><span class="string">&quot;day&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">   month day variable value</span><br><span class="line"><span class="number">1</span>      <span class="number">5</span>   <span class="number">1</span>    ozone  <span class="number">41.0</span></span><br><span class="line"><span class="number">2</span>      <span class="number">5</span>   <span class="number">2</span>    ozone  <span class="number">36.0</span></span><br><span class="line"><span class="number">3</span>      <span class="number">5</span>   <span class="number">3</span>    ozone  <span class="number">12.0</span></span><br><span class="line"><span class="number">4</span>      <span class="number">5</span>   <span class="number">4</span>    ozone  <span class="number">18.0</span></span><br><span class="line"><span class="number">5</span>      <span class="number">5</span>   <span class="number">5</span>    ozone    <span class="literal">NA</span></span><br><span class="line"><span class="number">6</span>      <span class="number">5</span>   <span class="number">6</span>    ozone  <span class="number">28.0</span></span><br><span class="line"><span class="number">7</span>      <span class="number">5</span>   <span class="number">7</span>    ozone  <span class="number">23.0</span></span><br><span class="line"><span class="number">8</span>      <span class="number">5</span>   <span class="number">8</span>    ozone  <span class="number">19.0</span></span><br><span class="line"><span class="number">9</span>      <span class="number">5</span>   <span class="number">9</span>    ozone   <span class="number">8.0</span></span><br><span class="line"><span class="number">10</span>     <span class="number">5</span>  <span class="number">10</span>    ozone    <span class="literal">NA</span></span><br><span class="line"><span class="number">11</span>     <span class="number">5</span>   <span class="number">1</span>  solar.r <span class="number">190.0</span></span><br><span class="line"><span class="number">12</span>     <span class="number">5</span>   <span class="number">2</span>  solar.r <span class="number">118.0</span></span><br><span class="line"><span class="number">13</span>     <span class="number">5</span>   <span class="number">3</span>  solar.r <span class="number">149.0</span></span><br><span class="line"><span class="number">14</span>     <span class="number">5</span>   <span class="number">4</span>  solar.r <span class="number">313.0</span></span><br><span class="line"><span class="number">15</span>     <span class="number">5</span>   <span class="number">5</span>  solar.r    <span class="literal">NA</span></span><br><span class="line"><span class="number">16</span>     <span class="number">5</span>   <span class="number">6</span>  solar.r    <span class="literal">NA</span></span><br><span class="line"><span class="number">17</span>     <span class="number">5</span>   <span class="number">7</span>  solar.r <span class="number">299.0</span></span><br><span class="line"><span class="number">18</span>     <span class="number">5</span>   <span class="number">8</span>  solar.r  <span class="number">99.0</span></span><br><span class="line"><span class="number">19</span>     <span class="number">5</span>   <span class="number">9</span>  solar.r  <span class="number">19.0</span></span><br><span class="line"><span class="number">20</span>     <span class="number">5</span>  <span class="number">10</span>  solar.r <span class="number">194.0</span></span><br><span class="line"><span class="number">21</span>     <span class="number">5</span>   <span class="number">1</span>     wind   <span class="number">7.4</span></span><br><span class="line"><span class="number">22</span>     <span class="number">5</span>   <span class="number">2</span>     wind   <span class="number">8.0</span></span><br><span class="line"><span class="number">23</span>     <span class="number">5</span>   <span class="number">3</span>     wind  <span class="number">12.6</span></span><br><span class="line"><span class="number">24</span>     <span class="number">5</span>   <span class="number">4</span>     wind  <span class="number">11.5</span></span><br><span class="line"><span class="number">25</span>     <span class="number">5</span>   <span class="number">5</span>     wind  <span class="number">14.3</span></span><br><span class="line"><span class="number">26</span>     <span class="number">5</span>   <span class="number">6</span>     wind  <span class="number">14.9</span></span><br><span class="line"><span class="number">27</span>     <span class="number">5</span>   <span class="number">7</span>     wind   <span class="number">8.6</span></span><br><span class="line"><span class="number">28</span>     <span class="number">5</span>   <span class="number">8</span>     wind  <span class="number">13.8</span></span><br><span class="line"><span class="number">29</span>     <span class="number">5</span>   <span class="number">9</span>     wind  <span class="number">20.1</span></span><br><span class="line"><span class="number">30</span>     <span class="number">5</span>  <span class="number">10</span>     wind   <span class="number">8.6</span></span><br><span class="line"><span class="number">31</span>     <span class="number">5</span>   <span class="number">1</span>     temp  <span class="number">67.0</span></span><br><span class="line"><span class="number">32</span>     <span class="number">5</span>   <span class="number">2</span>     temp  <span class="number">72.0</span></span><br><span class="line"><span class="number">33</span>     <span class="number">5</span>   <span class="number">3</span>     temp  <span class="number">74.0</span></span><br><span class="line"><span class="number">34</span>     <span class="number">5</span>   <span class="number">4</span>     temp  <span class="number">62.0</span></span><br><span class="line"><span class="number">35</span>     <span class="number">5</span>   <span class="number">5</span>     temp  <span class="number">56.0</span></span><br><span class="line"><span class="number">36</span>     <span class="number">5</span>   <span class="number">6</span>     temp  <span class="number">66.0</span></span><br><span class="line"><span class="number">37</span>     <span class="number">5</span>   <span class="number">7</span>     temp  <span class="number">65.0</span></span><br><span class="line"><span class="number">38</span>     <span class="number">5</span>   <span class="number">8</span>     temp  <span class="number">59.0</span></span><br><span class="line"><span class="number">39</span>     <span class="number">5</span>   <span class="number">9</span>     temp  <span class="number">61.0</span></span><br><span class="line"><span class="number">40</span>     <span class="number">5</span>  <span class="number">10</span>     temp  <span class="number">69.0</span></span><br></pre></td></tr></table></figure><p>总结：<code>melt</code>中参数<code>id.vars</code>表示不合并哪些列。</p><p>此外还有dcast、acast函数</p><p>reshape2包比较复杂，tidyr包和dplyr包两者组合可以替换reshape2包，相对来说更简单。</p><h3 id="4-10-tidyr包">4.10 tidyr包</h3><p>需要安装<code>tidyr</code>包</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> install.packages<span class="punctuation">(</span><span class="string">&quot;tidyr&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>tidyr<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>Tidy data数据指的是可以根据一个行名和一个列名可以确定一个值。</p><p>gather函数类似于melt函数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> tdata <span class="operator">&lt;-</span> mtcars<span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">,</span><span class="number">1</span><span class="operator">:</span><span class="number">3</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> tdata</span><br><span class="line">                   mpg cyl  disp</span><br><span class="line">Mazda RX4         <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span></span><br><span class="line">Mazda RX4 Wag     <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span></span><br><span class="line">Datsun <span class="number">710</span>        <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span></span><br><span class="line">Hornet <span class="number">4</span> Drive    <span class="number">21.4</span>   <span class="number">6</span> <span class="number">258.0</span></span><br><span class="line">Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span> <span class="number">360.0</span></span><br><span class="line">Valiant           <span class="number">18.1</span>   <span class="number">6</span> <span class="number">225.0</span></span><br><span class="line">Duster <span class="number">360</span>        <span class="number">14.3</span>   <span class="number">8</span> <span class="number">360.0</span></span><br><span class="line">Merc <span class="number">240</span>D         <span class="number">24.4</span>   <span class="number">4</span> <span class="number">146.7</span></span><br><span class="line">Merc <span class="number">230</span>          <span class="number">22.8</span>   <span class="number">4</span> <span class="number">140.8</span></span><br><span class="line">Merc <span class="number">280</span>          <span class="number">19.2</span>   <span class="number">6</span> <span class="number">167.6</span></span><br><span class="line"><span class="operator">&gt;</span> tdata <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span><span class="built_in">names</span><span class="operator">=</span>rownames<span class="punctuation">(</span>tdata<span class="punctuation">)</span><span class="punctuation">,</span>tdata<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> tdata</span><br><span class="line">                              <span class="built_in">names</span>  mpg cyl  disp</span><br><span class="line">Mazda RX4                 Mazda RX4 <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span></span><br><span class="line">Mazda RX4 Wag         Mazda RX4 Wag <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span></span><br><span class="line">Datsun <span class="number">710</span>               Datsun <span class="number">710</span> <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span></span><br><span class="line">Hornet <span class="number">4</span> Drive       Hornet <span class="number">4</span> Drive <span class="number">21.4</span>   <span class="number">6</span> <span class="number">258.0</span></span><br><span class="line">Hornet Sportabout Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span> <span class="number">360.0</span></span><br><span class="line">Valiant                     Valiant <span class="number">18.1</span>   <span class="number">6</span> <span class="number">225.0</span></span><br><span class="line">Duster <span class="number">360</span>               Duster <span class="number">360</span> <span class="number">14.3</span>   <span class="number">8</span> <span class="number">360.0</span></span><br><span class="line">Merc <span class="number">240</span>D                 Merc <span class="number">240</span>D <span class="number">24.4</span>   <span class="number">4</span> <span class="number">146.7</span></span><br><span class="line">Merc <span class="number">230</span>                   Merc <span class="number">230</span> <span class="number">22.8</span>   <span class="number">4</span> <span class="number">140.8</span></span><br><span class="line">Merc <span class="number">280</span>                   Merc <span class="number">280</span> <span class="number">19.2</span>   <span class="number">6</span> <span class="number">167.6</span></span><br><span class="line"><span class="operator">&gt;</span> gather<span class="punctuation">(</span>tdata<span class="punctuation">,</span>key <span class="operator">=</span> <span class="string">&quot;Key&quot;</span><span class="punctuation">,</span>value <span class="operator">=</span> <span class="string">&quot;Value&quot;</span><span class="punctuation">,</span>cyl<span class="punctuation">,</span>disp<span class="punctuation">,</span><span class="operator">-</span>mpg<span class="punctuation">)</span></span><br><span class="line">               <span class="built_in">names</span>  mpg  Key Value</span><br><span class="line"><span class="number">1</span>          Mazda RX4 <span class="number">21.0</span>  cyl   <span class="number">6.0</span></span><br><span class="line"><span class="number">2</span>      Mazda RX4 Wag <span class="number">21.0</span>  cyl   <span class="number">6.0</span></span><br><span class="line"><span class="number">3</span>         Datsun <span class="number">710</span> <span class="number">22.8</span>  cyl   <span class="number">4.0</span></span><br><span class="line"><span class="number">4</span>     Hornet <span class="number">4</span> Drive <span class="number">21.4</span>  cyl   <span class="number">6.0</span></span><br><span class="line"><span class="number">5</span>  Hornet Sportabout <span class="number">18.7</span>  cyl   <span class="number">8.0</span></span><br><span class="line"><span class="number">6</span>            Valiant <span class="number">18.1</span>  cyl   <span class="number">6.0</span></span><br><span class="line"><span class="number">7</span>         Duster <span class="number">360</span> <span class="number">14.3</span>  cyl   <span class="number">8.0</span></span><br><span class="line"><span class="number">8</span>          Merc <span class="number">240</span>D <span class="number">24.4</span>  cyl   <span class="number">4.0</span></span><br><span class="line"><span class="number">9</span>           Merc <span class="number">230</span> <span class="number">22.8</span>  cyl   <span class="number">4.0</span></span><br><span class="line"><span class="number">10</span>          Merc <span class="number">280</span> <span class="number">19.2</span>  cyl   <span class="number">6.0</span></span><br><span class="line"><span class="number">11</span>         Mazda RX4 <span class="number">21.0</span> disp <span class="number">160.0</span></span><br><span class="line"><span class="number">12</span>     Mazda RX4 Wag <span class="number">21.0</span> disp <span class="number">160.0</span></span><br><span class="line"><span class="number">13</span>        Datsun <span class="number">710</span> <span class="number">22.8</span> disp <span class="number">108.0</span></span><br><span class="line"><span class="number">14</span>    Hornet <span class="number">4</span> Drive <span class="number">21.4</span> disp <span class="number">258.0</span></span><br><span class="line"><span class="number">15</span> Hornet Sportabout <span class="number">18.7</span> disp <span class="number">360.0</span></span><br><span class="line"><span class="number">16</span>           Valiant <span class="number">18.1</span> disp <span class="number">225.0</span></span><br><span class="line"><span class="number">17</span>        Duster <span class="number">360</span> <span class="number">14.3</span> disp <span class="number">360.0</span></span><br><span class="line"><span class="number">18</span>         Merc <span class="number">240</span>D <span class="number">24.4</span> disp <span class="number">146.7</span></span><br><span class="line"><span class="number">19</span>          Merc <span class="number">230</span> <span class="number">22.8</span> disp <span class="number">140.8</span></span><br><span class="line"><span class="number">20</span>          Merc <span class="number">280</span> <span class="number">19.2</span> disp <span class="number">167.6</span></span><br></pre></td></tr></table></figure><p>总结：<code>mpg</code>前面的符号<code>-</code>表示不需要转换的列，如果列的名字容易出错，可以直接写列的编号，如下所示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> gather<span class="punctuation">(</span>tdata<span class="punctuation">,</span>key <span class="operator">=</span> <span class="string">&quot;Key&quot;</span><span class="punctuation">,</span>value <span class="operator">=</span> <span class="string">&quot;Value&quot;</span><span class="punctuation">,</span><span class="number">3</span><span class="operator">:</span><span class="number">4</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> gather<span class="punctuation">(</span>tdata<span class="punctuation">,</span>key <span class="operator">=</span> <span class="string">&quot;Key&quot;</span><span class="punctuation">,</span>value <span class="operator">=</span> <span class="string">&quot;Value&quot;</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><code>spread</code>函数和<code>gather</code>函数作用正好相反。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> gdata <span class="operator">&lt;-</span> gather<span class="punctuation">(</span>tdata<span class="punctuation">,</span>key <span class="operator">=</span> <span class="string">&quot;Key&quot;</span><span class="punctuation">,</span>value <span class="operator">=</span> <span class="string">&quot;Value&quot;</span><span class="punctuation">,</span><span class="number">2</span><span class="operator">:</span><span class="number">4</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> gdata</span><br><span class="line">               <span class="built_in">names</span>  Key Value</span><br><span class="line"><span class="number">1</span>          Mazda RX4  mpg  <span class="number">21.0</span></span><br><span class="line"><span class="number">2</span>      Mazda RX4 Wag  mpg  <span class="number">21.0</span></span><br><span class="line"><span class="number">3</span>         Datsun <span class="number">710</span>  mpg  <span class="number">22.8</span></span><br><span class="line"><span class="number">4</span>     Hornet <span class="number">4</span> Drive  mpg  <span class="number">21.4</span></span><br><span class="line"><span class="number">5</span>  Hornet Sportabout  mpg  <span class="number">18.7</span></span><br><span class="line"><span class="number">6</span>            Valiant  mpg  <span class="number">18.1</span></span><br><span class="line"><span class="number">7</span>         Duster <span class="number">360</span>  mpg  <span class="number">14.3</span></span><br><span class="line"><span class="number">8</span>          Merc <span class="number">240</span>D  mpg  <span class="number">24.4</span></span><br><span class="line"><span class="number">9</span>           Merc <span class="number">230</span>  mpg  <span class="number">22.8</span></span><br><span class="line"><span class="number">10</span>          Merc <span class="number">280</span>  mpg  <span class="number">19.2</span></span><br><span class="line"><span class="number">11</span>         Mazda RX4  cyl   <span class="number">6.0</span></span><br><span class="line"><span class="number">12</span>     Mazda RX4 Wag  cyl   <span class="number">6.0</span></span><br><span class="line"><span class="number">13</span>        Datsun <span class="number">710</span>  cyl   <span class="number">4.0</span></span><br><span class="line"><span class="number">14</span>    Hornet <span class="number">4</span> Drive  cyl   <span class="number">6.0</span></span><br><span class="line"><span class="number">15</span> Hornet Sportabout  cyl   <span class="number">8.0</span></span><br><span class="line"><span class="number">16</span>           Valiant  cyl   <span class="number">6.0</span></span><br><span class="line"><span class="number">17</span>        Duster <span class="number">360</span>  cyl   <span class="number">8.0</span></span><br><span class="line"><span class="number">18</span>         Merc <span class="number">240</span>D  cyl   <span class="number">4.0</span></span><br><span class="line"><span class="number">19</span>          Merc <span class="number">230</span>  cyl   <span class="number">4.0</span></span><br><span class="line"><span class="number">20</span>          Merc <span class="number">280</span>  cyl   <span class="number">6.0</span></span><br><span class="line"><span class="number">21</span>         Mazda RX4 disp <span class="number">160.0</span></span><br><span class="line"><span class="number">22</span>     Mazda RX4 Wag disp <span class="number">160.0</span></span><br><span class="line"><span class="number">23</span>        Datsun <span class="number">710</span> disp <span class="number">108.0</span></span><br><span class="line"><span class="number">24</span>    Hornet <span class="number">4</span> Drive disp <span class="number">258.0</span></span><br><span class="line"><span class="number">25</span> Hornet Sportabout disp <span class="number">360.0</span></span><br><span class="line"><span class="number">26</span>           Valiant disp <span class="number">225.0</span></span><br><span class="line"><span class="number">27</span>        Duster <span class="number">360</span> disp <span class="number">360.0</span></span><br><span class="line"><span class="number">28</span>         Merc <span class="number">240</span>D disp <span class="number">146.7</span></span><br><span class="line"><span class="number">29</span>          Merc <span class="number">230</span> disp <span class="number">140.8</span></span><br><span class="line"><span class="number">30</span>          Merc <span class="number">280</span> disp <span class="number">167.6</span></span><br><span class="line"><span class="operator">&gt;</span> spread<span class="punctuation">(</span>gdata<span class="punctuation">,</span>key <span class="operator">=</span> <span class="string">&quot;Key&quot;</span><span class="punctuation">,</span>value <span class="operator">=</span> <span class="string">&quot;Value&quot;</span><span class="punctuation">)</span></span><br><span class="line">               <span class="built_in">names</span> cyl  disp  mpg</span><br><span class="line"><span class="number">1</span>         Datsun <span class="number">710</span>   <span class="number">4</span> <span class="number">108.0</span> <span class="number">22.8</span></span><br><span class="line"><span class="number">2</span>         Duster <span class="number">360</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">14.3</span></span><br><span class="line"><span class="number">3</span>     Hornet <span class="number">4</span> Drive   <span class="number">6</span> <span class="number">258.0</span> <span class="number">21.4</span></span><br><span class="line"><span class="number">4</span>  Hornet Sportabout   <span class="number">8</span> <span class="number">360.0</span> <span class="number">18.7</span></span><br><span class="line"><span class="number">5</span>          Mazda RX4   <span class="number">6</span> <span class="number">160.0</span> <span class="number">21.0</span></span><br><span class="line"><span class="number">6</span>      Mazda RX4 Wag   <span class="number">6</span> <span class="number">160.0</span> <span class="number">21.0</span></span><br><span class="line"><span class="number">7</span>           Merc <span class="number">230</span>   <span class="number">4</span> <span class="number">140.8</span> <span class="number">22.8</span></span><br><span class="line"><span class="number">8</span>          Merc <span class="number">240</span>D   <span class="number">4</span> <span class="number">146.7</span> <span class="number">24.4</span></span><br><span class="line"><span class="number">9</span>           Merc <span class="number">280</span>   <span class="number">6</span> <span class="number">167.6</span> <span class="number">19.2</span></span><br><span class="line"><span class="number">10</span>           Valiant   <span class="number">6</span> <span class="number">225.0</span> <span class="number">18.1</span></span><br></pre></td></tr></table></figure><p>separate函数和unite函数对应，separate函数根据列进行分割，可以将一列拆分成多列，而unite函数则是合并列，如下所示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> df <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>x<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="literal">NA</span><span class="punctuation">,</span><span class="string">&quot;a.b&quot;</span><span class="punctuation">,</span><span class="string">&quot;a.d&quot;</span><span class="punctuation">,</span><span class="string">&quot;b.c&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> df</span><br><span class="line">     x</span><br><span class="line"><span class="number">1</span> <span class="operator">&lt;</span><span class="literal">NA</span><span class="operator">&gt;</span></span><br><span class="line"><span class="number">2</span>  a.b</span><br><span class="line"><span class="number">3</span>  a.d</span><br><span class="line"><span class="number">4</span>  b.c</span><br><span class="line"><span class="operator">&gt;</span> separate<span class="punctuation">(</span>df<span class="punctuation">,</span>col<span class="operator">=</span>x<span class="punctuation">,</span>into <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;A&quot;</span><span class="punctuation">,</span><span class="string">&quot;B&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">     A    B</span><br><span class="line"><span class="number">1</span> <span class="operator">&lt;</span><span class="literal">NA</span><span class="operator">&gt;</span> <span class="operator">&lt;</span><span class="literal">NA</span><span class="operator">&gt;</span></span><br><span class="line"><span class="number">2</span>    a    b</span><br><span class="line"><span class="number">3</span>    a    d</span><br><span class="line"><span class="number">4</span>    b    <span class="built_in">c</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> ddf <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>x<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="literal">NA</span><span class="punctuation">,</span><span class="string">&quot;a.b-c&quot;</span><span class="punctuation">,</span><span class="string">&quot;a-d&quot;</span><span class="punctuation">,</span><span class="string">&quot;b-c&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> ddf</span><br><span class="line">      x</span><br><span class="line"><span class="number">1</span>  <span class="operator">&lt;</span><span class="literal">NA</span><span class="operator">&gt;</span></span><br><span class="line"><span class="number">2</span> a.b<span class="operator">-</span><span class="built_in">c</span></span><br><span class="line"><span class="number">3</span>   a<span class="operator">-</span>d</span><br><span class="line"><span class="number">4</span>   b<span class="operator">-</span><span class="built_in">c</span></span><br><span class="line"><span class="operator">&gt;</span> separate<span class="punctuation">(</span>ddf<span class="punctuation">,</span>col<span class="operator">=</span>x<span class="punctuation">,</span>into <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;A&quot;</span><span class="punctuation">,</span><span class="string">&quot;B&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">     A    B</span><br><span class="line"><span class="number">1</span> <span class="operator">&lt;</span><span class="literal">NA</span><span class="operator">&gt;</span> <span class="operator">&lt;</span><span class="literal">NA</span><span class="operator">&gt;</span></span><br><span class="line"><span class="number">2</span>    a    b</span><br><span class="line"><span class="number">3</span>    a    d</span><br><span class="line"><span class="number">4</span>    b    <span class="built_in">c</span></span><br><span class="line">Warning message<span class="operator">:</span></span><br><span class="line">Expected <span class="number">2</span> pieces. Additional pieces discarded <span class="keyword">in</span> <span class="number">1</span> rows <span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span>. </span><br><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> separate<span class="punctuation">(</span>ddf<span class="punctuation">,</span>col<span class="operator">=</span>x<span class="punctuation">,</span>into <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;A&quot;</span><span class="punctuation">,</span><span class="string">&quot;B&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;-&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">     A    B</span><br><span class="line"><span class="number">1</span> <span class="operator">&lt;</span><span class="literal">NA</span><span class="operator">&gt;</span> <span class="operator">&lt;</span><span class="literal">NA</span><span class="operator">&gt;</span></span><br><span class="line"><span class="number">2</span>  a.b    <span class="built_in">c</span></span><br><span class="line"><span class="number">3</span>    a    d</span><br><span class="line"><span class="number">4</span>    b    <span class="built_in">c</span></span><br><span class="line"><span class="operator">&gt;</span> unite<span class="punctuation">(</span>x<span class="punctuation">,</span>col <span class="operator">=</span> <span class="string">&quot;AB&quot;</span><span class="punctuation">,</span>A<span class="punctuation">,</span>B<span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;-&quot;</span><span class="punctuation">)</span></span><br><span class="line">     AB</span><br><span class="line"><span class="number">1</span> <span class="literal">NA</span><span class="operator">-</span><span class="literal">NA</span></span><br><span class="line"><span class="number">2</span> a.b<span class="operator">-</span><span class="built_in">c</span></span><br><span class="line"><span class="number">3</span>   a<span class="operator">-</span>d</span><br><span class="line"><span class="number">4</span>   b<span class="operator">-</span><span class="built_in">c</span></span><br></pre></td></tr></table></figure><h3 id="4-11-dplyr包">4.11 dplyr包</h3><p>需要安装<code>dplyr</code>包</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> install.packages<span class="punctuation">(</span><span class="string">&quot;dplyr&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>dplyr<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><code>dplyr</code>包功能强大，很多数据转换都可以用<code>dplyr</code>轻松完成，不仅可以对单个表格进行操作，也可以对双表格进行操作。可以通过<code>ls</code>函数查看<code>dplyr</code>包中的函数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> ls<span class="punctuation">(</span><span class="string">&quot;package:dplyr&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>由于<code>dplyr</code>包的函数太多，为了避免和其他包重名，需要在函数前面加上包的名字，例如：<code>dplyr::filter</code>。</p><p><code>filter</code>函数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>filter<span class="punctuation">(</span>iris<span class="punctuation">,</span>Sepal.Length<span class="operator">&gt;</span><span class="number">7</span><span class="punctuation">)</span>  <span class="comment">#表示筛选出Sepal.Length大于7的鸢尾花，iris为鸢尾花数据集</span></span><br><span class="line">   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species</span><br><span class="line"><span class="number">1</span>           <span class="number">7.1</span>         <span class="number">3.0</span>          <span class="number">5.9</span>         <span class="number">2.1</span> virginica</span><br><span class="line"><span class="number">2</span>           <span class="number">7.6</span>         <span class="number">3.0</span>          <span class="number">6.6</span>         <span class="number">2.1</span> virginica</span><br><span class="line"><span class="number">3</span>           <span class="number">7.3</span>         <span class="number">2.9</span>          <span class="number">6.3</span>         <span class="number">1.8</span> virginica</span><br><span class="line"><span class="number">4</span>           <span class="number">7.2</span>         <span class="number">3.6</span>          <span class="number">6.1</span>         <span class="number">2.5</span> virginica</span><br><span class="line"><span class="number">5</span>           <span class="number">7.7</span>         <span class="number">3.8</span>          <span class="number">6.7</span>         <span class="number">2.2</span> virginica</span><br><span class="line"><span class="number">6</span>           <span class="number">7.7</span>         <span class="number">2.6</span>          <span class="number">6.9</span>         <span class="number">2.3</span> virginica</span><br><span class="line"><span class="number">7</span>           <span class="number">7.7</span>         <span class="number">2.8</span>          <span class="number">6.7</span>         <span class="number">2.0</span> virginica</span><br><span class="line"><span class="number">8</span>           <span class="number">7.2</span>         <span class="number">3.2</span>          <span class="number">6.0</span>         <span class="number">1.8</span> virginica</span><br><span class="line"><span class="number">9</span>           <span class="number">7.2</span>         <span class="number">3.0</span>          <span class="number">5.8</span>         <span class="number">1.6</span> virginica</span><br><span class="line"><span class="number">10</span>          <span class="number">7.4</span>         <span class="number">2.8</span>          <span class="number">6.1</span>         <span class="number">1.9</span> virginica</span><br><span class="line"><span class="number">11</span>          <span class="number">7.9</span>         <span class="number">3.8</span>          <span class="number">6.4</span>         <span class="number">2.0</span> virginica</span><br><span class="line"><span class="number">12</span>          <span class="number">7.7</span>         <span class="number">3.0</span>          <span class="number">6.1</span>         <span class="number">2.3</span> virginica</span><br></pre></td></tr></table></figure><p><code>distinct</code>表示去除重复行，类似于<code>unique</code>的功能。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>distinct<span class="punctuation">(</span>rbind<span class="punctuation">(</span>iris<span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">,</span><span class="punctuation">]</span><span class="punctuation">,</span>iris<span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">15</span><span class="punctuation">,</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="comment"># rbind是合并行函数</span></span><br><span class="line">   Sepal.Length Sepal.Width Petal.Length Petal.Width Species</span><br><span class="line"><span class="number">1</span>           <span class="number">5.1</span>         <span class="number">3.5</span>          <span class="number">1.4</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">2</span>           <span class="number">4.9</span>         <span class="number">3.0</span>          <span class="number">1.4</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">3</span>           <span class="number">4.7</span>         <span class="number">3.2</span>          <span class="number">1.3</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">4</span>           <span class="number">4.6</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">5</span>           <span class="number">5.0</span>         <span class="number">3.6</span>          <span class="number">1.4</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">6</span>           <span class="number">5.4</span>         <span class="number">3.9</span>          <span class="number">1.7</span>         <span class="number">0.4</span>  setosa</span><br><span class="line"><span class="number">7</span>           <span class="number">4.6</span>         <span class="number">3.4</span>          <span class="number">1.4</span>         <span class="number">0.3</span>  setosa</span><br><span class="line"><span class="number">8</span>           <span class="number">5.0</span>         <span class="number">3.4</span>          <span class="number">1.5</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">9</span>           <span class="number">4.4</span>         <span class="number">2.9</span>          <span class="number">1.4</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">10</span>          <span class="number">4.9</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.1</span>  setosa</span><br><span class="line"><span class="number">11</span>          <span class="number">5.4</span>         <span class="number">3.7</span>          <span class="number">1.5</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">12</span>          <span class="number">4.8</span>         <span class="number">3.4</span>          <span class="number">1.6</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">13</span>          <span class="number">4.8</span>         <span class="number">3.0</span>          <span class="number">1.4</span>         <span class="number">0.1</span>  setosa</span><br><span class="line"><span class="number">14</span>          <span class="number">4.3</span>         <span class="number">3.0</span>          <span class="number">1.1</span>         <span class="number">0.1</span>  setosa</span><br><span class="line"><span class="number">15</span>          <span class="number">5.8</span>         <span class="number">4.0</span>          <span class="number">1.2</span>         <span class="number">0.2</span>  setosa</span><br></pre></td></tr></table></figure><p><code>slice</code>函数表示取出某些行：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>slice<span class="punctuation">(</span>iris<span class="punctuation">,</span><span class="number">10</span><span class="operator">:</span><span class="number">15</span><span class="punctuation">)</span> <span class="comment"># 取出10-15行</span></span><br><span class="line">  Sepal.Length Sepal.Width Petal.Length Petal.Width Species</span><br><span class="line"><span class="number">1</span>          <span class="number">4.9</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.1</span>  setosa</span><br><span class="line"><span class="number">2</span>          <span class="number">5.4</span>         <span class="number">3.7</span>          <span class="number">1.5</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">3</span>          <span class="number">4.8</span>         <span class="number">3.4</span>          <span class="number">1.6</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">4</span>          <span class="number">4.8</span>         <span class="number">3.0</span>          <span class="number">1.4</span>         <span class="number">0.1</span>  setosa</span><br><span class="line"><span class="number">5</span>          <span class="number">4.3</span>         <span class="number">3.0</span>          <span class="number">1.1</span>         <span class="number">0.1</span>  setosa</span><br><span class="line"><span class="number">6</span>          <span class="number">5.8</span>         <span class="number">4.0</span>          <span class="number">1.2</span>         <span class="number">0.2</span>  setosa</span><br></pre></td></tr></table></figure><p>sample_n函数表示随机取样，随机抽取某些行：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>sample_n<span class="punctuation">(</span>iris<span class="punctuation">,</span><span class="number">10</span><span class="punctuation">)</span></span><br><span class="line">   Sepal.Length Sepal.Width Petal.Length Petal.Width    Species</span><br><span class="line"><span class="number">1</span>           <span class="number">4.8</span>         <span class="number">3.4</span>          <span class="number">1.6</span>         <span class="number">0.2</span>     setosa</span><br><span class="line"><span class="number">2</span>           <span class="number">6.9</span>         <span class="number">3.2</span>          <span class="number">5.7</span>         <span class="number">2.3</span>  virginica</span><br><span class="line"><span class="number">3</span>           <span class="number">5.1</span>         <span class="number">3.3</span>          <span class="number">1.7</span>         <span class="number">0.5</span>     setosa</span><br><span class="line"><span class="number">4</span>           <span class="number">7.0</span>         <span class="number">3.2</span>          <span class="number">4.7</span>         <span class="number">1.4</span> versicolor</span><br><span class="line"><span class="number">5</span>           <span class="number">6.4</span>         <span class="number">3.2</span>          <span class="number">4.5</span>         <span class="number">1.5</span> versicolor</span><br><span class="line"><span class="number">6</span>           <span class="number">5.8</span>         <span class="number">2.7</span>          <span class="number">5.1</span>         <span class="number">1.9</span>  virginica</span><br><span class="line"><span class="number">7</span>           <span class="number">5.0</span>         <span class="number">3.2</span>          <span class="number">1.2</span>         <span class="number">0.2</span>     setosa</span><br><span class="line"><span class="number">8</span>           <span class="number">4.6</span>         <span class="number">3.4</span>          <span class="number">1.4</span>         <span class="number">0.3</span>     setosa</span><br><span class="line"><span class="number">9</span>           <span class="number">6.0</span>         <span class="number">2.2</span>          <span class="number">5.0</span>         <span class="number">1.5</span>  virginica</span><br><span class="line"><span class="number">10</span>          <span class="number">6.3</span>         <span class="number">2.8</span>          <span class="number">5.1</span>         <span class="number">1.5</span>  virginica</span><br></pre></td></tr></table></figure><p><code>sample_frac</code>表示按比例随机选取：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>sample_frac<span class="punctuation">(</span>iris<span class="punctuation">,</span><span class="number">0.1</span><span class="punctuation">)</span></span><br><span class="line">   Sepal.Length Sepal.Width Petal.Length Petal.Width    Species</span><br><span class="line"><span class="number">1</span>           <span class="number">6.6</span>         <span class="number">3.0</span>          <span class="number">4.4</span>         <span class="number">1.4</span> versicolor</span><br><span class="line"><span class="number">2</span>           <span class="number">6.3</span>         <span class="number">2.5</span>          <span class="number">5.0</span>         <span class="number">1.9</span>  virginica</span><br><span class="line"><span class="number">3</span>           <span class="number">5.2</span>         <span class="number">3.5</span>          <span class="number">1.5</span>         <span class="number">0.2</span>     setosa</span><br><span class="line"><span class="number">4</span>           <span class="number">4.4</span>         <span class="number">3.0</span>          <span class="number">1.3</span>         <span class="number">0.2</span>     setosa</span><br><span class="line"><span class="number">5</span>           <span class="number">6.6</span>         <span class="number">2.9</span>          <span class="number">4.6</span>         <span class="number">1.3</span> versicolor</span><br><span class="line"><span class="number">6</span>           <span class="number">4.9</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.2</span>     setosa</span><br><span class="line"><span class="number">7</span>           <span class="number">4.9</span>         <span class="number">2.5</span>          <span class="number">4.5</span>         <span class="number">1.7</span>  virginica</span><br><span class="line"><span class="number">8</span>           <span class="number">4.9</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.1</span>     setosa</span><br><span class="line"><span class="number">9</span>           <span class="number">5.9</span>         <span class="number">3.2</span>          <span class="number">4.8</span>         <span class="number">1.8</span> versicolor</span><br><span class="line"><span class="number">10</span>          <span class="number">6.1</span>         <span class="number">3.0</span>          <span class="number">4.6</span>         <span class="number">1.4</span> versicolor</span><br><span class="line"><span class="number">11</span>          <span class="number">6.1</span>         <span class="number">2.8</span>          <span class="number">4.7</span>         <span class="number">1.2</span> versicolor</span><br><span class="line"><span class="number">12</span>          <span class="number">6.9</span>         <span class="number">3.2</span>          <span class="number">5.7</span>         <span class="number">2.3</span>  virginica</span><br><span class="line"><span class="number">13</span>          <span class="number">5.5</span>         <span class="number">4.2</span>          <span class="number">1.4</span>         <span class="number">0.2</span>     setosa</span><br><span class="line"><span class="number">14</span>          <span class="number">5.7</span>         <span class="number">3.0</span>          <span class="number">4.2</span>         <span class="number">1.2</span> versicolor</span><br><span class="line"><span class="number">15</span>          <span class="number">5.8</span>         <span class="number">4.0</span>          <span class="number">1.2</span>         <span class="number">0.2</span>     setosa</span><br></pre></td></tr></table></figure><p><code>arrange</code>函数用于排序，默认从小到大进行排序：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>dplyr<span class="operator">::</span>arrange<span class="punctuation">(</span>iris<span class="punctuation">,</span>Sepal.Length<span class="punctuation">)</span><span class="punctuation">)</span>   <span class="comment"># 按照花萼长度进行排序</span></span><br><span class="line">  Sepal.Length Sepal.Width Petal.Length Petal.Width Species</span><br><span class="line"><span class="number">1</span>          <span class="number">4.3</span>         <span class="number">3.0</span>          <span class="number">1.1</span>         <span class="number">0.1</span>  setosa</span><br><span class="line"><span class="number">2</span>          <span class="number">4.4</span>         <span class="number">2.9</span>          <span class="number">1.4</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">3</span>          <span class="number">4.4</span>         <span class="number">3.0</span>          <span class="number">1.3</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">4</span>          <span class="number">4.4</span>         <span class="number">3.2</span>          <span class="number">1.3</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">5</span>          <span class="number">4.5</span>         <span class="number">2.3</span>          <span class="number">1.3</span>         <span class="number">0.3</span>  setosa</span><br><span class="line"><span class="number">6</span>          <span class="number">4.6</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.2</span>  setosa</span><br></pre></td></tr></table></figure><p>如果加上<code>desc</code>表示根据从大到小进行排序：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>dplyr<span class="operator">::</span>arrange<span class="punctuation">(</span>iris<span class="punctuation">,</span>desc<span class="punctuation">(</span>Sepal.Length<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  Sepal.Length Sepal.Width Petal.Length Petal.Width   Species</span><br><span class="line"><span class="number">1</span>          <span class="number">7.9</span>         <span class="number">3.8</span>          <span class="number">6.4</span>         <span class="number">2.0</span> virginica</span><br><span class="line"><span class="number">2</span>          <span class="number">7.7</span>         <span class="number">3.8</span>          <span class="number">6.7</span>         <span class="number">2.2</span> virginica</span><br><span class="line"><span class="number">3</span>          <span class="number">7.7</span>         <span class="number">2.6</span>          <span class="number">6.9</span>         <span class="number">2.3</span> virginica</span><br><span class="line"><span class="number">4</span>          <span class="number">7.7</span>         <span class="number">2.8</span>          <span class="number">6.7</span>         <span class="number">2.0</span> virginica</span><br><span class="line"><span class="number">5</span>          <span class="number">7.7</span>         <span class="number">3.0</span>          <span class="number">6.1</span>         <span class="number">2.3</span> virginica</span><br><span class="line"><span class="number">6</span>          <span class="number">7.6</span>         <span class="number">3.0</span>          <span class="number">6.6</span>         <span class="number">2.1</span> virginica</span><br></pre></td></tr></table></figure><p><code>dplyr</code>包也有数据框取子集的功能，可以利用<code>select</code>函数，相关示例通过<code>?select</code>命令查看。</p><p><code>summarise</code>函数用来统计：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> summarise<span class="punctuation">(</span>iris<span class="punctuation">,</span>avg<span class="operator">=</span>mean<span class="punctuation">(</span>Sepal.Length<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">       avg</span><br><span class="line"><span class="number">1</span> <span class="number">5.843333</span></span><br><span class="line"><span class="operator">&gt;</span> summarise<span class="punctuation">(</span>iris<span class="punctuation">,</span><span class="built_in">sum</span><span class="operator">=</span><span class="built_in">sum</span><span class="punctuation">(</span>Sepal.Length<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    <span class="built_in">sum</span></span><br><span class="line"><span class="number">1</span> <span class="number">876.5</span></span><br></pre></td></tr></table></figure><p><strong>链式操作符</strong></p><p>两个百分号中间夹着一个大于号，称为链式操作符，它功能是用于实现将一个函数的输出传递给下一个函数，作为下一个函数的输入。</p><p>在Rstudio中可以使用<code>ctrl + shift + M</code>快捷键输出出来。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>mtcars<span class="punctuation">,</span><span class="number">20</span><span class="punctuation">)</span>   <span class="comment"># 取出前20行</span></span><br><span class="line">                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line">Mazda RX4           <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Mazda RX4 Wag       <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Datsun <span class="number">710</span>          <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">Hornet <span class="number">4</span> Drive      <span class="number">21.4</span>   <span class="number">6</span> <span class="number">258.0</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line">Hornet Sportabout   <span class="number">18.7</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span></span><br><span class="line">Valiant             <span class="number">18.1</span>   <span class="number">6</span> <span class="number">225.0</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line">Duster <span class="number">360</span>          <span class="number">14.3</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">245</span> <span class="number">3.21</span> <span class="number">3.570</span> <span class="number">15.84</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Merc <span class="number">240</span>D           <span class="number">24.4</span>   <span class="number">4</span> <span class="number">146.7</span>  <span class="number">62</span> <span class="number">3.69</span> <span class="number">3.190</span> <span class="number">20.00</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line">Merc <span class="number">230</span>            <span class="number">22.8</span>   <span class="number">4</span> <span class="number">140.8</span>  <span class="number">95</span> <span class="number">3.92</span> <span class="number">3.150</span> <span class="number">22.90</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line">Merc <span class="number">280</span>            <span class="number">19.2</span>   <span class="number">6</span> <span class="number">167.6</span> <span class="number">123</span> <span class="number">3.92</span> <span class="number">3.440</span> <span class="number">18.30</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Merc <span class="number">280</span>C           <span class="number">17.8</span>   <span class="number">6</span> <span class="number">167.6</span> <span class="number">123</span> <span class="number">3.92</span> <span class="number">3.440</span> <span class="number">18.90</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Merc <span class="number">450</span>SE          <span class="number">16.4</span>   <span class="number">8</span> <span class="number">275.8</span> <span class="number">180</span> <span class="number">3.07</span> <span class="number">4.070</span> <span class="number">17.40</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">3</span></span><br><span class="line">Merc <span class="number">450</span>SL          <span class="number">17.3</span>   <span class="number">8</span> <span class="number">275.8</span> <span class="number">180</span> <span class="number">3.07</span> <span class="number">3.730</span> <span class="number">17.60</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">3</span></span><br><span class="line">Merc <span class="number">450</span>SLC         <span class="number">15.2</span>   <span class="number">8</span> <span class="number">275.8</span> <span class="number">180</span> <span class="number">3.07</span> <span class="number">3.780</span> <span class="number">18.00</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">3</span></span><br><span class="line">Cadillac Fleetwood  <span class="number">10.4</span>   <span class="number">8</span> <span class="number">472.0</span> <span class="number">205</span> <span class="number">2.93</span> <span class="number">5.250</span> <span class="number">17.98</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Lincoln Continental <span class="number">10.4</span>   <span class="number">8</span> <span class="number">460.0</span> <span class="number">215</span> <span class="number">3.00</span> <span class="number">5.424</span> <span class="number">17.82</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Chrysler Imperial   <span class="number">14.7</span>   <span class="number">8</span> <span class="number">440.0</span> <span class="number">230</span> <span class="number">3.23</span> <span class="number">5.345</span> <span class="number">17.42</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Fiat <span class="number">128</span>            <span class="number">32.4</span>   <span class="number">4</span>  <span class="number">78.7</span>  <span class="number">66</span> <span class="number">4.08</span> <span class="number">2.200</span> <span class="number">19.47</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">Honda Civic         <span class="number">30.4</span>   <span class="number">4</span>  <span class="number">75.7</span>  <span class="number">52</span> <span class="number">4.93</span> <span class="number">1.615</span> <span class="number">18.52</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line">Toyota Corolla      <span class="number">33.9</span>   <span class="number">4</span>  <span class="number">71.1</span>  <span class="number">65</span> <span class="number">4.22</span> <span class="number">1.835</span> <span class="number">19.90</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>mtcars<span class="punctuation">,</span><span class="number">20</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> tail<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span>   <span class="comment"># 取出前20行中的后10行</span></span><br><span class="line">                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line">Merc <span class="number">280</span>C           <span class="number">17.8</span>   <span class="number">6</span> <span class="number">167.6</span> <span class="number">123</span> <span class="number">3.92</span> <span class="number">3.440</span> <span class="number">18.90</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line">Merc <span class="number">450</span>SE          <span class="number">16.4</span>   <span class="number">8</span> <span class="number">275.8</span> <span class="number">180</span> <span class="number">3.07</span> <span class="number">4.070</span> <span class="number">17.40</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">3</span></span><br><span class="line">Merc <span class="number">450</span>SL          <span class="number">17.3</span>   <span class="number">8</span> <span class="number">275.8</span> <span class="number">180</span> <span class="number">3.07</span> <span class="number">3.730</span> <span class="number">17.60</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">3</span></span><br><span class="line">Merc <span class="number">450</span>SLC         <span class="number">15.2</span>   <span class="number">8</span> <span class="number">275.8</span> <span class="number">180</span> <span class="number">3.07</span> <span class="number">3.780</span> <span class="number">18.00</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">3</span></span><br><span class="line">Cadillac Fleetwood  <span class="number">10.4</span>   <span class="number">8</span> <span class="number">472.0</span> <span class="number">205</span> <span class="number">2.93</span> <span class="number">5.250</span> <span class="number">17.98</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Lincoln Continental <span class="number">10.4</span>   <span class="number">8</span> <span class="number">460.0</span> <span class="number">215</span> <span class="number">3.00</span> <span class="number">5.424</span> <span class="number">17.82</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Chrysler Imperial   <span class="number">14.7</span>   <span class="number">8</span> <span class="number">440.0</span> <span class="number">230</span> <span class="number">3.23</span> <span class="number">5.345</span> <span class="number">17.42</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span></span><br><span class="line">Fiat <span class="number">128</span>            <span class="number">32.4</span>   <span class="number">4</span>  <span class="number">78.7</span>  <span class="number">66</span> <span class="number">4.08</span> <span class="number">2.200</span> <span class="number">19.47</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line">Honda Civic         <span class="number">30.4</span>   <span class="number">4</span>  <span class="number">75.7</span>  <span class="number">52</span> <span class="number">4.93</span> <span class="number">1.615</span> <span class="number">18.52</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span></span><br><span class="line">Toyota Corolla      <span class="number">33.9</span>   <span class="number">4</span>  <span class="number">71.1</span>  <span class="number">65</span> <span class="number">4.22</span> <span class="number">1.835</span> <span class="number">19.90</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br></pre></td></tr></table></figure><p><code>group_by</code>函数可以对函数进行分组：通过Species这一列对鸢尾花进行分组，分为三组：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>group_by<span class="punctuation">(</span>iris<span class="punctuation">,</span>Species<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># A tibble: 150 × 5</span></span><br><span class="line"><span class="comment"># Groups:   Species [3]  </span></span><br><span class="line">   Sepal.Length Sepal.Width Petal.Length Petal.Width Species</span><br><span class="line">          <span class="operator">&lt;</span>dbl<span class="operator">&gt;</span>       <span class="operator">&lt;</span>dbl<span class="operator">&gt;</span>        <span class="operator">&lt;</span>dbl<span class="operator">&gt;</span>       <span class="operator">&lt;</span>dbl<span class="operator">&gt;</span> <span class="operator">&lt;</span>fct<span class="operator">&gt;</span>  </span><br><span class="line"> <span class="number">1</span>          <span class="number">5.1</span>         <span class="number">3.5</span>          <span class="number">1.4</span>         <span class="number">0.2</span> setosa </span><br><span class="line"> <span class="number">2</span>          <span class="number">4.9</span>         <span class="number">3</span>            <span class="number">1.4</span>         <span class="number">0.2</span> setosa </span><br><span class="line"> <span class="number">3</span>          <span class="number">4.7</span>         <span class="number">3.2</span>          <span class="number">1.3</span>         <span class="number">0.2</span> setosa </span><br><span class="line"> <span class="number">4</span>          <span class="number">4.6</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.2</span> setosa </span><br><span class="line"> <span class="number">5</span>          <span class="number">5</span>           <span class="number">3.6</span>          <span class="number">1.4</span>         <span class="number">0.2</span> setosa </span><br><span class="line"> <span class="number">6</span>          <span class="number">5.4</span>         <span class="number">3.9</span>          <span class="number">1.7</span>         <span class="number">0.4</span> setosa </span><br><span class="line"> <span class="number">7</span>          <span class="number">4.6</span>         <span class="number">3.4</span>          <span class="number">1.4</span>         <span class="number">0.3</span> setosa </span><br><span class="line"> <span class="number">8</span>          <span class="number">5</span>           <span class="number">3.4</span>          <span class="number">1.5</span>         <span class="number">0.2</span> setosa </span><br><span class="line"> <span class="number">9</span>          <span class="number">4.4</span>         <span class="number">2.9</span>          <span class="number">1.4</span>         <span class="number">0.2</span> setosa </span><br><span class="line"><span class="number">10</span>          <span class="number">4.9</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.1</span> setosa </span><br><span class="line"><span class="comment"># … with 140 more rows</span></span><br><span class="line"><span class="comment"># ℹ Use `print(n = ...)` to see more rows</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> iris <span class="operator">%&gt;%</span> group_by<span class="punctuation">(</span>Species<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># A tibble: 150 × 5</span></span><br><span class="line"><span class="comment"># Groups:   Species [3]</span></span><br><span class="line">   Sepal.Length Sepal.Width Petal.Length Petal.Width Species</span><br><span class="line">          <span class="operator">&lt;</span>dbl<span class="operator">&gt;</span>       <span class="operator">&lt;</span>dbl<span class="operator">&gt;</span>        <span class="operator">&lt;</span>dbl<span class="operator">&gt;</span>       <span class="operator">&lt;</span>dbl<span class="operator">&gt;</span> <span class="operator">&lt;</span>fct<span class="operator">&gt;</span>  </span><br><span class="line"> <span class="number">1</span>          <span class="number">5.1</span>         <span class="number">3.5</span>          <span class="number">1.4</span>         <span class="number">0.2</span> setosa </span><br><span class="line"> <span class="number">2</span>          <span class="number">4.9</span>         <span class="number">3</span>            <span class="number">1.4</span>         <span class="number">0.2</span> setosa </span><br><span class="line"> <span class="number">3</span>          <span class="number">4.7</span>         <span class="number">3.2</span>          <span class="number">1.3</span>         <span class="number">0.2</span> setosa </span><br><span class="line"> <span class="number">4</span>          <span class="number">4.6</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.2</span> setosa </span><br><span class="line"> <span class="number">5</span>          <span class="number">5</span>           <span class="number">3.6</span>          <span class="number">1.4</span>         <span class="number">0.2</span> setosa </span><br><span class="line"> <span class="number">6</span>          <span class="number">5.4</span>         <span class="number">3.9</span>          <span class="number">1.7</span>         <span class="number">0.4</span> setosa </span><br><span class="line"> <span class="number">7</span>          <span class="number">4.6</span>         <span class="number">3.4</span>          <span class="number">1.4</span>         <span class="number">0.3</span> setosa </span><br><span class="line"> <span class="number">8</span>          <span class="number">5</span>           <span class="number">3.4</span>          <span class="number">1.5</span>         <span class="number">0.2</span> setosa </span><br><span class="line"> <span class="number">9</span>          <span class="number">4.4</span>         <span class="number">2.9</span>          <span class="number">1.4</span>         <span class="number">0.2</span> setosa </span><br><span class="line"><span class="number">10</span>          <span class="number">4.9</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.1</span> setosa </span><br><span class="line"><span class="comment"># … with 140 more rows</span></span><br><span class="line"><span class="comment"># ℹ Use `print(n = ...)` to see more rows</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> iris <span class="operator">%&gt;%</span> group_by<span class="punctuation">(</span>Species<span class="punctuation">)</span> <span class="operator">%&gt;%</span> summarise<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># A tibble: 3 × 1</span></span><br><span class="line">  Species   </span><br><span class="line">  <span class="operator">&lt;</span>fct<span class="operator">&gt;</span>     </span><br><span class="line"><span class="number">1</span> setosa    </span><br><span class="line"><span class="number">2</span> versicolor</span><br><span class="line"><span class="number">3</span> virginica </span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> iris <span class="operator">%&gt;%</span> group_by<span class="punctuation">(</span>Species<span class="punctuation">)</span> <span class="operator">%&gt;%</span> summarise<span class="punctuation">(</span>avg<span class="operator">=</span>mean<span class="punctuation">(</span>Sepal.Width<span class="punctuation">)</span><span class="punctuation">)</span> <span class="comment"># </span></span><br><span class="line"><span class="comment"># A tibble: 3 × 2</span></span><br><span class="line">  Species      avg</span><br><span class="line">  <span class="operator">&lt;</span>fct<span class="operator">&gt;</span>      <span class="operator">&lt;</span>dbl<span class="operator">&gt;</span></span><br><span class="line"><span class="number">1</span> setosa      <span class="number">3.43</span></span><br><span class="line"><span class="number">2</span> versicolor  <span class="number">2.77</span></span><br><span class="line"><span class="number">3</span> virginica   <span class="number">2.97</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> iris <span class="operator">%&gt;%</span> group_by<span class="punctuation">(</span>Species<span class="punctuation">)</span> <span class="operator">%&gt;%</span> summarise<span class="punctuation">(</span>avg<span class="operator">=</span>mean<span class="punctuation">(</span>Sepal.Width<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> arrange<span class="punctuation">(</span>avg<span class="punctuation">)</span> <span class="comment"># 在上面的基础上进行排序</span></span><br><span class="line"><span class="comment"># A tibble: 3 × 2</span></span><br><span class="line">  Species      avg</span><br><span class="line">  <span class="operator">&lt;</span>fct<span class="operator">&gt;</span>      <span class="operator">&lt;</span>dbl<span class="operator">&gt;</span></span><br><span class="line"><span class="number">1</span> versicolor  <span class="number">2.77</span></span><br><span class="line"><span class="number">2</span> virginica   <span class="number">2.97</span></span><br><span class="line"><span class="number">3</span> setosa      <span class="number">3.43</span></span><br></pre></td></tr></table></figure><p><code>mutate</code>函数可以添加新的变量：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>dplyr<span class="operator">::</span>mutate<span class="punctuation">(</span>iris<span class="punctuation">,</span>new <span class="operator">=</span> Sepal.Length<span class="operator">+</span>Petal.Length<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  Sepal.Length Sepal.Width Petal.Length Petal.Width Species new</span><br><span class="line"><span class="number">1</span>          <span class="number">5.1</span>         <span class="number">3.5</span>          <span class="number">1.4</span>         <span class="number">0.2</span>  setosa <span class="number">6.5</span></span><br><span class="line"><span class="number">2</span>          <span class="number">4.9</span>         <span class="number">3.0</span>          <span class="number">1.4</span>         <span class="number">0.2</span>  setosa <span class="number">6.3</span></span><br><span class="line"><span class="number">3</span>          <span class="number">4.7</span>         <span class="number">3.2</span>          <span class="number">1.3</span>         <span class="number">0.2</span>  setosa <span class="number">6.0</span></span><br><span class="line"><span class="number">4</span>          <span class="number">4.6</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.2</span>  setosa <span class="number">6.1</span></span><br><span class="line"><span class="number">5</span>          <span class="number">5.0</span>         <span class="number">3.6</span>          <span class="number">1.4</span>         <span class="number">0.2</span>  setosa <span class="number">6.4</span></span><br><span class="line"><span class="number">6</span>          <span class="number">5.4</span>         <span class="number">3.9</span>          <span class="number">1.7</span>         <span class="number">0.4</span>  setosa <span class="number">7.1</span></span><br></pre></td></tr></table></figure><p>下面对双表格进行操作：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> a<span class="operator">=</span>data.frame<span class="punctuation">(</span>x1<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;A&quot;</span><span class="punctuation">,</span><span class="string">&quot;B&quot;</span><span class="punctuation">,</span><span class="string">&quot;C&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span>x2<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> a</span><br><span class="line">  x1 x2</span><br><span class="line"><span class="number">1</span>  A  <span class="number">1</span></span><br><span class="line"><span class="number">2</span>  B  <span class="number">2</span></span><br><span class="line"><span class="number">3</span>  C  <span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> b<span class="operator">=</span>data.frame<span class="punctuation">(</span>x1<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;A&quot;</span><span class="punctuation">,</span><span class="string">&quot;B&quot;</span><span class="punctuation">,</span><span class="string">&quot;D&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span>x3<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="built_in">T</span><span class="punctuation">,</span><span class="built_in">F</span><span class="punctuation">,</span><span class="built_in">T</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> b</span><br><span class="line">  x1    x3</span><br><span class="line"><span class="number">1</span>  A  <span class="literal">TRUE</span></span><br><span class="line"><span class="number">2</span>  B <span class="literal">FALSE</span></span><br><span class="line"><span class="number">3</span>  D  <span class="literal">TRUE</span></span><br><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>left_join<span class="punctuation">(</span>a<span class="punctuation">,</span>b<span class="punctuation">,</span>by<span class="operator">=</span><span class="string">&quot;x1&quot;</span><span class="punctuation">)</span> <span class="comment"># 左链接，以左边的行名为基准</span></span><br><span class="line">  x1 x2    x3</span><br><span class="line"><span class="number">1</span>  A  <span class="number">1</span>  <span class="literal">TRUE</span></span><br><span class="line"><span class="number">2</span>  B  <span class="number">2</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="number">3</span>  C  <span class="number">3</span>    <span class="literal">NA</span></span><br><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>right_join<span class="punctuation">(</span>a<span class="punctuation">,</span>b<span class="punctuation">,</span>by<span class="operator">=</span><span class="string">&quot;x1&quot;</span><span class="punctuation">)</span> <span class="comment"># 右链接，以右边的行名为基准</span></span><br><span class="line">  x1 x2    x3</span><br><span class="line"><span class="number">1</span>  A  <span class="number">1</span>  <span class="literal">TRUE</span></span><br><span class="line"><span class="number">2</span>  B  <span class="number">2</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="number">3</span>  D <span class="literal">NA</span>  <span class="literal">TRUE</span></span><br><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>full_join<span class="punctuation">(</span>a<span class="punctuation">,</span>b<span class="punctuation">,</span>by<span class="operator">=</span><span class="string">&quot;x1&quot;</span><span class="punctuation">)</span> <span class="comment"># 全链接，取a和b的并集</span></span><br><span class="line">  x1 x2    x3</span><br><span class="line"><span class="number">1</span>  A  <span class="number">1</span>  <span class="literal">TRUE</span></span><br><span class="line"><span class="number">2</span>  B  <span class="number">2</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="number">3</span>  C  <span class="number">3</span>    <span class="literal">NA</span></span><br><span class="line"><span class="number">4</span>  D <span class="literal">NA</span>  <span class="literal">TRUE</span></span><br><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>semi_join<span class="punctuation">(</span>a<span class="punctuation">,</span>b<span class="punctuation">,</span>by<span class="operator">=</span><span class="string">&quot;x1&quot;</span><span class="punctuation">)</span> <span class="comment"># 半链接：取a和b的交集部分</span></span><br><span class="line">  x1 x2</span><br><span class="line"><span class="number">1</span>  A  <span class="number">1</span></span><br><span class="line"><span class="number">2</span>  B  <span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>anti_join<span class="punctuation">(</span>a<span class="punctuation">,</span>b<span class="punctuation">,</span>by<span class="operator">=</span><span class="string">&quot;x1&quot;</span><span class="punctuation">)</span> <span class="comment"># 反链接：取a和b的补集部分</span></span><br><span class="line">  x1 x2</span><br><span class="line"><span class="number">1</span>  C  <span class="number">3</span></span><br><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>anti_join<span class="punctuation">(</span>b<span class="punctuation">,</span>a<span class="punctuation">,</span>by<span class="operator">=</span><span class="string">&quot;x1&quot;</span><span class="punctuation">)</span> <span class="comment"># 反链接：取a和b的补集部分</span></span><br><span class="line">  x1   x3</span><br><span class="line"><span class="number">1</span>  D <span class="literal">TRUE</span></span><br></pre></td></tr></table></figure><p><code>intersect</code>函数用来取交集：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mtcars <span class="operator">&lt;-</span> mutate<span class="punctuation">(</span>mtcars<span class="punctuation">,</span>Model<span class="operator">=</span>rownames<span class="punctuation">(</span>mtcars<span class="punctuation">)</span><span class="punctuation">)</span> <span class="comment"># 由于没有行名，增加一列显示行名</span></span><br><span class="line"><span class="operator">&gt;</span> first <span class="operator">&lt;-</span> slice<span class="punctuation">(</span>mtcars<span class="punctuation">,</span><span class="number">1</span><span class="operator">:</span><span class="number">6</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> first</span><br><span class="line">                   mpg cyl disp  hp drat    wt  qsec vs am gear carb             Model</span><br><span class="line">Mazda RX4         <span class="number">21.0</span>   <span class="number">6</span>  <span class="number">160</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span>         Mazda RX4</span><br><span class="line">Mazda RX4 Wag     <span class="number">21.0</span>   <span class="number">6</span>  <span class="number">160</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span>     Mazda RX4 Wag</span><br><span class="line">Datsun <span class="number">710</span>        <span class="number">22.8</span>   <span class="number">4</span>  <span class="number">108</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span>        Datsun <span class="number">710</span></span><br><span class="line">Hornet <span class="number">4</span> Drive    <span class="number">21.4</span>   <span class="number">6</span>  <span class="number">258</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span>    Hornet <span class="number">4</span> Drive</span><br><span class="line">Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span>  <span class="number">360</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span> Hornet Sportabout</span><br><span class="line">Valiant           <span class="number">18.1</span>   <span class="number">6</span>  <span class="number">225</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span>           Valiant</span><br><span class="line"><span class="operator">&gt;</span> second <span class="operator">&lt;-</span> slice<span class="punctuation">(</span>mtcars<span class="punctuation">,</span><span class="number">5</span><span class="operator">:</span><span class="number">15</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> second <span class="operator">&lt;-</span> slice<span class="punctuation">(</span>mtcars<span class="punctuation">,</span><span class="number">4</span><span class="operator">:</span><span class="number">9</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> second</span><br><span class="line">                   mpg cyl  disp  hp drat    wt  qsec vs am gear carb             Model</span><br><span class="line">Hornet <span class="number">4</span> Drive    <span class="number">21.4</span>   <span class="number">6</span> <span class="number">258.0</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span>    Hornet <span class="number">4</span> Drive</span><br><span class="line">Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span> Hornet Sportabout</span><br><span class="line">Valiant           <span class="number">18.1</span>   <span class="number">6</span> <span class="number">225.0</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span>           Valiant</span><br><span class="line">Duster <span class="number">360</span>        <span class="number">14.3</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">245</span> <span class="number">3.21</span> <span class="number">3.570</span> <span class="number">15.84</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span>        Duster <span class="number">360</span></span><br><span class="line">Merc <span class="number">240</span>D         <span class="number">24.4</span>   <span class="number">4</span> <span class="number">146.7</span>  <span class="number">62</span> <span class="number">3.69</span> <span class="number">3.190</span> <span class="number">20.00</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span>         Merc <span class="number">240</span>D</span><br><span class="line">Merc <span class="number">230</span>          <span class="number">22.8</span>   <span class="number">4</span> <span class="number">140.8</span>  <span class="number">95</span> <span class="number">3.92</span> <span class="number">3.150</span> <span class="number">22.90</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span>          Merc <span class="number">230</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> intersect<span class="punctuation">(</span>first<span class="punctuation">,</span>second<span class="punctuation">)</span> <span class="comment"># intersect函数用来取交集</span></span><br><span class="line">                   mpg cyl disp  hp drat    wt  qsec vs am gear carb             Model</span><br><span class="line">Hornet <span class="number">4</span> Drive    <span class="number">21.4</span>   <span class="number">6</span>  <span class="number">258</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span>    Hornet <span class="number">4</span> Drive</span><br><span class="line">Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span>  <span class="number">360</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span> Hornet Sportabout</span><br><span class="line">Valiant           <span class="number">18.1</span>   <span class="number">6</span>  <span class="number">225</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span>           Valiant</span><br></pre></td></tr></table></figure><p><code>union</code>取非冗余的并集，即自动剔除冗余部分。<code>union_all</code>只是简单的并集，不会提出冗余部分。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>union_all<span class="punctuation">(</span>first<span class="punctuation">,</span>second<span class="punctuation">)</span></span><br><span class="line">                       mpg cyl  disp  hp drat    wt  qsec vs am gear carb             Model</span><br><span class="line">Mazda RX4             <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span>         Mazda RX4</span><br><span class="line">Mazda RX4 Wag         <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span>     Mazda RX4 Wag</span><br><span class="line">Datsun <span class="number">710</span>            <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span>        Datsun <span class="number">710</span></span><br><span class="line">Hornet <span class="number">4</span> Drive...4    <span class="number">21.4</span>   <span class="number">6</span> <span class="number">258.0</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span>    Hornet <span class="number">4</span> Drive</span><br><span class="line">Hornet Sportabout...5 <span class="number">18.7</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span> Hornet Sportabout</span><br><span class="line">Valiant...6           <span class="number">18.1</span>   <span class="number">6</span> <span class="number">225.0</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span>           Valiant</span><br><span class="line">Hornet <span class="number">4</span> Drive...7    <span class="number">21.4</span>   <span class="number">6</span> <span class="number">258.0</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span>    Hornet <span class="number">4</span> Drive</span><br><span class="line">Hornet Sportabout...8 <span class="number">18.7</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span> Hornet Sportabout</span><br><span class="line">Valiant...9           <span class="number">18.1</span>   <span class="number">6</span> <span class="number">225.0</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span>           Valiant</span><br><span class="line">Duster <span class="number">360</span>            <span class="number">14.3</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">245</span> <span class="number">3.21</span> <span class="number">3.570</span> <span class="number">15.84</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span>        Duster <span class="number">360</span></span><br><span class="line">Merc <span class="number">240</span>D             <span class="number">24.4</span>   <span class="number">4</span> <span class="number">146.7</span>  <span class="number">62</span> <span class="number">3.69</span> <span class="number">3.190</span> <span class="number">20.00</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span>         Merc <span class="number">240</span>D</span><br><span class="line">Merc <span class="number">230</span>              <span class="number">22.8</span>   <span class="number">4</span> <span class="number">140.8</span>  <span class="number">95</span> <span class="number">3.92</span> <span class="number">3.150</span> <span class="number">22.90</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span>          Merc <span class="number">230</span></span><br><span class="line"><span class="operator">&gt;</span> dplyr<span class="operator">::</span>union<span class="punctuation">(</span>first<span class="punctuation">,</span>second<span class="punctuation">)</span></span><br><span class="line">                   mpg cyl  disp  hp drat    wt  qsec vs am gear carb             Model</span><br><span class="line">Mazda RX4         <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span>         Mazda RX4</span><br><span class="line">Mazda RX4 Wag     <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span>     Mazda RX4 Wag</span><br><span class="line">Datsun <span class="number">710</span>        <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span>        Datsun <span class="number">710</span></span><br><span class="line">Hornet <span class="number">4</span> Drive    <span class="number">21.4</span>   <span class="number">6</span> <span class="number">258.0</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span>    Hornet <span class="number">4</span> Drive</span><br><span class="line">Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span> Hornet Sportabout</span><br><span class="line">Valiant           <span class="number">18.1</span>   <span class="number">6</span> <span class="number">225.0</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span>           Valiant</span><br><span class="line">Duster <span class="number">360</span>        <span class="number">14.3</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">245</span> <span class="number">3.21</span> <span class="number">3.570</span> <span class="number">15.84</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span>        Duster <span class="number">360</span></span><br><span class="line">Merc <span class="number">240</span>D         <span class="number">24.4</span>   <span class="number">4</span> <span class="number">146.7</span>  <span class="number">62</span> <span class="number">3.69</span> <span class="number">3.190</span> <span class="number">20.00</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span>         Merc <span class="number">240</span>D</span><br><span class="line">Merc <span class="number">230</span>          <span class="number">22.8</span>   <span class="number">4</span> <span class="number">140.8</span>  <span class="number">95</span> <span class="number">3.92</span> <span class="number">3.150</span> <span class="number">22.90</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span>          Merc <span class="number">230</span></span><br></pre></td></tr></table></figure><p><code>setdiff</code>取第一个参数的补集</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> setdiff<span class="punctuation">(</span>first<span class="punctuation">,</span>second<span class="punctuation">)</span></span><br><span class="line">               mpg cyl disp  hp drat    wt  qsec vs am gear carb         Model</span><br><span class="line">Mazda RX4     <span class="number">21.0</span>   <span class="number">6</span>  <span class="number">160</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span>     Mazda RX4</span><br><span class="line">Mazda RX4 Wag <span class="number">21.0</span>   <span class="number">6</span>  <span class="number">160</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span> Mazda RX4 Wag</span><br><span class="line">Datsun <span class="number">710</span>    <span class="number">22.8</span>   <span class="number">4</span>  <span class="number">108</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span>    Datsun <span class="number">710</span></span><br><span class="line"><span class="operator">&gt;</span> setdiff<span class="punctuation">(</span>second<span class="punctuation">,</span>first<span class="punctuation">)</span></span><br><span class="line">            mpg cyl  disp  hp drat   wt  qsec vs am gear carb      Model</span><br><span class="line">Duster <span class="number">360</span> <span class="number">14.3</span>   <span class="number">8</span> <span class="number">360.0</span> <span class="number">245</span> <span class="number">3.21</span> <span class="number">3.57</span> <span class="number">15.84</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">4</span> Duster <span class="number">360</span></span><br><span class="line">Merc <span class="number">240</span>D  <span class="number">24.4</span>   <span class="number">4</span> <span class="number">146.7</span>  <span class="number">62</span> <span class="number">3.69</span> <span class="number">3.19</span> <span class="number">20.00</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span>  Merc <span class="number">240</span>D</span><br><span class="line">Merc <span class="number">230</span>   <span class="number">22.8</span>   <span class="number">4</span> <span class="number">140.8</span>  <span class="number">95</span> <span class="number">3.92</span> <span class="number">3.15</span> <span class="number">22.90</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">4</span>    <span class="number">2</span>   Merc <span class="number">230</span></span><br></pre></td></tr></table></figure><h2 id="5-R函数">5 R函数</h2><p>R函数是R语言重要组成部分</p><p>比如用<code>lm</code>函数进行线性回归分析：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> state <span class="operator">&lt;-</span> as.data.frame<span class="punctuation">(</span>state.x77<span class="punctuation">[</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Murder&quot;</span><span class="punctuation">,</span><span class="string">&quot;Population&quot;</span><span class="punctuation">,</span><span class="string">&quot;Illiteracy&quot;</span><span class="punctuation">,</span><span class="string">&quot;Income&quot;</span><span class="punctuation">,</span><span class="string">&quot;Frost&quot;</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fit<span class="operator">&lt;-</span> lm <span class="punctuation">(</span>Murder <span class="operator">~</span> Population<span class="operator">+</span>Illiteracy<span class="operator">+</span>Income<span class="operator">+</span>Frost<span class="punctuation">,</span>data<span class="operator">=</span>state<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fit</span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> Murder <span class="operator">~</span> Population <span class="operator">+</span> Illiteracy <span class="operator">+</span> Income <span class="operator">+</span> Frost<span class="punctuation">,</span> </span><br><span class="line">    data <span class="operator">=</span> state<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>   Population   Illiteracy       Income        Frost  </span><br><span class="line">  <span class="number">1.235e+00</span>    <span class="number">2.237e-04</span>    <span class="number">4.143e+00</span>    <span class="number">6.442e-05</span>    <span class="number">5.813e-04</span>  </span><br><span class="line">  <span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> Murder <span class="operator">~</span> Population <span class="operator">+</span> Illiteracy <span class="operator">+</span> Income <span class="operator">+</span> Frost<span class="punctuation">,</span> </span><br><span class="line">    data <span class="operator">=</span> state<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Residuals<span class="operator">:</span></span><br><span class="line">    Min      <span class="number">1</span>Q  Median      <span class="number">3</span>Q     Max </span><br><span class="line"><span class="operator">-</span><span class="number">4.7960</span> <span class="operator">-</span><span class="number">1.6495</span> <span class="operator">-</span><span class="number">0.0811</span>  <span class="number">1.4815</span>  <span class="number">7.6210</span> </span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line">             Estimate Std. Error t value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="operator">|</span>t<span class="operator">|</span><span class="punctuation">)</span>    </span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span> <span class="number">1.235e+00</span>  <span class="number">3.866e+00</span>   <span class="number">0.319</span>   <span class="number">0.7510</span>    </span><br><span class="line">Population  <span class="number">2.237e-04</span>  <span class="number">9.052e-05</span>   <span class="number">2.471</span>   <span class="number">0.0173</span> <span class="operator">*</span>  </span><br><span class="line">Illiteracy  <span class="number">4.143e+00</span>  <span class="number">8.744e-01</span>   <span class="number">4.738</span> <span class="number">2.19e-05</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Income      <span class="number">6.442e-05</span>  <span class="number">6.837e-04</span>   <span class="number">0.094</span>   <span class="number">0.9253</span>    </span><br><span class="line">Frost       <span class="number">5.813e-04</span>  <span class="number">1.005e-02</span>   <span class="number">0.058</span>   <span class="number">0.9541</span>    </span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line">Residual standard error<span class="operator">:</span> <span class="number">2.535</span> on <span class="number">45</span> degrees of freedom</span><br><span class="line">Multiple R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.567</span><span class="punctuation">,</span>Adjusted R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.5285</span> </span><br><span class="line"><span class="built_in">F</span><span class="operator">-</span>statistic<span class="operator">:</span> <span class="number">14.73</span> on <span class="number">4</span> and <span class="number">45</span> DF<span class="punctuation">,</span>  p<span class="operator">-</span>value<span class="operator">:</span> <span class="number">9.133e-08</span></span><br></pre></td></tr></table></figure><p>绘图过程中，如果是向量和向量绘制的就是散点图，如果是向量和因子绘制的就是条形图。</p><p>输入数据类型：</p><p>向量：sum、mean、sd、range、median、sort、order</p><p>矩阵或数据框：cbind、rbind</p><p>数字矩阵：heatmap</p><h3 id="5-1-选项参数">5.1 选项参数</h3><ol><li>输入控制部分；</li><li>输出控制部分；</li><li>调节部分。</li></ol><p>file：接一个文件；</p><p>data：一般指要输入一个数据框；</p><p>x：表示单独的一个对象，一般都是向量，也可以是矩阵或者列表；</p><p>x和y：函数需要两个输入变量；</p><p>x，y，z：函数需要三个输入变量；</p><p>formula：公式；<code>y ~ x</code>表示x和y相关。</p><p>na.rm：删除缺失值；</p><p>……</p><p>有时候会存在三个点<code>…</code>，表示和其他函数功能重合，功能通用。有时候三个点在前面表示可以合并任意的对象，比如<code>data.frame</code>函数：</p><p><img src="https://vip2.loli.io/2023/03/13/gYTx9FwBNWusz21.png" alt="image-20220810195008019"></p><p><img src="https://vip2.loli.io/2023/03/13/sFb4gHV9DXBSGKq.png" alt="image-20220810195920151"></p><p><strong>调节参数</strong>：</p><p>color：选项和明显用来控制颜色</p><p>select：与选择有关</p><p>font：与字体有关</p><p>font.axis：就是坐标轴的字体</p><p>lty：是line type，线型</p><p>lwd：是line width，线宽</p><p>method：软件算法</p><p>……</p><p><strong>选项接受哪些参数</strong>：</p><p>main：字符串，不能是向量</p><p>na.rm：TRUE或者FALSE</p><p>axis：side参数只能是1到4，控制坐标轴的方向</p><p>fig：包含四个元素的向量，控制图形区域的位置</p><p>……</p><h3 id="5-2-数学统计函数">5.2 数学统计函数</h3><p><strong>概率论</strong></p><p>概率论是统计学的基础，R有许多用于处理概率，概率分布以及随机变量的函数。R对每一个概率分布都有一个简称，这个名称用于识别与分布相联系的函数。这部分涉及到很多统计学基础的理论知识，比如随机试验，样本空间，对立与互斥，随机事件与必然事件，概率密度，概率分布等。</p><p>d：概率密度函数</p><p>p：分布函数</p><p>q：分布函数的反函数</p><p>r：产生相同分布的随机数</p><p>比如正态分布：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dnorm<span class="punctuation">(</span>x<span class="punctuation">,</span> mean <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> sd <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">log</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">pnorm<span class="punctuation">(</span>q<span class="punctuation">,</span> mean <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> sd <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> lower.tail <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> log.p <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">qnorm<span class="punctuation">(</span>p<span class="punctuation">,</span> mean <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> sd <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> lower.tail <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> log.p <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">rnorm<span class="punctuation">(</span>n<span class="punctuation">,</span> mean <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> sd <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><code>rnorm(n, mean = 0, sd = 1)</code>表示产生n个均值为0，方差为1的随机数。</p><p>在每个函数前面加上d、p、q、r就构成了函数名。</p><table><thead><tr><th>分布名称</th><th>分布</th><th>R中的名称</th><th>附加参数</th></tr></thead><tbody><tr><td>Beta分布</td><td>beta</td><td>beta</td><td>shape1, shape2, ncp</td></tr><tr><td>二项分布</td><td>binomial</td><td>binom</td><td>size, prob</td></tr><tr><td>柯西分布</td><td>Cauchy</td><td>cauchy</td><td>location, scale</td></tr><tr><td>（非中心）卡方分布</td><td>chi-squared</td><td>chisq</td><td>df, ncp</td></tr><tr><td>指数分布</td><td>exponential</td><td>exp</td><td>rate</td></tr><tr><td>F分布</td><td>F分布</td><td>F</td><td>f</td></tr><tr><td>Gamma分布</td><td>gamma</td><td>gamma</td><td>shape, scale</td></tr><tr><td>几何分布</td><td>geometric</td><td>geom</td><td>prob</td></tr><tr><td>超几何分布</td><td>hypergeometric</td><td>hyper</td><td>m, n, k</td></tr><tr><td>对数正态分布</td><td>log-normal</td><td>lnorm</td><td>meanlog, sdlog</td></tr><tr><td>Logistic分布</td><td>logistic</td><td>logis</td><td>location, scale</td></tr><tr><td>负二项分布</td><td>negative binomial</td><td>nbinom</td><td>size, prob</td></tr><tr><td>正态分布</td><td>normal</td><td>norm</td><td>mean, sd</td></tr><tr><td>泊松分布</td><td>Poisson</td><td>pois</td><td>lambda</td></tr><tr><td>t分布</td><td>Student’s t</td><td>t</td><td>df, ncp</td></tr><tr><td>均匀分布</td><td>uniform</td><td>unif</td><td>min, max</td></tr><tr><td>Weibull分布</td><td>Weibull</td><td>weibull</td><td>shape, scale</td></tr><tr><td>Wilcoxon秩和分布</td><td>Wilcoxon</td><td>wilcox</td><td>m, n</td></tr><tr><td>Wilcoxon符号秩分布</td><td>SignRank</td><td>signrank</td><td>n</td></tr><tr><td>对数正态分布</td><td>Lognormal</td><td>lnorm</td><td>meanlog, sdlog</td></tr></tbody></table><p><code>runif</code>：生成0-1之间的随机数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> runif<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="built_in">min</span><span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span><span class="built_in">max</span><span class="operator">=</span><span class="number">100</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">36.846837</span>  <span class="number">5.020477</span> <span class="number">21.099430</span> <span class="number">97.208172</span> <span class="number">18.753216</span> <span class="number">78.498546</span> <span class="number">79.735780</span> <span class="number">48.014668</span> <span class="number">74.315821</span> <span class="number">36.491041</span></span><br><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> rnorm<span class="punctuation">(</span>n<span class="operator">=</span><span class="number">10</span><span class="punctuation">,</span> mean<span class="operator">=</span><span class="number">15</span><span class="punctuation">,</span> sd<span class="operator">=</span><span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">15.50968</span> <span class="number">15.79180</span> <span class="number">14.99966</span> <span class="number">17.11203</span> <span class="number">15.27945</span> <span class="number">17.26010</span> <span class="number">13.09434</span> <span class="number">13.34831</span> <span class="number">12.28590</span> <span class="number">14.21707</span></span><br></pre></td></tr></table></figure><p>通过<code>set.seed</code>则每次运行状态和上次使用set.seed后同样次数下的运行结果相同：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> set.seed<span class="punctuation">(</span><span class="number">666</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> runif<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">0.77436849</span> <span class="number">0.19722419</span> <span class="number">0.97801384</span> <span class="number">0.20132735</span> <span class="number">0.36124443</span> <span class="number">0.74261194</span> <span class="number">0.97872844</span> <span class="number">0.49811371</span> <span class="number">0.01331584</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">]</span> <span class="number">0.25994613</span></span><br><span class="line"><span class="operator">&gt;</span> runif<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">0.77589308</span> <span class="number">0.01637905</span> <span class="number">0.09574478</span> <span class="number">0.14216354</span> <span class="number">0.21112624</span> <span class="number">0.81125644</span> <span class="number">0.03654720</span> <span class="number">0.89163741</span> <span class="number">0.48323641</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">]</span> <span class="number">0.46666453</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> set.seed<span class="punctuation">(</span><span class="number">666</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> runif<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span> <span class="comment"># 和上次第一次运行结果相同</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">0.77436849</span> <span class="number">0.19722419</span> <span class="number">0.97801384</span> <span class="number">0.20132735</span> <span class="number">0.36124443</span> <span class="number">0.74261194</span> <span class="number">0.97872844</span> <span class="number">0.49811371</span> <span class="number">0.01331584</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">]</span> <span class="number">0.25994613</span></span><br><span class="line"><span class="operator">&gt;</span> runif<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span> <span class="comment"># 和上次第二次运行结果相同</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">0.77589308</span> <span class="number">0.01637905</span> <span class="number">0.09574478</span> <span class="number">0.14216354</span> <span class="number">0.21112624</span> <span class="number">0.81125644</span> <span class="number">0.03654720</span> <span class="number">0.89163741</span> <span class="number">0.48323641</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">]</span> <span class="number">0.46666453</span></span><br></pre></td></tr></table></figure><h3 id="5-3-描述性统计函数">5.3 描述性统计函数</h3><h4 id="5-3-1-整体描述函数">5.3.1 整体描述函数</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> myvars <span class="operator">&lt;-</span> mtcars<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;mpg&quot;</span><span class="punctuation">,</span><span class="string">&quot;hp&quot;</span><span class="punctuation">,</span><span class="string">&quot;wt&quot;</span><span class="punctuation">,</span><span class="string">&quot;am&quot;</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>myvars<span class="punctuation">)</span></span><br><span class="line">      mpg              hp              wt              am        </span><br><span class="line"> Min.   <span class="operator">:</span><span class="number">10.40</span>   Min.   <span class="operator">:</span> <span class="number">52.0</span>   Min.   <span class="operator">:</span><span class="number">1.513</span>   Min.   <span class="operator">:</span><span class="number">0.0000</span>  </span><br><span class="line"> <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">15.43</span>   <span class="number">1</span>st Qu.<span class="operator">:</span> <span class="number">96.5</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">2.581</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">0.0000</span>  </span><br><span class="line"> Median <span class="operator">:</span><span class="number">19.20</span>   Median <span class="operator">:</span><span class="number">123.0</span>   Median <span class="operator">:</span><span class="number">3.325</span>   Median <span class="operator">:</span><span class="number">0.0000</span>  </span><br><span class="line"> Mean   <span class="operator">:</span><span class="number">20.09</span>   Mean   <span class="operator">:</span><span class="number">146.7</span>   Mean   <span class="operator">:</span><span class="number">3.217</span>   Mean   <span class="operator">:</span><span class="number">0.4062</span>  </span><br><span class="line"> <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">22.80</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">180.0</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">3.610</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">1.0000</span>  </span><br><span class="line"> Max.   <span class="operator">:</span><span class="number">33.90</span>   Max.   <span class="operator">:</span><span class="number">335.0</span>   Max.   <span class="operator">:</span><span class="number">5.424</span>   Max.   <span class="operator">:</span><span class="number">1.0000</span>  </span><br><span class="line"><span class="operator">&gt;</span> fivenum<span class="punctuation">(</span>myvars<span class="operator">$</span>hp<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">52</span>  <span class="number">96</span> <span class="number">123</span> <span class="number">180</span> <span class="number">335</span></span><br></pre></td></tr></table></figure><p>总结：通过<code>summary</code>函数可以进行最大值，最小值，均值等的统计。<code>fivenum</code>和<code>summary</code>类似，返回最小值、lower-hinge, 中位数, upper-hinge, 最大值。</p><p>类似的包还有<code>Hmisc</code>包中的<code>describe</code>函数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> describe<span class="punctuation">(</span>myvars<span class="punctuation">)</span></span><br><span class="line">myvars </span><br><span class="line"></span><br><span class="line"> <span class="number">4</span>  Variables      <span class="number">32</span>  Observations</span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">mpg </span><br><span class="line">       n  <span class="built_in">missing</span> distinct     Info     Mean      Gmd      <span class="number">.05</span>      <span class="number">.10</span>      <span class="number">.25</span>      <span class="number">.50</span>      <span class="number">.75</span>      <span class="number">.90</span> </span><br><span class="line">      <span class="number">32</span>        <span class="number">0</span>       <span class="number">25</span>    <span class="number">0.999</span>    <span class="number">20.09</span>    <span class="number">6.796</span>    <span class="number">12.00</span>    <span class="number">14.34</span>    <span class="number">15.43</span>    <span class="number">19.20</span>    <span class="number">22.80</span>    <span class="number">30.09</span> </span><br><span class="line">     <span class="number">.95</span> </span><br><span class="line">   <span class="number">31.30</span> </span><br><span class="line"></span><br><span class="line">lowest <span class="operator">:</span> <span class="number">10.4</span> <span class="number">13.3</span> <span class="number">14.3</span> <span class="number">14.7</span> <span class="number">15.0</span><span class="punctuation">,</span> highest<span class="operator">:</span> <span class="number">26.0</span> <span class="number">27.3</span> <span class="number">30.4</span> <span class="number">32.4</span> <span class="number">33.9</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">hp </span><br><span class="line">       n  <span class="built_in">missing</span> distinct     Info     Mean      Gmd      <span class="number">.05</span>      <span class="number">.10</span>      <span class="number">.25</span>      <span class="number">.50</span>      <span class="number">.75</span>      <span class="number">.90</span> </span><br><span class="line">      <span class="number">32</span>        <span class="number">0</span>       <span class="number">22</span>    <span class="number">0.997</span>    <span class="number">146.7</span>    <span class="number">77.04</span>    <span class="number">63.65</span>    <span class="number">66.00</span>    <span class="number">96.50</span>   <span class="number">123.00</span>   <span class="number">180.00</span>   <span class="number">243.50</span> </span><br><span class="line">     <span class="number">.95</span> </span><br><span class="line">  <span class="number">253.55</span> </span><br><span class="line"></span><br><span class="line">lowest <span class="operator">:</span>  <span class="number">52</span>  <span class="number">62</span>  <span class="number">65</span>  <span class="number">66</span>  <span class="number">91</span><span class="punctuation">,</span> highest<span class="operator">:</span> <span class="number">215</span> <span class="number">230</span> <span class="number">245</span> <span class="number">264</span> <span class="number">335</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">wt </span><br><span class="line">       n  <span class="built_in">missing</span> distinct     Info     Mean      Gmd      <span class="number">.05</span>      <span class="number">.10</span>      <span class="number">.25</span>      <span class="number">.50</span>      <span class="number">.75</span>      <span class="number">.90</span> </span><br><span class="line">      <span class="number">32</span>        <span class="number">0</span>       <span class="number">29</span>    <span class="number">0.999</span>    <span class="number">3.217</span>    <span class="number">1.089</span>    <span class="number">1.736</span>    <span class="number">1.956</span>    <span class="number">2.581</span>    <span class="number">3.325</span>    <span class="number">3.610</span>    <span class="number">4.048</span> </span><br><span class="line">     <span class="number">.95</span> </span><br><span class="line">   <span class="number">5.293</span> </span><br><span class="line"></span><br><span class="line">lowest <span class="operator">:</span> <span class="number">1.513</span> <span class="number">1.615</span> <span class="number">1.835</span> <span class="number">1.935</span> <span class="number">2.140</span><span class="punctuation">,</span> highest<span class="operator">:</span> <span class="number">3.845</span> <span class="number">4.070</span> <span class="number">5.250</span> <span class="number">5.345</span> <span class="number">5.424</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">am </span><br><span class="line">       n  <span class="built_in">missing</span> distinct     Info      Sum     Mean      Gmd </span><br><span class="line">      <span class="number">32</span>        <span class="number">0</span>        <span class="number">2</span>    <span class="number">0.724</span>       <span class="number">13</span>   <span class="number">0.4062</span>    <span class="number">0.498</span> </span><br><span class="line"></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br></pre></td></tr></table></figure><p>可以返回观测的数量、缺失值和唯一值的数目、以及平均值、分位数，五个最大值和五个最小值</p><p>再比如<code>pastecs</code>包中的<code>desc</code>函数</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> stat.desc<span class="punctuation">(</span>myvars<span class="punctuation">)</span></span><br><span class="line">                     mpg           hp          wt          am</span><br><span class="line">nbr.val       <span class="number">32.0000000</span>   <span class="number">32.0000000</span>  <span class="number">32.0000000</span> <span class="number">32.00000000</span></span><br><span class="line">nbr.null       <span class="number">0.0000000</span>    <span class="number">0.0000000</span>   <span class="number">0.0000000</span> <span class="number">19.00000000</span></span><br><span class="line">nbr.na         <span class="number">0.0000000</span>    <span class="number">0.0000000</span>   <span class="number">0.0000000</span>  <span class="number">0.00000000</span></span><br><span class="line"><span class="built_in">min</span>           <span class="number">10.4000000</span>   <span class="number">52.0000000</span>   <span class="number">1.5130000</span>  <span class="number">0.00000000</span></span><br><span class="line"><span class="built_in">max</span>           <span class="number">33.9000000</span>  <span class="number">335.0000000</span>   <span class="number">5.4240000</span>  <span class="number">1.00000000</span></span><br><span class="line"><span class="built_in">range</span>         <span class="number">23.5000000</span>  <span class="number">283.0000000</span>   <span class="number">3.9110000</span>  <span class="number">1.00000000</span></span><br><span class="line"><span class="built_in">sum</span>          <span class="number">642.9000000</span> <span class="number">4694.0000000</span> <span class="number">102.9520000</span> <span class="number">13.00000000</span></span><br><span class="line">median        <span class="number">19.2000000</span>  <span class="number">123.0000000</span>   <span class="number">3.3250000</span>  <span class="number">0.00000000</span></span><br><span class="line">mean          <span class="number">20.0906250</span>  <span class="number">146.6875000</span>   <span class="number">3.2172500</span>  <span class="number">0.40625000</span></span><br><span class="line">SE.mean        <span class="number">1.0654240</span>   <span class="number">12.1203173</span>   <span class="number">0.1729685</span>  <span class="number">0.08820997</span></span><br><span class="line">CI.mean.0.95   <span class="number">2.1729465</span>   <span class="number">24.7195501</span>   <span class="number">0.3527715</span>  <span class="number">0.17990541</span></span><br><span class="line">var           <span class="number">36.3241028</span> <span class="number">4700.8669355</span>   <span class="number">0.9573790</span>  <span class="number">0.24899194</span></span><br><span class="line">std.dev        <span class="number">6.0269481</span>   <span class="number">68.5628685</span>   <span class="number">0.9784574</span>  <span class="number">0.49899092</span></span><br><span class="line">coef.var       <span class="number">0.2999881</span>    <span class="number">0.4674077</span>   <span class="number">0.3041285</span>  <span class="number">1.22828533</span></span><br><span class="line"><span class="operator">&gt;</span> stat.desc<span class="punctuation">(</span>myvars<span class="punctuation">,</span>basic <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span> <span class="comment"># basic = T表示用来计算基本值</span></span><br><span class="line">                     mpg           hp          wt          am</span><br><span class="line">nbr.val       <span class="number">32.0000000</span>   <span class="number">32.0000000</span>  <span class="number">32.0000000</span> <span class="number">32.00000000</span></span><br><span class="line">nbr.null       <span class="number">0.0000000</span>    <span class="number">0.0000000</span>   <span class="number">0.0000000</span> <span class="number">19.00000000</span></span><br><span class="line">nbr.na         <span class="number">0.0000000</span>    <span class="number">0.0000000</span>   <span class="number">0.0000000</span>  <span class="number">0.00000000</span></span><br><span class="line"><span class="built_in">min</span>           <span class="number">10.4000000</span>   <span class="number">52.0000000</span>   <span class="number">1.5130000</span>  <span class="number">0.00000000</span></span><br><span class="line"><span class="built_in">max</span>           <span class="number">33.9000000</span>  <span class="number">335.0000000</span>   <span class="number">5.4240000</span>  <span class="number">1.00000000</span></span><br><span class="line"><span class="built_in">range</span>         <span class="number">23.5000000</span>  <span class="number">283.0000000</span>   <span class="number">3.9110000</span>  <span class="number">1.00000000</span></span><br><span class="line"><span class="built_in">sum</span>          <span class="number">642.9000000</span> <span class="number">4694.0000000</span> <span class="number">102.9520000</span> <span class="number">13.00000000</span></span><br><span class="line">median        <span class="number">19.2000000</span>  <span class="number">123.0000000</span>   <span class="number">3.3250000</span>  <span class="number">0.00000000</span></span><br><span class="line">mean          <span class="number">20.0906250</span>  <span class="number">146.6875000</span>   <span class="number">3.2172500</span>  <span class="number">0.40625000</span></span><br><span class="line">SE.mean        <span class="number">1.0654240</span>   <span class="number">12.1203173</span>   <span class="number">0.1729685</span>  <span class="number">0.08820997</span></span><br><span class="line">CI.mean.0.95   <span class="number">2.1729465</span>   <span class="number">24.7195501</span>   <span class="number">0.3527715</span>  <span class="number">0.17990541</span></span><br><span class="line">var           <span class="number">36.3241028</span> <span class="number">4700.8669355</span>   <span class="number">0.9573790</span>  <span class="number">0.24899194</span></span><br><span class="line">std.dev        <span class="number">6.0269481</span>   <span class="number">68.5628685</span>   <span class="number">0.9784574</span>  <span class="number">0.49899092</span></span><br><span class="line">coef.var       <span class="number">0.2999881</span>    <span class="number">0.4674077</span>   <span class="number">0.3041285</span>  <span class="number">1.22828533</span></span><br><span class="line"><span class="operator">&gt;</span> stat.desc<span class="punctuation">(</span>myvars<span class="punctuation">,</span>desc <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span> <span class="comment"># 计算一些描述值，中位数，平均数，平均置信度为95%的置信空间</span></span><br><span class="line">                     mpg           hp          wt          am</span><br><span class="line">nbr.val       <span class="number">32.0000000</span>   <span class="number">32.0000000</span>  <span class="number">32.0000000</span> <span class="number">32.00000000</span></span><br><span class="line">nbr.null       <span class="number">0.0000000</span>    <span class="number">0.0000000</span>   <span class="number">0.0000000</span> <span class="number">19.00000000</span></span><br><span class="line">nbr.na         <span class="number">0.0000000</span>    <span class="number">0.0000000</span>   <span class="number">0.0000000</span>  <span class="number">0.00000000</span></span><br><span class="line"><span class="built_in">min</span>           <span class="number">10.4000000</span>   <span class="number">52.0000000</span>   <span class="number">1.5130000</span>  <span class="number">0.00000000</span></span><br><span class="line"><span class="built_in">max</span>           <span class="number">33.9000000</span>  <span class="number">335.0000000</span>   <span class="number">5.4240000</span>  <span class="number">1.00000000</span></span><br><span class="line"><span class="built_in">range</span>         <span class="number">23.5000000</span>  <span class="number">283.0000000</span>   <span class="number">3.9110000</span>  <span class="number">1.00000000</span></span><br><span class="line"><span class="built_in">sum</span>          <span class="number">642.9000000</span> <span class="number">4694.0000000</span> <span class="number">102.9520000</span> <span class="number">13.00000000</span></span><br><span class="line">median        <span class="number">19.2000000</span>  <span class="number">123.0000000</span>   <span class="number">3.3250000</span>  <span class="number">0.00000000</span></span><br><span class="line">mean          <span class="number">20.0906250</span>  <span class="number">146.6875000</span>   <span class="number">3.2172500</span>  <span class="number">0.40625000</span></span><br><span class="line">SE.mean        <span class="number">1.0654240</span>   <span class="number">12.1203173</span>   <span class="number">0.1729685</span>  <span class="number">0.08820997</span></span><br><span class="line">CI.mean.0.95   <span class="number">2.1729465</span>   <span class="number">24.7195501</span>   <span class="number">0.3527715</span>  <span class="number">0.17990541</span></span><br><span class="line">var           <span class="number">36.3241028</span> <span class="number">4700.8669355</span>   <span class="number">0.9573790</span>  <span class="number">0.24899194</span></span><br><span class="line">std.dev        <span class="number">6.0269481</span>   <span class="number">68.5628685</span>   <span class="number">0.9784574</span>  <span class="number">0.49899092</span></span><br><span class="line">coef.var       <span class="number">0.2999881</span>    <span class="number">0.4674077</span>   <span class="number">0.3041285</span>  <span class="number">1.22828533</span></span><br><span class="line"><span class="operator">&gt;</span> stat.desc<span class="punctuation">(</span>myvars<span class="punctuation">,</span>norm <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span> <span class="comment">#计算一些统计值，包括正态分布统计量、偏度和峰度等。</span></span><br><span class="line">                     mpg            hp           wt            am</span><br><span class="line">nbr.val       <span class="number">32.0000000</span>   <span class="number">32.00000000</span>  <span class="number">32.00000000</span>  <span class="number">3.200000e+01</span></span><br><span class="line">nbr.null       <span class="number">0.0000000</span>    <span class="number">0.00000000</span>   <span class="number">0.00000000</span>  <span class="number">1.900000e+01</span></span><br><span class="line">nbr.na         <span class="number">0.0000000</span>    <span class="number">0.00000000</span>   <span class="number">0.00000000</span>  <span class="number">0.000000e+00</span></span><br><span class="line"><span class="built_in">min</span>           <span class="number">10.4000000</span>   <span class="number">52.00000000</span>   <span class="number">1.51300000</span>  <span class="number">0.000000e+00</span></span><br><span class="line"><span class="built_in">max</span>           <span class="number">33.9000000</span>  <span class="number">335.00000000</span>   <span class="number">5.42400000</span>  <span class="number">1.000000e+00</span></span><br><span class="line"><span class="built_in">range</span>         <span class="number">23.5000000</span>  <span class="number">283.00000000</span>   <span class="number">3.91100000</span>  <span class="number">1.000000e+00</span></span><br><span class="line"><span class="built_in">sum</span>          <span class="number">642.9000000</span> <span class="number">4694.00000000</span> <span class="number">102.95200000</span>  <span class="number">1.300000e+01</span></span><br><span class="line">median        <span class="number">19.2000000</span>  <span class="number">123.00000000</span>   <span class="number">3.32500000</span>  <span class="number">0.000000e+00</span></span><br><span class="line">mean          <span class="number">20.0906250</span>  <span class="number">146.68750000</span>   <span class="number">3.21725000</span>  <span class="number">4.062500e-01</span></span><br><span class="line">SE.mean        <span class="number">1.0654240</span>   <span class="number">12.12031731</span>   <span class="number">0.17296847</span>  <span class="number">8.820997e-02</span></span><br><span class="line">CI.mean.0.95   <span class="number">2.1729465</span>   <span class="number">24.71955013</span>   <span class="number">0.35277153</span>  <span class="number">1.799054e-01</span></span><br><span class="line">var           <span class="number">36.3241028</span> <span class="number">4700.86693548</span>   <span class="number">0.95737897</span>  <span class="number">2.489919e-01</span></span><br><span class="line">std.dev        <span class="number">6.0269481</span>   <span class="number">68.56286849</span>   <span class="number">0.97845744</span>  <span class="number">4.989909e-01</span></span><br><span class="line">coef.var       <span class="number">0.2999881</span>    <span class="number">0.46740771</span>   <span class="number">0.30412851</span>  <span class="number">1.228285e+00</span></span><br><span class="line">skewness       <span class="number">0.6106550</span>    <span class="number">0.72602366</span>   <span class="number">0.42314646</span>  <span class="number">3.640159e-01</span></span><br><span class="line">skew.2SE       <span class="number">0.7366922</span>    <span class="number">0.87587259</span>   <span class="number">0.51048252</span>  <span class="number">4.391476e-01</span></span><br><span class="line">kurtosis      <span class="operator">-</span><span class="number">0.3727660</span>   <span class="operator">-</span><span class="number">0.13555112</span>  <span class="operator">-</span><span class="number">0.02271075</span> <span class="operator">-</span><span class="number">1.924741e+00</span></span><br><span class="line">kurt.2SE      <span class="operator">-</span><span class="number">0.2302812</span>   <span class="operator">-</span><span class="number">0.08373853</span>  <span class="operator">-</span><span class="number">0.01402987</span> <span class="operator">-</span><span class="number">1.189035e+00</span></span><br><span class="line">normtest.W     <span class="number">0.9475647</span>    <span class="number">0.93341934</span>   <span class="number">0.94325772</span>  <span class="number">6.250744e-01</span></span><br><span class="line">normtest.p     <span class="number">0.1228814</span>    <span class="number">0.04880824</span>   <span class="number">0.09265499</span>  <span class="number">7.836354e-08</span></span><br></pre></td></tr></table></figure><p>在<code>psych</code>包中，同样包含describe函数，可以计算非缺失值的数量。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> describe<span class="punctuation">(</span>myvars<span class="punctuation">)</span></span><br><span class="line">    vars  n   mean    sd median trimmed   mad   <span class="built_in">min</span>    <span class="built_in">max</span>  <span class="built_in">range</span> skew kurtosis    se</span><br><span class="line">mpg    <span class="number">1</span> <span class="number">32</span>  <span class="number">20.09</span>  <span class="number">6.03</span>  <span class="number">19.20</span>   <span class="number">19.70</span>  <span class="number">5.41</span> <span class="number">10.40</span>  <span class="number">33.90</span>  <span class="number">23.50</span> <span class="number">0.61</span>    <span class="operator">-</span><span class="number">0.37</span>  <span class="number">1.07</span></span><br><span class="line">hp     <span class="number">2</span> <span class="number">32</span> <span class="number">146.69</span> <span class="number">68.56</span> <span class="number">123.00</span>  <span class="number">141.19</span> <span class="number">77.10</span> <span class="number">52.00</span> <span class="number">335.00</span> <span class="number">283.00</span> <span class="number">0.73</span>    <span class="operator">-</span><span class="number">0.14</span> <span class="number">12.12</span></span><br><span class="line">wt     <span class="number">3</span> <span class="number">32</span>   <span class="number">3.22</span>  <span class="number">0.98</span>   <span class="number">3.33</span>    <span class="number">3.15</span>  <span class="number">0.77</span>  <span class="number">1.51</span>   <span class="number">5.42</span>   <span class="number">3.91</span> <span class="number">0.42</span>    <span class="operator">-</span><span class="number">0.02</span>  <span class="number">0.17</span></span><br><span class="line">am     <span class="number">4</span> <span class="number">32</span>   <span class="number">0.41</span>  <span class="number">0.50</span>   <span class="number">0.00</span>    <span class="number">0.38</span>  <span class="number">0.00</span>  <span class="number">0.00</span>   <span class="number">1.00</span>   <span class="number">1.00</span> <span class="number">0.36</span>    <span class="operator">-</span><span class="number">1.92</span>  <span class="number">0.09</span></span><br><span class="line"><span class="operator">&gt;</span> describe<span class="punctuation">(</span>myvars<span class="punctuation">,</span>trim <span class="operator">=</span> <span class="number">0.1</span><span class="punctuation">)</span></span><br><span class="line">    vars  n   mean    sd median trimmed   mad   <span class="built_in">min</span>    <span class="built_in">max</span>  <span class="built_in">range</span> skew kurtosis    se</span><br><span class="line">mpg    <span class="number">1</span> <span class="number">32</span>  <span class="number">20.09</span>  <span class="number">6.03</span>  <span class="number">19.20</span>   <span class="number">19.70</span>  <span class="number">5.41</span> <span class="number">10.40</span>  <span class="number">33.90</span>  <span class="number">23.50</span> <span class="number">0.61</span>    <span class="operator">-</span><span class="number">0.37</span>  <span class="number">1.07</span></span><br><span class="line">hp     <span class="number">2</span> <span class="number">32</span> <span class="number">146.69</span> <span class="number">68.56</span> <span class="number">123.00</span>  <span class="number">141.19</span> <span class="number">77.10</span> <span class="number">52.00</span> <span class="number">335.00</span> <span class="number">283.00</span> <span class="number">0.73</span>    <span class="operator">-</span><span class="number">0.14</span> <span class="number">12.12</span></span><br><span class="line">wt     <span class="number">3</span> <span class="number">32</span>   <span class="number">3.22</span>  <span class="number">0.98</span>   <span class="number">3.33</span>    <span class="number">3.15</span>  <span class="number">0.77</span>  <span class="number">1.51</span>   <span class="number">5.42</span>   <span class="number">3.91</span> <span class="number">0.42</span>    <span class="operator">-</span><span class="number">0.02</span>  <span class="number">0.17</span></span><br><span class="line">am     <span class="number">4</span> <span class="number">32</span>   <span class="number">0.41</span>  <span class="number">0.50</span>   <span class="number">0.00</span>    <span class="number">0.38</span>  <span class="number">0.00</span>  <span class="number">0.00</span>   <span class="number">1.00</span>   <span class="number">1.00</span> <span class="number">0.36</span>    <span class="operator">-</span><span class="number">1.92</span>  <span class="number">0.09</span></span><br></pre></td></tr></table></figure><p>同样可以计算非缺失值的数量、平均数、中位数、最大值、最小值等。<code>trim = 0.1</code>表示去掉最低和最高10%的部分。</p><p>后载入的包中如果函数名字和前面载入的包中函数名字重复，会将前面载入的包的函数覆盖，如果想重新使用前面载入的包的函数，可以选择重新载入前面载入的包。也可以使用<code>包名::函数名</code>的方法使用前面的包中的函数。</p><h4 id="5-3-2-分组描述函数">5.3.2 分组描述函数</h4><p><code>stats</code>包中可以通过<code>aggregate</code>进行分组描述数据：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> aggregate<span class="punctuation">(</span>Cars93<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Min.Price&quot;</span><span class="punctuation">,</span><span class="string">&quot;Price&quot;</span><span class="punctuation">,</span><span class="string">&quot;Max.Price&quot;</span><span class="punctuation">,</span><span class="string">&quot;MPG.city&quot;</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span>by<span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span>Cars93<span class="operator">$</span>Origin<span class="punctuation">)</span><span class="punctuation">,</span>mean<span class="punctuation">)</span></span><br><span class="line">  Group.1 Min.Price    Price Max.Price MPG.city</span><br><span class="line"><span class="number">1</span>     USA  <span class="number">16.53542</span> <span class="number">18.57292</span>  <span class="number">20.62708</span> <span class="number">20.95833</span></span><br><span class="line"><span class="number">2</span> non<span class="operator">-</span>USA  <span class="number">17.75556</span> <span class="number">20.50889</span>  <span class="number">23.25556</span> <span class="number">23.86667</span></span><br><span class="line"><span class="operator">&gt;</span> aggregate<span class="punctuation">(</span>Cars93<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Min.Price&quot;</span><span class="punctuation">,</span><span class="string">&quot;Price&quot;</span><span class="punctuation">,</span><span class="string">&quot;Max.Price&quot;</span><span class="punctuation">,</span><span class="string">&quot;MPG.city&quot;</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span>by<span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span>Origin<span class="operator">=</span>Cars93<span class="operator">$</span>Origin<span class="punctuation">,</span>Manufacturer<span class="operator">=</span>Cars93<span class="operator">$</span>Manufacturer<span class="punctuation">)</span><span class="punctuation">,</span>mean<span class="punctuation">)</span>  <span class="comment"># 也可以同时设定多个条件</span></span><br><span class="line">    Origin  Manufacturer Min.Price    Price Max.Price MPG.city</span><br><span class="line"><span class="number">1</span>  non<span class="operator">-</span>USA         Acura  <span class="number">21.05000</span> <span class="number">24.90000</span>    <span class="number">28.750</span> <span class="number">21.50000</span></span><br><span class="line"><span class="number">2</span>  non<span class="operator">-</span>USA          Audi  <span class="number">28.35000</span> <span class="number">33.40000</span>    <span class="number">38.450</span> <span class="number">19.50000</span></span><br><span class="line"><span class="number">3</span>  non<span class="operator">-</span>USA           BMW  <span class="number">23.70000</span> <span class="number">30.00000</span>    <span class="number">36.200</span> <span class="number">22.00000</span></span><br><span class="line"><span class="number">4</span>      USA         Buick  <span class="number">20.75000</span> <span class="number">21.62500</span>    <span class="number">22.550</span> <span class="number">19.00000</span></span><br><span class="line"><span class="number">5</span>      USA      Cadillac  <span class="number">35.25000</span> <span class="number">37.40000</span>    <span class="number">39.500</span> <span class="number">16.00000</span></span><br><span class="line">...</span><br><span class="line"><span class="number">26</span> non<span class="operator">-</span>USA          Saab  <span class="number">20.30000</span> <span class="number">28.70000</span>    <span class="number">37.100</span> <span class="number">20.00000</span></span><br><span class="line"><span class="number">27</span>     USA        Saturn   <span class="number">9.20000</span> <span class="number">11.10000</span>    <span class="number">12.900</span> <span class="number">28.00000</span></span><br><span class="line"><span class="number">28</span> non<span class="operator">-</span>USA        Subaru  <span class="number">11.36667</span> <span class="number">12.93333</span>    <span class="number">14.500</span> <span class="number">27.00000</span></span><br><span class="line"><span class="number">29</span> non<span class="operator">-</span>USA        Suzuki   <span class="number">7.30000</span>  <span class="number">8.60000</span>    <span class="number">10.000</span> <span class="number">39.00000</span></span><br><span class="line"><span class="number">30</span> non<span class="operator">-</span>USA        Toyota  <span class="number">14.02500</span> <span class="number">17.27500</span>    <span class="number">20.550</span> <span class="number">24.25000</span></span><br><span class="line"><span class="number">31</span> non<span class="operator">-</span>USA    Volkswagen  <span class="number">16.45000</span> <span class="number">18.02500</span>    <span class="number">19.575</span> <span class="number">20.25000</span></span><br><span class="line"><span class="number">32</span> non<span class="operator">-</span>USA         Volvo  <span class="number">23.30000</span> <span class="number">24.70000</span>    <span class="number">26.000</span> <span class="number">20.50000</span></span><br></pre></td></tr></table></figure><p><code>doBy</code>包中<code>summaryBy</code>函数也可以进行分组描述数据：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>doBy<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> summaryBy<span class="punctuation">(</span>mpg<span class="operator">+</span>hp<span class="operator">+</span>wt <span class="operator">~</span> am<span class="punctuation">,</span>data<span class="operator">=</span>myvars<span class="punctuation">,</span>FUN<span class="operator">=</span>mean<span class="punctuation">)</span></span><br><span class="line">  am mpg.mean  hp.mean  wt.mean</span><br><span class="line"><span class="number">1</span>  <span class="number">0</span> <span class="number">17.14737</span> <span class="number">160.2632</span> <span class="number">3.768895</span></span><br><span class="line"><span class="number">2</span>  <span class="number">1</span> <span class="number">24.39231</span> <span class="number">126.8462</span> <span class="number">2.411000</span></span><br></pre></td></tr></table></figure><p><code>psych</code>包中的<code>describeBy</code>函数可以进行分组描述数据，但是给出的统计值都是自定义不变的，无法给出自定义的函数的统计值。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> describeBy<span class="punctuation">(</span>myvars<span class="punctuation">,</span><span class="built_in">list</span><span class="punctuation">(</span>am<span class="operator">=</span>mtcars<span class="operator">$</span>am<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"> Descriptive statistics by group </span><br><span class="line">am<span class="operator">:</span> <span class="number">0</span></span><br><span class="line">    vars  n   mean    sd median trimmed   mad   <span class="built_in">min</span>    <span class="built_in">max</span>  <span class="built_in">range</span>  skew kurtosis    se</span><br><span class="line">mpg    <span class="number">1</span> <span class="number">19</span>  <span class="number">17.15</span>  <span class="number">3.83</span>  <span class="number">17.30</span>   <span class="number">17.12</span>  <span class="number">3.11</span> <span class="number">10.40</span>  <span class="number">24.40</span>  <span class="number">14.00</span>  <span class="number">0.01</span>    <span class="operator">-</span><span class="number">0.80</span>  <span class="number">0.88</span></span><br><span class="line">hp     <span class="number">2</span> <span class="number">19</span> <span class="number">160.26</span> <span class="number">53.91</span> <span class="number">175.00</span>  <span class="number">161.06</span> <span class="number">77.10</span> <span class="number">62.00</span> <span class="number">245.00</span> <span class="number">183.00</span> <span class="operator">-</span><span class="number">0.01</span>    <span class="operator">-</span><span class="number">1.21</span> <span class="number">12.37</span></span><br><span class="line">wt     <span class="number">3</span> <span class="number">19</span>   <span class="number">3.77</span>  <span class="number">0.78</span>   <span class="number">3.52</span>    <span class="number">3.75</span>  <span class="number">0.45</span>  <span class="number">2.46</span>   <span class="number">5.42</span>   <span class="number">2.96</span>  <span class="number">0.98</span>     <span class="number">0.14</span>  <span class="number">0.18</span></span><br><span class="line">am     <span class="number">4</span> <span class="number">19</span>   <span class="number">0.00</span>  <span class="number">0.00</span>   <span class="number">0.00</span>    <span class="number">0.00</span>  <span class="number">0.00</span>  <span class="number">0.00</span>   <span class="number">0.00</span>   <span class="number">0.00</span>   <span class="literal">NaN</span>      <span class="literal">NaN</span>  <span class="number">0.00</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span> </span><br><span class="line">am<span class="operator">:</span> <span class="number">1</span></span><br><span class="line">    vars  n   mean    sd median trimmed   mad   <span class="built_in">min</span>    <span class="built_in">max</span>  <span class="built_in">range</span> skew kurtosis    se</span><br><span class="line">mpg    <span class="number">1</span> <span class="number">13</span>  <span class="number">24.39</span>  <span class="number">6.17</span>  <span class="number">22.80</span>   <span class="number">24.38</span>  <span class="number">6.67</span> <span class="number">15.00</span>  <span class="number">33.90</span>  <span class="number">18.90</span> <span class="number">0.05</span>    <span class="operator">-</span><span class="number">1.46</span>  <span class="number">1.71</span></span><br><span class="line">hp     <span class="number">2</span> <span class="number">13</span> <span class="number">126.85</span> <span class="number">84.06</span> <span class="number">109.00</span>  <span class="number">114.73</span> <span class="number">63.75</span> <span class="number">52.00</span> <span class="number">335.00</span> <span class="number">283.00</span> <span class="number">1.36</span>     <span class="number">0.56</span> <span class="number">23.31</span></span><br><span class="line">wt     <span class="number">3</span> <span class="number">13</span>   <span class="number">2.41</span>  <span class="number">0.62</span>   <span class="number">2.32</span>    <span class="number">2.39</span>  <span class="number">0.68</span>  <span class="number">1.51</span>   <span class="number">3.57</span>   <span class="number">2.06</span> <span class="number">0.21</span>    <span class="operator">-</span><span class="number">1.17</span>  <span class="number">0.17</span></span><br><span class="line">am     <span class="number">4</span> <span class="number">13</span>   <span class="number">1.00</span>  <span class="number">0.00</span>   <span class="number">1.00</span>    <span class="number">1.00</span>  <span class="number">0.00</span>  <span class="number">1.00</span>   <span class="number">1.00</span>   <span class="number">0.00</span>  <span class="literal">NaN</span>      <span class="literal">NaN</span>  <span class="number">0.00</span></span><br></pre></td></tr></table></figure><h3 id="5-4-频数统计函数">5.4 频数统计函数</h3><p>因子是专门用来分组的，分组后才能进行频数的统计。</p><p>如果数据本身就是因子，则直接可以进行分组。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mtcars<span class="operator">$</span>cyl <span class="operator">&lt;-</span> as.factor<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span>mtcars<span class="operator">$</span>cyl<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> mtcars<span class="operator">$</span>cyl</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">6</span> <span class="number">6</span> <span class="number">4</span> <span class="number">6</span> <span class="number">8</span> <span class="number">6</span> <span class="number">8</span> <span class="number">4</span> <span class="number">4</span> <span class="number">6</span> <span class="number">6</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">8</span> <span class="number">6</span> <span class="number">8</span> <span class="number">4</span></span><br><span class="line">Levels<span class="operator">:</span> <span class="number">4</span> <span class="number">6</span> <span class="number">8</span></span><br><span class="line"><span class="operator">&gt;</span> mtcars</span><br><span class="line">                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb               Model</span><br><span class="line">Mazda RX4           <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span>           Mazda RX4</span><br><span class="line">Mazda RX4 Wag       <span class="number">21.0</span>   <span class="number">6</span> <span class="number">160.0</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span>       Mazda RX4 Wag</span><br><span class="line">Datsun <span class="number">710</span>          <span class="number">22.8</span>   <span class="number">4</span> <span class="number">108.0</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span>          Datsun <span class="number">710</span></span><br><span class="line">...</span><br><span class="line">Ferrari Dino        <span class="number">19.7</span>   <span class="number">6</span> <span class="number">145.0</span> <span class="number">175</span> <span class="number">3.62</span> <span class="number">2.770</span> <span class="number">15.50</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">6</span>        Ferrari Dino</span><br><span class="line">Maserati Bora       <span class="number">15.0</span>   <span class="number">8</span> <span class="number">301.0</span> <span class="number">335</span> <span class="number">3.54</span> <span class="number">3.570</span> <span class="number">14.60</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">5</span>    <span class="number">8</span>       Maserati Bora</span><br><span class="line">Volvo <span class="number">142</span>E          <span class="number">21.4</span>   <span class="number">4</span> <span class="number">121.0</span> <span class="number">109</span> <span class="number">4.11</span> <span class="number">2.780</span> <span class="number">18.60</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">2</span>          Volvo <span class="number">142</span>E</span><br><span class="line"><span class="operator">&gt;</span> split<span class="punctuation">(</span>mtcars<span class="punctuation">,</span>mtcars<span class="operator">$</span>cyl<span class="punctuation">)</span></span><br><span class="line"><span class="operator">$</span>`<span class="number">4</span>`</span><br><span class="line">                mpg cyl  disp  hp drat    wt  qsec vs am gear carb          Model</span><br><span class="line">Datsun 710     22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1     Datsun 710</span><br><span class="line">Merc 240D      24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2      Merc 240D</span><br><span class="line">Merc 230       22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2       Merc 230</span><br><span class="line">Fiat 128       32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1       Fiat 128</span><br><span class="line">Honda Civic    30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2    Honda Civic</span><br><span class="line">Toyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 Toyota Corolla</span><br><span class="line">Toyota Corona  21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1  Toyota Corona</span><br><span class="line">Fiat X1-9      27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1      Fiat X1-9</span><br><span class="line">Porsche 914-2  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2  Porsche 914-2</span><br><span class="line">Lotus Europa   30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2   Lotus Europa</span><br><span class="line">Volvo 142E     21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2     Volvo 142E</span><br><span class="line"></span><br><span class="line">$`6`</span><br><span class="line">                mpg cyl  disp  hp drat    wt  qsec vs am gear carb          Model</span><br><span class="line">Mazda RX4      21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4      Mazda RX4</span><br><span class="line">Mazda RX4 Wag  21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4  Mazda RX4 Wag</span><br><span class="line">Hornet 4 Drive 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 Hornet 4 Drive</span><br><span class="line">Valiant        18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1        Valiant</span><br><span class="line">Merc 280       19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4       Merc 280</span><br><span class="line">Merc 280C      17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4      Merc 280C</span><br><span class="line">Ferrari Dino   19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6   Ferrari Dino</span><br><span class="line"></span><br><span class="line">$`8`</span><br><span class="line">                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb               Model</span><br><span class="line">Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2   Hornet Sportabout</span><br><span class="line">Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4          Duster 360</span><br><span class="line">Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3          Merc 450SE</span><br><span class="line">Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3          Merc 450SL</span><br><span class="line">Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3         Merc 450SLC</span><br><span class="line">Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4  Cadillac Fleetwood</span><br><span class="line">Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 Lincoln Continental</span><br><span class="line">Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4   Chrysler Imperial</span><br><span class="line">Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2    Dodge Challenger</span><br><span class="line">AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2         AMC Javelin</span><br><span class="line">Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4          Camaro Z28</span><br><span class="line">Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2    Pontiac Firebird</span><br><span class="line">Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4      Ford Pantera L</span><br><span class="line">Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8       Maserati Bora</span><br></pre></td></tr></table></figure><p>如果不是明显的因子，可以使用cut函数进行切割：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> cut<span class="punctuation">(</span>mtcars<span class="operator">$</span>mpg<span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span>seq<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="comment"># 从10-50切割，每个切割块是10</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">14</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">27</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span></span><br><span class="line">Levels<span class="operator">:</span> <span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> table<span class="punctuation">(</span>cut<span class="punctuation">(</span>mtcars<span class="operator">$</span>mpg<span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span>seq<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span> </span><br><span class="line">     <span class="number">18</span>      <span class="number">10</span>       <span class="number">4</span>       <span class="number">0</span> </span><br><span class="line">     </span><br><span class="line"><span class="operator">&gt;</span> prop.table<span class="punctuation">(</span>table<span class="punctuation">(</span>cut<span class="punctuation">(</span>mtcars<span class="operator">$</span>mpg<span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span>seq<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span><span class="number">30</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">30</span><span class="punctuation">,</span><span class="number">40</span><span class="punctuation">]</span> <span class="punctuation">(</span><span class="number">40</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">]</span> </span><br><span class="line"> <span class="number">0.5625</span>  <span class="number">0.3125</span>  <span class="number">0.1250</span>  <span class="number">0.0000</span> </span><br></pre></td></tr></table></figure><p>也可以对二维数据表进行描述，比如给table函数输入两个因子，就可以计算二维的列联表。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> Arthritis</span><br><span class="line">   ID Treatment    Sex Age Improved</span><br><span class="line"><span class="number">1</span>  <span class="number">57</span>   Treated   Male  <span class="number">27</span>     Some</span><br><span class="line"><span class="number">2</span>  <span class="number">46</span>   Treated   Male  <span class="number">29</span>     None</span><br><span class="line"><span class="number">3</span>  <span class="number">77</span>   Treated   Male  <span class="number">30</span>     None</span><br><span class="line">...</span><br><span class="line"><span class="number">82</span> <span class="number">15</span>   Placebo Female  <span class="number">66</span>     Some</span><br><span class="line"><span class="number">83</span> <span class="number">71</span>   Placebo Female  <span class="number">68</span>     Some</span><br><span class="line"><span class="number">84</span>  <span class="number">1</span>   Placebo Female  <span class="number">74</span>   Marked</span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> table<span class="punctuation">(</span>Arthritis<span class="operator">$</span>Treatment<span class="punctuation">,</span>Arthritis<span class="operator">$</span>Improved<span class="punctuation">)</span></span><br><span class="line">          None Some Marked</span><br><span class="line">  Placebo   <span class="number">29</span>    <span class="number">7</span>      <span class="number">7</span></span><br><span class="line">  Treated   <span class="number">13</span>    <span class="number">7</span>     <span class="number">21</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> with<span class="punctuation">(</span>data <span class="operator">=</span> Arthritis<span class="punctuation">,</span><span class="punctuation">&#123;</span>table<span class="punctuation">(</span>Treatment<span class="punctuation">,</span>Improved<span class="punctuation">)</span><span class="punctuation">&#125;</span><span class="punctuation">)</span> <span class="comment"># 如果变量太多，可以用with先加载数据</span></span><br><span class="line">         Improved</span><br><span class="line">Treatment None Some Marked</span><br><span class="line">  Placebo   <span class="number">29</span>    <span class="number">7</span>      <span class="number">7</span></span><br><span class="line">  Treated   <span class="number">13</span>    <span class="number">7</span>     <span class="number">21</span></span><br></pre></td></tr></table></figure><p>如果变量太多，可以用<code>with</code>先加载数据。</p><p>处理列联表还可以使用<code>xtabs</code>函数</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> xtabs<span class="punctuation">(</span><span class="operator">~</span> Treatment<span class="operator">+</span>Improved<span class="punctuation">,</span>data <span class="operator">=</span> Arthritis<span class="punctuation">)</span> <span class="comment"># ~ 位置可以是公式，也可以省略。</span></span><br><span class="line">         Improved</span><br><span class="line">Treatment None Some Marked</span><br><span class="line">  Placebo   <span class="number">29</span>    <span class="number">7</span>      <span class="number">7</span></span><br><span class="line">  Treated   <span class="number">13</span>    <span class="number">7</span>     <span class="number">21</span></span><br></pre></td></tr></table></figure><p><code>~</code>位置可以是公式，也可以省略。</p><p><code>margin.table</code>函数可以单独根据一行或一列进行频数统计。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> xtabs<span class="punctuation">(</span><span class="operator">~</span> Treatment<span class="operator">+</span>Improved<span class="punctuation">,</span>data <span class="operator">=</span> Arthritis<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">         Improved</span><br><span class="line">Treatment None Some Marked</span><br><span class="line">  Placebo   <span class="number">29</span>    <span class="number">7</span>      <span class="number">7</span></span><br><span class="line">  Treated   <span class="number">13</span>    <span class="number">7</span>     <span class="number">21</span></span><br><span class="line"><span class="operator">&gt;</span> margin.table<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">84</span></span><br><span class="line"><span class="operator">&gt;</span> margin.table<span class="punctuation">(</span>x<span class="punctuation">,</span><span class="number">1</span><span class="punctuation">)</span> <span class="comment"># 求出每行的频数和</span></span><br><span class="line">Treatment</span><br><span class="line">Placebo Treated </span><br><span class="line">     <span class="number">43</span>      <span class="number">41</span> </span><br><span class="line"><span class="operator">&gt;</span> margin.table<span class="punctuation">(</span>x<span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span> <span class="comment"># 求出每列的频数和</span></span><br><span class="line">Improved</span><br><span class="line">  None   Some Marked </span><br><span class="line">    <span class="number">42</span>     <span class="number">14</span>     <span class="number">28</span> </span><br><span class="line"><span class="operator">&gt;</span> prop.table<span class="punctuation">(</span>x<span class="punctuation">,</span><span class="number">1</span><span class="punctuation">)</span> <span class="comment"># 得到行的频数比例</span></span><br><span class="line">         Improved</span><br><span class="line">Treatment      None      Some    Marked</span><br><span class="line">  Placebo <span class="number">0.6744186</span> <span class="number">0.1627907</span> <span class="number">0.1627907</span></span><br><span class="line">  Treated <span class="number">0.3170732</span> <span class="number">0.1707317</span> <span class="number">0.5121951</span></span><br><span class="line"><span class="operator">&gt;</span> addmargins<span class="punctuation">(</span>x<span class="punctuation">)</span> <span class="comment"># 将频数的和添加到频数表中，既有行也有列</span></span><br><span class="line">         Improved</span><br><span class="line">Treatment None Some Marked Sum</span><br><span class="line">  Placebo   <span class="number">29</span>    <span class="number">7</span>      <span class="number">7</span>  <span class="number">43</span></span><br><span class="line">  Treated   <span class="number">13</span>    <span class="number">7</span>     <span class="number">21</span>  <span class="number">41</span></span><br><span class="line">  Sum       <span class="number">42</span>   <span class="number">14</span>     <span class="number">28</span>  <span class="number">84</span></span><br><span class="line"><span class="operator">&gt;</span> addmargins<span class="punctuation">(</span>x<span class="punctuation">,</span><span class="number">1</span><span class="punctuation">)</span> <span class="comment"># 只添加频数的和到列中</span></span><br><span class="line">         Improved</span><br><span class="line">Treatment None Some Marked</span><br><span class="line">  Placebo   <span class="number">29</span>    <span class="number">7</span>      <span class="number">7</span></span><br><span class="line">  Treated   <span class="number">13</span>    <span class="number">7</span>     <span class="number">21</span></span><br><span class="line">  Sum       <span class="number">42</span>   <span class="number">14</span>     <span class="number">28</span></span><br><span class="line"><span class="operator">&gt;</span> addmargins<span class="punctuation">(</span>x<span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span> <span class="comment"># 只添加频数的和到列中</span></span><br><span class="line">         Improved</span><br><span class="line">Treatment None Some Marked Sum</span><br><span class="line">  Placebo   <span class="number">29</span>    <span class="number">7</span>      <span class="number">7</span>  <span class="number">43</span></span><br><span class="line">  Treated   <span class="number">13</span>    <span class="number">7</span>     <span class="number">21</span>  <span class="number">41</span></span><br></pre></td></tr></table></figure><p>也可以进行三维列联表统计：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> y <span class="operator">&lt;-</span> xtabs<span class="punctuation">(</span><span class="operator">~</span> Treatment<span class="operator">+</span>Improved<span class="operator">+</span>Sex<span class="punctuation">,</span>data <span class="operator">=</span> Arthritis<span class="punctuation">)</span> <span class="comment"># 三维列联表频数统计</span></span><br><span class="line"><span class="operator">&gt;</span> y</span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> Sex <span class="operator">=</span> Female</span><br><span class="line"></span><br><span class="line">         Improved</span><br><span class="line">Treatment None Some Marked</span><br><span class="line">  Placebo   <span class="number">19</span>    <span class="number">7</span>      <span class="number">6</span></span><br><span class="line">  Treated    <span class="number">6</span>    <span class="number">5</span>     <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> Sex <span class="operator">=</span> Male</span><br><span class="line"></span><br><span class="line">         Improved</span><br><span class="line">Treatment None Some Marked</span><br><span class="line">  Placebo   <span class="number">10</span>    <span class="number">0</span>      <span class="number">1</span></span><br><span class="line">  Treated    <span class="number">7</span>    <span class="number">2</span>      <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> ftable<span class="punctuation">(</span>y<span class="punctuation">)</span>  <span class="comment"># 可以将结果转换成平铺式的列联表。</span></span><br><span class="line">                   Sex Female Male</span><br><span class="line">Treatment Improved                </span><br><span class="line">Placebo   None             <span class="number">19</span>   <span class="number">10</span></span><br><span class="line">          Some              <span class="number">7</span>    <span class="number">0</span></span><br><span class="line">          Marked            <span class="number">6</span>    <span class="number">1</span></span><br><span class="line">Treated   None              <span class="number">6</span>    <span class="number">7</span></span><br><span class="line">          Some              <span class="number">5</span>    <span class="number">2</span></span><br><span class="line">          Marked           <span class="number">16</span>    <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="5-5-独立性检验函数">5.5 独立性检验函数</h3><p>独立性检验是根据频数信息判断两类因子彼此相关或相互独立的假设检验。所谓独立性就是指变量之间是独立的，没有关系。</p><p>三种独立性检验方法：</p><ul><li>卡方检验</li><li>Fisher检验</li><li>Cochran-Mantel-Haenszel检验</li></ul><p>假设检验（Hypothesis Testing）是数理统计学中根据一定假设条件由样本推断总体的一种方法。</p><p>原假设—没有发生；</p><p>备择假设—发生了；</p><p>具体作法是：根据问题的需要对所研究的总体作某种假设，记作H0；选取合适的统计量，这个统计量的选取要使得在假设H0成立时，其分布为已知；由实测的样本，计算出统计量的值，并根据预先给定的显著性水平进行检验，作出拒绝或接受假设H0的判断。</p><p>p-value就是Probability的值，它是一个通过计算得到的概率值，也就是在原假设为真时，得到最大的或者超出所得到的检验统计量值的概率。</p><p>一般将p值定位到0.05，当p&lt;0.05拒绝原假设，p&gt;0.05，不拒绝原假设。如果数据噪音比较大，可以放松限制条件，将p值设定为0.1，如果数据比较精确，可以设定为0.01。</p><p><code>vcd</code>包中的<code>chisq.test</code>函数可以进行卡方独立检验：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mytable <span class="operator">&lt;-</span> table<span class="punctuation">(</span>Arthritis<span class="operator">$</span>Treatment<span class="punctuation">,</span>Arthritis<span class="operator">$</span>Improved<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> chisq.test<span class="punctuation">(</span>mytable<span class="punctuation">)</span>  <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">Pearson<span class="string">&#x27;s Chi-squared test</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">data:  mytable</span></span><br><span class="line"><span class="string">X-squared = 13.055, df = 2, p-value = 0.001463</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt; mytable &lt;- table(Arthritis$Sex,Arthritis$Improved)</span></span><br><span class="line"><span class="string">&gt; chisq.test(mytable)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Pearson&#x27;</span>s Chi<span class="operator">-</span>squared test</span><br><span class="line"></span><br><span class="line">data<span class="operator">:</span>  mytable</span><br><span class="line">X<span class="operator">-</span>squared <span class="operator">=</span> <span class="number">4.8407</span><span class="punctuation">,</span> df <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> p<span class="operator">-</span>value <span class="operator">=</span> <span class="number">0.08889</span></span><br><span class="line"></span><br><span class="line">Warning message<span class="operator">:</span></span><br><span class="line">In chisq.test<span class="punctuation">(</span>mytable<span class="punctuation">)</span> <span class="operator">:</span> Chi<span class="operator">-</span>squared近似算法有可能不准</span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> mytable <span class="operator">&lt;-</span> table<span class="punctuation">(</span>Arthritis<span class="operator">$</span>Improved<span class="punctuation">,</span>Arthritis<span class="operator">$</span>Sex<span class="punctuation">)</span> <span class="comment"># Improved和Sex二者在table中的顺序对结果无影响</span></span><br><span class="line"><span class="operator">&gt;</span> chisq.test<span class="punctuation">(</span>mytable<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Pearson<span class="string">&#x27;s Chi-squared test</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">data:  mytable</span></span><br><span class="line"><span class="string">X-squared = 4.8407, df = 2, p-value = 0.08889</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Warning message:</span></span><br><span class="line"><span class="string">In chisq.test(mytable) : Chi-squared近似算法有可能不准</span></span><br></pre></td></tr></table></figure><p>通过Fisher检验：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mytable <span class="operator">&lt;-</span> xtabs<span class="punctuation">(</span><span class="operator">~</span>Treatment<span class="operator">+</span>Improved<span class="punctuation">,</span> data<span class="operator">=</span>Arthritis<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fisher.test<span class="punctuation">(</span>mytable<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Fisher<span class="string">&#x27;s Exact Test for Count Data</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">data:  mytable</span></span><br><span class="line"><span class="string">p-value = 0.001393</span></span><br><span class="line"><span class="string">alternative hypothesis: two.sided</span></span><br></pre></td></tr></table></figure><p>p值都小于0.05说明变量不独立。</p><p>Cochran-Mantel-Haenszel检验：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mytable <span class="operator">&lt;-</span> xtabs<span class="punctuation">(</span><span class="operator">~</span>Treatment<span class="operator">+</span>Improved<span class="operator">+</span>Sex<span class="punctuation">,</span> data<span class="operator">=</span>Arthritis<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> mytable</span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> Sex <span class="operator">=</span> Female</span><br><span class="line"></span><br><span class="line">         Improved</span><br><span class="line">Treatment None Some Marked</span><br><span class="line">  Placebo   <span class="number">19</span>    <span class="number">7</span>      <span class="number">6</span></span><br><span class="line">  Treated    <span class="number">6</span>    <span class="number">5</span>     <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> Sex <span class="operator">=</span> Male</span><br><span class="line"></span><br><span class="line">         Improved</span><br><span class="line">Treatment None Some Marked</span><br><span class="line">  Placebo   <span class="number">10</span>    <span class="number">0</span>      <span class="number">1</span></span><br><span class="line">  Treated    <span class="number">7</span>    <span class="number">2</span>      <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> mantelhaen.test<span class="punctuation">(</span>mytable<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Cochran<span class="operator">-</span>Mantel<span class="operator">-</span>Haenszel test</span><br><span class="line"></span><br><span class="line">data<span class="operator">:</span>  mytable</span><br><span class="line">Cochran<span class="operator">-</span>Mantel<span class="operator">-</span>Haenszel M<span class="operator">^</span><span class="number">2</span> <span class="operator">=</span> <span class="number">14.632</span><span class="punctuation">,</span> df <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> p<span class="operator">-</span>value <span class="operator">=</span> <span class="number">0.0006647</span></span><br></pre></td></tr></table></figure><p><code>Treatment</code>、<code>Sex</code>和<code>Improved</code>参数的先后位置很重要，比如下面的这个示例对比上面的示例：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mytable <span class="operator">&lt;-</span> xtabs<span class="punctuation">(</span><span class="operator">~</span>Treatment<span class="operator">+</span>Sex<span class="operator">+</span>Improved<span class="punctuation">,</span> data<span class="operator">=</span>Arthritis<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> mytable</span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> Improved <span class="operator">=</span> None</span><br><span class="line"></span><br><span class="line">         Sex</span><br><span class="line">Treatment Female Male</span><br><span class="line">  Placebo     <span class="number">19</span>   <span class="number">10</span></span><br><span class="line">  Treated      <span class="number">6</span>    <span class="number">7</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> Improved <span class="operator">=</span> Some</span><br><span class="line"></span><br><span class="line">         Sex</span><br><span class="line">Treatment Female Male</span><br><span class="line">  Placebo      <span class="number">7</span>    <span class="number">0</span></span><br><span class="line">  Treated      <span class="number">5</span>    <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> Improved <span class="operator">=</span> Marked</span><br><span class="line"></span><br><span class="line">         Sex</span><br><span class="line">Treatment Female Male</span><br><span class="line">  Placebo      <span class="number">6</span>    <span class="number">1</span></span><br><span class="line">  Treated     <span class="number">16</span>    <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> mantelhaen.test<span class="punctuation">(</span>mytable<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Mantel<span class="operator">-</span>Haenszel chi<span class="operator">-</span>squared test with continuity correction</span><br><span class="line"></span><br><span class="line">data<span class="operator">:</span>  mytable</span><br><span class="line">Mantel<span class="operator">-</span>Haenszel X<span class="operator">-</span>squared <span class="operator">=</span> <span class="number">2.0863</span><span class="punctuation">,</span> df <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> p<span class="operator">-</span>value <span class="operator">=</span> <span class="number">0.1486</span></span><br><span class="line">alternative hypothesis<span class="operator">:</span> true common odds ratio is not equal to <span class="number">1</span></span><br><span class="line"><span class="number">95</span> percent confidence interval<span class="operator">:</span></span><br><span class="line"> <span class="number">0.8566711</span> <span class="number">8.0070521</span></span><br><span class="line">sample estimates<span class="operator">:</span></span><br><span class="line">common odds ratio </span><br><span class="line">         <span class="number">2.619048</span> </span><br></pre></td></tr></table></figure><h3 id="5-6-相关性分析函数">5.6 相关性分析函数</h3><p>相关性分析是指对两个或多个具备相关性的变量元素进行分析，从而衡量两个变量因素的相关密切程度。相关性的元素之间需要存在一定的联系或者概率才可以进行相关性分析。简单来说就是变量之间是否有关系。</p><p>相关性衡量指标：</p><ul><li>Pearson相关系数</li><li>Spearman相关系数</li><li>Kendall相关系数</li><li>偏相关系数</li><li>多分格（polychoric）相关系数</li><li>多系列（polyserial）相关系数</li></ul><p>相关性中每种方法都没有独立的函数，均使用同一个函数<code>cor</code>。<code>cor</code>可以计算三种相关系数，包括Pearson、Spearman和Kendall，具体使用哪种算法可以通过method参数指定，默认使用Pearson系数。其他的相关系数：偏相关系数、多分格相关系数、多系列相关系数可以通过R的相关拓展包实现。比如<code>ggm</code>包中的<code>pcor</code>可以用来计算偏相关系数。</p><p><code>cor</code>函数中的<code>use</code>参数表示如何对待缺失值，是不处理还是删除，可选的选项有&quot;everything&quot;, “all.obs”, “complete.obs”, “na.or.complete”, 或 “pairwise.complete.obs”。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> cor<span class="punctuation">(</span>state.x77<span class="punctuation">)</span></span><br><span class="line">            Population     Income  Illiteracy    Life Exp     Murder     HS Grad      Frost        Area</span><br><span class="line">Population  <span class="number">1.00000000</span>  <span class="number">0.2082276</span>  <span class="number">0.10762237</span> <span class="operator">-</span><span class="number">0.06805195</span>  <span class="number">0.3436428</span> <span class="operator">-</span><span class="number">0.09848975</span> <span class="operator">-</span><span class="number">0.3321525</span>  <span class="number">0.02254384</span></span><br><span class="line">Income      <span class="number">0.20822756</span>  <span class="number">1.0000000</span> <span class="operator">-</span><span class="number">0.43707519</span>  <span class="number">0.34025534</span> <span class="operator">-</span><span class="number">0.2300776</span>  <span class="number">0.61993232</span>  <span class="number">0.2262822</span>  <span class="number">0.36331544</span></span><br><span class="line">Illiteracy  <span class="number">0.10762237</span> <span class="operator">-</span><span class="number">0.4370752</span>  <span class="number">1.00000000</span> <span class="operator">-</span><span class="number">0.58847793</span>  <span class="number">0.7029752</span> <span class="operator">-</span><span class="number">0.65718861</span> <span class="operator">-</span><span class="number">0.6719470</span>  <span class="number">0.07726113</span></span><br><span class="line">Life Exp   <span class="operator">-</span><span class="number">0.06805195</span>  <span class="number">0.3402553</span> <span class="operator">-</span><span class="number">0.58847793</span>  <span class="number">1.00000000</span> <span class="operator">-</span><span class="number">0.7808458</span>  <span class="number">0.58221620</span>  <span class="number">0.2620680</span> <span class="operator">-</span><span class="number">0.10733194</span></span><br><span class="line">Murder      <span class="number">0.34364275</span> <span class="operator">-</span><span class="number">0.2300776</span>  <span class="number">0.70297520</span> <span class="operator">-</span><span class="number">0.78084575</span>  <span class="number">1.0000000</span> <span class="operator">-</span><span class="number">0.48797102</span> <span class="operator">-</span><span class="number">0.5388834</span>  <span class="number">0.22839021</span></span><br><span class="line">HS Grad    <span class="operator">-</span><span class="number">0.09848975</span>  <span class="number">0.6199323</span> <span class="operator">-</span><span class="number">0.65718861</span>  <span class="number">0.58221620</span> <span class="operator">-</span><span class="number">0.4879710</span>  <span class="number">1.00000000</span>  <span class="number">0.3667797</span>  <span class="number">0.33354187</span></span><br><span class="line">Frost      <span class="operator">-</span><span class="number">0.33215245</span>  <span class="number">0.2262822</span> <span class="operator">-</span><span class="number">0.67194697</span>  <span class="number">0.26206801</span> <span class="operator">-</span><span class="number">0.5388834</span>  <span class="number">0.36677970</span>  <span class="number">1.0000000</span>  <span class="number">0.05922910</span></span><br><span class="line">Area        <span class="number">0.02254384</span>  <span class="number">0.3633154</span>  <span class="number">0.07726113</span> <span class="operator">-</span><span class="number">0.10733194</span>  <span class="number">0.2283902</span>  <span class="number">0.33354187</span>  <span class="number">0.0592291</span>  <span class="number">1.00000000</span></span><br></pre></td></tr></table></figure><p>这是对角矩阵，对角位置的数值为1，说明自己和自己的相关性为1，一般相关系数在0到1之间，正负号为正相关和负相关。</p><p><code>cov</code>可以用来计算协方差，协方差可以用来计算两个变量的总体误差。在计算偏方差时需要用到协方差的结果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> cov<span class="punctuation">(</span>state.x77<span class="punctuation">)</span></span><br><span class="line">              Population        Income   Illiteracy      Life Exp       Murder       HS Grad        Frost</span><br><span class="line">Population <span class="number">19931683.7588</span>   <span class="number">571229.7796</span>  <span class="number">292.8679592</span> <span class="operator">-</span><span class="number">4.078425e+02</span>  <span class="number">5663.523714</span>  <span class="operator">-</span><span class="number">3551.509551</span> <span class="operator">-</span><span class="number">77081.97265</span></span><br><span class="line">Income       <span class="number">571229.7796</span>   <span class="number">377573.3061</span> <span class="operator">-</span><span class="number">163.7020408</span>  <span class="number">2.806632e+02</span>  <span class="operator">-</span><span class="number">521.894286</span>   <span class="number">3076.768980</span>   <span class="number">7227.60408</span></span><br><span class="line">Illiteracy      <span class="number">292.8680</span>     <span class="operator">-</span><span class="number">163.7020</span>    <span class="number">0.3715306</span> <span class="operator">-</span><span class="number">4.815122e-01</span>     <span class="number">1.581776</span>     <span class="operator">-</span><span class="number">3.235469</span>    <span class="operator">-</span><span class="number">21.29000</span></span><br><span class="line">Life Exp       <span class="operator">-</span><span class="number">407.8425</span>      <span class="number">280.6632</span>   <span class="operator">-</span><span class="number">0.4815122</span>  <span class="number">1.802020e+00</span>    <span class="operator">-</span><span class="number">3.869480</span>      <span class="number">6.312685</span>     <span class="number">18.28678</span></span><br><span class="line">Murder         <span class="number">5663.5237</span>     <span class="operator">-</span><span class="number">521.8943</span>    <span class="number">1.5817755</span> <span class="operator">-</span><span class="number">3.869480e+00</span>    <span class="number">13.627465</span>    <span class="operator">-</span><span class="number">14.549616</span>   <span class="operator">-</span><span class="number">103.40600</span></span><br><span class="line">HS Grad       <span class="operator">-</span><span class="number">3551.5096</span>     <span class="number">3076.7690</span>   <span class="operator">-</span><span class="number">3.2354694</span>  <span class="number">6.312685e+00</span>   <span class="operator">-</span><span class="number">14.549616</span>     <span class="number">65.237894</span>    <span class="number">153.99216</span></span><br><span class="line">Frost        <span class="operator">-</span><span class="number">77081.9727</span>     <span class="number">7227.6041</span>  <span class="operator">-</span><span class="number">21.2900000</span>  <span class="number">1.828678e+01</span>  <span class="operator">-</span><span class="number">103.406000</span>    <span class="number">153.992163</span>   <span class="number">2702.00857</span></span><br><span class="line">Area        <span class="number">8587916.9494</span> <span class="number">19049013.7510</span> <span class="number">4018.3371429</span> <span class="operator">-</span><span class="number">1.229410e+04</span> <span class="number">71940.429959</span> <span class="number">229873.192816</span> <span class="number">262703.89306</span></span><br><span class="line">                    Area</span><br><span class="line">Population  <span class="number">8.587917e+06</span></span><br><span class="line">Income      <span class="number">1.904901e+07</span></span><br><span class="line">Illiteracy  <span class="number">4.018337e+03</span></span><br><span class="line">Life Exp   <span class="operator">-</span><span class="number">1.229410e+04</span></span><br><span class="line">Murder      <span class="number">7.194043e+04</span></span><br><span class="line">HS Grad     <span class="number">2.298732e+05</span></span><br><span class="line">Frost       <span class="number">2.627039e+05</span></span><br><span class="line">Area        <span class="number">7.280748e+09</span></span><br></pre></td></tr></table></figure><p>如果想计算一组变量和另一组变量之间的关系，而不是所有变量两两之间的关系。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> state.x77<span class="punctuation">[</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> y <span class="operator">&lt;-</span> state.x77<span class="punctuation">[</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">           Population Income Illiteracy HS Grad</span><br><span class="line">Alabama          <span class="number">3615</span>   <span class="number">3624</span>        <span class="number">2.1</span>    <span class="number">41.3</span></span><br><span class="line">Alaska            <span class="number">365</span>   <span class="number">6315</span>        <span class="number">1.5</span>    <span class="number">66.7</span></span><br><span class="line">Arizona          <span class="number">2212</span>   <span class="number">4530</span>        <span class="number">1.8</span>    <span class="number">58.1</span></span><br><span class="line">Arkansas         <span class="number">2110</span>   <span class="number">3378</span>        <span class="number">1.9</span>    <span class="number">39.9</span></span><br><span class="line">California      <span class="number">21198</span>   <span class="number">5114</span>        <span class="number">1.1</span>    <span class="number">62.6</span></span><br><span class="line">Colorado         <span class="number">2541</span>   <span class="number">4884</span>        <span class="number">0.7</span>    <span class="number">63.9</span></span><br><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>y<span class="punctuation">)</span></span><br><span class="line">           Life Exp Murder</span><br><span class="line">Alabama       <span class="number">69.05</span>   <span class="number">15.1</span></span><br><span class="line">Alaska        <span class="number">69.31</span>   <span class="number">11.3</span></span><br><span class="line">Arizona       <span class="number">70.55</span>    <span class="number">7.8</span></span><br><span class="line">Arkansas      <span class="number">70.66</span>   <span class="number">10.1</span></span><br><span class="line">California    <span class="number">71.71</span>   <span class="number">10.3</span></span><br><span class="line">Colorado      <span class="number">72.06</span>    <span class="number">6.8</span></span><br><span class="line"><span class="operator">&gt;</span> cor<span class="punctuation">(</span>x<span class="punctuation">,</span>y<span class="punctuation">)</span></span><br><span class="line">              Life Exp     Murder</span><br><span class="line">Population <span class="operator">-</span><span class="number">0.06805195</span>  <span class="number">0.3436428</span></span><br><span class="line">Income      <span class="number">0.34025534</span> <span class="operator">-</span><span class="number">0.2300776</span></span><br><span class="line">Illiteracy <span class="operator">-</span><span class="number">0.58847793</span>  <span class="number">0.7029752</span></span><br><span class="line">HS Grad     <span class="number">0.58221620</span> <span class="operator">-</span><span class="number">0.4879710</span></span><br></pre></td></tr></table></figure><p><code>ggm</code>包中<code>pcor</code>函数用来计算偏相关系数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> pcor<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">)</span><span class="punctuation">,</span>cov<span class="punctuation">(</span>state.x77<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">0.3132774</span></span><br></pre></td></tr></table></figure><p><code>pcor(u, S)</code>说明<code>pcor</code>需要两个重要参数，第一个参数是数值向量，前两个数值为要计算相关系数的下标，其余的数值为条件变量的下标，第二个参数为计算出来的协方差结果。</p><h3 id="5-7-相关性检验函数">5.7 相关性检验函数</h3><p>即使通过<code>cor</code>计算出很高的相关系数，仍然需要进行相关性检验</p><p>相关性检验用相关性检验函数<code>cor.test</code>，<code>cor.test</code>函数中<code>alternative</code>可以选择&quot;two.sided&quot;, “less”, &quot;greater&quot;分别表示正负相关性、负相关和正相关，<code>method</code>可以选择哪种相关性分析方法。<code>cor.test</code>每次只能检测一组变量，使用起来麻烦一点。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cor.test<span class="punctuation">(</span>x<span class="punctuation">,</span> y<span class="punctuation">,</span></span><br><span class="line">         alternative <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;two.sided&quot;</span><span class="punctuation">,</span> <span class="string">&quot;less&quot;</span><span class="punctuation">,</span> <span class="string">&quot;greater&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">         method <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;pearson&quot;</span><span class="punctuation">,</span> <span class="string">&quot;kendall&quot;</span><span class="punctuation">,</span> <span class="string">&quot;spearman&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">         exact <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> conf.level <span class="operator">=</span> <span class="number">0.95</span><span class="punctuation">,</span> continuity <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> ...<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> cor.test<span class="punctuation">(</span>state.x77<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">,</span>state.x77<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Pearson<span class="string">&#x27;s product-moment correlation</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">data:  state.x77[, 3] and state.x77[, 5]</span></span><br><span class="line"><span class="string">t = 6.8479, df = 48, p-value = 1.258e-08  # p-value的值远小于0.05</span></span><br><span class="line"><span class="string">alternative hypothesis: true correlation is not equal to 0</span></span><br><span class="line"><span class="string">95 percent confidence interval:</span></span><br><span class="line"><span class="string"> 0.5279280 0.8207295</span></span><br><span class="line"><span class="string">sample estimates:</span></span><br><span class="line"><span class="string">      cor </span></span><br><span class="line"><span class="string">0.7029752</span></span><br></pre></td></tr></table></figure><p>可以看出p-value的值远小于0.05，所以拒绝了原假设（即两个变量之间无关）</p><p>置信区间：confidence interval，是指由样本统计量所构成的总体参数的估计区间。在统计学中，一个概率样本的置信区间是对这个样本的某个总体参数的区间估计。置信区间展现的是这个参数的真实值有一定概率落在测量结果的周围的程度。置信区间给出的是被测量参数的测量指的可信程度。</p><p>示例：如果在一次大选中某人的支持率为55%，而置信水平0.95以上的置信区间是（50%，60%），那么他的真实支持率有百分之九十五的机率，落在百分之五十和百分之六十之间，因此他的真实支持率不足一半的可能性小于百分之5。</p><p>在<code>psych</code>包中<code>corr.test</code>函数可以进行多个变量之间的计算，也可以进行递归处理。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> corr.test<span class="punctuation">(</span>state.x77<span class="punctuation">)</span></span><br><span class="line">Call<span class="operator">:</span>corr.test<span class="punctuation">(</span>x <span class="operator">=</span> state.x77<span class="punctuation">)</span></span><br><span class="line">Correlation matrix </span><br><span class="line">           Population Income Illiteracy Life Exp Murder HS Grad Frost  Area</span><br><span class="line">Population       <span class="number">1.00</span>   <span class="number">0.21</span>       <span class="number">0.11</span>    <span class="operator">-</span><span class="number">0.07</span>   <span class="number">0.34</span>   <span class="operator">-</span><span class="number">0.10</span> <span class="operator">-</span><span class="number">0.33</span>  <span class="number">0.02</span></span><br><span class="line">Income           <span class="number">0.21</span>   <span class="number">1.00</span>      <span class="operator">-</span><span class="number">0.44</span>     <span class="number">0.34</span>  <span class="operator">-</span><span class="number">0.23</span>    <span class="number">0.62</span>  <span class="number">0.23</span>  <span class="number">0.36</span></span><br><span class="line">Illiteracy       <span class="number">0.11</span>  <span class="operator">-</span><span class="number">0.44</span>       <span class="number">1.00</span>    <span class="operator">-</span><span class="number">0.59</span>   <span class="number">0.70</span>   <span class="operator">-</span><span class="number">0.66</span> <span class="operator">-</span><span class="number">0.67</span>  <span class="number">0.08</span></span><br><span class="line">Life Exp        <span class="operator">-</span><span class="number">0.07</span>   <span class="number">0.34</span>      <span class="operator">-</span><span class="number">0.59</span>     <span class="number">1.00</span>  <span class="operator">-</span><span class="number">0.78</span>    <span class="number">0.58</span>  <span class="number">0.26</span> <span class="operator">-</span><span class="number">0.11</span></span><br><span class="line">Murder           <span class="number">0.34</span>  <span class="operator">-</span><span class="number">0.23</span>       <span class="number">0.70</span>    <span class="operator">-</span><span class="number">0.78</span>   <span class="number">1.00</span>   <span class="operator">-</span><span class="number">0.49</span> <span class="operator">-</span><span class="number">0.54</span>  <span class="number">0.23</span></span><br><span class="line">HS Grad         <span class="operator">-</span><span class="number">0.10</span>   <span class="number">0.62</span>      <span class="operator">-</span><span class="number">0.66</span>     <span class="number">0.58</span>  <span class="operator">-</span><span class="number">0.49</span>    <span class="number">1.00</span>  <span class="number">0.37</span>  <span class="number">0.33</span></span><br><span class="line">Frost           <span class="operator">-</span><span class="number">0.33</span>   <span class="number">0.23</span>      <span class="operator">-</span><span class="number">0.67</span>     <span class="number">0.26</span>  <span class="operator">-</span><span class="number">0.54</span>    <span class="number">0.37</span>  <span class="number">1.00</span>  <span class="number">0.06</span></span><br><span class="line">Area             <span class="number">0.02</span>   <span class="number">0.36</span>       <span class="number">0.08</span>    <span class="operator">-</span><span class="number">0.11</span>   <span class="number">0.23</span>    <span class="number">0.33</span>  <span class="number">0.06</span>  <span class="number">1.00</span></span><br><span class="line">Sample Size </span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">50</span></span><br><span class="line">Probability values <span class="punctuation">(</span>Entries above the diagonal are adjusted <span class="keyword">for</span> multiple tests.<span class="punctuation">)</span> </span><br><span class="line">           Population Income Illiteracy Life Exp Murder HS Grad Frost Area</span><br><span class="line">Population       <span class="number">0.00</span>   <span class="number">1.00</span>       <span class="number">1.00</span>     <span class="number">1.00</span>   <span class="number">0.23</span>    <span class="number">1.00</span>  <span class="number">0.25</span> <span class="number">1.00</span></span><br><span class="line">Income           <span class="number">0.15</span>   <span class="number">0.00</span>       <span class="number">0.03</span>     <span class="number">0.23</span>   <span class="number">1.00</span>    <span class="number">0.00</span>  <span class="number">1.00</span> <span class="number">0.16</span></span><br><span class="line">Illiteracy       <span class="number">0.46</span>   <span class="number">0.00</span>       <span class="number">0.00</span>     <span class="number">0.00</span>   <span class="number">0.00</span>    <span class="number">0.00</span>  <span class="number">0.00</span> <span class="number">1.00</span></span><br><span class="line">Life Exp         <span class="number">0.64</span>   <span class="number">0.02</span>       <span class="number">0.00</span>     <span class="number">0.00</span>   <span class="number">0.00</span>    <span class="number">0.00</span>  <span class="number">0.79</span> <span class="number">1.00</span></span><br><span class="line">Murder           <span class="number">0.01</span>   <span class="number">0.11</span>       <span class="number">0.00</span>     <span class="number">0.00</span>   <span class="number">0.00</span>    <span class="number">0.01</span>  <span class="number">0.00</span> <span class="number">1.00</span></span><br><span class="line">HS Grad          <span class="number">0.50</span>   <span class="number">0.00</span>       <span class="number">0.00</span>     <span class="number">0.00</span>   <span class="number">0.00</span>    <span class="number">0.00</span>  <span class="number">0.16</span> <span class="number">0.25</span></span><br><span class="line">Frost            <span class="number">0.02</span>   <span class="number">0.11</span>       <span class="number">0.00</span>     <span class="number">0.07</span>   <span class="number">0.00</span>    <span class="number">0.01</span>  <span class="number">0.00</span> <span class="number">1.00</span></span><br><span class="line">Area             <span class="number">0.88</span>   <span class="number">0.01</span>       <span class="number">0.59</span>     <span class="number">0.46</span>   <span class="number">0.11</span>    <span class="number">0.02</span>  <span class="number">0.68</span> <span class="number">0.00</span></span><br><span class="line"></span><br><span class="line"> To see confidence intervals of the correlations<span class="punctuation">,</span> print with the short<span class="operator">=</span><span class="literal">FALSE</span> option</span><br></pre></td></tr></table></figure><p>如果想进行偏相关的检验，可以通过<code>ggm</code>包中的<code>pcor.test</code>函数进行相关检验：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> pcor<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">)</span><span class="punctuation">,</span>cov<span class="punctuation">(</span>state.x77<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">0.3132774</span></span><br><span class="line"><span class="operator">&gt;</span> pcor.test<span class="punctuation">(</span>x<span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">$</span>tval</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">2.212924</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>df</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">45</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>pvalue</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">0.03201783</span></span><br></pre></td></tr></table></figure><p>x为偏相关计算的相关系数，3为返回的变量数，50为样本数</p><p>返回三个值：t检验、自由度和p-value</p><p>t检验是用t分布理论推论差异发生的概率，从而比较两个平均数的差异是否显著，主要用于样本量小，一般小于30个，总体标准差未知的标准正态分布数据。</p><p>UScrime数据集为美国47个州的犯罪制度对犯罪率的影响信息。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> UScrime</span><br><span class="line">     M So  Ed Po1 Po2  LF  M.F Pop  NW  U1 U2 GDP Ineq     Prob    Time    y</span><br><span class="line"><span class="number">1</span>  <span class="number">151</span>  <span class="number">1</span>  <span class="number">91</span>  <span class="number">58</span>  <span class="number">56</span> <span class="number">510</span>  <span class="number">950</span>  <span class="number">33</span> <span class="number">301</span> <span class="number">108</span> <span class="number">41</span> <span class="number">394</span>  <span class="number">261</span> <span class="number">0.084602</span> <span class="number">26.2011</span>  <span class="number">791</span></span><br><span class="line"><span class="number">2</span>  <span class="number">143</span>  <span class="number">0</span> <span class="number">113</span> <span class="number">103</span>  <span class="number">95</span> <span class="number">583</span> <span class="number">1012</span>  <span class="number">13</span> <span class="number">102</span>  <span class="number">96</span> <span class="number">36</span> <span class="number">557</span>  <span class="number">194</span> <span class="number">0.029599</span> <span class="number">25.2999</span> <span class="number">1635</span></span><br><span class="line"><span class="number">3</span>  <span class="number">142</span>  <span class="number">1</span>  <span class="number">89</span>  <span class="number">45</span>  <span class="number">44</span> <span class="number">533</span>  <span class="number">969</span>  <span class="number">18</span> <span class="number">219</span>  <span class="number">94</span> <span class="number">33</span> <span class="number">318</span>  <span class="number">250</span> <span class="number">0.083401</span> <span class="number">24.3006</span>  <span class="number">578</span></span><br><span class="line"><span class="number">4</span>  <span class="number">136</span>  <span class="number">0</span> <span class="number">121</span> <span class="number">149</span> <span class="number">141</span> <span class="number">577</span>  <span class="number">994</span> <span class="number">157</span>  <span class="number">80</span> <span class="number">102</span> <span class="number">39</span> <span class="number">673</span>  <span class="number">167</span> <span class="number">0.015801</span> <span class="number">29.9012</span> <span class="number">1969</span></span><br><span class="line"><span class="number">5</span>  <span class="number">141</span>  <span class="number">0</span> <span class="number">121</span> <span class="number">109</span> <span class="number">101</span> <span class="number">591</span>  <span class="number">985</span>  <span class="number">18</span>  <span class="number">30</span>  <span class="number">91</span> <span class="number">20</span> <span class="number">578</span>  <span class="number">174</span> <span class="number">0.041399</span> <span class="number">21.2998</span> <span class="number">1234</span></span><br><span class="line"><span class="number">6</span>  <span class="number">121</span>  <span class="number">0</span> <span class="number">110</span> <span class="number">118</span> <span class="number">115</span> <span class="number">547</span>  <span class="number">964</span>  <span class="number">25</span>  <span class="number">44</span>  <span class="number">84</span> <span class="number">29</span> <span class="number">689</span>  <span class="number">126</span> <span class="number">0.034201</span> <span class="number">20.9995</span>  <span class="number">682</span></span><br><span class="line"><span class="number">7</span>  <span class="number">127</span>  <span class="number">1</span> <span class="number">111</span>  <span class="number">82</span>  <span class="number">79</span> <span class="number">519</span>  <span class="number">982</span>   <span class="number">4</span> <span class="number">139</span>  <span class="number">97</span> <span class="number">38</span> <span class="number">620</span>  <span class="number">168</span> <span class="number">0.042100</span> <span class="number">20.6993</span>  <span class="number">963</span></span><br><span class="line"><span class="number">8</span>  <span class="number">131</span>  <span class="number">1</span> <span class="number">109</span> <span class="number">115</span> <span class="number">109</span> <span class="number">542</span>  <span class="number">969</span>  <span class="number">50</span> <span class="number">179</span>  <span class="number">79</span> <span class="number">35</span> <span class="number">472</span>  <span class="number">206</span> <span class="number">0.040099</span> <span class="number">24.5988</span> <span class="number">1555</span></span><br><span class="line"><span class="number">9</span>  <span class="number">157</span>  <span class="number">1</span>  <span class="number">90</span>  <span class="number">65</span>  <span class="number">62</span> <span class="number">553</span>  <span class="number">955</span>  <span class="number">39</span> <span class="number">286</span>  <span class="number">81</span> <span class="number">28</span> <span class="number">421</span>  <span class="number">239</span> <span class="number">0.071697</span> <span class="number">29.4001</span>  <span class="number">856</span></span><br><span class="line"><span class="number">10</span> <span class="number">140</span>  <span class="number">0</span> <span class="number">118</span>  <span class="number">71</span>  <span class="number">68</span> <span class="number">632</span> <span class="number">1029</span>   <span class="number">7</span>  <span class="number">15</span> <span class="number">100</span> <span class="number">24</span> <span class="number">526</span>  <span class="number">174</span> <span class="number">0.044498</span> <span class="number">19.5994</span>  <span class="number">705</span></span><br><span class="line"><span class="number">11</span> <span class="number">124</span>  <span class="number">0</span> <span class="number">105</span> <span class="number">121</span> <span class="number">116</span> <span class="number">580</span>  <span class="number">966</span> <span class="number">101</span> <span class="number">106</span>  <span class="number">77</span> <span class="number">35</span> <span class="number">657</span>  <span class="number">170</span> <span class="number">0.016201</span> <span class="number">41.6000</span> <span class="number">1674</span></span><br><span class="line"><span class="number">12</span> <span class="number">134</span>  <span class="number">0</span> <span class="number">108</span>  <span class="number">75</span>  <span class="number">71</span> <span class="number">595</span>  <span class="number">972</span>  <span class="number">47</span>  <span class="number">59</span>  <span class="number">83</span> <span class="number">31</span> <span class="number">580</span>  <span class="number">172</span> <span class="number">0.031201</span> <span class="number">34.2984</span>  <span class="number">849</span></span><br><span class="line"><span class="number">13</span> <span class="number">128</span>  <span class="number">0</span> <span class="number">113</span>  <span class="number">67</span>  <span class="number">60</span> <span class="number">624</span>  <span class="number">972</span>  <span class="number">28</span>  <span class="number">10</span>  <span class="number">77</span> <span class="number">25</span> <span class="number">507</span>  <span class="number">206</span> <span class="number">0.045302</span> <span class="number">36.2993</span>  <span class="number">511</span></span><br><span class="line"><span class="number">14</span> <span class="number">135</span>  <span class="number">0</span> <span class="number">117</span>  <span class="number">62</span>  <span class="number">61</span> <span class="number">595</span>  <span class="number">986</span>  <span class="number">22</span>  <span class="number">46</span>  <span class="number">77</span> <span class="number">27</span> <span class="number">529</span>  <span class="number">190</span> <span class="number">0.053200</span> <span class="number">21.5010</span>  <span class="number">664</span></span><br><span class="line"><span class="number">15</span> <span class="number">152</span>  <span class="number">1</span>  <span class="number">87</span>  <span class="number">57</span>  <span class="number">53</span> <span class="number">530</span>  <span class="number">986</span>  <span class="number">30</span>  <span class="number">72</span>  <span class="number">92</span> <span class="number">43</span> <span class="number">405</span>  <span class="number">264</span> <span class="number">0.069100</span> <span class="number">22.7008</span>  <span class="number">798</span></span><br><span class="line"><span class="number">16</span> <span class="number">142</span>  <span class="number">1</span>  <span class="number">88</span>  <span class="number">81</span>  <span class="number">77</span> <span class="number">497</span>  <span class="number">956</span>  <span class="number">33</span> <span class="number">321</span> <span class="number">116</span> <span class="number">47</span> <span class="number">427</span>  <span class="number">247</span> <span class="number">0.052099</span> <span class="number">26.0991</span>  <span class="number">946</span></span><br><span class="line"><span class="number">17</span> <span class="number">143</span>  <span class="number">0</span> <span class="number">110</span>  <span class="number">66</span>  <span class="number">63</span> <span class="number">537</span>  <span class="number">977</span>  <span class="number">10</span>   <span class="number">6</span> <span class="number">114</span> <span class="number">35</span> <span class="number">487</span>  <span class="number">166</span> <span class="number">0.076299</span> <span class="number">19.1002</span>  <span class="number">539</span></span><br><span class="line"><span class="number">18</span> <span class="number">135</span>  <span class="number">1</span> <span class="number">104</span> <span class="number">123</span> <span class="number">115</span> <span class="number">537</span>  <span class="number">978</span>  <span class="number">31</span> <span class="number">170</span>  <span class="number">89</span> <span class="number">34</span> <span class="number">631</span>  <span class="number">165</span> <span class="number">0.119804</span> <span class="number">18.1996</span>  <span class="number">929</span></span><br><span class="line"><span class="number">19</span> <span class="number">130</span>  <span class="number">0</span> <span class="number">116</span> <span class="number">128</span> <span class="number">128</span> <span class="number">536</span>  <span class="number">934</span>  <span class="number">51</span>  <span class="number">24</span>  <span class="number">78</span> <span class="number">34</span> <span class="number">627</span>  <span class="number">135</span> <span class="number">0.019099</span> <span class="number">24.9008</span>  <span class="number">750</span></span><br><span class="line"><span class="number">20</span> <span class="number">125</span>  <span class="number">0</span> <span class="number">108</span> <span class="number">113</span> <span class="number">105</span> <span class="number">567</span>  <span class="number">985</span>  <span class="number">78</span>  <span class="number">94</span> <span class="number">130</span> <span class="number">58</span> <span class="number">626</span>  <span class="number">166</span> <span class="number">0.034801</span> <span class="number">26.4010</span> <span class="number">1225</span></span><br><span class="line"><span class="number">21</span> <span class="number">126</span>  <span class="number">0</span> <span class="number">108</span>  <span class="number">74</span>  <span class="number">67</span> <span class="number">602</span>  <span class="number">984</span>  <span class="number">34</span>  <span class="number">12</span> <span class="number">102</span> <span class="number">33</span> <span class="number">557</span>  <span class="number">195</span> <span class="number">0.022800</span> <span class="number">37.5998</span>  <span class="number">742</span></span><br><span class="line"><span class="number">22</span> <span class="number">157</span>  <span class="number">1</span>  <span class="number">89</span>  <span class="number">47</span>  <span class="number">44</span> <span class="number">512</span>  <span class="number">962</span>  <span class="number">22</span> <span class="number">423</span>  <span class="number">97</span> <span class="number">34</span> <span class="number">288</span>  <span class="number">276</span> <span class="number">0.089502</span> <span class="number">37.0994</span>  <span class="number">439</span></span><br><span class="line"><span class="number">23</span> <span class="number">132</span>  <span class="number">0</span>  <span class="number">96</span>  <span class="number">87</span>  <span class="number">83</span> <span class="number">564</span>  <span class="number">953</span>  <span class="number">43</span>  <span class="number">92</span>  <span class="number">83</span> <span class="number">32</span> <span class="number">513</span>  <span class="number">227</span> <span class="number">0.030700</span> <span class="number">25.1989</span> <span class="number">1216</span></span><br><span class="line"><span class="number">24</span> <span class="number">131</span>  <span class="number">0</span> <span class="number">116</span>  <span class="number">78</span>  <span class="number">73</span> <span class="number">574</span> <span class="number">1038</span>   <span class="number">7</span>  <span class="number">36</span> <span class="number">142</span> <span class="number">42</span> <span class="number">540</span>  <span class="number">176</span> <span class="number">0.041598</span> <span class="number">17.6000</span>  <span class="number">968</span></span><br><span class="line"><span class="number">25</span> <span class="number">130</span>  <span class="number">0</span> <span class="number">116</span>  <span class="number">63</span>  <span class="number">57</span> <span class="number">641</span>  <span class="number">984</span>  <span class="number">14</span>  <span class="number">26</span>  <span class="number">70</span> <span class="number">21</span> <span class="number">486</span>  <span class="number">196</span> <span class="number">0.069197</span> <span class="number">21.9003</span>  <span class="number">523</span></span><br><span class="line"><span class="number">26</span> <span class="number">131</span>  <span class="number">0</span> <span class="number">121</span> <span class="number">160</span> <span class="number">143</span> <span class="number">631</span> <span class="number">1071</span>   <span class="number">3</span>  <span class="number">77</span> <span class="number">102</span> <span class="number">41</span> <span class="number">674</span>  <span class="number">152</span> <span class="number">0.041698</span> <span class="number">22.1005</span> <span class="number">1993</span></span><br><span class="line"><span class="number">27</span> <span class="number">135</span>  <span class="number">0</span> <span class="number">109</span>  <span class="number">69</span>  <span class="number">71</span> <span class="number">540</span>  <span class="number">965</span>   <span class="number">6</span>   <span class="number">4</span>  <span class="number">80</span> <span class="number">22</span> <span class="number">564</span>  <span class="number">139</span> <span class="number">0.036099</span> <span class="number">28.4999</span>  <span class="number">342</span></span><br><span class="line"><span class="number">28</span> <span class="number">152</span>  <span class="number">0</span> <span class="number">112</span>  <span class="number">82</span>  <span class="number">76</span> <span class="number">571</span> <span class="number">1018</span>  <span class="number">10</span>  <span class="number">79</span> <span class="number">103</span> <span class="number">28</span> <span class="number">537</span>  <span class="number">215</span> <span class="number">0.038201</span> <span class="number">25.8006</span> <span class="number">1216</span></span><br><span class="line"><span class="number">29</span> <span class="number">119</span>  <span class="number">0</span> <span class="number">107</span> <span class="number">166</span> <span class="number">157</span> <span class="number">521</span>  <span class="number">938</span> <span class="number">168</span>  <span class="number">89</span>  <span class="number">92</span> <span class="number">36</span> <span class="number">637</span>  <span class="number">154</span> <span class="number">0.023400</span> <span class="number">36.7009</span> <span class="number">1043</span></span><br><span class="line"><span class="number">30</span> <span class="number">166</span>  <span class="number">1</span>  <span class="number">89</span>  <span class="number">58</span>  <span class="number">54</span> <span class="number">521</span>  <span class="number">973</span>  <span class="number">46</span> <span class="number">254</span>  <span class="number">72</span> <span class="number">26</span> <span class="number">396</span>  <span class="number">237</span> <span class="number">0.075298</span> <span class="number">28.3011</span>  <span class="number">696</span></span><br><span class="line"><span class="number">31</span> <span class="number">140</span>  <span class="number">0</span>  <span class="number">93</span>  <span class="number">55</span>  <span class="number">54</span> <span class="number">535</span> <span class="number">1045</span>   <span class="number">6</span>  <span class="number">20</span> <span class="number">135</span> <span class="number">40</span> <span class="number">453</span>  <span class="number">200</span> <span class="number">0.041999</span> <span class="number">21.7998</span>  <span class="number">373</span></span><br><span class="line"><span class="number">32</span> <span class="number">125</span>  <span class="number">0</span> <span class="number">109</span>  <span class="number">90</span>  <span class="number">81</span> <span class="number">586</span>  <span class="number">964</span>  <span class="number">97</span>  <span class="number">82</span> <span class="number">105</span> <span class="number">43</span> <span class="number">617</span>  <span class="number">163</span> <span class="number">0.042698</span> <span class="number">30.9014</span>  <span class="number">754</span></span><br><span class="line"><span class="number">33</span> <span class="number">147</span>  <span class="number">1</span> <span class="number">104</span>  <span class="number">63</span>  <span class="number">64</span> <span class="number">560</span>  <span class="number">972</span>  <span class="number">23</span>  <span class="number">95</span>  <span class="number">76</span> <span class="number">24</span> <span class="number">462</span>  <span class="number">233</span> <span class="number">0.049499</span> <span class="number">25.5005</span> <span class="number">1072</span></span><br><span class="line"><span class="number">34</span> <span class="number">126</span>  <span class="number">0</span> <span class="number">118</span>  <span class="number">97</span>  <span class="number">97</span> <span class="number">542</span>  <span class="number">990</span>  <span class="number">18</span>  <span class="number">21</span> <span class="number">102</span> <span class="number">35</span> <span class="number">589</span>  <span class="number">166</span> <span class="number">0.040799</span> <span class="number">21.6997</span>  <span class="number">923</span></span><br><span class="line"><span class="number">35</span> <span class="number">123</span>  <span class="number">0</span> <span class="number">102</span>  <span class="number">97</span>  <span class="number">87</span> <span class="number">526</span>  <span class="number">948</span> <span class="number">113</span>  <span class="number">76</span> <span class="number">124</span> <span class="number">50</span> <span class="number">572</span>  <span class="number">158</span> <span class="number">0.020700</span> <span class="number">37.4011</span>  <span class="number">653</span></span><br><span class="line"><span class="number">36</span> <span class="number">150</span>  <span class="number">0</span> <span class="number">100</span> <span class="number">109</span>  <span class="number">98</span> <span class="number">531</span>  <span class="number">964</span>   <span class="number">9</span>  <span class="number">24</span>  <span class="number">87</span> <span class="number">38</span> <span class="number">559</span>  <span class="number">153</span> <span class="number">0.006900</span> <span class="number">44.0004</span> <span class="number">1272</span></span><br><span class="line"><span class="number">37</span> <span class="number">177</span>  <span class="number">1</span>  <span class="number">87</span>  <span class="number">58</span>  <span class="number">56</span> <span class="number">638</span>  <span class="number">974</span>  <span class="number">24</span> <span class="number">349</span>  <span class="number">76</span> <span class="number">28</span> <span class="number">382</span>  <span class="number">254</span> <span class="number">0.045198</span> <span class="number">31.6995</span>  <span class="number">831</span></span><br><span class="line"><span class="number">38</span> <span class="number">133</span>  <span class="number">0</span> <span class="number">104</span>  <span class="number">51</span>  <span class="number">47</span> <span class="number">599</span> <span class="number">1024</span>   <span class="number">7</span>  <span class="number">40</span>  <span class="number">99</span> <span class="number">27</span> <span class="number">425</span>  <span class="number">225</span> <span class="number">0.053998</span> <span class="number">16.6999</span>  <span class="number">566</span></span><br><span class="line"><span class="number">39</span> <span class="number">149</span>  <span class="number">1</span>  <span class="number">88</span>  <span class="number">61</span>  <span class="number">54</span> <span class="number">515</span>  <span class="number">953</span>  <span class="number">36</span> <span class="number">165</span>  <span class="number">86</span> <span class="number">35</span> <span class="number">395</span>  <span class="number">251</span> <span class="number">0.047099</span> <span class="number">27.3004</span>  <span class="number">826</span></span><br><span class="line"><span class="number">40</span> <span class="number">145</span>  <span class="number">1</span> <span class="number">104</span>  <span class="number">82</span>  <span class="number">74</span> <span class="number">560</span>  <span class="number">981</span>  <span class="number">96</span> <span class="number">126</span>  <span class="number">88</span> <span class="number">31</span> <span class="number">488</span>  <span class="number">228</span> <span class="number">0.038801</span> <span class="number">29.3004</span> <span class="number">1151</span></span><br><span class="line"><span class="number">41</span> <span class="number">148</span>  <span class="number">0</span> <span class="number">122</span>  <span class="number">72</span>  <span class="number">66</span> <span class="number">601</span>  <span class="number">998</span>   <span class="number">9</span>  <span class="number">19</span>  <span class="number">84</span> <span class="number">20</span> <span class="number">590</span>  <span class="number">144</span> <span class="number">0.025100</span> <span class="number">30.0001</span>  <span class="number">880</span></span><br><span class="line"><span class="number">42</span> <span class="number">141</span>  <span class="number">0</span> <span class="number">109</span>  <span class="number">56</span>  <span class="number">54</span> <span class="number">523</span>  <span class="number">968</span>   <span class="number">4</span>   <span class="number">2</span> <span class="number">107</span> <span class="number">37</span> <span class="number">489</span>  <span class="number">170</span> <span class="number">0.088904</span> <span class="number">12.1996</span>  <span class="number">542</span></span><br><span class="line"><span class="number">43</span> <span class="number">162</span>  <span class="number">1</span>  <span class="number">99</span>  <span class="number">75</span>  <span class="number">70</span> <span class="number">522</span>  <span class="number">996</span>  <span class="number">40</span> <span class="number">208</span>  <span class="number">73</span> <span class="number">27</span> <span class="number">496</span>  <span class="number">224</span> <span class="number">0.054902</span> <span class="number">31.9989</span>  <span class="number">823</span></span><br><span class="line"><span class="number">44</span> <span class="number">136</span>  <span class="number">0</span> <span class="number">121</span>  <span class="number">95</span>  <span class="number">96</span> <span class="number">574</span> <span class="number">1012</span>  <span class="number">29</span>  <span class="number">36</span> <span class="number">111</span> <span class="number">37</span> <span class="number">622</span>  <span class="number">162</span> <span class="number">0.028100</span> <span class="number">30.0001</span> <span class="number">1030</span></span><br><span class="line"><span class="number">45</span> <span class="number">139</span>  <span class="number">1</span>  <span class="number">88</span>  <span class="number">46</span>  <span class="number">41</span> <span class="number">480</span>  <span class="number">968</span>  <span class="number">19</span>  <span class="number">49</span> <span class="number">135</span> <span class="number">53</span> <span class="number">457</span>  <span class="number">249</span> <span class="number">0.056202</span> <span class="number">32.5996</span>  <span class="number">455</span></span><br><span class="line"><span class="number">46</span> <span class="number">126</span>  <span class="number">0</span> <span class="number">104</span> <span class="number">106</span>  <span class="number">97</span> <span class="number">599</span>  <span class="number">989</span>  <span class="number">40</span>  <span class="number">24</span>  <span class="number">78</span> <span class="number">25</span> <span class="number">593</span>  <span class="number">171</span> <span class="number">0.046598</span> <span class="number">16.6999</span>  <span class="number">508</span></span><br><span class="line"><span class="number">47</span> <span class="number">130</span>  <span class="number">0</span> <span class="number">121</span>  <span class="number">90</span>  <span class="number">91</span> <span class="number">623</span> <span class="number">1049</span>   <span class="number">3</span>  <span class="number">22</span> <span class="number">113</span> <span class="number">40</span> <span class="number">588</span>  <span class="number">160</span> <span class="number">0.052802</span> <span class="number">16.0997</span>  <span class="number">849</span></span><br><span class="line"><span class="operator">&gt;</span> t.test<span class="punctuation">(</span>Prob <span class="operator">~</span> So<span class="punctuation">,</span>data <span class="operator">=</span> UScrime<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Welch Two Sample t<span class="operator">-</span>test</span><br><span class="line"></span><br><span class="line">data<span class="operator">:</span>  Prob by So</span><br><span class="line">t <span class="operator">=</span> <span class="operator">-</span><span class="number">3.8954</span><span class="punctuation">,</span> df <span class="operator">=</span> <span class="number">24.925</span><span class="punctuation">,</span> p<span class="operator">-</span>value <span class="operator">=</span> <span class="number">0.0006506</span> <span class="comment"># p-value小于0.05</span></span><br><span class="line">alternative hypothesis<span class="operator">:</span> true difference <span class="keyword">in</span> means between group <span class="number">0</span> and group <span class="number">1</span> is not equal to <span class="number">0</span></span><br><span class="line"><span class="number">95</span> percent confidence interval<span class="operator">:</span></span><br><span class="line"> <span class="operator">-</span><span class="number">0.03852569</span> <span class="operator">-</span><span class="number">0.01187439</span></span><br><span class="line">sample estimates<span class="operator">:</span></span><br><span class="line">mean <span class="keyword">in</span> group <span class="number">0</span> mean <span class="keyword">in</span> group <span class="number">1</span> </span><br><span class="line">     <span class="number">0.03851265</span>      <span class="number">0.06371269</span> </span><br></pre></td></tr></table></figure><p><code>t.test(y ~ x)</code>：其中<code>y</code>为数值型变量，<code>x</code>为二分型的变量</p><p>如果数据满足正态分布，可以使用方差分析，如果不满足正态分布，就需要使用非参数的方法。在相关性检验中常常会听到参数检验和非参数检验。</p><p>参数检验，Parametric tests，是在总体分布形式已知的情况下，对总体分布的参数如均值、方差等进行推断的方法。也就是数据分布已知比如满足正态分布。</p><p>非参数检验，称为Nonparametric tests，在总体方差未知或知道甚少的情况下，利用样本数据对总体分布形态等进行推断的方法。由于非参数检验方法在推断过程中不涉及有关总体分布的参数，因而得名为“非参数”检验。</p><h3 id="5-8-绘图函数">5.8 绘图函数</h3><p>R语言四大绘图系统：</p><ul><li>基础绘图系统</li><li>lattice包</li><li>ggplot2包</li><li>grid包</li></ul><p>基础绘图包：<code>graphics</code>包</p><p>通过命令<code>ls</code>将<code>graphics</code>包所有的函数都列举出来。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> ls<span class="punctuation">(</span><span class="string">&quot;package:graphics&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><code>arrows</code>函数用来绘制箭头，<code>hist</code>函数绘制直方图，<code>stars</code>函数是绘制晶状体，<code>pie</code>函数绘制饼图，<code>polygon</code>函数绘制多边形图。</p><p>R基础绘图系统：</p><ol><li>高级绘图</li></ol><p>高级绘图是一步到位，可以直接绘制出图。</p><ol start="2"><li>低级绘图</li></ol><p>低级绘图不能单独使用，必须再高级绘图产生图形的基础上，对图形进行调整，比如加一条线，加上标题文字等。</p><p>R绘图输入数据：</p><p>散点图：x和y两个坐标数据</p><p>直方图：因子</p><p>热力图：数据矩阵</p><p>…</p><p><code>plot</code>函数进行绘图：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>women<span class="operator">$</span>height<span class="punctuation">)</span> <span class="comment"># women$height为向量，绘制出的是散点图</span></span><br></pre></td></tr></table></figure><p>如图，如果只是一列向量，则为序列为横坐标，纵坐标为向量值。</p><p><img src="https://vip2.loli.io/2023/03/13/BEbpMz4dfXcKSJs.png" alt=""></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>women<span class="operator">$</span>height<span class="punctuation">,</span>women<span class="operator">$</span>weight<span class="punctuation">)</span> <span class="comment"># women$height,women$weight均为向量，绘制出的是散点图</span></span><br></pre></td></tr></table></figure><p>如图，如果是两列向量，则反映两个向量之间的关系。</p><p><img src="https://vip2.loli.io/2023/03/13/5ydG1DtwTlQKoEH.png" alt="image-20220812095806887"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot<span class="punctuation">(</span>as.factor<span class="punctuation">(</span>mtcars<span class="operator">$</span>cyl<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果输入的是因子，绘制出来的是直方图。</p><p><img src="https://vip2.loli.io/2023/03/13/Ni7VhPJnylrDXFQ.png" alt="image-20220812100205889"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>as.factor<span class="punctuation">(</span>mtcars<span class="operator">$</span>cyl<span class="punctuation">)</span><span class="punctuation">,</span>mtcars<span class="operator">$</span>carb<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果一个是因子，一个是向量，则绘制出的是箱线图。</p><p><img src="https://vip2.loli.io/2023/03/13/oj3cSPUlwaL4Rib.png" alt="image-20220812103138148"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>mtcars<span class="operator">$</span>carb<span class="punctuation">,</span>as.factor<span class="punctuation">(</span>mtcars<span class="operator">$</span>cyl<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果第一个是向量，第二个是因子，绘制的是散列图。</p><p><img src="https://vip2.loli.io/2023/03/13/r5OTBeNZ2dLhqDk.png" alt="image-20220812103322006"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>as.factor<span class="punctuation">(</span>mtcars<span class="operator">$</span>carb<span class="punctuation">)</span><span class="punctuation">,</span>as.factor<span class="punctuation">(</span>mtcars<span class="operator">$</span>cyl<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果两个都是因子，输出的是脊柱图。</p><p><img src="https://vip2.loli.io/2023/03/13/bkcI14wiVEgaLeN.png" alt="image-20220812103455696"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>women<span class="operator">$</span>height <span class="operator">~</span> women<span class="operator">$</span>weight<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>这里<code>plot</code>绘制的是二者的关系图。</p><p><img src="https://vip2.loli.io/2023/03/13/P3Ha1SzkvbTZChd.png" alt="image-20220812103849495"></p><p>实际上，<code>plot</code>函数的参数主要由<code>par</code>提供。不同于<code>plot</code>函数，<code>par</code>函数的参数除个别外一旦设定，除非再次更改或重启R，否则就会对后续所有的绘图命令起作用。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>as.factor<span class="punctuation">(</span>mtcars<span class="operator">$</span>cyl<span class="punctuation">)</span><span class="punctuation">,</span>col<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;red&quot;</span><span class="punctuation">,</span><span class="string">&quot;green&quot;</span><span class="punctuation">,</span><span class="string">&quot;blue&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/4OAm2jMlVac5IBs.png" alt="image-20220812105524219"></p><p>在设置参数之前，可以使用以下代码保存绘图系统的默认参数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 储存当前参数</span></span><br><span class="line">opar <span class="operator">&lt;-</span> par<span class="punctuation">(</span>no.readonly <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>设置参数前可以先查看当前的参数值：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">par<span class="punctuation">(</span><span class="string">&quot;usr&quot;</span><span class="punctuation">)</span></span><br><span class="line">par<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;usr&quot;</span><span class="punctuation">,</span> <span class="string">&quot;fin&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>大部分参数既可以在<code>par</code>中设置，又可以在<code>plot</code>中设置，区别在于前者设置的参数对全局起作用，后者设置的参数只对本条命令起作用，相当于<code>plot</code>中的<code>...</code>参数，个别参数在两种情况下面对的对象也不同。还有，以下参数只能在<code>par</code>中使用：</p><ul><li>ask</li><li>fig, fin</li><li>lheight</li><li>mai, mar, mex, mfcol, mfrow, mfg</li><li>new</li><li>oma, omd, omi</li><li>pin, plt, ps, pty</li><li>usr</li><li>xlog, ylog</li><li>ylbias</li></ul><h3 id="5-9-自定义函数">5.9 自定义函数</h3><p>直接在终端中输入函数名，会给出源代码：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cor</span><br></pre></td></tr></table></figure><p>R自定义函数：</p><ol><li><p>函数名称：函数命令与功能相关，可以是字母和数字的组合，但必须是字母开头</p></li><li><p>函数声明</p></li><li><p>函数参数</p></li><li><p>函数体</p></li></ol><p>利用function函数来声明</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">myfun <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>选项参数<span class="punctuation">)</span><span class="punctuation">&#123;</span></span><br><span class="line">函数体</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>示例：计算偏度与峰度的函数</p><p>偏度（skewness）是统计数据分布偏斜方向和程度的度量，是统计数据分布非对称程度的数字特征。</p><p>峰度（peakedness; kurtosis）又称峰态系数。表征概率密度分布曲线在平均值处峰值的特征数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mystats<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">         n       mean      stdev       skew   kurtosis </span><br><span class="line"> <span class="number">87.000000</span> <span class="number">440.000000</span> <span class="number">252.586619</span>  <span class="operator">-</span><span class="number">5.285971</span> <span class="operator">-</span><span class="number">12.208086</span> </span><br><span class="line"><span class="operator">&gt;</span> mystats <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">,</span>na.omit<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="operator">+</span>     <span class="keyword">if</span><span class="punctuation">(</span>na.omit<span class="punctuation">)</span></span><br><span class="line"><span class="operator">+</span>         x <span class="operator">&lt;-</span> x<span class="punctuation">[</span><span class="operator">!</span><span class="built_in">is.na</span><span class="punctuation">(</span>x<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">+</span>     m <span class="operator">&lt;-</span> mean<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="operator">+</span>     n <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="operator">+</span>     s <span class="operator">&lt;-</span> sd<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line"><span class="operator">+</span>     skew <span class="operator">&lt;-</span> <span class="built_in">sum</span><span class="punctuation">(</span><span class="punctuation">(</span>x<span class="operator">-</span>m<span class="punctuation">)</span><span class="operator">^</span><span class="number">3</span><span class="operator">/</span>s<span class="operator">^</span><span class="number">3</span><span class="punctuation">)</span><span class="operator">/</span>n</span><br><span class="line"><span class="operator">+</span>     kurt <span class="operator">&lt;-</span> <span class="built_in">sum</span><span class="punctuation">(</span><span class="punctuation">(</span>x<span class="operator">-</span>m<span class="punctuation">)</span><span class="operator">^</span><span class="number">4</span><span class="operator">/</span>s<span class="operator">^</span><span class="number">4</span><span class="punctuation">)</span><span class="operator">/</span>n<span class="operator">-</span><span class="number">3</span></span><br><span class="line"><span class="operator">+</span>     <span class="built_in">return</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span>n<span class="operator">=</span>n<span class="punctuation">,</span>mean<span class="operator">=</span>m<span class="punctuation">,</span>stdev<span class="operator">=</span>s<span class="punctuation">,</span>skew<span class="operator">=</span>skew<span class="punctuation">,</span>kurtosis<span class="operator">=</span>kurt<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">+</span> <span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> mystats<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">         n       mean      stdev       skew   kurtosis </span><br><span class="line"> <span class="number">87.000000</span> <span class="number">440.000000</span> <span class="number">252.586619</span>   <span class="number">0.000000</span>  <span class="operator">-</span><span class="number">1.241451</span> </span><br></pre></td></tr></table></figure><p>循环和向量化操作：</p><p>函数内部通过循环实现向量化操作。</p><p>循环三部分：</p><ul><li>条件判断，是真或者假</li><li>用于循环执行的结构</li><li>表达式</li></ul><p><code>for</code>循环：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="keyword">for</span> <span class="punctuation">(</span>i <span class="keyword">in</span> <span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span>print <span class="punctuation">(</span><span class="string">&quot;Hello,World&quot;</span><span class="punctuation">)</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br></pre></td></tr></table></figure><p><code>while</code>循环：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> i<span class="operator">=</span><span class="number">1</span>;<span class="keyword">while</span><span class="punctuation">(</span>i <span class="operator">&lt;=</span> <span class="number">10</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span>print <span class="punctuation">(</span><span class="string">&quot;Hello,World&quot;</span><span class="punctuation">)</span>;i<span class="operator">=</span>i<span class="operator">+</span><span class="number">1</span>;<span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Hello,World&quot;</span></span><br></pre></td></tr></table></figure><p><code>if…else…</code>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> score<span class="operator">=</span><span class="number">70</span>;<span class="keyword">if</span> <span class="punctuation">(</span>score <span class="operator">&gt;</span><span class="number">60</span> <span class="punctuation">)</span> <span class="punctuation">&#123;</span>print <span class="punctuation">(</span><span class="string">&quot;Passwd&quot;</span><span class="punctuation">)</span> <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span>print <span class="punctuation">(</span><span class="string">&quot;Failed&quot;</span><span class="punctuation">)</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Passwd&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> ifelse<span class="punctuation">(</span> score <span class="operator">&gt;</span><span class="number">60</span><span class="punctuation">,</span>print <span class="punctuation">(</span><span class="string">&quot;Passwd&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span>print <span class="punctuation">(</span><span class="string">&quot;Failed&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="comment"># 也可以写在一起，进行简化</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Passwd&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Passwd&quot;</span></span><br></pre></td></tr></table></figure><p>也可以使用<code>switch</code>。</p><h2 id="6-数据分析实战">6 数据分析实战</h2><h3 id="6-1-线性回归一">6.1 线性回归一</h3><p>回归regression，通常指那些用一个或多个预测变量，也称自变量或解释变量，来预测相应变量，也称为因变量、校标变量或结果变量的方法。</p><p><img src="https://vip2.loli.io/2023/03/13/Fjg4t5AL3WJ6n8m.png" alt="image-20220812145355299"></p><p>普通最小二乘回归法（OLS）</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mi>i</mi></msub><mo>=</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>0</mn></msub><mo>+</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>1</mn></msub><msub><mi>X</mi><mrow><mn>1</mn><mi>i</mi></mrow></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mi>k</mi></msub><msub><mi>X</mi><mrow><mi>k</mi><mi>i</mi></mrow></msub><mspace width="1em"/><mspace width="1em"/><mi>i</mi><mo>=</mo><mn>1</mn><mo>⋯</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\hat{Y}_i=\hat{\beta}_0+\hat{\beta}_1X_{1i}+\cdots +\hat{\beta}_kX_{ki}\quad \quad    i=1\cdots n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0968em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1523em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1523em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1523em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ki</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\hat{Y}_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0968em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ：第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 次观测对应的因变量的预测值（具体来讲，它是在已知预测变量值的条件下，对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 分布估计的均值）；</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">X_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> ：第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 次观测对应的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 个预测变量值；</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\hat{\beta}_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1523em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ： 截距项（当所有的预测变量都为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 时， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 的预测值）</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\hat{\beta}_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.244em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> ： 预测变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 的回归系数（斜率表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">X_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 改变一个单位所引起的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 的改变量）</p><p><strong>满足OLS模型统计假设</strong>：</p><ul><li>正态性：对于固定的自变量值，因变量值成正态分布。</li><li>独立性：因变量之间相互独立。</li><li>线性：因变量与自变量之间为线性相关。</li><li>同方差性：因变量的方差不随自变量的水平不同而变化。也可称作不变方差。</li></ul><p>==注意==：只有满足以上条件才能运用<code>lm</code>函数进行拟合。</p><p>可是使用<code>lm</code>函数进行线性回归模型分析：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fit <span class="operator">&lt;-</span> lm<span class="punctuation">(</span>weight <span class="operator">~</span> height<span class="punctuation">,</span>data <span class="operator">=</span> women<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fit</span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> weight <span class="operator">~</span> height<span class="punctuation">,</span> data <span class="operator">=</span> women<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>       height  </span><br><span class="line">     <span class="operator">-</span><span class="number">87.52</span>         <span class="number">3.45</span>  </span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span>   <span class="comment"># 列出使用的回归公式</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> weight <span class="operator">~</span> height<span class="punctuation">,</span> data <span class="operator">=</span> women<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Residuals<span class="operator">:</span> <span class="comment"># 残差，真实值和预测值之间的差</span></span><br><span class="line">    Min      <span class="number">1</span>Q  Median      <span class="number">3</span>Q     Max </span><br><span class="line"><span class="operator">-</span><span class="number">1.7333</span> <span class="operator">-</span><span class="number">1.1333</span> <span class="operator">-</span><span class="number">0.3833</span>  <span class="number">0.7417</span>  <span class="number">3.1167</span> </span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line">             Estimate Std. Error t value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="operator">|</span>t<span class="operator">|</span><span class="punctuation">)</span>    </span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span> <span class="operator">-</span><span class="number">87.51667</span>    <span class="number">5.93694</span>  <span class="operator">-</span><span class="number">14.74</span> <span class="number">1.71e-09</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">height        <span class="number">3.45000</span>    <span class="number">0.09114</span>   <span class="number">37.85</span> <span class="number">1.09e-14</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line">Residual standard error<span class="operator">:</span> <span class="number">1.525</span> on <span class="number">13</span> degrees of freedom</span><br><span class="line">Multiple R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.991</span><span class="punctuation">,</span>Adjusted R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.9903</span> </span><br><span class="line"><span class="built_in">F</span><span class="operator">-</span>statistic<span class="operator">:</span>  <span class="number">1433</span> on <span class="number">1</span> and <span class="number">13</span> DF<span class="punctuation">,</span>  p<span class="operator">-</span>value<span class="operator">:</span> <span class="number">1.091e-14</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> summary.lm<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> weight <span class="operator">~</span> height<span class="punctuation">,</span> data <span class="operator">=</span> women<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Residuals<span class="operator">:</span></span><br><span class="line">    Min      <span class="number">1</span>Q  Median      <span class="number">3</span>Q     Max </span><br><span class="line"><span class="operator">-</span><span class="number">1.7333</span> <span class="operator">-</span><span class="number">1.1333</span> <span class="operator">-</span><span class="number">0.3833</span>  <span class="number">0.7417</span>  <span class="number">3.1167</span> </span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line">             Estimate Std. Error t value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="operator">|</span>t<span class="operator">|</span><span class="punctuation">)</span>    </span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span> <span class="operator">-</span><span class="number">87.51667</span>    <span class="number">5.93694</span>  <span class="operator">-</span><span class="number">14.74</span> <span class="number">1.71e-09</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">height        <span class="number">3.45000</span>    <span class="number">0.09114</span>   <span class="number">37.85</span> <span class="number">1.09e-14</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line">Residual standard error<span class="operator">:</span> <span class="number">1.525</span> on <span class="number">13</span> degrees of freedom</span><br><span class="line">Multiple R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.991</span><span class="punctuation">,</span>Adjusted R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.9903</span> </span><br><span class="line"><span class="built_in">F</span><span class="operator">-</span>statistic<span class="operator">:</span>  <span class="number">1433</span> on <span class="number">1</span> and <span class="number">13</span> DF<span class="punctuation">,</span>  p<span class="operator">-</span>value<span class="operator">:</span> <span class="number">1.091e-14</span></span><br></pre></td></tr></table></figure><p>使用<code>summary</code>和使用<code>summary.lm</code>结果相同，因为使用<code>summary</code>，会自动调用其子函数<code>summary.lm</code>。</p><p><code>Call</code>列出使用的回归公式；</p><p><code>Residuals</code>为残差，真实值和预测值之间的差，残差值越小说明模型越精确。</p><p><code>Coefficients</code>为系数项，<code>Intercept</code>为截距，即x为0时，y轴的坐标。</p><p>因此公式为：weight = 3.45000×Height-87.51667</p><p><code>Pr</code>即p-value，估计系数为0假设的概率，小于0.05比较好</p><p>R对p值和t值进行了标记，分为五个等级，<code>***</code>结果最好。</p><p><code>Residual standard error: 1.525 on 13 degrees of freedom</code>为残差标准误差，误差越小越好。</p><p><code>Multiple R-squared</code>为R方判定系数，衡量模型拟合质量的指标，取值在0和1之间，值越大越好，它是表示回归模型所能解释的响应变量的方差比例，即这个模型能够解释99.1%的数据，只有0.9%的数据不符合此模型。</p><p><code>F-statistic</code>为F统计量，这个值说明模型是否显著，也是用p-value来衡量，p-value值越小越好，说明模型越显著。</p><blockquote><p>==重点==：一般首先看F统计量，如果不小于0.05，这个模型没有价值，需要重新进行拟合，如果小于0.05再看R方，看模型能够解释多少变量。</p></blockquote><h3 id="6-2-线性回归二">6.2 线性回归二</h3><p>除了<code>summary</code>可以查看运行结果，还可以通过其他函数进行查看：</p><p>函数：</p><p><code>summary</code>：展示拟合模型的详细结果</p><p><code>coefficients</code>：列出拟合模型的模型参数（截距项和斜率），</p><p><code>confint</code>：提供模型参数的置信区间（默认95%）</p><p><code>fitted</code>：列出拟合模型的预测值</p><p><code>residuals</code>：列出拟合模型的残差值</p><p><code>anova</code>：生成一个拟合模型的方差分析表，或者比较两个或更多拟合模型的方差分析表</p><p><code>vcov</code>：列出模型参数的协方差矩阵</p><p><code>AIC</code>：输出赤池信息统计量</p><p><code>plot</code>：生成评价拟合模型的诊断图</p><p><code>predict</code>：用拟合模型对新的数据集预测响应变量值</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fit <span class="operator">&lt;-</span> lm<span class="punctuation">(</span>weight <span class="operator">~</span> height<span class="punctuation">,</span>data <span class="operator">=</span> women<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fit</span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> weight <span class="operator">~</span> height<span class="punctuation">,</span> data <span class="operator">=</span> women<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>       height  </span><br><span class="line">     <span class="operator">-</span><span class="number">87.52</span>         <span class="number">3.45</span>  </span><br><span class="line"><span class="operator">&gt;</span> coefficients<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>      height </span><br><span class="line">  <span class="operator">-</span><span class="number">87.51667</span>     <span class="number">3.45000</span> </span><br><span class="line"><span class="operator">&gt;</span> confint<span class="punctuation">(</span>fit<span class="punctuation">)</span> <span class="comment"># 默认为95%的置信区间</span></span><br><span class="line">                  <span class="number">2.5</span> <span class="operator">%     97.5 %</span></span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span> <span class="operator">-</span><span class="number">100.342655</span> <span class="operator">-</span><span class="number">74.690679</span></span><br><span class="line">height         <span class="number">3.253112</span>   <span class="number">3.646888</span></span><br><span class="line"><span class="operator">&gt;</span> confint<span class="punctuation">(</span>fit<span class="punctuation">,</span>level <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span> <span class="comment"># 默认为95%的置信区间，可以通过level进行调整</span></span><br><span class="line">                  <span class="number">25</span> <span class="operator">%       75 %</span></span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span> <span class="operator">-</span><span class="number">91.635892</span> <span class="operator">-</span><span class="number">83.397441</span></span><br><span class="line">height        <span class="number">3.386767</span>   <span class="number">3.513233</span></span><br><span class="line"><span class="operator">&gt;</span> fitted<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line">       <span class="number">1</span>        <span class="number">2</span>        <span class="number">3</span>        <span class="number">4</span>        <span class="number">5</span>        <span class="number">6</span>        <span class="number">7</span>        <span class="number">8</span>        <span class="number">9</span>       <span class="number">10</span>       <span class="number">11</span>       <span class="number">12</span> </span><br><span class="line"><span class="number">112.5833</span> <span class="number">116.0333</span> <span class="number">119.4833</span> <span class="number">122.9333</span> <span class="number">126.3833</span> <span class="number">129.8333</span> <span class="number">133.2833</span> <span class="number">136.7333</span> <span class="number">140.1833</span> <span class="number">143.6333</span> <span class="number">147.0833</span> <span class="number">150.5333</span> </span><br><span class="line">      <span class="number">13</span>       <span class="number">14</span>       <span class="number">15</span> </span><br><span class="line"><span class="number">153.9833</span> <span class="number">157.4333</span> <span class="number">160.8833</span> </span><br><span class="line"><span class="operator">&gt;</span> women<span class="operator">$</span>weight <span class="operator">-</span> fitted<span class="punctuation">(</span>fit<span class="punctuation">)</span> <span class="comment"># 真实值 - fitted(预测值) 就是残差</span></span><br><span class="line">          <span class="number">1</span>           <span class="number">2</span>           <span class="number">3</span>           <span class="number">4</span>           <span class="number">5</span>           <span class="number">6</span>           <span class="number">7</span>           <span class="number">8</span>           <span class="number">9</span> </span><br><span class="line"> <span class="number">2.41666667</span>  <span class="number">0.96666667</span>  <span class="number">0.51666667</span>  <span class="number">0.06666667</span> <span class="operator">-</span><span class="number">0.38333333</span> <span class="operator">-</span><span class="number">0.83333333</span> <span class="operator">-</span><span class="number">1.28333333</span> <span class="operator">-</span><span class="number">1.73333333</span> <span class="operator">-</span><span class="number">1.18333333</span> </span><br><span class="line">         <span class="number">10</span>          <span class="number">11</span>          <span class="number">12</span>          <span class="number">13</span>          <span class="number">14</span>          <span class="number">15</span> </span><br><span class="line"><span class="operator">-</span><span class="number">1.63333333</span> <span class="operator">-</span><span class="number">1.08333333</span> <span class="operator">-</span><span class="number">0.53333333</span>  <span class="number">0.01666667</span>  <span class="number">1.56666667</span>  <span class="number">3.11666667</span> </span><br><span class="line"><span class="operator">&gt;</span> residuals<span class="punctuation">(</span>fit<span class="punctuation">)</span> <span class="comment"># 残差</span></span><br><span class="line">          <span class="number">1</span>           <span class="number">2</span>           <span class="number">3</span>           <span class="number">4</span>           <span class="number">5</span>           <span class="number">6</span>           <span class="number">7</span>           <span class="number">8</span>           <span class="number">9</span> </span><br><span class="line"> <span class="number">2.41666667</span>  <span class="number">0.96666667</span>  <span class="number">0.51666667</span>  <span class="number">0.06666667</span> <span class="operator">-</span><span class="number">0.38333333</span> <span class="operator">-</span><span class="number">0.83333333</span> <span class="operator">-</span><span class="number">1.28333333</span> <span class="operator">-</span><span class="number">1.73333333</span> <span class="operator">-</span><span class="number">1.18333333</span> </span><br><span class="line">         <span class="number">10</span>          <span class="number">11</span>          <span class="number">12</span>          <span class="number">13</span>          <span class="number">14</span>          <span class="number">15</span> </span><br><span class="line"><span class="operator">-</span><span class="number">1.63333333</span> <span class="operator">-</span><span class="number">1.08333333</span> <span class="operator">-</span><span class="number">0.53333333</span>  <span class="number">0.01666667</span>  <span class="number">1.56666667</span>  <span class="number">3.11666667</span> </span><br><span class="line"><span class="operator">&gt;</span> predict<span class="punctuation">(</span>fit<span class="punctuation">,</span>women<span class="punctuation">)</span></span><br><span class="line">       <span class="number">1</span>        <span class="number">2</span>        <span class="number">3</span>        <span class="number">4</span>        <span class="number">5</span>        <span class="number">6</span>        <span class="number">7</span>        <span class="number">8</span>        <span class="number">9</span>       <span class="number">10</span>       <span class="number">11</span>       <span class="number">12</span> </span><br><span class="line"><span class="number">112.5833</span> <span class="number">116.0333</span> <span class="number">119.4833</span> <span class="number">122.9333</span> <span class="number">126.3833</span> <span class="number">129.8333</span> <span class="number">133.2833</span> <span class="number">136.7333</span> <span class="number">140.1833</span> <span class="number">143.6333</span> <span class="number">147.0833</span> <span class="number">150.5333</span> </span><br><span class="line">      <span class="number">13</span>       <span class="number">14</span>       <span class="number">15</span> </span><br><span class="line"><span class="number">153.9833</span> <span class="number">157.4333</span> <span class="number">160.8833</span> </span><br><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>fit<span class="punctuation">)</span> <span class="comment"># 下面会生成四幅图</span></span><br><span class="line">Hit <span class="operator">&lt;</span>Return<span class="operator">&gt;</span> to see <span class="keyword">next</span> plot<span class="operator">:</span>  <span class="comment"># 残差拟合图</span></span><br><span class="line">Hit <span class="operator">&lt;</span>Return<span class="operator">&gt;</span> to see <span class="keyword">next</span> plot<span class="operator">:</span>  <span class="comment"># 正态QQ图</span></span><br><span class="line">Hit <span class="operator">&lt;</span>Return<span class="operator">&gt;</span> to see <span class="keyword">next</span> plot<span class="operator">:</span>  <span class="comment"># 大小位列图</span></span><br><span class="line">Hit <span class="operator">&lt;</span>Return<span class="operator">&gt;</span> to see <span class="keyword">next</span> plot<span class="operator">:</span>  <span class="comment"># 残差影响图</span></span><br></pre></td></tr></table></figure><p>通过abline函数生成拟合曲线：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>women<span class="operator">$</span>height<span class="punctuation">,</span>women<span class="operator">$</span>weight<span class="punctuation">)</span> <span class="comment"># 绘制散点图</span></span><br><span class="line"><span class="operator">&gt;</span> abline<span class="punctuation">(</span>fit<span class="punctuation">)</span> <span class="comment"># 在plot的基础上绘制拟合曲线</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/lyhNOGWk2Fu3mZd.png" alt="image-20220812214052232"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fit2 <span class="operator">&lt;-</span> lm<span class="punctuation">(</span>weight <span class="operator">~</span> height<span class="operator">+</span>I<span class="punctuation">(</span>height<span class="operator">^</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span>data<span class="operator">=</span>women<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fit2</span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> weight <span class="operator">~</span> height <span class="operator">+</span> I<span class="punctuation">(</span>height<span class="operator">^</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span> data <span class="operator">=</span> women<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>       height  I<span class="punctuation">(</span>height<span class="operator">^</span><span class="number">2</span><span class="punctuation">)</span>  </span><br><span class="line">  <span class="number">261.87818</span>     <span class="operator">-</span><span class="number">7.34832</span>      <span class="number">0.08306</span>  </span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit2<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> weight <span class="operator">~</span> height <span class="operator">+</span> I<span class="punctuation">(</span>height<span class="operator">^</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span> data <span class="operator">=</span> women<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Residuals<span class="operator">:</span></span><br><span class="line">     Min       <span class="number">1</span>Q   Median       <span class="number">3</span>Q      Max </span><br><span class="line"><span class="operator">-</span><span class="number">0.50941</span> <span class="operator">-</span><span class="number">0.29611</span> <span class="operator">-</span><span class="number">0.00941</span>  <span class="number">0.28615</span>  <span class="number">0.59706</span> </span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line">             Estimate Std. Error t value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="operator">|</span>t<span class="operator">|</span><span class="punctuation">)</span>    </span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span> <span class="number">261.87818</span>   <span class="number">25.19677</span>  <span class="number">10.393</span> <span class="number">2.36e-07</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">height       <span class="operator">-</span><span class="number">7.34832</span>    <span class="number">0.77769</span>  <span class="operator">-</span><span class="number">9.449</span> <span class="number">6.58e-07</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">I<span class="punctuation">(</span>height<span class="operator">^</span><span class="number">2</span><span class="punctuation">)</span>   <span class="number">0.08306</span>    <span class="number">0.00598</span>  <span class="number">13.891</span> <span class="number">9.32e-09</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line">Residual standard error<span class="operator">:</span> <span class="number">0.3841</span> on <span class="number">12</span> degrees of freedom</span><br><span class="line">Multiple R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.9995</span><span class="punctuation">,</span>Adjusted R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.9994</span> </span><br><span class="line"><span class="built_in">F</span><span class="operator">-</span>statistic<span class="operator">:</span> <span class="number">1.139e+04</span> on <span class="number">2</span> and <span class="number">12</span> DF<span class="punctuation">,</span>  p<span class="operator">-</span>value<span class="operator">:</span> <span class="operator">&lt;</span> <span class="number">2.2e-16</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>women<span class="operator">$</span>height<span class="punctuation">,</span>women<span class="operator">$</span>weight<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> abline<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> lines<span class="punctuation">(</span>women<span class="operator">$</span>height<span class="punctuation">,</span>fitted<span class="punctuation">(</span>fit2<span class="punctuation">)</span><span class="punctuation">,</span>col<span class="operator">=</span><span class="string">&quot;red&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/VE6WCcftrmuqykb.png" alt="image-20220812215015350"></p><p>注意：<code>abline</code>函数只能绘制直线，<code>lines</code>函数可以绘制曲线。在线性回归时，<code>fit2 &lt;- lm(weight ~ height+I(height^2),data=women)</code>中的二次项，不能直接用<code>height^2</code>，因为倒三角符号<code>^</code>具有特殊的含义。</p><p>拟合多项式不是越多越好，多项式越多，可能存导致拟合。</p><h3 id="6-3-多元线性回归">6.3 多元线性回归</h3><p><code>lm</code>函数输入数据必须时数据框的格式。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> states <span class="operator">&lt;-</span> as.data.frame<span class="punctuation">(</span>state.x77<span class="punctuation">[</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Murder&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Population&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Illiteracy&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Income&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Frost&quot;</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> states</span><br><span class="line">               Murder Population Illiteracy Income Frost</span><br><span class="line">Alabama          <span class="number">15.1</span>       <span class="number">3615</span>        <span class="number">2.1</span>   <span class="number">3624</span>    <span class="number">20</span></span><br><span class="line">Alaska           <span class="number">11.3</span>        <span class="number">365</span>        <span class="number">1.5</span>   <span class="number">6315</span>   <span class="number">152</span></span><br><span class="line">Arizona           <span class="number">7.8</span>       <span class="number">2212</span>        <span class="number">1.8</span>   <span class="number">4530</span>    <span class="number">15</span></span><br><span class="line">Arkansas         <span class="number">10.1</span>       <span class="number">2110</span>        <span class="number">1.9</span>   <span class="number">3378</span>    <span class="number">65</span></span><br><span class="line">California       <span class="number">10.3</span>      <span class="number">21198</span>        <span class="number">1.1</span>   <span class="number">5114</span>    <span class="number">20</span></span><br><span class="line">...</span><br><span class="line">Virginia          <span class="number">9.5</span>       <span class="number">4981</span>        <span class="number">1.4</span>   <span class="number">4701</span>    <span class="number">85</span></span><br><span class="line">Washington        <span class="number">4.3</span>       <span class="number">3559</span>        <span class="number">0.6</span>   <span class="number">4864</span>    <span class="number">32</span></span><br><span class="line">West Virginia     <span class="number">6.7</span>       <span class="number">1799</span>        <span class="number">1.4</span>   <span class="number">3617</span>   <span class="number">100</span></span><br><span class="line">Wisconsin         <span class="number">3.0</span>       <span class="number">4589</span>        <span class="number">0.7</span>   <span class="number">4468</span>   <span class="number">149</span></span><br><span class="line">Wyoming           <span class="number">6.9</span>        <span class="number">376</span>        <span class="number">0.6</span>   <span class="number">4566</span>   <span class="number">173</span></span><br><span class="line"><span class="operator">&gt;</span> fit <span class="operator">&lt;-</span> lm<span class="punctuation">(</span>Murder <span class="operator">~</span> Population<span class="operator">+</span>Illiteracy<span class="operator">+</span>Income<span class="operator">+</span>Frost<span class="punctuation">,</span>data <span class="operator">=</span>states<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> Murder <span class="operator">~</span> Population <span class="operator">+</span> Illiteracy <span class="operator">+</span> Income <span class="operator">+</span> Frost<span class="punctuation">,</span> </span><br><span class="line">    data <span class="operator">=</span> states<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Residuals<span class="operator">:</span></span><br><span class="line">    Min      <span class="number">1</span>Q  Median      <span class="number">3</span>Q     Max </span><br><span class="line"><span class="operator">-</span><span class="number">4.7960</span> <span class="operator">-</span><span class="number">1.6495</span> <span class="operator">-</span><span class="number">0.0811</span>  <span class="number">1.4815</span>  <span class="number">7.6210</span> </span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line">             Estimate Std. Error t value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="operator">|</span>t<span class="operator">|</span><span class="punctuation">)</span>    </span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span> <span class="number">1.235e+00</span>  <span class="number">3.866e+00</span>   <span class="number">0.319</span>   <span class="number">0.7510</span>    </span><br><span class="line">Population  <span class="number">2.237e-04</span>  <span class="number">9.052e-05</span>   <span class="number">2.471</span>   <span class="number">0.0173</span> <span class="operator">*</span>  </span><br><span class="line">Illiteracy  <span class="number">4.143e+00</span>  <span class="number">8.744e-01</span>   <span class="number">4.738</span> <span class="number">2.19e-05</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Income      <span class="number">6.442e-05</span>  <span class="number">6.837e-04</span>   <span class="number">0.094</span>   <span class="number">0.9253</span>    </span><br><span class="line">Frost       <span class="number">5.813e-04</span>  <span class="number">1.005e-02</span>   <span class="number">0.058</span>   <span class="number">0.9541</span>    </span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line">Residual standard error<span class="operator">:</span> <span class="number">2.535</span> on <span class="number">45</span> degrees of freedom</span><br><span class="line">Multiple R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.567</span><span class="punctuation">,</span>Adjusted R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.5285</span> </span><br><span class="line"><span class="built_in">F</span><span class="operator">-</span>statistic<span class="operator">:</span> <span class="number">14.73</span> on <span class="number">4</span> and <span class="number">45</span> DF<span class="punctuation">,</span>  p<span class="operator">-</span>value<span class="operator">:</span> <span class="number">9.133e-08</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> coef<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">(</span>Intercept<span class="punctuation">)</span>   Population   Illiteracy       Income        Frost </span><br><span class="line"><span class="number">1.2345634112</span> <span class="number">0.0002236754</span> <span class="number">4.1428365903</span> <span class="number">0.0000644247</span> <span class="number">0.0005813055</span> </span><br><span class="line"><span class="operator">&gt;</span> options<span class="punctuation">(</span>digits <span class="operator">=</span> <span class="number">4</span><span class="punctuation">)</span> <span class="comment"># 表示保留几位有效数字</span></span><br><span class="line"><span class="operator">&gt;</span> coef<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>  Population  Illiteracy      Income       Frost </span><br><span class="line">  <span class="number">1.235e+00</span>   <span class="number">2.237e-04</span>   <span class="number">4.143e+00</span>   <span class="number">6.442e-05</span>   <span class="number">5.813e-04</span> </span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fit <span class="operator">&lt;-</span> lm<span class="punctuation">(</span>mpg <span class="operator">~</span> hp<span class="operator">+</span>wt<span class="operator">+</span>hp<span class="operator">:</span>wt<span class="punctuation">,</span>data <span class="operator">=</span> mtcars<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> mpg <span class="operator">~</span> hp <span class="operator">+</span> wt <span class="operator">+</span> hp<span class="operator">:</span>wt<span class="punctuation">,</span> data <span class="operator">=</span> mtcars<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Residuals<span class="operator">:</span></span><br><span class="line">   Min     <span class="number">1</span>Q Median     <span class="number">3</span>Q    Max </span><br><span class="line"><span class="operator">-</span><span class="number">3.063</span> <span class="operator">-</span><span class="number">1.649</span> <span class="operator">-</span><span class="number">0.736</span>  <span class="number">1.421</span>  <span class="number">4.551</span> </span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line">            Estimate Std. Error t value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="operator">|</span>t<span class="operator">|</span><span class="punctuation">)</span>    </span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span> <span class="number">49.80842</span>    <span class="number">3.60516</span>   <span class="number">13.82</span>  <span class="number">5.0e-14</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">hp          <span class="operator">-</span><span class="number">0.12010</span>    <span class="number">0.02470</span>   <span class="operator">-</span><span class="number">4.86</span>  <span class="number">4.0e-05</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">wt          <span class="operator">-</span><span class="number">8.21662</span>    <span class="number">1.26971</span>   <span class="operator">-</span><span class="number">6.47</span>  <span class="number">5.2e-07</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">hp<span class="operator">:</span>wt        <span class="number">0.02785</span>    <span class="number">0.00742</span>    <span class="number">3.75</span>  <span class="number">0.00081</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line">Residual standard error<span class="operator">:</span> <span class="number">2.15</span> on <span class="number">28</span> degrees of freedom</span><br><span class="line">Multiple R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.885</span><span class="punctuation">,</span>Adjusted R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.872</span> </span><br><span class="line"><span class="built_in">F</span><span class="operator">-</span>statistic<span class="operator">:</span> <span class="number">71.7</span> on <span class="number">3</span> and <span class="number">28</span> DF<span class="punctuation">,</span>  p<span class="operator">-</span>value<span class="operator">:</span> <span class="number">2.98e-13</span></span><br></pre></td></tr></table></figure><p><code>fit &lt;- lm(mpg ~ hp+wt+hp:wt,data = mtcars)</code>中<code>hp:wt</code>表示<code>hp</code>和<code>wt</code>之间是某种交互关系。</p><p>当存在多个变量，各个变量之间存在相互关系，是否需要添加交互项或者多项式来提高拟合度？对于这个问题，可以使用AIC函数来比较模型。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="operator">?</span>AIC</span><br></pre></td></tr></table></figure><p>AIC全名为Akaike’s An Information Criterion</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fit1 <span class="operator">&lt;-</span> lm<span class="punctuation">(</span>Murder <span class="operator">~</span> Population <span class="operator">+</span> Illiteracy <span class="operator">+</span> Income <span class="operator">+</span> Frost<span class="punctuation">,</span>data<span class="operator">=</span>states<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fit2 <span class="operator">&lt;-</span> lm<span class="punctuation">(</span>Murder <span class="operator">~</span> Population <span class="operator">+</span> Illiteracy<span class="punctuation">,</span>data<span class="operator">=</span>states<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> AIC<span class="punctuation">(</span>fit1<span class="punctuation">,</span>fit2<span class="punctuation">)</span></span><br><span class="line">     df   AIC</span><br><span class="line">fit1  <span class="number">6</span> <span class="number">241.6</span></span><br><span class="line">fit2  <span class="number">4</span> <span class="number">237.7</span></span><br></pre></td></tr></table></figure><p>结果显示，<code>fit2</code>的拟合度最好</p><p>如果太多这样的情况，效果就不好了，可以采用逐步回归法和全子集回归法。</p><p>逐步回归法中模型会一次添加或删除一个变量，直到达到某个节点为止，继续添加或者删除变量，模型不再继续变化，如果每次增加变量，则向前逐步回归，如果每次删除变量，向后逐步回归。</p><p>全子集回归法是取所有可能的模型，然后从中计算最佳的模型。</p><p>全子集回归法要比逐步回归法要好，因为为检测到所有的模型，但是缺点是变量太多，会有大量的计算，会非常慢，这两种方法都需要通过R拓展包来实现。MASS包中的<code>stepAIC</code>函数可以进行逐步回归法的计算，<code>leaps</code>包中的<code>regsubsets</code>可以进行全子集回归法计算。</p><p>拟合效果最佳，而没有实际意义的模型是没有意义的，需要对数据有所了解。</p><h3 id="6-4-回归诊断">6.4 回归诊断</h3><p><strong>满足OLS模型统计假设</strong>：</p><ul><li>正态性：对于固定的自变量值，因变量值成正态分布。</li><li>独立性：因变量之间相互独立。</li><li>线性：因变量与自变量之间为线性相关。</li><li>同方差性：因变量的方差不随自变量的水平不同而变化。也可称作不变方差。</li></ul><p>==注意==：只有满足以上条件才能运用<code>lm</code>函数进行拟合。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fit <span class="operator">&lt;-</span> lm<span class="punctuation">(</span>weight <span class="operator">~</span> height<span class="punctuation">,</span>data <span class="operator">=</span>women<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fit</span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> weight <span class="operator">~</span> height<span class="punctuation">,</span> data <span class="operator">=</span> women<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>       height  </span><br><span class="line">     <span class="operator">-</span><span class="number">87.52</span>         <span class="number">3.45</span>  </span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> par<span class="punctuation">(</span>mfrow<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="comment"># 通过par将四个图呈现2×2排列</span></span><br><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/mcuzkyL3IO9iZRF.png" alt="image-20220813095452051"></p><p>通过<code>plot(fit)</code>可以绘制出四幅图，这四幅图就是反映上面的OLS模型的四个条件。</p><p>第一幅图反映残差和拟合是否为线性关系，图中的点为残差值的分布，曲线为拟合曲线。</p><p>第二幅图为QQ图，QQ图用来描述正态性，如果数据呈正态性，则为一条直线，图中残差值也为一条直线分布，说明满足正态性要求。</p><p>第三幅图为位置与尺寸图，用来描述同方差性，如果满足不变方差的假设，那么图中水平线附近的点应该是随机分布的，如图，也满足条件。</p><p>第四幅图为残差与杠杆图，提供了对单个数据值的观测，可以看出哪些点偏差较远，可以用来鉴别离群点、高杠杆点和强影响点。</p><p>离群点表示回归模型对这个点的预测效果不好，残差值比较大，不适合模型。</p><p>高杠杆点表示异常的预测变量的组合。</p><p>强影响点表示这个值对模型参数的估计产生的影响过大，可以用Cook’s distance来鉴别</p><p>对于这些异常点，因为会干扰到模型的拟合，如果将这些点删除掉，拟合的结果会更好，如果数据中这些点干扰太大，可以删除这些观察点重新进行拟合，或者对数据进行转换，比如对所有数据取指数、取对数等，来减少这些点的影响，但是对于这些数据的修改也会存在一定的争议，因为这些干扰的数据也是数据本身的一部分，也是客观存在的，如果删除或者转换就可能违背了客观事实，类似于实验中，为了试验数据好看，去掉不符合结论的样品。甚至先有结论，然后挑选符合结论的样品进行分析。</p><p>上述四幅图并没有反映独立性的，独立性没有办法通过图来进行分辨，只能从搜集的数据中验证。</p><p>给拟合函数添加二次项，进行拟合：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fit2 <span class="operator">&lt;-</span>lm<span class="punctuation">(</span>weight <span class="operator">~</span> height <span class="operator">+</span> I<span class="punctuation">(</span>height<span class="operator">^</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span>data<span class="operator">=</span>women<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> opar <span class="operator">&lt;-</span><span class="punctuation">(</span>no.readonly <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> par<span class="punctuation">(</span>mfrow<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>fit2<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/78TqdCxl2VFSAUm.png" alt="image-20220813102302433"></p><p>为了验证模型准确性，可以进行抽样法验证</p><ol><li>数据集中有1000个样本，随机抽取500个数据进行回归分析；</li><li>模型建好之后，利用predict函数，对剩余500个样本进行预测，比较残差值；</li><li>如果预测准确，说明模型可以，否则就需要调整模型。</li></ol><h3 id="6-5-方差分析一">6.5 方差分析一</h3><p>方差分析，称为Analysis of Variance，简称ANOVA，也称为&quot;变异数分析”，用于两个及两个以上样本均数差别的显著性检验。从广义上来讲，方差分析也属于回归分析的一种。只不过线性回归的因变量一般是连续型变量。而当自变量是因子时，研究关注的重点通常会从预测转向不同组之间差异的比较。这就是方差分析。</p><p><strong>R中因子的应用</strong>：计算频数、独立性检验、相关性检验、方差分析、主成分分析、因子分析……</p><p>方差分析会大量用在科学研究中，例如实验设计时，进行分组比较，例如药物研究实验，处理组与对照组进行比较</p><p>方差分析分为多种：</p><ul><li>单因素方差分析ANOVA（组内，组间）</li><li>双因素方差分析ANOVA</li><li>协方差分析ANCOVA</li><li>多元方差分析MANOVA</li><li>多元协方差分析MANCOVA</li></ul><ol><li>单因素组间方差分析</li></ol><p><img src="https://vip2.loli.io/2023/03/13/IjgG6kUacP2iZlm.png" alt="image-20220813104123644"></p><p>如图，对10位患有某种病的患者进行治疗，有两种治疗方案，将患者分为两组，每组采用不同的方案进行治疗。这里每种人数相同，为均衡分组，如果每组人数不同，则为非均衡分组。由于只有一种变量：治疗方案。因此为单因素组间方差分析。</p><ol start="2"><li>单因素组内方差分析</li></ol><p>如果验证CBT方案更好，现在修改治疗方案如下：</p><p><img src="https://vip2.loli.io/2023/03/13/DSHQtrJ9camTB6f.png" alt="image-20220813104751584"></p><p>患者进行五周和六个月的治疗，这里时间不同，为组内因子，与前面的组间因子不同，这种方法称为单因素组内方差分析。实验中每位患者分别进行了两次治疗，也成为重复测量方差分析。</p><ol start="3"><li>双因素方差分析</li></ol><p><img src="https://vip2.loli.io/2023/03/13/JpfhcXBNw94SxTm.png" alt="image-20220813105110385"></p><p>这种方案设计既有组间因子也有组内因子，即为多因素方差分析</p><ol start="4"><li>协方差分析（ANCOVA）</li></ol><p>如果方差分析中，包含了协变量，就属于协方差分析，ANCOVA。如果其他病对此疗法有影响，即试验中多了干扰变量，这种干扰变量也称为协变量，如果方差分析中包含了协变量，就属于协方差分析。</p><ol start="5"><li>多元方差分析（MANOVA）</li></ol><p>如果方差研究中包含了多个因变量，那么这种实验设计称为多元方差分析，简称为MANOVA。</p><ol start="6"><li>多元协方差分析（MANCOVA）</li></ol><p>如果多元方差分析中存在协变量，那么就称为多元协方差分析。</p><p>方差分析可以使用<code>lm</code>函数进行拟合，不过一般都使用<code>aov</code>函数进行分析，二者在格式上有差别，但是<code>aov</code>函数的使用和<code>lm</code>函数几乎是一致的。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aov<span class="punctuation">(</span>formula<span class="punctuation">,</span> data <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> projections <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> qr <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> contrasts <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> ...<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><strong>方差分析公式中特殊符号</strong>：</p><p><img src="https://vip2.loli.io/2023/03/13/ucYRIS4GPqVZ3jr.png" alt="image-20220813110150153"></p><p><strong>各种方差分析公式写法</strong>：</p><p><img src="https://vip2.loli.io/2023/03/13/yOPQLmulI6FscDn.png" alt="image-20220813110300468"></p><p>==注意==：在方差分析中自变量的顺序很重要，如果是平衡设计还好，如果是非平衡实验设计或者存在协变量值，变量的顺序影响比较大。</p><p>==顺序很重要！==</p><p>当自变量与其他自变量或者协变量相关时，没有明确的方法可以评价自变量对因变量的贡献。例如，含因子A、B和因变量y的双因素不平衡因子设计，有三种效应：A和B的主效应，A和B的交互效应。假设你正使用如下表达式对数据进行建模：</p><p><code>Y~A+B A:B</code></p><p>有三种类型的方法可以分解等式右边各效应对y所解释的方差。<br>类型一：（序贯型）效应根据表达式中先出现的效应做调整。A不做调整，B根据A调整，<code>A:B</code>交互项根据A和B调整。<br>类型二：（分层型）效应根据同水平或低水平的效应做调整。A根据B调整，B依据A调整，<code>A:B</code>交互项同时根据A和B调整。<br>类型三：（边界型）<br>每个效应根据模型其他各效应做相应调整。A根据B和<code>A:B</code>做调整，<code>A:B</code>交互项根据A和B调整。<br>R默认调用类型一方法，其他软件（比如SAS和SPSS）默认调用类型三方法。</p><h3 id="6-6-方差分析二">6.6 方差分析二</h3><h4 id="6-6-1-单因素方差分析">6.6.1 单因素方差分析</h4><p>使用<code>multcomp</code>包中的<code>cholesterol</code>数据集（50名患者接受降低胆固醇药物的五种治疗方案的数据）来进行演示。五十个患者分成十人一组，每天服用20克药物。第一组一天一次性服用20克药物；第二组一天分两次服用20克药物；第三组一天分四次服用20克药物。剩余两组办法是drugD和drugE，为两种候选药物。里面只有治疗方案一个因子，所以是单因素方差分析。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> cholesterol</span><br><span class="line">      trt response</span><br><span class="line"><span class="number">1</span>   <span class="number">1</span>time    <span class="number">3.861</span></span><br><span class="line"><span class="number">2</span>   <span class="number">1</span>time   <span class="number">10.387</span></span><br><span class="line"><span class="number">3</span>   <span class="number">1</span>time    <span class="number">5.906</span></span><br><span class="line"><span class="number">4</span>   <span class="number">1</span>time    <span class="number">3.061</span></span><br><span class="line"><span class="number">5</span>   <span class="number">1</span>time    <span class="number">7.720</span></span><br><span class="line"><span class="number">6</span>   <span class="number">1</span>time    <span class="number">2.714</span></span><br><span class="line"><span class="number">7</span>   <span class="number">1</span>time    <span class="number">4.924</span></span><br><span class="line"><span class="number">8</span>   <span class="number">1</span>time    <span class="number">2.304</span></span><br><span class="line"><span class="number">9</span>   <span class="number">1</span>time    <span class="number">7.530</span></span><br><span class="line"><span class="number">10</span>  <span class="number">1</span>time    <span class="number">9.412</span></span><br><span class="line"><span class="number">11</span> <span class="number">2</span>times   <span class="number">10.399</span></span><br><span class="line"><span class="number">12</span> <span class="number">2</span>times    <span class="number">8.603</span></span><br><span class="line"><span class="number">13</span> <span class="number">2</span>times   <span class="number">13.632</span></span><br><span class="line"><span class="number">14</span> <span class="number">2</span>times    <span class="number">3.505</span></span><br><span class="line"><span class="number">15</span> <span class="number">2</span>times    <span class="number">7.770</span></span><br><span class="line"><span class="number">16</span> <span class="number">2</span>times    <span class="number">8.627</span></span><br><span class="line"><span class="number">17</span> <span class="number">2</span>times    <span class="number">9.227</span></span><br><span class="line"><span class="number">18</span> <span class="number">2</span>times    <span class="number">6.316</span></span><br><span class="line"><span class="number">19</span> <span class="number">2</span>times   <span class="number">15.826</span></span><br><span class="line"><span class="number">20</span> <span class="number">2</span>times    <span class="number">8.344</span></span><br><span class="line"><span class="number">21</span> <span class="number">4</span>times   <span class="number">13.962</span></span><br><span class="line"><span class="number">22</span> <span class="number">4</span>times   <span class="number">13.961</span></span><br><span class="line"><span class="number">23</span> <span class="number">4</span>times   <span class="number">13.918</span></span><br><span class="line"><span class="number">24</span> <span class="number">4</span>times    <span class="number">8.053</span></span><br><span class="line"><span class="number">25</span> <span class="number">4</span>times   <span class="number">11.043</span></span><br><span class="line"><span class="number">26</span> <span class="number">4</span>times   <span class="number">12.369</span></span><br><span class="line"><span class="number">27</span> <span class="number">4</span>times   <span class="number">10.392</span></span><br><span class="line"><span class="number">28</span> <span class="number">4</span>times    <span class="number">9.029</span></span><br><span class="line"><span class="number">29</span> <span class="number">4</span>times   <span class="number">12.842</span></span><br><span class="line"><span class="number">30</span> <span class="number">4</span>times   <span class="number">18.179</span></span><br><span class="line"><span class="number">31</span>  drugD   <span class="number">16.982</span></span><br><span class="line"><span class="number">32</span>  drugD   <span class="number">15.458</span></span><br><span class="line"><span class="number">33</span>  drugD   <span class="number">19.979</span></span><br><span class="line"><span class="number">34</span>  drugD   <span class="number">14.739</span></span><br><span class="line"><span class="number">35</span>  drugD   <span class="number">13.585</span></span><br><span class="line"><span class="number">36</span>  drugD   <span class="number">10.865</span></span><br><span class="line"><span class="number">37</span>  drugD   <span class="number">17.590</span></span><br><span class="line"><span class="number">38</span>  drugD    <span class="number">8.819</span></span><br><span class="line"><span class="number">39</span>  drugD   <span class="number">17.963</span></span><br><span class="line"><span class="number">40</span>  drugD   <span class="number">17.632</span></span><br><span class="line"><span class="number">41</span>  drugE   <span class="number">21.512</span></span><br><span class="line"><span class="number">42</span>  drugE   <span class="number">27.244</span></span><br><span class="line"><span class="number">43</span>  drugE   <span class="number">20.520</span></span><br><span class="line"><span class="number">44</span>  drugE   <span class="number">15.771</span></span><br><span class="line"><span class="number">45</span>  drugE   <span class="number">22.885</span></span><br><span class="line"><span class="number">46</span>  drugE   <span class="number">23.953</span></span><br><span class="line"><span class="number">47</span>  drugE   <span class="number">21.593</span></span><br><span class="line"><span class="number">48</span>  drugE   <span class="number">18.306</span></span><br><span class="line"><span class="number">49</span>  drugE   <span class="number">20.385</span></span><br><span class="line"><span class="number">50</span>  drugE   <span class="number">17.307</span></span><br><span class="line">attach<span class="punctuation">(</span>cholesterol<span class="punctuation">)</span> <span class="comment"># 用来加载数据，用attach函数就不需要用变量赋值操作</span></span><br><span class="line"><span class="operator">&gt;</span> table<span class="punctuation">(</span>trt<span class="punctuation">)</span> <span class="comment">#统计分组情况</span></span><br><span class="line">trt</span><br><span class="line"> <span class="number">1</span>time <span class="number">2</span>times <span class="number">4</span>times  drugD  drugE </span><br><span class="line">    <span class="number">10</span>     <span class="number">10</span>     <span class="number">10</span>     <span class="number">10</span>     <span class="number">10</span> </span><br><span class="line"><span class="operator">&gt;</span> aggregate<span class="punctuation">(</span>response<span class="punctuation">,</span>by<span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span>trt<span class="punctuation">)</span><span class="punctuation">,</span>FUN<span class="operator">=</span>mean<span class="punctuation">)</span> <span class="comment"># 分组统计平均数</span></span><br><span class="line">  Group.1      x</span><br><span class="line"><span class="number">1</span>   <span class="number">1</span>time  <span class="number">5.782</span></span><br><span class="line"><span class="number">2</span>  <span class="number">2</span>times  <span class="number">9.225</span></span><br><span class="line"><span class="number">3</span>  <span class="number">4</span>times <span class="number">12.375</span></span><br><span class="line"><span class="number">4</span>   drugD <span class="number">15.361</span></span><br><span class="line"><span class="number">5</span>   drugE <span class="number">20.948</span></span><br><span class="line"><span class="operator">&gt;</span> fit <span class="operator">&lt;-</span> aov<span class="punctuation">(</span>response <span class="operator">~</span> trt<span class="punctuation">,</span>data<span class="operator">=</span>cholesterol<span class="punctuation">)</span> <span class="comment">#进行方差分析</span></span><br><span class="line"><span class="operator">&gt;</span> fit</span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">   aov<span class="punctuation">(</span>formula <span class="operator">=</span> response <span class="operator">~</span> trt<span class="punctuation">,</span> data <span class="operator">=</span> cholesterol<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Terms<span class="operator">:</span></span><br><span class="line">                   trt Residuals</span><br><span class="line">Sum of Squares  <span class="number">1351.4</span>     <span class="number">468.8</span></span><br><span class="line">Deg. of Freedom      <span class="number">4</span>        <span class="number">45</span></span><br><span class="line"></span><br><span class="line">Residual standard error<span class="operator">:</span> <span class="number">3.227</span></span><br><span class="line">Estimated effects may be unbalanced</span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line">            Df Sum Sq Mean Sq <span class="built_in">F</span> value  Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="built_in">F</span><span class="punctuation">)</span>    </span><br><span class="line">trt          <span class="number">4</span>   <span class="number">1351</span>     <span class="number">338</span>    <span class="number">32.4</span> <span class="number">9.8e-13</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Residuals   <span class="number">45</span>    <span class="number">469</span>      <span class="number">10</span>                    </span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br></pre></td></tr></table></figure><p>方差分析结果主要看F值和p值，F值越大说明组间差异越显著，这里就是五组之间平均值的差别，而p-value则是用来衡量F值，p值越小说明F值越可靠。这里可以看出p-value值非常小，说明F检测值非常显著，五组治疗方法效果不同。</p><p>同样可以使用plot绘制方差结果：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> par<span class="punctuation">(</span>mfrow<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> plot<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/G4eEq28YcPp7fFW.png" alt="image-20220813150305955"></p><p>下面用<code>lm</code>函数进行方差分析：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fit.lm <span class="operator">&lt;-</span>lm<span class="punctuation">(</span>response<span class="operator">~</span>trt<span class="punctuation">,</span>data<span class="operator">=</span>cholesterol<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fit.lm</span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> response <span class="operator">~</span> trt<span class="punctuation">,</span> data <span class="operator">=</span> cholesterol<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>    trt2times    trt4times     trtdrugD     trtdrugE  </span><br><span class="line">       <span class="number">5.78</span>         <span class="number">3.44</span>         <span class="number">6.59</span>         <span class="number">9.58</span>        <span class="number">15.17</span>  </span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit.lm<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">lm<span class="punctuation">(</span>formula <span class="operator">=</span> response <span class="operator">~</span> trt<span class="punctuation">,</span> data <span class="operator">=</span> cholesterol<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Residuals<span class="operator">:</span></span><br><span class="line">   Min     <span class="number">1</span>Q Median     <span class="number">3</span>Q    Max </span><br><span class="line"><span class="operator">-</span><span class="number">6.542</span> <span class="operator">-</span><span class="number">1.967</span> <span class="operator">-</span><span class="number">0.002</span>  <span class="number">1.890</span>  <span class="number">6.601</span> </span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line">            Estimate Std. Error t value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="operator">|</span>t<span class="operator">|</span><span class="punctuation">)</span>    </span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>     <span class="number">5.78</span>       <span class="number">1.02</span>    <span class="number">5.67</span>  <span class="number">9.8e-07</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">trt2times       <span class="number">3.44</span>       <span class="number">1.44</span>    <span class="number">2.39</span>    <span class="number">0.021</span> <span class="operator">*</span>  </span><br><span class="line">trt4times       <span class="number">6.59</span>       <span class="number">1.44</span>    <span class="number">4.57</span>  <span class="number">3.8e-05</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">trtdrugD        <span class="number">9.58</span>       <span class="number">1.44</span>    <span class="number">6.64</span>  <span class="number">3.5e-08</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">trtdrugE       <span class="number">15.17</span>       <span class="number">1.44</span>   <span class="number">10.51</span>  <span class="number">1.1e-13</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line">Residual standard error<span class="operator">:</span> <span class="number">3.23</span> on <span class="number">45</span> degrees of freedom</span><br><span class="line">Multiple R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.742</span><span class="punctuation">,</span>Adjusted R<span class="operator">-</span>squared<span class="operator">:</span>  <span class="number">0.72</span> </span><br><span class="line"><span class="built_in">F</span><span class="operator">-</span>statistic<span class="operator">:</span> <span class="number">32.4</span> on <span class="number">4</span> and <span class="number">45</span> DF<span class="punctuation">,</span>  p<span class="operator">-</span>value<span class="operator">:</span> <span class="number">9.82e-13</span></span><br></pre></td></tr></table></figure><p>F检测值和p-value和<code>aov</code>函数都一样，所以<code>lm</code>函数也可以进行方差分析。</p><h4 id="6-6-2-协方差分析">6.6.2 协方差分析</h4><p>使用<code>multcomp</code>包中的<code>litter</code>数据集，<code>litter</code>数据集为怀孕小鼠的数据集。该实验不是均衡设计，每个小鼠接受不同剂量药物处理，分别是不处理（0）、5单位剂量、50单位剂量和500单位剂量，这是自变量，产下幼崽的体重均值为因变量。因为怀孕的总时间有差异，会影响到幼崽的体重，所以属于协变量，这是一个协方差的例子。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> table<span class="punctuation">(</span>litter<span class="operator">$</span>dose<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">  <span class="number">0</span>   <span class="number">5</span>  <span class="number">50</span> <span class="number">500</span> </span><br><span class="line"> <span class="number">20</span>  <span class="number">19</span>  <span class="number">18</span>  <span class="number">17</span> </span><br><span class="line"><span class="operator">&gt;</span> attach<span class="punctuation">(</span>litter<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> aggregate<span class="punctuation">(</span>weight<span class="punctuation">,</span>by <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span>dose<span class="punctuation">)</span><span class="punctuation">,</span>FUN<span class="operator">=</span>mean<span class="punctuation">)</span></span><br><span class="line">  Group.1     x</span><br><span class="line"><span class="number">1</span>       <span class="number">0</span> <span class="number">32.31</span></span><br><span class="line"><span class="number">2</span>       <span class="number">5</span> <span class="number">29.31</span></span><br><span class="line"><span class="number">3</span>      <span class="number">50</span> <span class="number">29.87</span></span><br><span class="line"><span class="number">4</span>     <span class="number">500</span> <span class="number">29.65</span></span><br><span class="line"><span class="operator">&gt;</span> fit <span class="operator">&lt;-</span> aov<span class="punctuation">(</span>weight <span class="operator">~</span> gesttime<span class="operator">+</span>dose<span class="punctuation">,</span>data<span class="operator">=</span>litter<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line">            Df Sum Sq Mean Sq <span class="built_in">F</span> value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="built_in">F</span><span class="punctuation">)</span>   </span><br><span class="line">gesttime     <span class="number">1</span>    <span class="number">134</span>   <span class="number">134.3</span>    <span class="number">8.05</span>  <span class="number">0.006</span> <span class="operator">*</span><span class="operator">*</span></span><br><span class="line">dose         <span class="number">3</span>    <span class="number">137</span>    <span class="number">45.7</span>    <span class="number">2.74</span>  <span class="number">0.050</span> <span class="operator">*</span> </span><br><span class="line">Residuals   <span class="number">69</span>   <span class="number">1151</span>    <span class="number">16.7</span>                  </span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br></pre></td></tr></table></figure><p>F值表明，怀孕时间和小鼠出生体重相关；控制怀孕时间，药物剂量和出生体重相关。证明药物是有影响的，而不是随机性产生的。</p><h4 id="6-6-3-双因素方差分析">6.6.3 双因素方差分析</h4><p>下面看一个双因素方差分析案例：</p><p>使用<code>ToothGrowth</code>数据集，这个数据集是200只豚鼠分别用两种喂食方法，橙汁（包含维生素C，也包含其他维生素）和维生素C，每种喂食方法中，抗坏血栓含量有三个水平，分别是0.5mg、1mg、2mg。每组分别选择10只豚鼠做实验，刚好60只，最后测试牙齿长度，看哪种更有利于牙齿生长。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> ToothGrowth</span><br><span class="line">    len supp dose</span><br><span class="line"><span class="number">1</span>   <span class="number">4.2</span>   VC  <span class="number">0.5</span></span><br><span class="line"><span class="number">2</span>  <span class="number">11.5</span>   VC  <span class="number">0.5</span></span><br><span class="line"><span class="number">3</span>   <span class="number">7.3</span>   VC  <span class="number">0.5</span></span><br><span class="line"><span class="number">4</span>   <span class="number">5.8</span>   VC  <span class="number">0.5</span></span><br><span class="line"><span class="number">5</span>   <span class="number">6.4</span>   VC  <span class="number">0.5</span></span><br><span class="line">...</span><br><span class="line"><span class="number">56</span> <span class="number">30.9</span>   OJ  <span class="number">2.0</span></span><br><span class="line"><span class="number">57</span> <span class="number">26.4</span>   OJ  <span class="number">2.0</span></span><br><span class="line"><span class="number">58</span> <span class="number">27.3</span>   OJ  <span class="number">2.0</span></span><br><span class="line"><span class="number">59</span> <span class="number">29.4</span>   OJ  <span class="number">2.0</span></span><br><span class="line"><span class="number">60</span> <span class="number">23.0</span>   OJ  <span class="number">2.0</span></span><br><span class="line"><span class="operator">&gt;</span> attach<span class="punctuation">(</span>ToothGrowth<span class="punctuation">)</span> <span class="comment"># 加载数据</span></span><br><span class="line">The following object is masked from litter<span class="operator">:</span></span><br><span class="line"></span><br><span class="line">    dose</span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> xtabs<span class="punctuation">(</span><span class="operator">~</span>supp<span class="operator">+</span>dose<span class="punctuation">)</span> <span class="comment"># 通过xtabs统计一下频数</span></span><br><span class="line">    dose</span><br><span class="line">supp <span class="number">0.5</span>  <span class="number">1</span>  <span class="number">2</span></span><br><span class="line">  OJ  <span class="number">10</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line">  VC  <span class="number">10</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> aggregate<span class="punctuation">(</span>len<span class="punctuation">,</span>by<span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span>supp<span class="punctuation">,</span>dose<span class="punctuation">)</span><span class="punctuation">,</span>FUN<span class="operator">=</span>mean<span class="punctuation">)</span> <span class="comment"># 统计平均值</span></span><br><span class="line">  Group.1 Group.2     x</span><br><span class="line"><span class="number">1</span>      OJ     <span class="number">0.5</span> <span class="number">13.23</span></span><br><span class="line"><span class="number">2</span>      VC     <span class="number">0.5</span>  <span class="number">7.98</span></span><br><span class="line"><span class="number">3</span>      OJ     <span class="number">1.0</span> <span class="number">22.70</span></span><br><span class="line"><span class="number">4</span>      VC     <span class="number">1.0</span> <span class="number">16.77</span></span><br><span class="line"><span class="number">5</span>      OJ     <span class="number">2.0</span> <span class="number">26.06</span></span><br><span class="line"><span class="number">6</span>      VC     <span class="number">2.0</span> <span class="number">26.14</span></span><br><span class="line"><span class="operator">&gt;</span> aggregate<span class="punctuation">(</span>len<span class="punctuation">,</span>by<span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span>supp<span class="punctuation">,</span>dose<span class="punctuation">)</span><span class="punctuation">,</span>FUN<span class="operator">=</span>sd<span class="punctuation">)</span> <span class="comment"># 计算标准差</span></span><br><span class="line">  Group.1 Group.2     x</span><br><span class="line"><span class="number">1</span>      OJ     <span class="number">0.5</span> <span class="number">4.460</span></span><br><span class="line"><span class="number">2</span>      VC     <span class="number">0.5</span> <span class="number">2.747</span></span><br><span class="line"><span class="number">3</span>      OJ     <span class="number">1.0</span> <span class="number">3.911</span></span><br><span class="line"><span class="number">4</span>      VC     <span class="number">1.0</span> <span class="number">2.515</span></span><br><span class="line"><span class="number">5</span>      OJ     <span class="number">2.0</span> <span class="number">2.655</span></span><br><span class="line"><span class="number">6</span>      VC     <span class="number">2.0</span> <span class="number">4.798</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>ToothGrowth<span class="operator">$</span>dose<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;numeric&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> ToothGrowth<span class="operator">$</span>dose <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>dose<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>ToothGrowth<span class="operator">$</span>dose<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;factor&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> fit <span class="operator">&lt;-</span> aov<span class="punctuation">(</span>len <span class="operator">~</span> supp<span class="operator">*</span>dose<span class="punctuation">,</span>data<span class="operator">=</span>ToothGrowth<span class="punctuation">)</span> <span class="comment"># 这里是*号，这里是两个变量的方差分析，两个变量之间还有交互，所以应该写成乘号</span></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line">            Df Sum Sq Mean Sq <span class="built_in">F</span> value  Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="built_in">F</span><span class="punctuation">)</span>    </span><br><span class="line">supp         <span class="number">1</span>    <span class="number">205</span>     <span class="number">205</span>   <span class="number">15.57</span> <span class="number">0.00023</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">dose         <span class="number">2</span>   <span class="number">2426</span>    <span class="number">1213</span>   <span class="number">92.00</span> <span class="operator">&lt;</span> <span class="number">2e-16</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">supp<span class="operator">:</span>dose    <span class="number">2</span>    <span class="number">108</span>      <span class="number">54</span>    <span class="number">4.11</span> <span class="number">0.02186</span> <span class="operator">*</span>  </span><br><span class="line">Residuals   <span class="number">54</span>    <span class="number">712</span>      <span class="number">13</span>                    </span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br></pre></td></tr></table></figure><p><code>fit &lt;- aov(len ~ supp*dose,data=ToothGrowth)</code>代码中是<code>*</code>号，这里是两个变量的方差分析，两个变量之间还有交互，所以应该写成乘号，等价于：<code>fit &lt;- aov(len ~ supp+dose+supp:dose,data=ToothGrowth)</code>。</p><p>supp和dose结果表明不同的喂食方法和剂量对豚鼠牙齿生长都有影响。</p><p>使用<code>HH</code>包中的<code>interaction.plot</code>函数可以对结果进行可视化：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> interaction.plot<span class="punctuation">(</span>dose<span class="punctuation">,</span> supp<span class="punctuation">,</span> len<span class="punctuation">,</span> type<span class="operator">=</span><span class="string">&quot;b&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="operator">+</span>                  col<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;red&quot;</span><span class="punctuation">,</span><span class="string">&quot;blue&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> pch<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">16</span><span class="punctuation">,</span> <span class="number">18</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line"><span class="operator">+</span>                  main <span class="operator">=</span> <span class="string">&quot;Interaction between Dose and Supplement Type&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/bL1DA4BylMkKG9h.png" alt="image-20220813155702776"></p><h4 id="6-6-4-多元方差分析">6.6.4 多元方差分析</h4><p>使用UScereal数据集，这里研究的是美国谷物中的卡路里、脂肪和糖类含量是否会因为储物架的不同而发生变化。其中shelf列1代表低货架，2代表中货架，3代表顶层货架，其中卡路里、脂肪和糖类含量的变化是因变量，货架水平是自变量。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> attach<span class="punctuation">(</span>UScereal<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> shelf <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>shelf<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> aggregate<span class="punctuation">(</span>cbind<span class="punctuation">(</span>calories<span class="punctuation">,</span>fat<span class="punctuation">,</span>sugars<span class="punctuation">)</span><span class="punctuation">,</span>by<span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span>shelf<span class="punctuation">)</span><span class="punctuation">,</span>FUN<span class="operator">=</span>mean<span class="punctuation">)</span> <span class="comment"># 求平均值</span></span><br><span class="line">  Group.1 calories    fat sugars</span><br><span class="line"><span class="number">1</span>       <span class="number">1</span>    <span class="number">119.5</span> <span class="number">0.6621</span>  <span class="number">6.295</span></span><br><span class="line"><span class="number">2</span>       <span class="number">2</span>    <span class="number">129.8</span> <span class="number">1.3413</span> <span class="number">12.508</span></span><br><span class="line"><span class="number">3</span>       <span class="number">3</span>    <span class="number">180.1</span> <span class="number">1.9449</span> <span class="number">10.857</span></span><br><span class="line"><span class="operator">&gt;</span> fit <span class="operator">&lt;-</span> manova<span class="punctuation">(</span>cbind<span class="punctuation">(</span>calories<span class="punctuation">,</span>fat<span class="punctuation">,</span>sugars<span class="punctuation">)</span><span class="operator">~</span>shelf<span class="punctuation">)</span> <span class="comment"># 因为已经用attach加载数据，所以data项可以不写</span></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line">          Df Pillai approx <span class="built_in">F</span> num Df den Df Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="built_in">F</span><span class="punctuation">)</span>    </span><br><span class="line">shelf      <span class="number">2</span>  <span class="number">0.402</span>     <span class="number">5.12</span>      <span class="number">6</span>    <span class="number">122</span>  <span class="number">1e-04</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Residuals <span class="number">62</span>                                         </span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> summary.aov<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"> Response calories <span class="operator">:</span></span><br><span class="line">            Df Sum Sq Mean Sq <span class="built_in">F</span> value  Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="built_in">F</span><span class="punctuation">)</span>    </span><br><span class="line">shelf        <span class="number">2</span>  <span class="number">50435</span>   <span class="number">25218</span>    <span class="number">7.86</span> <span class="number">0.00091</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Residuals   <span class="number">62</span> <span class="number">198860</span>    <span class="number">3207</span>                    </span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line"> Response fat <span class="operator">:</span></span><br><span class="line">            Df Sum Sq Mean Sq <span class="built_in">F</span> value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="built_in">F</span><span class="punctuation">)</span>  </span><br><span class="line">shelf        <span class="number">2</span>   <span class="number">18.4</span>    <span class="number">9.22</span>    <span class="number">3.68</span>  <span class="number">0.031</span> <span class="operator">*</span></span><br><span class="line">Residuals   <span class="number">62</span>  <span class="number">155.2</span>    <span class="number">2.50</span>                 </span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line"> Response sugars <span class="operator">:</span></span><br><span class="line">            Df Sum Sq Mean Sq <span class="built_in">F</span> value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="built_in">F</span><span class="punctuation">)</span>   </span><br><span class="line">shelf        <span class="number">2</span>    <span class="number">381</span>     <span class="number">191</span>    <span class="number">6.58</span> <span class="number">0.0026</span> <span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Residuals   <span class="number">62</span>   <span class="number">1798</span>      <span class="number">29</span>                  </span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br></pre></td></tr></table></figure><p>因为已经因变量有多个，不能通过<code>+</code>将其合并，需要通过<code>cbind</code>将其合并成数据框，也可以使用<code>summary.aov</code>分别查看每个变量的结果。通过检测结果可以发现，三组中每组营养成分的测量值是不同的，差异结果显著。</p><p>注意：<code>aggregate</code>只能接受一个数据，可以通过<code>cbind</code>将三个变量组成一个数据框。</p><h3 id="6-7-功效分析">6.7 功效分析</h3><p>功效分析，power analysis，可以帮助在给定置信度的情况下，判断检测到给定效应值时所需的样本量。反过来，它也可以在给定置信度水平情况下，计算在某样本量内能检测到给定效应值的概率。</p><p><strong>功效分析函数</strong>：<code>pwr</code>包中的函数</p><table><thead><tr><th>函数</th><th>功效计算的对象</th></tr></thead><tbody><tr><td><code>pwr.2p.test()</code></td><td>两比例（n相等）</td></tr><tr><td><code>pwr.2p2n.test()</code></td><td>两比例（n不相等）</td></tr><tr><td><code>pwr.anova.test()</code></td><td>平衡的单因素ANOVA</td></tr><tr><td><code>pwr.chisq.test()</code></td><td>卡方检验</td></tr><tr><td><code>pwr.f2.test()</code></td><td>广义线性模型</td></tr><tr><td><code>pwr.p.test()</code></td><td>比例（单样本）</td></tr><tr><td><code>pwr.r.test()</code></td><td>相关系数</td></tr><tr><td><code>pwr.t.test()</code></td><td>t检验（单样本、两样本、配对）</td></tr><tr><td><code>pwr.t2n.test()</code></td><td>t检验（n不相等的两样本）</td></tr></tbody></table><p>功效分析的理论基础：</p><p><img src="https://vip2.loli.io/2023/03/13/2Oz7E3tdPAc8LHq.png" alt="image-20220813180608399"></p><ol><li>样本大小指的是实验设计中每种条件/组中观测的数目。</li><li>显著性水平（也称为alpha）由Ⅰ型错误的概率来定义。也可以把它看做是发现效应不发生的概率。</li><li>功效通过Ⅰ减去Ⅱ型错误的概率来定义。我们可以把它看做是真实效应发生的概率。</li><li>效应值指的是在备择或研究假设下效应的量。效应值的表达式依赖于假设检验中使用的统计方法。</li></ol><p><img src="https://vip2.loli.io/2023/03/13/kwZyGeJ847CfAvK.png" alt="image-20220813190447017"></p><p>案例：老板的领导风格对员工满意度的影响，是否超过薪水和工作小费对员工满意度的影响，领导风格可以用四个变量来估计，薪水和小费与三个变量有关，过去的经验表明，薪水和小费能够解决30%员工满意度的方差，而从现实出发，领导风格至少能解释35%的方差，假定显著性水平为0.05，那么在95%的置信度情况下，需要多少受试者才能得到这样的方差贡献率。</p><p>线性回归的功效分析可以使用<code>pwr</code>包中的<code>pwr.f2.test</code>函数进行计算，其中<code>sig.level</code>表示显著性水平，<code>power</code>为功效水平，<code>u</code>和<code>v</code>分别为分子自由度和分母自由度，<code>f2</code>为效应值。</p><p><code>pwr.f2.test</code>函数使用如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwr.f2.test<span class="punctuation">(</span>u <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> v <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> f2 <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> sig.level <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span> power <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>上面的案例分析如下，其中<code>f2</code>的值根据公式计算出来。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> pwr.f2.test<span class="punctuation">(</span>u<span class="operator">=</span><span class="number">3</span><span class="punctuation">,</span> sig.level <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span> power<span class="operator">=</span><span class="number">0.9</span><span class="punctuation">,</span> f2<span class="operator">=</span><span class="number">0.0769</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">     Multiple regression power calculation </span><br><span class="line"></span><br><span class="line">              u <span class="operator">=</span> <span class="number">3</span></span><br><span class="line">              v <span class="operator">=</span> <span class="number">184.2</span> <span class="comment"># 至少需要185个受试者</span></span><br><span class="line">             f2 <span class="operator">=</span> <span class="number">0.0769</span></span><br><span class="line">      sig.level <span class="operator">=</span> <span class="number">0.05</span></span><br><span class="line">          power <span class="operator">=</span> <span class="number">0.9</span></span><br></pre></td></tr></table></figure><p>可以得到<code>v</code>为184.2，假设显著性水平为0.05，在90%的置信度的情况下，至少需要185个受试者才可以。</p><p>假设两组样品做单因素方差分析，要达到0.9的功效，效应值为0.25，并选择0.05的显著性水平，那么每组需要多少样本量？</p><p>可以使用<code>pwr.anova.test()</code>函数对平衡单因素方差进行功效分析：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwr.anova.test<span class="punctuation">(</span>k <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> n <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> f <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> sig.level <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span> power <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>其中<code>k</code>为组的个数，这里为两组；<code>n</code>为各组的样本大小，即要求的量，<code>f</code>是效应值，<code>sig.level</code>为显著性水平，<code>power</code>为功效水平。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> pwr.anova.test<span class="punctuation">(</span>k<span class="operator">=</span><span class="number">2</span><span class="punctuation">,</span>f<span class="operator">=</span><span class="number">0.25</span><span class="punctuation">,</span>sig.level <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span>power <span class="operator">=</span> <span class="number">0.9</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">     Balanced one<span class="operator">-</span>way analysis of variance power calculation </span><br><span class="line"></span><br><span class="line">              k <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">              n <span class="operator">=</span> <span class="number">85.03</span></span><br><span class="line">              f <span class="operator">=</span> <span class="number">0.25</span></span><br><span class="line">      sig.level <span class="operator">=</span> <span class="number">0.05</span></span><br><span class="line">          power <span class="operator">=</span> <span class="number">0.9</span></span><br><span class="line"></span><br><span class="line">NOTE<span class="operator">:</span> n is number <span class="keyword">in</span> each group</span><br></pre></td></tr></table></figure><p><code>n</code>为所求的值，可知<code>n</code>至少应为86，即每组中至少86个样本，由于是两组，所以总体样本数为其二倍，172个样本。</p><h2 id="7-广义线性模型">7 广义线性模型</h2><p>线性回归和方差分析都是基于正态分布的假设。在线性模型中，可以通过一系列连续型或类别型预测变量来预测正态分布的响应变量，但是实际的数据分析中，呈简单线性分布的数据只占很少的一部分，绝大部分数据都是无规则分布的，通过数据分析来找到规律。刚开始假设数据为正态分布也不合理，例如二值型变量，比如多分类变量，结果变量也可能呈条件分布，对于这些数据不能用简单线性回归来处理，需要拓宽简单线性回归的方法，提出了广义线性回归。</p><p>线性回归和方差分析都是基于正态分布的假设，广义线性模型扩展了线性模型的框架，它包含了非正态因变量的分析。</p><p>在R中可以通过<code>glm</code>（Generalized Linear Models）函数进行广义线性回归分析。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">glm<span class="punctuation">(</span>formula<span class="punctuation">,</span> family <span class="operator">=</span> gaussian<span class="punctuation">,</span> data<span class="punctuation">,</span> weights<span class="punctuation">,</span> subset<span class="punctuation">,</span></span><br><span class="line">    na.action<span class="punctuation">,</span> start <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> etastart<span class="punctuation">,</span> mustart<span class="punctuation">,</span> offset<span class="punctuation">,</span></span><br><span class="line">    control <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span>...<span class="punctuation">)</span><span class="punctuation">,</span> model <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> method <span class="operator">=</span> <span class="string">&quot;glm.fit&quot;</span><span class="punctuation">,</span></span><br><span class="line">    x <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> y <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> singular.ok <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> contrasts <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> ...<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>这个函数与<code>lm</code>函数类似，其中最重要的参数为概率分布<code>family</code>，和相应的连接函数<code>formula</code>。</p><p>如果<code>glm</code>中<code>family = gaussian</code>，则结果和<code>lm</code>函数结果一致。</p><p>广义线性模型是通过拟合相应变量的条件均值的一个函数。假设响应变量服从指数分布族中的某个分布，并不仅限于正态分布，这样极大扩展了标准线性模型，模型参数估计的推导依据是极大似然法估计，而非最小二乘法。</p><h3 id="7-1-泊松回归">7.1 泊松回归</h3><p><strong>泊松回归</strong>是用来为计数资料和列联表建模的一种回归分析。泊松回归假设因变量是泊松分布，并假设它平均值的对数可被未知参数的线性组合建模。</p><p>泊松回归适合预测计数型结果变量。</p><p>需要下载<code>robust</code>包，并加载，用到里面的<code>breslow</code>数据集，这个数据集是对遭受轻微或严重性癫痫病病人的年龄和癫痫病发病数搜集的数据，包含了病人被随机分配到药物组或安慰剂组前八周和后八周两种情况，响应变量是后八周内癫痫病发病数<code>sumY</code>，预测变量为治疗条件<code>Trt</code>，年龄<code>Age</code>和前八周内的基础癫痫病发病数<code>Base</code>，之所以包含基础发病数和年龄，是因为它们对响应变量有潜在的影响，在解释这些协变量后，我们探究的问题是药物治疗是否能够减少癫痫病的发病数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> data<span class="punctuation">(</span>breslow.dat<span class="punctuation">,</span>package<span class="operator">=</span><span class="string">&quot;robust&quot;</span><span class="punctuation">)</span> <span class="comment"># 利用data函数加载数据集</span></span><br><span class="line"><span class="operator">&gt;</span> breslow.dat</span><br><span class="line">    ID  Y1 Y2 Y3 Y4 Base Age       Trt Ysum sumY Age10 Base4</span><br><span class="line"><span class="number">1</span>  <span class="number">104</span>   <span class="number">5</span>  <span class="number">3</span>  <span class="number">3</span>  <span class="number">3</span>   <span class="number">11</span>  <span class="number">31</span>   placebo   <span class="number">14</span>   <span class="number">14</span>   <span class="number">3.1</span>  <span class="number">2.75</span></span><br><span class="line"><span class="number">2</span>  <span class="number">106</span>   <span class="number">3</span>  <span class="number">5</span>  <span class="number">3</span>  <span class="number">3</span>   <span class="number">11</span>  <span class="number">30</span>   placebo   <span class="number">14</span>   <span class="number">14</span>   <span class="number">3.0</span>  <span class="number">2.75</span></span><br><span class="line"><span class="number">3</span>  <span class="number">107</span>   <span class="number">2</span>  <span class="number">4</span>  <span class="number">0</span>  <span class="number">5</span>    <span class="number">6</span>  <span class="number">25</span>   placebo   <span class="number">11</span>   <span class="number">11</span>   <span class="number">2.5</span>  <span class="number">1.50</span></span><br><span class="line">...</span><br><span class="line"><span class="number">57</span> <span class="number">228</span>   <span class="number">2</span>  <span class="number">3</span>  <span class="number">0</span>  <span class="number">1</span>   <span class="number">25</span>  <span class="number">21</span> progabide    <span class="number">6</span>    <span class="number">6</span>   <span class="number">2.1</span>  <span class="number">6.25</span></span><br><span class="line"><span class="number">58</span> <span class="number">232</span>   <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>   <span class="number">13</span>  <span class="number">36</span> progabide    <span class="number">0</span>    <span class="number">0</span>   <span class="number">3.6</span>  <span class="number">3.25</span></span><br><span class="line"><span class="number">59</span> <span class="number">236</span>   <span class="number">1</span>  <span class="number">4</span>  <span class="number">3</span>  <span class="number">2</span>   <span class="number">12</span>  <span class="number">37</span> progabide   <span class="number">10</span>   <span class="number">10</span>   <span class="number">3.7</span>  <span class="number">3.00</span></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>breslow.dat<span class="punctuation">)</span></span><br><span class="line">       ID            Y1               Y2              Y3              Y4             Base            Age      </span><br><span class="line"> Min.   <span class="operator">:</span><span class="number">101</span>   Min.   <span class="operator">:</span>  <span class="number">0.00</span>   Min.   <span class="operator">:</span> <span class="number">0.00</span>   Min.   <span class="operator">:</span> <span class="number">0.00</span>   Min.   <span class="operator">:</span> <span class="number">0.00</span>   Min.   <span class="operator">:</span>  <span class="number">6.0</span>   Min.   <span class="operator">:</span><span class="number">18.0</span>  </span><br><span class="line"> <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">120</span>   <span class="number">1</span>st Qu.<span class="operator">:</span>  <span class="number">2.00</span>   <span class="number">1</span>st Qu.<span class="operator">:</span> <span class="number">3.00</span>   <span class="number">1</span>st Qu.<span class="operator">:</span> <span class="number">2.00</span>   <span class="number">1</span>st Qu.<span class="operator">:</span> <span class="number">3.00</span>   <span class="number">1</span>st Qu.<span class="operator">:</span> <span class="number">12.0</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">23.0</span>  </span><br><span class="line"> Median <span class="operator">:</span><span class="number">147</span>   Median <span class="operator">:</span>  <span class="number">4.00</span>   Median <span class="operator">:</span> <span class="number">5.00</span>   Median <span class="operator">:</span> <span class="number">4.00</span>   Median <span class="operator">:</span> <span class="number">4.00</span>   Median <span class="operator">:</span> <span class="number">22.0</span>   Median <span class="operator">:</span><span class="number">28.0</span>  </span><br><span class="line"> Mean   <span class="operator">:</span><span class="number">168</span>   Mean   <span class="operator">:</span>  <span class="number">8.95</span>   Mean   <span class="operator">:</span> <span class="number">8.36</span>   Mean   <span class="operator">:</span> <span class="number">8.44</span>   Mean   <span class="operator">:</span> <span class="number">7.31</span>   Mean   <span class="operator">:</span> <span class="number">31.2</span>   Mean   <span class="operator">:</span><span class="number">28.3</span>  </span><br><span class="line"> <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">216</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span> <span class="number">10.50</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">11.50</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span> <span class="number">8.00</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span> <span class="number">8.00</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span> <span class="number">41.0</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">32.0</span>  </span><br><span class="line"> Max.   <span class="operator">:</span><span class="number">238</span>   Max.   <span class="operator">:</span><span class="number">102.00</span>   Max.   <span class="operator">:</span><span class="number">65.00</span>   Max.   <span class="operator">:</span><span class="number">76.00</span>   Max.   <span class="operator">:</span><span class="number">63.00</span>   Max.   <span class="operator">:</span><span class="number">151.0</span>   Max.   <span class="operator">:</span><span class="number">42.0</span>  </span><br><span class="line">        Trt          Ysum            sumY           Age10          Base4      </span><br><span class="line"> placebo  <span class="operator">:</span><span class="number">28</span>   Min.   <span class="operator">:</span>  <span class="number">0.0</span>   Min.   <span class="operator">:</span>  <span class="number">0.0</span>   Min.   <span class="operator">:</span><span class="number">1.80</span>   Min.   <span class="operator">:</span> <span class="number">1.50</span>  </span><br><span class="line"> progabide<span class="operator">:</span><span class="number">31</span>   <span class="number">1</span>st Qu.<span class="operator">:</span> <span class="number">11.5</span>   <span class="number">1</span>st Qu.<span class="operator">:</span> <span class="number">11.5</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">2.30</span>   <span class="number">1</span>st Qu.<span class="operator">:</span> <span class="number">3.00</span>  </span><br><span class="line">                Median <span class="operator">:</span> <span class="number">16.0</span>   Median <span class="operator">:</span> <span class="number">16.0</span>   Median <span class="operator">:</span><span class="number">2.80</span>   Median <span class="operator">:</span> <span class="number">5.50</span>  </span><br><span class="line">                Mean   <span class="operator">:</span> <span class="number">33.0</span>   Mean   <span class="operator">:</span> <span class="number">33.0</span>   Mean   <span class="operator">:</span><span class="number">2.83</span>   Mean   <span class="operator">:</span> <span class="number">7.81</span>  </span><br><span class="line">                <span class="number">3</span>rd Qu.<span class="operator">:</span> <span class="number">36.0</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span> <span class="number">36.0</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">3.20</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">10.25</span>  </span><br><span class="line">                Max.   <span class="operator">:</span><span class="number">302.0</span>   Max.   <span class="operator">:</span><span class="number">302.0</span>   Max.   <span class="operator">:</span><span class="number">4.20</span>   Max.   <span class="operator">:</span><span class="number">37.75</span>  </span><br><span class="line"><span class="operator">&gt;</span> attach<span class="punctuation">(</span>breslow.dat<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fit <span class="operator">&lt;-</span> glm<span class="punctuation">(</span>sumY <span class="operator">~</span> Base <span class="operator">+</span>Trt <span class="operator">+</span> Age<span class="punctuation">,</span>data<span class="operator">=</span>breslow.dat<span class="punctuation">,</span>family <span class="operator">=</span> poisson<span class="punctuation">(</span>link <span class="operator">=</span> <span class="string">&quot;log&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="comment"># 通过glm函数进行拟合泊松回归</span></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">glm<span class="punctuation">(</span>formula <span class="operator">=</span> sumY <span class="operator">~</span> Base <span class="operator">+</span> Trt <span class="operator">+</span> Age<span class="punctuation">,</span> family <span class="operator">=</span> poisson<span class="punctuation">(</span>link <span class="operator">=</span> <span class="string">&quot;log&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line">    data <span class="operator">=</span> breslow.dat<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Deviance Residuals<span class="operator">:</span>  <span class="comment"># 残差统计量</span></span><br><span class="line">   Min      <span class="number">1</span>Q  Median      <span class="number">3</span>Q     Max  </span><br><span class="line"><span class="operator">-</span><span class="number">6.057</span>  <span class="operator">-</span><span class="number">2.043</span>  <span class="operator">-</span><span class="number">0.940</span>   <span class="number">0.793</span>  <span class="number">11.006</span>  </span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span> <span class="comment">#系数</span></span><br><span class="line">              Estimate Std. Error z value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="operator">|</span>z<span class="operator">|</span><span class="punctuation">)</span>    </span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>   <span class="number">1.948826</span>   <span class="number">0.135619</span>   <span class="number">14.37</span>  <span class="operator">&lt;</span> <span class="number">2e-16</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Base          <span class="number">0.022652</span>   <span class="number">0.000509</span>   <span class="number">44.48</span>  <span class="operator">&lt;</span> <span class="number">2e-16</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Trtprogabide <span class="operator">-</span><span class="number">0.152701</span>   <span class="number">0.047805</span>   <span class="operator">-</span><span class="number">3.19</span>   <span class="number">0.0014</span> <span class="operator">*</span><span class="operator">*</span> </span><br><span class="line">Age           <span class="number">0.022740</span>   <span class="number">0.004024</span>    <span class="number">5.65</span>  <span class="number">1.6e-08</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">(</span>Dispersion parameter <span class="keyword">for</span> poisson family taken to be <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">    Null deviance<span class="operator">:</span> <span class="number">2122.73</span>  on <span class="number">58</span>  degrees of freedom</span><br><span class="line">Residual deviance<span class="operator">:</span>  <span class="number">559.44</span>  on <span class="number">55</span>  degrees of freedom</span><br><span class="line">AIC<span class="operator">:</span> <span class="number">850.7</span></span><br><span class="line"></span><br><span class="line">Number of Fisher Scoring iterations<span class="operator">:</span> <span class="number">5</span></span><br><span class="line"><span class="operator">&gt;</span> coef<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">(</span>Intercept<span class="punctuation">)</span>         Base Trtprogabide          Age </span><br><span class="line">  <span class="number">1.94882593</span>   <span class="number">0.02265174</span>  <span class="operator">-</span><span class="number">0.15270095</span>   <span class="number">0.02274013</span> </span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">exp</span><span class="punctuation">(</span>coef<span class="punctuation">(</span>fit<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">(</span>Intercept<span class="punctuation">)</span>         Base Trtprogabide          Age </span><br><span class="line">   <span class="number">7.0204403</span>    <span class="number">1.0229102</span>    <span class="number">0.8583864</span>    <span class="number">1.0230007</span> </span><br></pre></td></tr></table></figure><p><code>family = poisson(link = &quot;log&quot;)</code>是广义线性模型中泊松回归的写法。</p><p>在线性回归中使用的函数，在广义线性模型中都可以使用。例如<code>coef</code>函数可以获取模型的系数，在poisson回归中，因变量以条件均值的对数形式来建模，年龄的回归参数为0.02274013，这表明保持其他预测变量不变，年龄每增加一岁，癫痫病发病数的对数均值将相应地增加0.02274013，截距项表示当预测变量都为0的时候，癫痫病发病数的对数均值。因为年龄都不可能为0，并且调查对象的基础癫痫病发病数均不为0，因此截距无意义。通常在因变量初始尺度上解的回归系数比较困难，因为是对数形式，所以再对其取指数，使用<code>exp</code>函数，可以看到保持其他变量不变，年龄增加一岁期望的癫痫病发病数将乘以1.0230007。说明年龄增加，和较高的癫痫病发病数相关联。一单位治疗条件<code>Trt</code>的变化，平均的癫痫病发病数将乘以0.8583864，也就是说保持基础癫痫病发病数和年龄不变，服药组相对于安慰剂发病率降低了20%，药物是有效的。</p><h3 id="7-2-Logistic回归">7.2 Logistic回归</h3><p>当通过一系列连续型或类别型预测变量来预测二值型结果变量时，Logistic回归是一个非常有用的工具。</p><p>二值型变量在现实为有还是无，是一种二项分布，在现实中很多。</p><p>根据危险因素预测某疾病发生的概率。例如，想探讨胃癌发生的危险因素，可以选择两组人群，一组是胃癌组，一组是非胃癌组，两组人群肯定有不同的体征和生活方式等。这里的因变量就是是否胃癌，即“是”或“否”，为两分类变量，自变量就可以包括很多了，例如年龄、性别、饮食习惯、幽门螺杆菌感染等。自变量既可以是连续的，也可以是分类的。通过Logistic回归分析，就可以大致了解到底哪些因素是胃癌的危险因素。</p><p>这里使用<code>AER</code>包中的<code>Affairs</code>数据集为例：</p><p>这个数据集从601个参与者中搜集了9个变量，包括一年来婚外情的频率、参与者的性别、年龄、婚龄、是否有小孩、宗教信仰、教育、职业、对婚姻的自我评分。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> data<span class="punctuation">(</span><span class="string">&quot;Affairs&quot;</span><span class="punctuation">,</span>package <span class="operator">=</span> <span class="string">&quot;AER&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>Affairs<span class="punctuation">)</span></span><br><span class="line">    affairs          gender         age         yearsmarried    children  religiousness     education    </span><br><span class="line"> Min.   <span class="operator">:</span> <span class="number">0.000</span>   female<span class="operator">:</span><span class="number">315</span>   Min.   <span class="operator">:</span><span class="number">17.50</span>   Min.   <span class="operator">:</span> <span class="number">0.125</span>   no <span class="operator">:</span><span class="number">171</span>   Min.   <span class="operator">:</span><span class="number">1.000</span>   Min.   <span class="operator">:</span> <span class="number">9.00</span>  </span><br><span class="line"> <span class="number">1</span>st Qu.<span class="operator">:</span> <span class="number">0.000</span>   male  <span class="operator">:</span><span class="number">286</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">27.00</span>   <span class="number">1</span>st Qu.<span class="operator">:</span> <span class="number">4.000</span>   yes<span class="operator">:</span><span class="number">430</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">2.000</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">14.00</span>  </span><br><span class="line"> Median <span class="operator">:</span> <span class="number">0.000</span>                Median <span class="operator">:</span><span class="number">32.00</span>   Median <span class="operator">:</span> <span class="number">7.000</span>             Median <span class="operator">:</span><span class="number">3.000</span>   Median <span class="operator">:</span><span class="number">16.00</span>  </span><br><span class="line"> Mean   <span class="operator">:</span> <span class="number">1.456</span>                Mean   <span class="operator">:</span><span class="number">32.49</span>   Mean   <span class="operator">:</span> <span class="number">8.178</span>             Mean   <span class="operator">:</span><span class="number">3.116</span>   Mean   <span class="operator">:</span><span class="number">16.17</span>  </span><br><span class="line"> <span class="number">3</span>rd Qu.<span class="operator">:</span> <span class="number">0.000</span>                <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">37.00</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">15.000</span>             <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">4.000</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">18.00</span>  </span><br><span class="line"> Max.   <span class="operator">:</span><span class="number">12.000</span>                Max.   <span class="operator">:</span><span class="number">57.00</span>   Max.   <span class="operator">:</span><span class="number">15.000</span>             Max.   <span class="operator">:</span><span class="number">5.000</span>   Max.   <span class="operator">:</span><span class="number">20.00</span>  </span><br><span class="line">   occupation        rating     </span><br><span class="line"> Min.   <span class="operator">:</span><span class="number">1.000</span>   Min.   <span class="operator">:</span><span class="number">1.000</span>  </span><br><span class="line"> <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">3.000</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">3.000</span>  </span><br><span class="line"> Median <span class="operator">:</span><span class="number">5.000</span>   Median <span class="operator">:</span><span class="number">4.000</span>  </span><br><span class="line"> Mean   <span class="operator">:</span><span class="number">4.195</span>   Mean   <span class="operator">:</span><span class="number">3.932</span>  </span><br><span class="line"> <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">6.000</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">5.000</span>  </span><br><span class="line"> Max.   <span class="operator">:</span><span class="number">7.000</span>   Max.   <span class="operator">:</span><span class="number">5.000</span>  </span><br><span class="line"><span class="operator">&gt;</span> table<span class="punctuation">(</span>Affairs<span class="operator">$</span>affairs<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">  <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">7</span>  <span class="number">12</span> </span><br><span class="line"><span class="number">451</span>  <span class="number">34</span>  <span class="number">17</span>  <span class="number">19</span>  <span class="number">42</span>  <span class="number">38</span> </span><br><span class="line"><span class="operator">&gt;</span> prop.table<span class="punctuation">(</span>table<span class="punctuation">(</span>Affairs<span class="operator">$</span>affairs<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">         <span class="number">0</span>          <span class="number">1</span>          <span class="number">2</span>          <span class="number">3</span>          <span class="number">7</span>         <span class="number">12</span> </span><br><span class="line"><span class="number">0.75041597</span> <span class="number">0.05657238</span> <span class="number">0.02828619</span> <span class="number">0.03161398</span> <span class="number">0.06988353</span> <span class="number">0.06322795</span> </span><br><span class="line"><span class="operator">&gt;</span> prop.table<span class="punctuation">(</span>table<span class="punctuation">(</span>Affairs<span class="operator">$</span>gender<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">   female      male </span><br><span class="line"><span class="number">0.5241265</span> <span class="number">0.4758735</span> </span><br><span class="line"><span class="operator">&gt;</span> Affairs<span class="operator">$</span>ynaffair<span class="punctuation">[</span>Affairs<span class="operator">$</span>affairs <span class="operator">&gt;</span> <span class="number">0</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> <span class="number">1</span></span><br><span class="line"><span class="operator">&gt;</span> Affairs<span class="operator">$</span>ynaffair<span class="punctuation">[</span>Affairs<span class="operator">$</span>affairs <span class="operator">==</span> <span class="number">0</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> <span class="number">0</span></span><br><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>Affairs<span class="punctuation">)</span></span><br><span class="line">   affairs gender age yearsmarried children religiousness education occupation rating ynaffair</span><br><span class="line"><span class="number">4</span>        <span class="number">0</span>   male  <span class="number">37</span>        <span class="number">10.00</span>       no             <span class="number">3</span>        <span class="number">18</span>          <span class="number">7</span>      <span class="number">4</span>        <span class="number">0</span></span><br><span class="line"><span class="number">5</span>        <span class="number">0</span> female  <span class="number">27</span>         <span class="number">4.00</span>       no             <span class="number">4</span>        <span class="number">14</span>          <span class="number">6</span>      <span class="number">4</span>        <span class="number">0</span></span><br><span class="line"><span class="number">11</span>       <span class="number">0</span> female  <span class="number">32</span>        <span class="number">15.00</span>      yes             <span class="number">1</span>        <span class="number">12</span>          <span class="number">1</span>      <span class="number">4</span>        <span class="number">0</span></span><br><span class="line"><span class="number">16</span>       <span class="number">0</span>   male  <span class="number">57</span>        <span class="number">15.00</span>      yes             <span class="number">5</span>        <span class="number">18</span>          <span class="number">6</span>      <span class="number">5</span>        <span class="number">0</span></span><br><span class="line"><span class="number">23</span>       <span class="number">0</span>   male  <span class="number">22</span>         <span class="number">0.75</span>       no             <span class="number">2</span>        <span class="number">17</span>          <span class="number">6</span>      <span class="number">3</span>        <span class="number">0</span></span><br><span class="line"><span class="number">29</span>       <span class="number">0</span> female  <span class="number">32</span>         <span class="number">1.50</span>       no             <span class="number">2</span>        <span class="number">17</span>          <span class="number">5</span>      <span class="number">5</span>        <span class="number">0</span></span><br><span class="line"><span class="operator">&gt;</span> Affairs<span class="operator">$</span>ynaffair <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>Affairs<span class="operator">$</span>ynaffair<span class="punctuation">,</span> </span><br><span class="line"><span class="operator">+</span>                            levels<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line"><span class="operator">+</span>                            labels<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;No&quot;</span><span class="punctuation">,</span><span class="string">&quot;Yes&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> table<span class="punctuation">(</span>Affairs<span class="operator">$</span>ynaffair<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"> No Yes </span><br><span class="line"><span class="number">451</span> <span class="number">150</span> </span><br><span class="line"><span class="operator">&gt;</span> attach<span class="punctuation">(</span>Affairs<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fit <span class="operator">&lt;-</span> glm<span class="punctuation">(</span>ynaffair <span class="operator">~</span> gender <span class="operator">+</span> age <span class="operator">+</span> yearsmarried <span class="operator">+</span> children <span class="operator">+</span> </span><br><span class="line"><span class="operator">+</span>                religiousness <span class="operator">+</span> education <span class="operator">+</span> occupation <span class="operator">+</span>rating<span class="punctuation">,</span></span><br><span class="line"><span class="operator">+</span>            data<span class="operator">=</span>Affairs<span class="punctuation">,</span>family<span class="operator">=</span>binomial<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">glm<span class="punctuation">(</span>formula <span class="operator">=</span> ynaffair <span class="operator">~</span> gender <span class="operator">+</span> age <span class="operator">+</span> yearsmarried <span class="operator">+</span> children <span class="operator">+</span> </span><br><span class="line">    religiousness <span class="operator">+</span> education <span class="operator">+</span> occupation <span class="operator">+</span> rating<span class="punctuation">,</span> family <span class="operator">=</span> binomial<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line">    data <span class="operator">=</span> Affairs<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Deviance Residuals<span class="operator">:</span> </span><br><span class="line">    Min       <span class="number">1</span>Q   Median       <span class="number">3</span>Q      Max  </span><br><span class="line"><span class="operator">-</span><span class="number">1.5713</span>  <span class="operator">-</span><span class="number">0.7499</span>  <span class="operator">-</span><span class="number">0.5690</span>  <span class="operator">-</span><span class="number">0.2539</span>   <span class="number">2.5191</span>  </span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line">              Estimate Std. Error z value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="operator">|</span>z<span class="operator">|</span><span class="punctuation">)</span>    </span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>    <span class="number">1.37726</span>    <span class="number">0.88776</span>   <span class="number">1.551</span> <span class="number">0.120807</span>    </span><br><span class="line">gendermale     <span class="number">0.28029</span>    <span class="number">0.23909</span>   <span class="number">1.172</span> <span class="number">0.241083</span>    </span><br><span class="line">age           <span class="operator">-</span><span class="number">0.04426</span>    <span class="number">0.01825</span>  <span class="operator">-</span><span class="number">2.425</span> <span class="number">0.015301</span> <span class="operator">*</span>  </span><br><span class="line">yearsmarried   <span class="number">0.09477</span>    <span class="number">0.03221</span>   <span class="number">2.942</span> <span class="number">0.003262</span> <span class="operator">*</span><span class="operator">*</span> </span><br><span class="line">childrenyes    <span class="number">0.39767</span>    <span class="number">0.29151</span>   <span class="number">1.364</span> <span class="number">0.172508</span>    </span><br><span class="line">religiousness <span class="operator">-</span><span class="number">0.32472</span>    <span class="number">0.08975</span>  <span class="operator">-</span><span class="number">3.618</span> <span class="number">0.000297</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">education      <span class="number">0.02105</span>    <span class="number">0.05051</span>   <span class="number">0.417</span> <span class="number">0.676851</span>    </span><br><span class="line">occupation     <span class="number">0.03092</span>    <span class="number">0.07178</span>   <span class="number">0.431</span> <span class="number">0.666630</span>    </span><br><span class="line">rating        <span class="operator">-</span><span class="number">0.46845</span>    <span class="number">0.09091</span>  <span class="operator">-</span><span class="number">5.153</span> <span class="number">2.56e-07</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">(</span>Dispersion parameter <span class="keyword">for</span> binomial family taken to be <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">    Null deviance<span class="operator">:</span> <span class="number">675.38</span>  on <span class="number">600</span>  degrees of freedom</span><br><span class="line">Residual deviance<span class="operator">:</span> <span class="number">609.51</span>  on <span class="number">592</span>  degrees of freedom</span><br><span class="line">AIC<span class="operator">:</span> <span class="number">627.51</span></span><br><span class="line"></span><br><span class="line">Number of Fisher Scoring iterations<span class="operator">:</span> <span class="number">4</span></span><br><span class="line"><span class="operator">&gt;</span> fit1 <span class="operator">&lt;-</span> glm<span class="punctuation">(</span>ynaffair <span class="operator">~</span> age <span class="operator">+</span> yearsmarried <span class="operator">+</span> religiousness <span class="operator">+</span> </span><br><span class="line"><span class="operator">+</span>                 rating<span class="punctuation">,</span> data<span class="operator">=</span>Affairs<span class="punctuation">,</span> family<span class="operator">=</span>binomial<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit1<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Call<span class="operator">:</span></span><br><span class="line">glm<span class="punctuation">(</span>formula <span class="operator">=</span> ynaffair <span class="operator">~</span> age <span class="operator">+</span> yearsmarried <span class="operator">+</span> religiousness <span class="operator">+</span> </span><br><span class="line">    rating<span class="punctuation">,</span> family <span class="operator">=</span> binomial<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> data <span class="operator">=</span> Affairs<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Deviance Residuals<span class="operator">:</span> </span><br><span class="line">    Min       <span class="number">1</span>Q   Median       <span class="number">3</span>Q      Max  </span><br><span class="line"><span class="operator">-</span><span class="number">1.6278</span>  <span class="operator">-</span><span class="number">0.7550</span>  <span class="operator">-</span><span class="number">0.5701</span>  <span class="operator">-</span><span class="number">0.2624</span>   <span class="number">2.3998</span>  </span><br><span class="line"></span><br><span class="line">Coefficients<span class="operator">:</span></span><br><span class="line">              Estimate Std. Error z value Pr<span class="punctuation">(</span><span class="operator">&gt;</span><span class="operator">|</span>z<span class="operator">|</span><span class="punctuation">)</span>    </span><br><span class="line"><span class="punctuation">(</span>Intercept<span class="punctuation">)</span>    <span class="number">1.93083</span>    <span class="number">0.61032</span>   <span class="number">3.164</span> <span class="number">0.001558</span> <span class="operator">*</span><span class="operator">*</span> </span><br><span class="line">age           <span class="operator">-</span><span class="number">0.03527</span>    <span class="number">0.01736</span>  <span class="operator">-</span><span class="number">2.032</span> <span class="number">0.042127</span> <span class="operator">*</span>  </span><br><span class="line">yearsmarried   <span class="number">0.10062</span>    <span class="number">0.02921</span>   <span class="number">3.445</span> <span class="number">0.000571</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">religiousness <span class="operator">-</span><span class="number">0.32902</span>    <span class="number">0.08945</span>  <span class="operator">-</span><span class="number">3.678</span> <span class="number">0.000235</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">rating        <span class="operator">-</span><span class="number">0.46136</span>    <span class="number">0.08884</span>  <span class="operator">-</span><span class="number">5.193</span> <span class="number">2.06e-07</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">Signif. codes<span class="operator">:</span>  <span class="number">0</span> ‘<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.001</span> ‘<span class="operator">*</span><span class="operator">*</span>’ <span class="number">0.01</span> ‘<span class="operator">*</span>’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">(</span>Dispersion parameter <span class="keyword">for</span> binomial family taken to be <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">    Null deviance<span class="operator">:</span> <span class="number">675.38</span>  on <span class="number">600</span>  degrees of freedom</span><br><span class="line">Residual deviance<span class="operator">:</span> <span class="number">615.36</span>  on <span class="number">596</span>  degrees of freedom</span><br><span class="line">AIC<span class="operator">:</span> <span class="number">625.36</span></span><br><span class="line"></span><br><span class="line">Number of Fisher Scoring iterations<span class="operator">:</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><p>从回归系数的p-value可以看到，性别、是否有孩子、学历和职业对方程的贡献都不显著，说明出轨和这些关系不大。可以把这些变量去除，重新拟合一次，如<code>fit1</code>，在新模型中每个回归系数都非常显著，p-value均小于0.05，由于<code>fit</code>和<code>fit1</code>两个模型是嵌套关系，可以使用<code>anova</code>函数对它们进行比较。对于广义线性回归可以使用卡方检验。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> anova<span class="punctuation">(</span>fit<span class="punctuation">,</span> fit1<span class="punctuation">,</span> test<span class="operator">=</span><span class="string">&quot;Chisq&quot;</span><span class="punctuation">)</span></span><br><span class="line">Analysis of Deviance Table</span><br><span class="line"></span><br><span class="line">Model <span class="number">1</span><span class="operator">:</span> ynaffair <span class="operator">~</span> gender <span class="operator">+</span> age <span class="operator">+</span> yearsmarried <span class="operator">+</span> children <span class="operator">+</span> religiousness <span class="operator">+</span> </span><br><span class="line">    education <span class="operator">+</span> occupation <span class="operator">+</span> rating</span><br><span class="line">Model <span class="number">2</span><span class="operator">:</span> ynaffair <span class="operator">~</span> age <span class="operator">+</span> yearsmarried <span class="operator">+</span> religiousness <span class="operator">+</span> rating</span><br><span class="line">  Resid. Df Resid. Dev Df Deviance Pr<span class="punctuation">(</span><span class="operator">&gt;</span>Chi<span class="punctuation">)</span></span><br><span class="line"><span class="number">1</span>       <span class="number">592</span>     <span class="number">609.51</span>                     </span><br><span class="line"><span class="number">2</span>       <span class="number">596</span>     <span class="number">615.36</span> <span class="operator">-</span><span class="number">4</span>  <span class="operator">-</span><span class="number">5.8474</span>   <span class="number">0.2108</span></span><br></pre></td></tr></table></figure><p><code>p-value</code>为0.21，卡方检验不显著。证明两次结果差别不大。说明只有四个预测变量的新模型比前面9个完整预测的模型拟合的程度好，所以性别、是否有孩子、学历和职业变量不会显著提高方程的预测精度。可以把这些变量去除掉。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> coef<span class="punctuation">(</span>fit1<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">(</span>Intercept<span class="punctuation">)</span>           age  yearsmarried religiousness        rating </span><br><span class="line">   <span class="number">1.93083017</span>   <span class="operator">-</span><span class="number">0.03527112</span>    <span class="number">0.10062274</span>   <span class="operator">-</span><span class="number">0.32902386</span>   <span class="operator">-</span><span class="number">0.46136144</span> </span><br></pre></td></tr></table></figure><p>回归系数可以看出，在Logistic回归中，响应变量是y为e的对数优势比，回归系数的含义是当其他预测变量不变时，一单位预测变量的变化，可能引起的响应变化对数优势比的变化，由于使用了对数优势比，再对其使用指数运算，回到正常模式：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="built_in">exp</span><span class="punctuation">(</span>coef<span class="punctuation">(</span>fit1<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">(</span>Intercept<span class="punctuation">)</span>           age  yearsmarried religiousness        rating </span><br><span class="line">    <span class="number">6.8952321</span>     <span class="number">0.9653437</span>     <span class="number">1.1058594</span>     <span class="number">0.7196258</span>     <span class="number">0.6304248</span> </span><br></pre></td></tr></table></figure><p>可以看到，婚龄增加一年，婚外情的优势比将乘以1.1058594，相反年龄增加一岁，婚外情的优势比将乘以0.9653437，因此随着婚龄的增加，年龄和宗教信仰与婚姻评分的降低，婚外情优势比将上升。因为预测变量不能等于0，截距项在这里没有意义。</p><p>对新数据进行验证，首先创建包含感兴趣变量值的虚拟数据集，为了方便都取数据的平均值：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> testdata <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>rating <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">,</span> <span class="number">3</span><span class="punctuation">,</span> <span class="number">4</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line"><span class="operator">+</span>                        age <span class="operator">=</span> mean<span class="punctuation">(</span>Affairs<span class="operator">$</span>age<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line"><span class="operator">+</span>                        yearsmarried <span class="operator">=</span> mean<span class="punctuation">(</span>Affairs<span class="operator">$</span>yearsmarried<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line"><span class="operator">+</span>                        religiousness <span class="operator">=</span> mean<span class="punctuation">(</span>Affairs<span class="operator">$</span>religiousness<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> testdata</span><br><span class="line">  rating      age yearsmarried religiousness</span><br><span class="line"><span class="number">1</span>      <span class="number">1</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span></span><br><span class="line"><span class="number">2</span>      <span class="number">2</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span></span><br><span class="line"><span class="number">3</span>      <span class="number">3</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span></span><br><span class="line"><span class="number">4</span>      <span class="number">4</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span></span><br><span class="line"><span class="number">5</span>      <span class="number">5</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span></span><br><span class="line"><span class="operator">&gt;</span> testdata<span class="operator">$</span>prob <span class="operator">&lt;-</span> predict<span class="punctuation">(</span>fit1<span class="punctuation">,</span> newdata<span class="operator">=</span>testdata<span class="punctuation">,</span> type<span class="operator">=</span><span class="string">&quot;response&quot;</span><span class="punctuation">)</span> <span class="comment"># 使用测试数据集，预测相应的概率</span></span><br><span class="line"><span class="operator">&gt;</span> testdata</span><br><span class="line">  rating      age yearsmarried religiousness      prob</span><br><span class="line"><span class="number">1</span>      <span class="number">1</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.5302296</span></span><br><span class="line"><span class="number">2</span>      <span class="number">2</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.4157377</span></span><br><span class="line"><span class="number">3</span>      <span class="number">3</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.3096712</span></span><br><span class="line"><span class="number">4</span>      <span class="number">4</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.2204547</span></span><br><span class="line"><span class="number">5</span>      <span class="number">5</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.1513079</span></span><br></pre></td></tr></table></figure><p>从上面的结果可以看出，对婚姻的评分越高，婚外情的概率越低。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> testdata <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>rating <span class="operator">=</span> mean<span class="punctuation">(</span>Affairs<span class="operator">$</span>rating<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line"><span class="operator">+</span>                        age <span class="operator">=</span> seq<span class="punctuation">(</span><span class="number">17</span><span class="punctuation">,</span> <span class="number">57</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line"><span class="operator">+</span>                        yearsmarried <span class="operator">=</span> mean<span class="punctuation">(</span>Affairs<span class="operator">$</span>yearsmarried<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line"><span class="operator">+</span>                        religiousness <span class="operator">=</span> mean<span class="punctuation">(</span>Affairs<span class="operator">$</span>religiousness<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> testdata</span><br><span class="line">   rating age yearsmarried religiousness</span><br><span class="line"><span class="number">1</span> <span class="number">3.93178</span>  <span class="number">17</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span></span><br><span class="line"><span class="number">2</span> <span class="number">3.93178</span>  <span class="number">27</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span></span><br><span class="line"><span class="number">3</span> <span class="number">3.93178</span>  <span class="number">37</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span></span><br><span class="line"><span class="number">4</span> <span class="number">3.93178</span>  <span class="number">47</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span></span><br><span class="line"><span class="number">5</span> <span class="number">3.93178</span>  <span class="number">57</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span></span><br><span class="line"><span class="operator">&gt;</span> testdata<span class="operator">$</span>prob <span class="operator">&lt;-</span> predict<span class="punctuation">(</span>fit1<span class="punctuation">,</span> newdata<span class="operator">=</span>testdata<span class="punctuation">,</span> type<span class="operator">=</span><span class="string">&quot;response&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> testdata</span><br><span class="line">   rating age yearsmarried religiousness      prob</span><br><span class="line"><span class="number">1</span> <span class="number">3.93178</span>  <span class="number">17</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.3350834</span></span><br><span class="line"><span class="number">2</span> <span class="number">3.93178</span>  <span class="number">27</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.2615373</span></span><br><span class="line"><span class="number">3</span> <span class="number">3.93178</span>  <span class="number">37</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.1992953</span></span><br><span class="line"><span class="number">4</span> <span class="number">3.93178</span>  <span class="number">47</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.1488796</span></span><br><span class="line"><span class="number">5</span> <span class="number">3.93178</span>  <span class="number">57</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.1094738</span></span><br></pre></td></tr></table></figure><p>从上面的结果可以看出，随着年龄的增长，婚外情的概率越低。</p><h3 id="7-3-主成分分析">7.3 主成分分析</h3><p>主成分分析和因子分析是统计学中非常重要的分析方法。</p><p>主成分分析，Principal Component Analysis，也简称为PCA，是一种数据降维技巧，它能将大量相关变量转化为一组很少的不相关变量，这些无关的变量称为主成分。主成分其实是对原始变量重新进行线性组合将原先众多具有一定相关性的指标，重新组合为一组的新的相互独立的综合指标。</p><p>主成分分析和因子分析模型图：</p><p><img src="https://vip2.loli.io/2023/03/13/7Hmi93gUVQXk48J.png" alt="image-20220814101044077"></p><p>主成分分析公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><msub><mi>X</mi><mn>1</mn></msub><mo>=</mo><msub><mi>a</mi><mn>2</mn></msub><msub><mi>X</mi><mn>2</mn></msub><mo>+</mo><msub><mi>a</mi><mn>3</mn></msub><msub><mi>X</mi><mn>3</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>a</mi><mi>k</mi></msub><msub><mi>X</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">PC_1=a_1X_1=a_2X_2+a_3X_3+\dots+a_kX_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>R内置的<code>princomp</code>函数可以进行主成分分析，也可以使用<code>psych</code>包中的函数进行分析，比R提供的内置函数更丰富。</p><p><strong>主成分分析与因子分析步骤</strong>：</p><p>1、数据预处理；<br>2、选择分析模型；<br>3、判断要选择的主成分/因子数目；<br>4、选择主成分/因子；<br>5、旋转主成分/因子；（可选）<br>6、解释结果；<br>7、计算主成分或因子得分。（可选）</p><p>这里使用<code>psych</code>包中的<code>USJudgeRatings</code>数据集进行演示：</p><p><img src="https://vip2.loli.io/2023/03/13/PI4AtdJ1ciEBbQ6.png" alt="image-20220814102123976"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>psych<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">载入程辑包：‘psych’</span><br><span class="line"></span><br><span class="line">The following object is masked from ‘package<span class="operator">:</span>car’<span class="operator">:</span></span><br><span class="line"></span><br><span class="line">    logit</span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> head<span class="punctuation">(</span>USJudgeRatings<span class="punctuation">)</span></span><br><span class="line">               CONT INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN</span><br><span class="line">AARONSON<span class="punctuation">,</span>L.H.   <span class="number">5.7</span>  <span class="number">7.9</span>  <span class="number">7.7</span>  <span class="number">7.3</span>  <span class="number">7.1</span>  <span class="number">7.4</span>  <span class="number">7.1</span>  <span class="number">7.1</span>  <span class="number">7.1</span>  <span class="number">7.0</span>  <span class="number">8.3</span>  <span class="number">7.8</span></span><br><span class="line">ALEXANDER<span class="punctuation">,</span>J.M.  <span class="number">6.8</span>  <span class="number">8.9</span>  <span class="number">8.8</span>  <span class="number">8.5</span>  <span class="number">7.8</span>  <span class="number">8.1</span>  <span class="number">8.0</span>  <span class="number">8.0</span>  <span class="number">7.8</span>  <span class="number">7.9</span>  <span class="number">8.5</span>  <span class="number">8.7</span></span><br><span class="line">ARMENTANO<span class="punctuation">,</span>A.J.  <span class="number">7.2</span>  <span class="number">8.1</span>  <span class="number">7.8</span>  <span class="number">7.8</span>  <span class="number">7.5</span>  <span class="number">7.6</span>  <span class="number">7.5</span>  <span class="number">7.5</span>  <span class="number">7.3</span>  <span class="number">7.4</span>  <span class="number">7.9</span>  <span class="number">7.8</span></span><br><span class="line">BERDON<span class="punctuation">,</span>R.I.     <span class="number">6.8</span>  <span class="number">8.8</span>  <span class="number">8.5</span>  <span class="number">8.8</span>  <span class="number">8.3</span>  <span class="number">8.5</span>  <span class="number">8.7</span>  <span class="number">8.7</span>  <span class="number">8.4</span>  <span class="number">8.5</span>  <span class="number">8.8</span>  <span class="number">8.7</span></span><br><span class="line">BRACKEN<span class="punctuation">,</span>J.J.    <span class="number">7.3</span>  <span class="number">6.4</span>  <span class="number">4.3</span>  <span class="number">6.5</span>  <span class="number">6.0</span>  <span class="number">6.2</span>  <span class="number">5.7</span>  <span class="number">5.7</span>  <span class="number">5.1</span>  <span class="number">5.3</span>  <span class="number">5.5</span>  <span class="number">4.8</span></span><br><span class="line">BURNS<span class="punctuation">,</span>E.B.      <span class="number">6.2</span>  <span class="number">8.8</span>  <span class="number">8.7</span>  <span class="number">8.5</span>  <span class="number">7.9</span>  <span class="number">8.0</span>  <span class="number">8.1</span>  <span class="number">8.0</span>  <span class="number">8.0</span>  <span class="number">8.0</span>  <span class="number">8.6</span>  <span class="number">8.6</span></span><br><span class="line"><span class="operator">&gt;</span> fa.parallel<span class="punctuation">(</span>USJudgeRatings<span class="punctuation">,</span>fa<span class="operator">=</span><span class="string">&quot;pc&quot;</span><span class="punctuation">,</span>n.iter <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span> <span class="comment"># 循环一百次</span></span><br><span class="line">Parallel analysis suggests that the number of factors <span class="operator">=</span>  <span class="literal">NA</span>  and the number of components <span class="operator">=</span>  <span class="number">1</span> </span><br><span class="line">Warning message<span class="operator">:</span></span><br><span class="line">In fa.stats<span class="punctuation">(</span>r <span class="operator">=</span> r<span class="punctuation">,</span> f <span class="operator">=</span> f<span class="punctuation">,</span> phi <span class="operator">=</span> phi<span class="punctuation">,</span> n.obs <span class="operator">=</span> n.obs<span class="punctuation">,</span> np.obs <span class="operator">=</span> np.obs<span class="punctuation">,</span>  <span class="operator">:</span></span><br><span class="line">  The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor score estimation method.</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/wxTyAsqg25XPWuF.png" alt="image-20220814102704549"></p><p>生成如上所示的碎石图。碎石图的判定规则为实线与x符号，特征值大于1准则和100次模拟的平行分析。图中虚线表示保存一个主成分，在y=1的水平线上有一个碎石和一条虚线，因此只要保留一个主成分即可。具体碎石图的原理，可以研究平衡分析法。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> pc <span class="operator">&lt;-</span> principal<span class="punctuation">(</span>USJudgeRatings<span class="punctuation">,</span>nfactors <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span>rotate <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span>scores <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> pc</span><br><span class="line">Principal Components Analysis</span><br><span class="line">Call<span class="operator">:</span> principal<span class="punctuation">(</span>r <span class="operator">=</span> USJudgeRatings<span class="punctuation">,</span> nfactors <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> rotate <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    scores <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">Standardized loadings <span class="punctuation">(</span>pattern matrix<span class="punctuation">)</span> based upon correlation matrix</span><br><span class="line">       PC1      h2     u2 com</span><br><span class="line">CONT <span class="operator">-</span><span class="number">0.01</span> <span class="number">9.6e-05</span> <span class="number">0.9999</span>   <span class="number">1</span></span><br><span class="line">INTG  <span class="number">0.92</span> <span class="number">8.4e-01</span> <span class="number">0.1563</span>   <span class="number">1</span></span><br><span class="line">DMNR  <span class="number">0.91</span> <span class="number">8.3e-01</span> <span class="number">0.1660</span>   <span class="number">1</span></span><br><span class="line">DILG  <span class="number">0.97</span> <span class="number">9.4e-01</span> <span class="number">0.0613</span>   <span class="number">1</span></span><br><span class="line">CFMG  <span class="number">0.96</span> <span class="number">9.3e-01</span> <span class="number">0.0723</span>   <span class="number">1</span></span><br><span class="line">DECI  <span class="number">0.96</span> <span class="number">9.2e-01</span> <span class="number">0.0764</span>   <span class="number">1</span></span><br><span class="line">PREP  <span class="number">0.98</span> <span class="number">9.7e-01</span> <span class="number">0.0299</span>   <span class="number">1</span></span><br><span class="line">FAMI  <span class="number">0.98</span> <span class="number">9.5e-01</span> <span class="number">0.0469</span>   <span class="number">1</span></span><br><span class="line">ORAL  <span class="number">1.00</span> <span class="number">9.9e-01</span> <span class="number">0.0091</span>   <span class="number">1</span></span><br><span class="line">WRIT  <span class="number">0.99</span> <span class="number">9.8e-01</span> <span class="number">0.0195</span>   <span class="number">1</span></span><br><span class="line">PHYS  <span class="number">0.89</span> <span class="number">8.0e-01</span> <span class="number">0.2014</span>   <span class="number">1</span></span><br><span class="line">RTEN  <span class="number">0.99</span> <span class="number">9.7e-01</span> <span class="number">0.0275</span>   <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                 PC1</span><br><span class="line">SS loadings    <span class="number">10.13</span></span><br><span class="line">Proportion Var  <span class="number">0.84</span></span><br><span class="line"></span><br><span class="line">Mean item complexity <span class="operator">=</span>  <span class="number">1</span></span><br><span class="line">Test of the hypothesis that <span class="number">1</span> component is sufficient.</span><br><span class="line"></span><br><span class="line">The root mean square of the residuals <span class="punctuation">(</span>RMSR<span class="punctuation">)</span> is  <span class="number">0.05</span> </span><br><span class="line"> with the empirical chi square  <span class="number">12.56</span>  with prob <span class="operator">&lt;</span>  <span class="number">1</span> </span><br><span class="line"></span><br><span class="line">Fit based upon off diagonal values <span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>PC1列包含了成分载荷，指观测变量与主成分的相关系数，如果提取不止一个主成分，比如将<code>nfactors</code>参数设置为2或3，还会有PC2，PC3等成分。</p><p>h2列指成分公因子的方差，它是主成分对每个变量的方差解释度。u2列指的是主成分唯一性，它是方差无法被主成分解释的比例，例如体能PHYS有89%的方差能够被第一主成分来解释。</p><p><code>SS loadings</code>表示与主成分相关联的特征值。指的是特定主成分相关联的标准化后的方差值。</p><p><code>Proportion Var</code>表示每个主成分对整个数据集的解释程度，可以看到第一主成分解释了12个变量84%的方差。</p><p>将<code>scores</code>参数设置为TRUE，就可以获得每个变量的得分，如下所示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> pc <span class="operator">&lt;-</span> principal<span class="punctuation">(</span>USJudgeRatings<span class="punctuation">,</span>nfactors <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span>rotate <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span>scores <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> pc</span><br><span class="line">Principal Components Analysis</span><br><span class="line">Call<span class="operator">:</span> principal<span class="punctuation">(</span>r <span class="operator">=</span> USJudgeRatings<span class="punctuation">,</span> nfactors <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> rotate <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    scores <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">Standardized loadings <span class="punctuation">(</span>pattern matrix<span class="punctuation">)</span> based upon correlation matrix</span><br><span class="line">       PC1      h2     u2 com</span><br><span class="line">CONT <span class="operator">-</span><span class="number">0.01</span> <span class="number">9.6e-05</span> <span class="number">0.9999</span>   <span class="number">1</span></span><br><span class="line">INTG  <span class="number">0.92</span> <span class="number">8.4e-01</span> <span class="number">0.1563</span>   <span class="number">1</span></span><br><span class="line">DMNR  <span class="number">0.91</span> <span class="number">8.3e-01</span> <span class="number">0.1660</span>   <span class="number">1</span></span><br><span class="line">DILG  <span class="number">0.97</span> <span class="number">9.4e-01</span> <span class="number">0.0613</span>   <span class="number">1</span></span><br><span class="line">CFMG  <span class="number">0.96</span> <span class="number">9.3e-01</span> <span class="number">0.0723</span>   <span class="number">1</span></span><br><span class="line">DECI  <span class="number">0.96</span> <span class="number">9.2e-01</span> <span class="number">0.0764</span>   <span class="number">1</span></span><br><span class="line">PREP  <span class="number">0.98</span> <span class="number">9.7e-01</span> <span class="number">0.0299</span>   <span class="number">1</span></span><br><span class="line">FAMI  <span class="number">0.98</span> <span class="number">9.5e-01</span> <span class="number">0.0469</span>   <span class="number">1</span></span><br><span class="line">ORAL  <span class="number">1.00</span> <span class="number">9.9e-01</span> <span class="number">0.0091</span>   <span class="number">1</span></span><br><span class="line">WRIT  <span class="number">0.99</span> <span class="number">9.8e-01</span> <span class="number">0.0195</span>   <span class="number">1</span></span><br><span class="line">PHYS  <span class="number">0.89</span> <span class="number">8.0e-01</span> <span class="number">0.2014</span>   <span class="number">1</span></span><br><span class="line">RTEN  <span class="number">0.99</span> <span class="number">9.7e-01</span> <span class="number">0.0275</span>   <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                 PC1</span><br><span class="line">SS loadings    <span class="number">10.13</span></span><br><span class="line">Proportion Var  <span class="number">0.84</span></span><br><span class="line"></span><br><span class="line">Mean item complexity <span class="operator">=</span>  <span class="number">1</span></span><br><span class="line">Test of the hypothesis that <span class="number">1</span> component is sufficient.</span><br><span class="line"></span><br><span class="line">The root mean square of the residuals <span class="punctuation">(</span>RMSR<span class="punctuation">)</span> is  <span class="number">0.05</span> </span><br><span class="line"> with the empirical chi square  <span class="number">12.56</span>  with prob <span class="operator">&lt;</span>  <span class="number">1</span> </span><br><span class="line"></span><br><span class="line">Fit based upon off diagonal values <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="operator">&gt;</span> pc<span class="operator">$</span>scores</span><br><span class="line">                        PC1</span><br><span class="line">AARONSON<span class="punctuation">,</span>L.H.   <span class="operator">-</span><span class="number">0.18400648</span></span><br><span class="line">ALEXANDER<span class="punctuation">,</span>J.M.   <span class="number">0.74765156</span></span><br><span class="line">ARMENTANO<span class="punctuation">,</span>A.J.   <span class="number">0.07072468</span></span><br><span class="line">BERDON<span class="punctuation">,</span>R.I.      <span class="number">1.13651889</span></span><br><span class="line">BRACKEN<span class="punctuation">,</span>J.J.    <span class="operator">-</span><span class="number">2.15848207</span></span><br><span class="line">BURNS<span class="punctuation">,</span>E.B.       <span class="number">0.76821742</span></span><br><span class="line">CALLAHAN<span class="punctuation">,</span>R.J.    <span class="number">1.22243063</span></span><br><span class="line">COHEN<span class="punctuation">,</span>S.S.      <span class="operator">-</span><span class="number">2.51260343</span></span><br><span class="line">DALY<span class="punctuation">,</span>J.J.        <span class="number">1.14963289</span></span><br><span class="line">DANNEHY<span class="punctuation">,</span>J.F.     <span class="number">0.32918115</span></span><br><span class="line">DEAN<span class="punctuation">,</span>H.H.       <span class="operator">-</span><span class="number">0.10589377</span></span><br><span class="line">DEVITA<span class="punctuation">,</span>H.J.     <span class="operator">-</span><span class="number">0.45257054</span></span><br><span class="line">DRISCOLL<span class="punctuation">,</span>P.J.   <span class="operator">-</span><span class="number">0.21014722</span></span><br><span class="line">GRILLO<span class="punctuation">,</span>A.E.     <span class="operator">-</span><span class="number">1.01338259</span></span><br><span class="line">HADDEN<span class="punctuation">,</span>W.L.JR.   <span class="number">0.42501399</span></span><br><span class="line">HAMILL<span class="punctuation">,</span>E.C.     <span class="operator">-</span><span class="number">0.13973759</span></span><br><span class="line">HEALEY.A.H.     <span class="operator">-</span><span class="number">0.91030943</span></span><br><span class="line">HULL<span class="punctuation">,</span>T.C.       <span class="operator">-</span><span class="number">0.22553233</span></span><br><span class="line">LEVINE<span class="punctuation">,</span>I.        <span class="number">0.20145341</span></span><br><span class="line">LEVISTER<span class="punctuation">,</span>R.L.   <span class="operator">-</span><span class="number">1.36839157</span></span><br><span class="line">MARTIN<span class="punctuation">,</span>L.F.     <span class="operator">-</span><span class="number">0.57128247</span></span><br><span class="line">MCGRATH<span class="punctuation">,</span>J.F.    <span class="operator">-</span><span class="number">0.97984173</span></span><br><span class="line">MIGNONE<span class="punctuation">,</span>A.F.    <span class="operator">-</span><span class="number">1.99621925</span></span><br><span class="line">MISSAL<span class="punctuation">,</span>H.M.     <span class="operator">-</span><span class="number">0.02581675</span></span><br><span class="line">MULVEY<span class="punctuation">,</span>H.M.      <span class="number">1.05284946</span></span><br><span class="line">NARUK<span class="punctuation">,</span>H.J.       <span class="number">1.42897516</span></span><br><span class="line">O<span class="string">&#x27;BRIEN,F.J.     0.47123628</span></span><br><span class="line"><span class="string">O&#x27;</span>SULLIVAN<span class="punctuation">,</span>T.J.  <span class="number">1.09004545</span></span><br><span class="line">PASKEY<span class="punctuation">,</span>L.        <span class="number">0.59472217</span></span><br><span class="line">RUBINOW<span class="punctuation">,</span>J.E.     <span class="number">1.50120742</span></span><br><span class="line">SADEN.G.A.       <span class="number">0.34527687</span></span><br><span class="line">SATANIELLO<span class="punctuation">,</span>A.G.  <span class="number">0.17036943</span></span><br><span class="line">SHEA<span class="punctuation">,</span>D.M.        <span class="number">0.81143377</span></span><br><span class="line">SHEA<span class="punctuation">,</span>J.F.JR.     <span class="number">1.12983152</span></span><br><span class="line">SIDOR<span class="punctuation">,</span>W.J.      <span class="operator">-</span><span class="number">2.15582532</span></span><br><span class="line">SPEZIALE<span class="punctuation">,</span>J.A.    <span class="number">0.63632965</span></span><br><span class="line">SPONZO<span class="punctuation">,</span>M.J.      <span class="number">0.37901740</span></span><br><span class="line">STAPLETON<span class="punctuation">,</span>J.F.   <span class="number">0.22614913</span></span><br><span class="line">TESTO<span class="punctuation">,</span>R.J.      <span class="operator">-</span><span class="number">0.66166162</span></span><br><span class="line">TIERNEY<span class="punctuation">,</span>W.L.JR.  <span class="number">0.42466794</span></span><br><span class="line">WALL<span class="punctuation">,</span>R.A.       <span class="operator">-</span><span class="number">0.81315467</span></span><br><span class="line">WRIGHT<span class="punctuation">,</span>D.B.      <span class="number">0.45956919</span></span><br><span class="line">ZARRILLI<span class="punctuation">,</span>K.J.   <span class="operator">-</span><span class="number">0.28764663</span></span><br></pre></td></tr></table></figure><p>再看第二个案例：<code>Harman23.cor</code>数据集</p><p><img src="https://vip2.loli.io/2023/03/13/UVKns8k7fgjWxM4.png" alt="image-20220814105148861"></p><p><code>Harman23.cor</code>数据集包含了305个女孩8个身体测量指标。在这个例子中，数据集由变量的相关系数组成，而不是原始数据集，用主成分分析，使用较少的变量替换原始身体指标。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> Harman23.cor</span><br><span class="line"><span class="operator">$</span>cov</span><br><span class="line">               height arm.span forearm lower.leg weight bitro.diameter chest.girth chest.width</span><br><span class="line">height          <span class="number">1.000</span>    <span class="number">0.846</span>   <span class="number">0.805</span>     <span class="number">0.859</span>  <span class="number">0.473</span>          <span class="number">0.398</span>       <span class="number">0.301</span>       <span class="number">0.382</span></span><br><span class="line">arm.span        <span class="number">0.846</span>    <span class="number">1.000</span>   <span class="number">0.881</span>     <span class="number">0.826</span>  <span class="number">0.376</span>          <span class="number">0.326</span>       <span class="number">0.277</span>       <span class="number">0.415</span></span><br><span class="line">forearm         <span class="number">0.805</span>    <span class="number">0.881</span>   <span class="number">1.000</span>     <span class="number">0.801</span>  <span class="number">0.380</span>          <span class="number">0.319</span>       <span class="number">0.237</span>       <span class="number">0.345</span></span><br><span class="line">lower.leg       <span class="number">0.859</span>    <span class="number">0.826</span>   <span class="number">0.801</span>     <span class="number">1.000</span>  <span class="number">0.436</span>          <span class="number">0.329</span>       <span class="number">0.327</span>       <span class="number">0.365</span></span><br><span class="line">weight          <span class="number">0.473</span>    <span class="number">0.376</span>   <span class="number">0.380</span>     <span class="number">0.436</span>  <span class="number">1.000</span>          <span class="number">0.762</span>       <span class="number">0.730</span>       <span class="number">0.629</span></span><br><span class="line">bitro.diameter  <span class="number">0.398</span>    <span class="number">0.326</span>   <span class="number">0.319</span>     <span class="number">0.329</span>  <span class="number">0.762</span>          <span class="number">1.000</span>       <span class="number">0.583</span>       <span class="number">0.577</span></span><br><span class="line">chest.girth     <span class="number">0.301</span>    <span class="number">0.277</span>   <span class="number">0.237</span>     <span class="number">0.327</span>  <span class="number">0.730</span>          <span class="number">0.583</span>       <span class="number">1.000</span>       <span class="number">0.539</span></span><br><span class="line">chest.width     <span class="number">0.382</span>    <span class="number">0.415</span>   <span class="number">0.345</span>     <span class="number">0.365</span>  <span class="number">0.629</span>          <span class="number">0.577</span>       <span class="number">0.539</span>       <span class="number">1.000</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>center</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>n.obs</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">305</span></span><br><span class="line"><span class="operator">&gt;</span> fa.parallel<span class="punctuation">(</span>Harman23.cor<span class="operator">$</span>cov<span class="punctuation">,</span>n.obs <span class="operator">=</span> <span class="number">302</span><span class="punctuation">,</span>fa<span class="operator">=</span><span class="string">&quot;pc&quot;</span><span class="punctuation">,</span>n.iter <span class="operator">=</span> <span class="number">100</span><span class="punctuation">,</span>show.legend <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span> <span class="comment"># 绘制碎石图，n.obs为样本大小</span></span><br><span class="line">Parallel analysis suggests that the number of factors <span class="operator">=</span>  <span class="literal">NA</span>  and the number of components <span class="operator">=</span>  <span class="number">2</span> </span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/r3E6pfPJlmMaKjs.png" alt="image-20220814105944527"></p><p>图中有两个碎石在y=1之上，所以需要两个主成分。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> pc <span class="operator">&lt;-</span> principal<span class="punctuation">(</span>Harman23.cor<span class="operator">$</span>cov<span class="punctuation">,</span>nfactors <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span>rotate <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> pc</span><br><span class="line">Principal Components Analysis</span><br><span class="line">Call<span class="operator">:</span> principal<span class="punctuation">(</span>r <span class="operator">=</span> Harman23.cor<span class="operator">$</span>cov<span class="punctuation">,</span> nfactors <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> rotate <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">)</span></span><br><span class="line">Standardized loadings <span class="punctuation">(</span>pattern matrix<span class="punctuation">)</span> based upon correlation matrix</span><br><span class="line">                PC1   PC2   h2    u2 com</span><br><span class="line">height         <span class="number">0.86</span> <span class="operator">-</span><span class="number">0.37</span> <span class="number">0.88</span> <span class="number">0.123</span> <span class="number">1.4</span></span><br><span class="line">arm.span       <span class="number">0.84</span> <span class="operator">-</span><span class="number">0.44</span> <span class="number">0.90</span> <span class="number">0.097</span> <span class="number">1.5</span></span><br><span class="line">forearm        <span class="number">0.81</span> <span class="operator">-</span><span class="number">0.46</span> <span class="number">0.87</span> <span class="number">0.128</span> <span class="number">1.6</span></span><br><span class="line">lower.leg      <span class="number">0.84</span> <span class="operator">-</span><span class="number">0.40</span> <span class="number">0.86</span> <span class="number">0.139</span> <span class="number">1.4</span></span><br><span class="line">weight         <span class="number">0.76</span>  <span class="number">0.52</span> <span class="number">0.85</span> <span class="number">0.150</span> <span class="number">1.8</span></span><br><span class="line">bitro.diameter <span class="number">0.67</span>  <span class="number">0.53</span> <span class="number">0.74</span> <span class="number">0.261</span> <span class="number">1.9</span></span><br><span class="line">chest.girth    <span class="number">0.62</span>  <span class="number">0.58</span> <span class="number">0.72</span> <span class="number">0.283</span> <span class="number">2.0</span></span><br><span class="line">chest.width    <span class="number">0.67</span>  <span class="number">0.42</span> <span class="number">0.62</span> <span class="number">0.375</span> <span class="number">1.7</span></span><br><span class="line"></span><br><span class="line">                       PC1  PC2</span><br><span class="line">SS loadings           <span class="number">4.67</span> <span class="number">1.77</span></span><br><span class="line">Proportion Var        <span class="number">0.58</span> <span class="number">0.22</span></span><br><span class="line">Cumulative Var        <span class="number">0.58</span> <span class="number">0.81</span></span><br><span class="line">Proportion Explained  <span class="number">0.73</span> <span class="number">0.27</span></span><br><span class="line">Cumulative Proportion <span class="number">0.73</span> <span class="number">1.00</span></span><br><span class="line"></span><br><span class="line">Mean item complexity <span class="operator">=</span>  <span class="number">1.7</span></span><br><span class="line">Test of the hypothesis that <span class="number">2</span> components are sufficient.</span><br><span class="line"></span><br><span class="line">The root mean square of the residuals <span class="punctuation">(</span>RMSR<span class="punctuation">)</span> is  <span class="number">0.05</span> </span><br><span class="line"></span><br><span class="line">Fit based upon off diagonal values <span class="operator">=</span> <span class="number">0.99</span></span><br></pre></td></tr></table></figure><p>结果显示第一主成分解释了身体测量指标58%的方差，第二主成分解释了身体测量指标22%的方差，两者总共解释了81%的方差（Cumulative Var），对于高度h变量，两者共解释了88%的方差。</p><p>旋转是一系列将成分载荷变得更容易解释的数学方法，它们尽可能地对成分去噪，旋转方法有两种，使旋转的成分保持不相关的正交旋转和让它们变得相关的斜交旋转。旋转方法也会依据去噪定义的不同而不同。最流行的正交旋转是方差极大旋转。它试图对载荷矩阵的列进行去噪，使得每个成分只是由一组有限的变量来解释。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> pc <span class="operator">&lt;-</span> principal<span class="punctuation">(</span>Harman23.cor<span class="operator">$</span>cov<span class="punctuation">,</span>nfactors <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span>rotate <span class="operator">=</span> <span class="string">&quot;varimax&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> pc</span><br><span class="line">Principal Components Analysis</span><br><span class="line">Call<span class="operator">:</span> principal<span class="punctuation">(</span>r <span class="operator">=</span> Harman23.cor<span class="operator">$</span>cov<span class="punctuation">,</span> nfactors <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> rotate <span class="operator">=</span> <span class="string">&quot;varimax&quot;</span><span class="punctuation">)</span></span><br><span class="line">Standardized loadings <span class="punctuation">(</span>pattern matrix<span class="punctuation">)</span> based upon correlation matrix</span><br><span class="line">                RC1  RC2   h2    u2 com</span><br><span class="line">height         <span class="number">0.90</span> <span class="number">0.25</span> <span class="number">0.88</span> <span class="number">0.123</span> <span class="number">1.2</span></span><br><span class="line">arm.span       <span class="number">0.93</span> <span class="number">0.19</span> <span class="number">0.90</span> <span class="number">0.097</span> <span class="number">1.1</span></span><br><span class="line">forearm        <span class="number">0.92</span> <span class="number">0.16</span> <span class="number">0.87</span> <span class="number">0.128</span> <span class="number">1.1</span></span><br><span class="line">lower.leg      <span class="number">0.90</span> <span class="number">0.22</span> <span class="number">0.86</span> <span class="number">0.139</span> <span class="number">1.1</span></span><br><span class="line">weight         <span class="number">0.26</span> <span class="number">0.88</span> <span class="number">0.85</span> <span class="number">0.150</span> <span class="number">1.2</span></span><br><span class="line">bitro.diameter <span class="number">0.19</span> <span class="number">0.84</span> <span class="number">0.74</span> <span class="number">0.261</span> <span class="number">1.1</span></span><br><span class="line">chest.girth    <span class="number">0.11</span> <span class="number">0.84</span> <span class="number">0.72</span> <span class="number">0.283</span> <span class="number">1.0</span></span><br><span class="line">chest.width    <span class="number">0.26</span> <span class="number">0.75</span> <span class="number">0.62</span> <span class="number">0.375</span> <span class="number">1.2</span></span><br><span class="line"></span><br><span class="line">                       RC1  RC2</span><br><span class="line">SS loadings           <span class="number">3.52</span> <span class="number">2.92</span></span><br><span class="line">Proportion Var        <span class="number">0.44</span> <span class="number">0.37</span></span><br><span class="line">Cumulative Var        <span class="number">0.44</span> <span class="number">0.81</span></span><br><span class="line">Proportion Explained  <span class="number">0.55</span> <span class="number">0.45</span></span><br><span class="line">Cumulative Proportion <span class="number">0.55</span> <span class="number">1.00</span></span><br><span class="line"></span><br><span class="line">Mean item complexity <span class="operator">=</span>  <span class="number">1.1</span></span><br><span class="line">Test of the hypothesis that <span class="number">2</span> components are sufficient.</span><br><span class="line"></span><br><span class="line">The root mean square of the residuals <span class="punctuation">(</span>RMSR<span class="punctuation">)</span> is  <span class="number">0.05</span> </span><br><span class="line"></span><br><span class="line">Fit based upon off diagonal values <span class="operator">=</span> <span class="number">0.99</span></span><br></pre></td></tr></table></figure><p>列的名字由PC变为RC，表示列的名字被旋转了，观察RC1列的载荷，可以看出第一主成分由前四个变量来解释，主要都是与高度相关的变量，RC2列的载荷表示第二主成分主要由变量5到变量8这四个变量来解释，主要都是与重量相关的变量。两个主成分仍不相关，对变量的解释性不变。这是因为变量的群组没有发生变化，另外两个主成分旋转后的累计方差解释性没有变化，还是81%。变的只是各个主成分对方差的解释度。成分1从58%变为44%，成分2从22%变为37%，各成分的方差解释度趋同，只能称它们为成分，而不是主成分。</p><h3 id="7-4-因子分析">7.4 因子分析</h3><p>探索性因子分析法Exploratory Factor Analysis，简称为EFA，是一系列用来发现一组变量的潜在结构的方法。它通过寻找一组更小的、潜在的或隐藏的结构来解释已观测到的、显式的变量间的关系。</p><p><img src="https://vip2.loli.io/2023/03/13/7Hmi93gUVQXk48J.png" alt="image-20220814101044077"></p><p>因子分析公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><msub><mi>F</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msub><mi>F</mi><mn>2</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>a</mi><mi>p</mi></msub><msub><mi>F</mi><mi>p</mi></msub><mo>+</mo><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i=a_1F_1+a_2F_2+\dots+a_pF_p+U_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>主成分分析公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><msub><mi>X</mi><mn>1</mn></msub><mo>=</mo><msub><mi>a</mi><mn>2</mn></msub><msub><mi>X</mi><mn>2</mn></msub><mo>+</mo><msub><mi>a</mi><mn>3</mn></msub><msub><mi>X</mi><mn>3</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>a</mi><mi>k</mi></msub><msub><mi>X</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">PC_1=a_1X_1=a_2X_2+a_3X_3+\dots+a_kX_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>比如：语文、数学、外语、物理、化学、生物、历史、地理、政治</p><p><strong>主成分分析</strong>：语文、数学、外语、文科或者理科</p><p><strong>因子分析</strong>：逻辑推理（数学、物理、化学，生物），语言天赋（语文、外语），逻辑分析（历史、政治、地理）。</p><p>主成分与因子分析比较</p><p>相同点：</p><ol><li><p>都对原始数据进行降维处理；</p></li><li><p>都消除了原始指标的相关性对综合评价所造成的信息重复的影响；</p></li><li><p>构造综合评价时所涉及的权数具有客观性；</p></li><li><p>在信息损失不大的前提下，减少了评价工作量。</p></li></ol><p>不同点：<br>主成分分析：</p><ol><li>用较少的变量表示原来的样本；</li><li>目的是样本数据信息损失最小的原则下，对高维变量进行降维。</li><li>参数估计，一般是求相关矩阵的特征值和相应的特征向量，取前几个计算主成分。</li><li>应用：应用较少变量来解释各个样本的特征。</li></ol><p>因子分析：</p><ol><li>用较少的因子表示原来的变量；</li><li>目的是尽可能保持原变量相互关系，寻找变量的公共因子；</li><li>参数估计，指定几个公因子，将其还原成相关系数矩阵，在和原样本相关矩阵最相似原则下，估计各个公因子的估计值；</li><li>应用：找到具有本质意义的少量因子来归纳原来变量的特征。</li></ol><p>因子分析的评价结果没有主成分分析准确，计算工作量也比主成分分析工作量大，但是公共因子比主成分更容易被解释。</p><p><strong>主成分分析与因子分析步骤</strong>：</p><p>1、数据预处理；<br>2、选择分析模型；<br>3、判断要选择的主成分/因子数目；<br>4、选择主成分/因子；<br>5、旋转主成分/因子；（可选）<br>6、解释结果；<br>7、计算主成分或因子得分。（可选）</p><p>也是通过碎石图判断选择因子的数目。</p><p>R内置的<code>factanal</code>函数可以进行因子分析，这里使用<code>psych</code>包中的<code>ability.cov</code>数据集进行示例演示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>psych<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> ability.cov</span><br><span class="line"><span class="operator">$</span>cov <span class="comment"># 这部分为协方差矩阵</span></span><br><span class="line">        general picture  blocks   maze reading   vocab</span><br><span class="line">general  <span class="number">24.641</span>   <span class="number">5.991</span>  <span class="number">33.520</span>  <span class="number">6.023</span>  <span class="number">20.755</span>  <span class="number">29.701</span></span><br><span class="line">picture   <span class="number">5.991</span>   <span class="number">6.700</span>  <span class="number">18.137</span>  <span class="number">1.782</span>   <span class="number">4.936</span>   <span class="number">7.204</span></span><br><span class="line">blocks   <span class="number">33.520</span>  <span class="number">18.137</span> <span class="number">149.831</span> <span class="number">19.424</span>  <span class="number">31.430</span>  <span class="number">50.753</span></span><br><span class="line">maze      <span class="number">6.023</span>   <span class="number">1.782</span>  <span class="number">19.424</span> <span class="number">12.711</span>   <span class="number">4.757</span>   <span class="number">9.075</span></span><br><span class="line">reading  <span class="number">20.755</span>   <span class="number">4.936</span>  <span class="number">31.430</span>  <span class="number">4.757</span>  <span class="number">52.604</span>  <span class="number">66.762</span></span><br><span class="line">vocab    <span class="number">29.701</span>   <span class="number">7.204</span>  <span class="number">50.753</span>  <span class="number">9.075</span>  <span class="number">66.762</span> <span class="number">135.292</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>center</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>n.obs</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">112</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>ability.cov</code>数据集：</p><p>112个人参与了六个测验，包括非语言的普通智力测验（general）、画图测验（picture）、积木图案测验（blocks）、迷津测验（maze）、阅读测验（reading）和词汇测验（vocab）。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> options<span class="punctuation">(</span>digits <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> covariances <span class="operator">&lt;-</span> ability.cov<span class="operator">$</span>cov</span><br><span class="line"><span class="operator">&gt;</span> correlations <span class="operator">&lt;-</span> cov2cor<span class="punctuation">(</span>covariances<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> correlations</span><br><span class="line">        general picture blocks maze reading vocab</span><br><span class="line">general    <span class="number">1.00</span>    <span class="number">0.47</span>   <span class="number">0.55</span> <span class="number">0.34</span>    <span class="number">0.58</span>  <span class="number">0.51</span></span><br><span class="line">picture    <span class="number">0.47</span>    <span class="number">1.00</span>   <span class="number">0.57</span> <span class="number">0.19</span>    <span class="number">0.26</span>  <span class="number">0.24</span></span><br><span class="line">blocks     <span class="number">0.55</span>    <span class="number">0.57</span>   <span class="number">1.00</span> <span class="number">0.45</span>    <span class="number">0.35</span>  <span class="number">0.36</span></span><br><span class="line">maze       <span class="number">0.34</span>    <span class="number">0.19</span>   <span class="number">0.45</span> <span class="number">1.00</span>    <span class="number">0.18</span>  <span class="number">0.22</span></span><br><span class="line">reading    <span class="number">0.58</span>    <span class="number">0.26</span>   <span class="number">0.35</span> <span class="number">0.18</span>    <span class="number">1.00</span>  <span class="number">0.79</span></span><br><span class="line">vocab      <span class="number">0.51</span>    <span class="number">0.24</span>   <span class="number">0.36</span> <span class="number">0.22</span>    <span class="number">0.79</span>  <span class="number">1.00</span></span><br><span class="line"><span class="operator">&gt;</span> fa.parallel<span class="punctuation">(</span>correlations<span class="punctuation">,</span>fa<span class="operator">=</span><span class="string">&quot;both&quot;</span><span class="punctuation">,</span>n.obs <span class="operator">=</span> <span class="number">112</span><span class="punctuation">,</span>n.iter <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span></span><br><span class="line">Parallel analysis suggests that the number of factors <span class="operator">=</span>  <span class="number">2</span>  and the number of components <span class="operator">=</span>  <span class="number">1</span> </span><br><span class="line">There were <span class="number">24</span> warnings <span class="punctuation">(</span>use warnings<span class="punctuation">(</span><span class="punctuation">)</span> to see them<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><code>fa.parallel</code>函数判断提取的因子数，将<code>fa</code>参数设置为<code>both</code>，表示既做主成分又做因子成分的碎石图，这是为了比较二者的区别，也可以单独设置为<code>pc</code>或<code>fa</code>。</p><p><img src="https://vip2.loli.io/2023/03/13/9YQZALlbXUWz8xa.png" alt="image-20220814151514520"></p><p>观察图中EFA的结果，显示需要提取两个因子，因子是图中三角形部分，碎石检验的前两个特征值都在拐角之上，并且大于基于100次模拟数据矩阵的特征值的均值，对于EFA，图中建议选取两个因子。接下来可以使用FA函数进行因子分析。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fa <span class="operator">&lt;-</span> fa<span class="punctuation">(</span>correlations<span class="punctuation">,</span>nfactors <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span>rotate <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span>fm<span class="operator">=</span><span class="string">&quot;pa&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fa</span><br><span class="line">Factor Analysis using method <span class="operator">=</span>  pa</span><br><span class="line">Call<span class="operator">:</span> fa<span class="punctuation">(</span>r <span class="operator">=</span> correlations<span class="punctuation">,</span> nfactors <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> rotate <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span> fm <span class="operator">=</span> <span class="string">&quot;pa&quot;</span><span class="punctuation">)</span></span><br><span class="line">Standardized loadings <span class="punctuation">(</span>pattern matrix<span class="punctuation">)</span> based upon correlation matrix</span><br><span class="line">         PA1   PA2   h2    u2 com</span><br><span class="line">general <span class="number">0.75</span>  <span class="number">0.07</span> <span class="number">0.57</span> <span class="number">0.432</span> <span class="number">1.0</span></span><br><span class="line">picture <span class="number">0.52</span>  <span class="number">0.32</span> <span class="number">0.38</span> <span class="number">0.623</span> <span class="number">1.7</span></span><br><span class="line">blocks  <span class="number">0.75</span>  <span class="number">0.52</span> <span class="number">0.83</span> <span class="number">0.166</span> <span class="number">1.8</span></span><br><span class="line">maze    <span class="number">0.39</span>  <span class="number">0.22</span> <span class="number">0.20</span> <span class="number">0.798</span> <span class="number">1.6</span></span><br><span class="line">reading <span class="number">0.81</span> <span class="operator">-</span><span class="number">0.51</span> <span class="number">0.91</span> <span class="number">0.089</span> <span class="number">1.7</span></span><br><span class="line">vocab   <span class="number">0.73</span> <span class="operator">-</span><span class="number">0.39</span> <span class="number">0.69</span> <span class="number">0.313</span> <span class="number">1.5</span></span><br><span class="line"></span><br><span class="line">                       PA1  PA2</span><br><span class="line">SS loadings           <span class="number">2.75</span> <span class="number">0.83</span></span><br><span class="line">Proportion Var        <span class="number">0.46</span> <span class="number">0.14</span></span><br><span class="line">Cumulative Var        <span class="number">0.46</span> <span class="number">0.60</span> <span class="comment"># 这两个因子解决了心理学测试60%的方差</span></span><br><span class="line">Proportion Explained  <span class="number">0.77</span> <span class="number">0.23</span></span><br><span class="line">Cumulative Proportion <span class="number">0.77</span> <span class="number">1.00</span></span><br><span class="line"></span><br><span class="line">Mean item complexity <span class="operator">=</span>  <span class="number">1.5</span></span><br><span class="line">Test of the hypothesis that <span class="number">2</span> factors are sufficient.</span><br><span class="line"></span><br><span class="line">The degrees of freedom <span class="keyword">for</span> the null model are  <span class="number">15</span>  and the objective <span class="keyword">function</span> was  <span class="number">2.5</span></span><br><span class="line">The degrees of freedom <span class="keyword">for</span> the model are <span class="number">4</span>  and the objective <span class="keyword">function</span> was  <span class="number">0.07</span> </span><br><span class="line"></span><br><span class="line">The root mean square of the residuals <span class="punctuation">(</span>RMSR<span class="punctuation">)</span> is  <span class="number">0.03</span> </span><br><span class="line">The df corrected root mean square of the residuals is  <span class="number">0.06</span> </span><br><span class="line"></span><br><span class="line">Fit based upon off diagonal values <span class="operator">=</span> <span class="number">0.99</span></span><br><span class="line">Measures of factor score adequacy             </span><br><span class="line">                                                   PA1  PA2</span><br><span class="line">Correlation of <span class="punctuation">(</span>regression<span class="punctuation">)</span> scores with factors   <span class="number">0.96</span> <span class="number">0.92</span></span><br><span class="line">Multiple R square of scores with factors          <span class="number">0.93</span> <span class="number">0.84</span></span><br><span class="line">Minimum correlation of possible factor scores     <span class="number">0.86</span> <span class="number">0.68</span></span><br></pre></td></tr></table></figure><p><code>fa</code>函数用法如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fa<span class="punctuation">(</span>r<span class="punctuation">,</span>nfactors<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span>n.obs <span class="operator">=</span> <span class="literal">NA</span><span class="punctuation">,</span>n.iter<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> rotate<span class="operator">=</span><span class="string">&quot;oblimin&quot;</span><span class="punctuation">,</span> scores<span class="operator">=</span><span class="string">&quot;regression&quot;</span><span class="punctuation">,</span> </span><br><span class="line">residuals<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span> SMC<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> covar<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span><span class="built_in">missing</span><span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span>impute<span class="operator">=</span><span class="string">&quot;median&quot;</span><span class="punctuation">,</span></span><br><span class="line">min.err <span class="operator">=</span> <span class="number">0.001</span><span class="punctuation">,</span>  max.iter <span class="operator">=</span> <span class="number">50</span><span class="punctuation">,</span>symmetric<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> warnings<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> fm<span class="operator">=</span><span class="string">&quot;minres&quot;</span><span class="punctuation">,</span></span><br><span class="line"> alpha<span class="operator">=</span><span class="number">.1</span><span class="punctuation">,</span>p<span class="operator">=</span><span class="number">.05</span><span class="punctuation">,</span>oblique.scores<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span>np.obs<span class="operator">=</span><span class="literal">NULL</span><span class="punctuation">,</span>use<span class="operator">=</span><span class="string">&quot;pairwise&quot;</span><span class="punctuation">,</span>cor<span class="operator">=</span><span class="string">&quot;cor&quot;</span><span class="punctuation">,</span></span><br><span class="line"> correct<span class="operator">=</span><span class="number">.5</span><span class="punctuation">,</span>weight<span class="operator">=</span><span class="literal">NULL</span><span class="punctuation">,</span>n.rotations<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span>hyper<span class="operator">=</span><span class="number">.15</span><span class="punctuation">,</span>...<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><code>r</code>是相关系数矩阵或原始数据矩阵，这里使用的是相关系数矩阵；<code>nfactors</code>设定提取的因子数；<code>n.obs</code>是观测数，也就是样本数；rotate设定旋转的方法；<code>scores</code>是是否计算因子得分，默认不计算；这些与主成分分析函数都是一致的，与PCA不同的是，提取公共因子的方法有很多，包括最大似然法、主轴迭代法、加权最小二乘法、广义加权最小二乘法和最小残差法，通过fm选项进行设置，默认使用的是极小残差法。这里选择使用主轴迭代法，将<code>fm</code>设置为<code>pa</code>。</p><p>这里不需要<code>summary</code>函数了，因为<code>summary</code>信息很少，都是统计信息。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fa<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Factor analysis with Call<span class="operator">:</span> fa<span class="punctuation">(</span>r <span class="operator">=</span> correlations<span class="punctuation">,</span> nfactors <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> rotate <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span> fm <span class="operator">=</span> <span class="string">&quot;pa&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Test of the hypothesis that <span class="number">2</span> factors are sufficient.</span><br><span class="line">The degrees of freedom <span class="keyword">for</span> the model is <span class="number">4</span>  and the objective <span class="keyword">function</span> was  <span class="number">0.07</span> </span><br><span class="line"></span><br><span class="line">The root mean square of the residuals <span class="punctuation">(</span>RMSA<span class="punctuation">)</span> is  <span class="number">0.03</span> </span><br><span class="line">The df corrected root mean square of the residuals is  <span class="number">0.06</span> </span><br></pre></td></tr></table></figure><p>下面介绍一下因子的旋转，和主成分旋转类似，也是希望成分载荷矩阵变为更容易解释的数学方法，可以使用正交旋转和斜交旋转两种方法。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fa.varimax <span class="operator">&lt;-</span> fa<span class="punctuation">(</span>correlations<span class="punctuation">,</span>nfactors <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span>rotate <span class="operator">=</span> <span class="string">&quot;varimax&quot;</span><span class="punctuation">,</span>fm<span class="operator">=</span><span class="string">&quot;pa&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fa.varimax</span><br><span class="line">Factor Analysis using method <span class="operator">=</span>  pa</span><br><span class="line">Call<span class="operator">:</span> fa<span class="punctuation">(</span>r <span class="operator">=</span> correlations<span class="punctuation">,</span> nfactors <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> rotate <span class="operator">=</span> <span class="string">&quot;varimax&quot;</span><span class="punctuation">,</span> fm <span class="operator">=</span> <span class="string">&quot;pa&quot;</span><span class="punctuation">)</span></span><br><span class="line">Standardized loadings <span class="punctuation">(</span>pattern matrix<span class="punctuation">)</span> based upon correlation matrix</span><br><span class="line">         PA1  PA2   h2    u2 com</span><br><span class="line">general <span class="number">0.49</span> <span class="number">0.57</span> <span class="number">0.57</span> <span class="number">0.432</span> <span class="number">2.0</span></span><br><span class="line">picture <span class="number">0.16</span> <span class="number">0.59</span> <span class="number">0.38</span> <span class="number">0.623</span> <span class="number">1.1</span></span><br><span class="line">blocks  <span class="number">0.18</span> <span class="number">0.89</span> <span class="number">0.83</span> <span class="number">0.166</span> <span class="number">1.1</span></span><br><span class="line">maze    <span class="number">0.13</span> <span class="number">0.43</span> <span class="number">0.20</span> <span class="number">0.798</span> <span class="number">1.2</span></span><br><span class="line">reading <span class="number">0.93</span> <span class="number">0.20</span> <span class="number">0.91</span> <span class="number">0.089</span> <span class="number">1.1</span></span><br><span class="line">vocab   <span class="number">0.80</span> <span class="number">0.23</span> <span class="number">0.69</span> <span class="number">0.313</span> <span class="number">1.2</span></span><br><span class="line"></span><br><span class="line">                       PA1  PA2</span><br><span class="line">SS loadings           <span class="number">1.83</span> <span class="number">1.75</span></span><br><span class="line">Proportion Var        <span class="number">0.30</span> <span class="number">0.29</span></span><br><span class="line">Cumulative Var        <span class="number">0.30</span> <span class="number">0.60</span></span><br><span class="line">Proportion Explained  <span class="number">0.51</span> <span class="number">0.49</span></span><br><span class="line">Cumulative Proportion <span class="number">0.51</span> <span class="number">1.00</span></span><br><span class="line"></span><br><span class="line">Mean item complexity <span class="operator">=</span>  <span class="number">1.3</span></span><br><span class="line">Test of the hypothesis that <span class="number">2</span> factors are sufficient.</span><br><span class="line"></span><br><span class="line">The degrees of freedom <span class="keyword">for</span> the null model are  <span class="number">15</span>  and the objective <span class="keyword">function</span> was  <span class="number">2.5</span></span><br><span class="line">The degrees of freedom <span class="keyword">for</span> the model are <span class="number">4</span>  and the objective <span class="keyword">function</span> was  <span class="number">0.07</span> </span><br><span class="line"></span><br><span class="line">The root mean square of the residuals <span class="punctuation">(</span>RMSR<span class="punctuation">)</span> is  <span class="number">0.03</span> </span><br><span class="line">The df corrected root mean square of the residuals is  <span class="number">0.06</span> </span><br><span class="line"></span><br><span class="line">Fit based upon off diagonal values <span class="operator">=</span> <span class="number">0.99</span></span><br><span class="line">Measures of factor score adequacy             </span><br><span class="line">                                                   PA1  PA2</span><br><span class="line">Correlation of <span class="punctuation">(</span>regression<span class="punctuation">)</span> scores with factors   <span class="number">0.96</span> <span class="number">0.92</span></span><br><span class="line">Multiple R square of scores with factors          <span class="number">0.91</span> <span class="number">0.85</span></span><br><span class="line">Minimum correlation of possible factor scores     <span class="number">0.82</span> <span class="number">0.71</span></span><br></pre></td></tr></table></figure><p><code>reading</code>和<code>vocab</code>在第一因子上载荷较大，画图、积木和迷宫在第二因子上载荷较大，非语言的普通智力测试在两个因子上载荷较为平均，这表明存在一个语言智力因子和一个非语言的智力因子，使用正交旋转将人为地强制两个因子不相关，如果想允许两个因子相关，可以使用斜交旋转法</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fa.promax <span class="operator">&lt;-</span> fa<span class="punctuation">(</span>correlations<span class="punctuation">,</span>nfactors <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span>rotate <span class="operator">=</span> <span class="string">&quot;promax&quot;</span><span class="punctuation">,</span>fm<span class="operator">=</span><span class="string">&quot;pa&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fa.promax</span><br><span class="line">Factor Analysis using method <span class="operator">=</span>  pa</span><br><span class="line">Call<span class="operator">:</span> fa<span class="punctuation">(</span>r <span class="operator">=</span> correlations<span class="punctuation">,</span> nfactors <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> rotate <span class="operator">=</span> <span class="string">&quot;promax&quot;</span><span class="punctuation">,</span> fm <span class="operator">=</span> <span class="string">&quot;pa&quot;</span><span class="punctuation">)</span></span><br><span class="line">Standardized loadings <span class="punctuation">(</span>pattern matrix<span class="punctuation">)</span> based upon correlation matrix</span><br><span class="line">          PA1   PA2   h2    u2 com</span><br><span class="line">general  <span class="number">0.37</span>  <span class="number">0.48</span> <span class="number">0.57</span> <span class="number">0.432</span> <span class="number">1.9</span></span><br><span class="line">picture <span class="operator">-</span><span class="number">0.03</span>  <span class="number">0.63</span> <span class="number">0.38</span> <span class="number">0.623</span> <span class="number">1.0</span></span><br><span class="line">blocks  <span class="operator">-</span><span class="number">0.10</span>  <span class="number">0.97</span> <span class="number">0.83</span> <span class="number">0.166</span> <span class="number">1.0</span></span><br><span class="line">maze     <span class="number">0.00</span>  <span class="number">0.45</span> <span class="number">0.20</span> <span class="number">0.798</span> <span class="number">1.0</span></span><br><span class="line">reading  <span class="number">1.00</span> <span class="operator">-</span><span class="number">0.09</span> <span class="number">0.91</span> <span class="number">0.089</span> <span class="number">1.0</span></span><br><span class="line">vocab    <span class="number">0.84</span> <span class="operator">-</span><span class="number">0.01</span> <span class="number">0.69</span> <span class="number">0.313</span> <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">                       PA1  PA2</span><br><span class="line">SS loadings           <span class="number">1.83</span> <span class="number">1.75</span></span><br><span class="line">Proportion Var        <span class="number">0.30</span> <span class="number">0.29</span></span><br><span class="line">Cumulative Var        <span class="number">0.30</span> <span class="number">0.60</span></span><br><span class="line">Proportion Explained  <span class="number">0.51</span> <span class="number">0.49</span></span><br><span class="line">Cumulative Proportion <span class="number">0.51</span> <span class="number">1.00</span></span><br><span class="line"></span><br><span class="line"> With factor correlations of </span><br><span class="line">     PA1  PA2</span><br><span class="line">PA1 <span class="number">1.00</span> <span class="number">0.55</span></span><br><span class="line">PA2 <span class="number">0.55</span> <span class="number">1.00</span></span><br><span class="line"></span><br><span class="line">Mean item complexity <span class="operator">=</span>  <span class="number">1.2</span></span><br><span class="line">Test of the hypothesis that <span class="number">2</span> factors are sufficient.</span><br><span class="line"></span><br><span class="line">The degrees of freedom <span class="keyword">for</span> the null model are  <span class="number">15</span>  and the objective <span class="keyword">function</span> was  <span class="number">2.5</span></span><br><span class="line">The degrees of freedom <span class="keyword">for</span> the model are <span class="number">4</span>  and the objective <span class="keyword">function</span> was  <span class="number">0.07</span> </span><br><span class="line"></span><br><span class="line">The root mean square of the residuals <span class="punctuation">(</span>RMSR<span class="punctuation">)</span> is  <span class="number">0.03</span> </span><br><span class="line">The df corrected root mean square of the residuals is  <span class="number">0.06</span> </span><br><span class="line"></span><br><span class="line">Fit based upon off diagonal values <span class="operator">=</span> <span class="number">0.99</span></span><br><span class="line">Measures of factor score adequacy             </span><br><span class="line">                                                   PA1  PA2</span><br><span class="line">Correlation of <span class="punctuation">(</span>regression<span class="punctuation">)</span> scores with factors   <span class="number">0.97</span> <span class="number">0.94</span></span><br><span class="line">Multiple R square of scores with factors          <span class="number">0.93</span> <span class="number">0.88</span></span><br><span class="line">Minimum correlation of possible factor scores     <span class="number">0.86</span> <span class="number">0.77</span></span><br></pre></td></tr></table></figure><p>上述为斜交旋转的结果，根据以上结果可以看出正交旋转和斜交旋转的不同之处，对于正交旋转，因子分析的重点在于因子结构矩阵，而对于斜交旋转，因子分析会考虑三个矩阵：因子结构矩阵、因子模式矩阵和因子关联矩阵。因子模式矩阵即标准化后的回归系数矩阵，它列出因子预测变量的权重，因子关联矩阵也就是因子相关系数矩阵，使用<code>factor.plot</code>或<code>fa.diagram</code>函数可以绘制正交或斜交结果的图形。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> factor.plot<span class="punctuation">(</span>fa.promax<span class="punctuation">,</span>labels <span class="operator">=</span> rownames<span class="punctuation">(</span>fa.promax<span class="operator">$</span>loadings<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/peXbQlAZJHLwuf9.png" alt="image-20220814161156165"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fa.diagram<span class="punctuation">(</span>fa.varimax<span class="punctuation">,</span>simple <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/FqSybl32N7ijeJM.png" alt="image-20220814161317747"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fa <span class="operator">&lt;-</span> fa<span class="punctuation">(</span>correlations<span class="punctuation">,</span>nfactors <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span>rotate <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span>fm<span class="operator">=</span><span class="string">&quot;pa&quot;</span><span class="punctuation">,</span>score <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> fa<span class="operator">$</span>weights</span><br><span class="line">          PA1     PA2</span><br><span class="line">general <span class="number">0.162</span>  <span class="number">0.1428</span></span><br><span class="line">picture <span class="number">0.061</span>  <span class="number">0.0754</span></span><br><span class="line">blocks  <span class="number">0.407</span>  <span class="number">0.7099</span></span><br><span class="line">maze    <span class="number">0.035</span>  <span class="number">0.0086</span></span><br><span class="line">reading <span class="number">0.452</span> <span class="operator">-</span><span class="number">0.7447</span></span><br><span class="line">vocab   <span class="number">0.123</span> <span class="operator">-</span><span class="number">0.1468</span></span><br></pre></td></tr></table></figure><p>在<code>fa</code>函数中如果添加<code>score=TRUE</code>选项，就可以计算因子得分，另外还可以得到得分系数。得分在返回对象的<code>weights</code>元素中。</p><h3 id="7-5-购物篮分析">7.5 购物篮分析</h3><p>有个经典的故事：啤酒和尿布</p><p>这里使用<code>arules</code>包中的<code>apriori</code>函数进行建模，这个函数相当于<code>lm</code>和<code>aov</code>函数。</p><p>这里使用<code>Groceries</code>数据集，<code>Groceries</code>就是购物篮的意思，里面统计顾客购物篮中的商品。<code>Groceries</code>数据集的属性和其他数据集不同，没有办法打印出来。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> fit <span class="operator">&lt;-</span> apriori<span class="punctuation">(</span>Groceries<span class="punctuation">,</span>parameter <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span>support<span class="operator">=</span><span class="number">0.01</span><span class="punctuation">,</span>confidence<span class="operator">=</span><span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="comment"># 最小支持度为0.01，最小置信度为50%</span></span><br><span class="line">Apriori</span><br><span class="line"></span><br><span class="line">Parameter specification<span class="operator">:</span></span><br><span class="line"> confidence minval smax arem  aval originalSupport maxtime support minlen maxlen target  ext</span><br><span class="line">        <span class="number">0.5</span>    <span class="number">0.1</span>    <span class="number">1</span> none <span class="literal">FALSE</span>            <span class="literal">TRUE</span>       <span class="number">5</span>    <span class="number">0.01</span>      <span class="number">1</span>     <span class="number">10</span>  rules <span class="literal">TRUE</span></span><br><span class="line"></span><br><span class="line">Algorithmic control<span class="operator">:</span></span><br><span class="line"> filter tree heap memopt load sort verbose</span><br><span class="line">    <span class="number">0.1</span> <span class="literal">TRUE</span> <span class="literal">TRUE</span>  <span class="literal">FALSE</span> <span class="literal">TRUE</span>    <span class="number">2</span>    <span class="literal">TRUE</span></span><br><span class="line"></span><br><span class="line">Absolute minimum support count<span class="operator">:</span> <span class="number">98</span> </span><br><span class="line"></span><br><span class="line">set item appearances ...<span class="punctuation">[</span><span class="number">0</span> item<span class="punctuation">(</span>s<span class="punctuation">)</span><span class="punctuation">]</span> done <span class="punctuation">[</span><span class="number">0.00</span>s<span class="punctuation">]</span>.</span><br><span class="line">set transactions ...<span class="punctuation">[</span><span class="number">169</span> item<span class="punctuation">(</span>s<span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">9835</span> transaction<span class="punctuation">(</span>s<span class="punctuation">)</span><span class="punctuation">]</span> done <span class="punctuation">[</span><span class="number">0.00</span>s<span class="punctuation">]</span>.</span><br><span class="line">sorting and recoding items ... <span class="punctuation">[</span><span class="number">88</span> item<span class="punctuation">(</span>s<span class="punctuation">)</span><span class="punctuation">]</span> done <span class="punctuation">[</span><span class="number">0.00</span>s<span class="punctuation">]</span>.</span><br><span class="line">creating transaction tree ... done <span class="punctuation">[</span><span class="number">0.00</span>s<span class="punctuation">]</span>.</span><br><span class="line">checking subsets of size <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> done <span class="punctuation">[</span><span class="number">0.00</span>s<span class="punctuation">]</span>.</span><br><span class="line">writing ... <span class="punctuation">[</span><span class="number">15</span> rule<span class="punctuation">(</span>s<span class="punctuation">)</span><span class="punctuation">]</span> done <span class="punctuation">[</span><span class="number">0.00</span>s<span class="punctuation">]</span>.</span><br><span class="line">creating S4 object  ... done <span class="punctuation">[</span><span class="number">0.00</span>s<span class="punctuation">]</span>.</span><br><span class="line"><span class="operator">&gt;</span> fit</span><br><span class="line">set of <span class="number">15</span> rules </span><br><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>fit<span class="punctuation">)</span> <span class="comment"># 不明显，都是统计的信息，还需要inspect函数统计具体的结果</span></span><br><span class="line">set of <span class="number">15</span> rules</span><br><span class="line"></span><br><span class="line">rule <span class="built_in">length</span> distribution <span class="punctuation">(</span>lhs <span class="operator">+</span> rhs<span class="punctuation">)</span><span class="operator">:</span>sizes</span><br><span class="line"> <span class="number">3</span> </span><br><span class="line"><span class="number">15</span> </span><br><span class="line"></span><br><span class="line">   Min. <span class="number">1</span>st Qu.  Median    Mean <span class="number">3</span>rd Qu.    Max. </span><br><span class="line">      <span class="number">3</span>       <span class="number">3</span>       <span class="number">3</span>       <span class="number">3</span>       <span class="number">3</span>       <span class="number">3</span> </span><br><span class="line"></span><br><span class="line">summary of quality measures<span class="operator">:</span></span><br><span class="line">    support         confidence      coverage          lift          count    </span><br><span class="line"> Min.   <span class="operator">:</span><span class="number">0.0101</span>   Min.   <span class="operator">:</span><span class="number">0.50</span>   Min.   <span class="operator">:</span><span class="number">0.017</span>   Min.   <span class="operator">:</span><span class="number">1.98</span>   Min.   <span class="operator">:</span> <span class="number">99</span>  </span><br><span class="line"> <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">0.0117</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">0.52</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">0.021</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">2.04</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">116</span>  </span><br><span class="line"> Median <span class="operator">:</span><span class="number">0.0123</span>   Median <span class="operator">:</span><span class="number">0.52</span>   Median <span class="operator">:</span><span class="number">0.024</span>   Median <span class="operator">:</span><span class="number">2.20</span>   Median <span class="operator">:</span><span class="number">121</span>  </span><br><span class="line"> Mean   <span class="operator">:</span><span class="number">0.0132</span>   Mean   <span class="operator">:</span><span class="number">0.54</span>   Mean   <span class="operator">:</span><span class="number">0.025</span>   Mean   <span class="operator">:</span><span class="number">2.30</span>   Mean   <span class="operator">:</span><span class="number">129</span>  </span><br><span class="line"> <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">0.0140</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">0.57</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">0.026</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">2.43</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">138</span>  </span><br><span class="line"> Max.   <span class="operator">:</span><span class="number">0.0223</span>   Max.   <span class="operator">:</span><span class="number">0.59</span>   Max.   <span class="operator">:</span><span class="number">0.043</span>   Max.   <span class="operator">:</span><span class="number">3.03</span>   Max.   <span class="operator">:</span><span class="number">219</span>  </span><br><span class="line"></span><br><span class="line">mining info<span class="operator">:</span></span><br><span class="line">      data ntransactions support confidence</span><br><span class="line"> Groceries          <span class="number">9835</span>    <span class="number">0.01</span>        <span class="number">0.5</span></span><br><span class="line">                                                                          <span class="built_in">call</span></span><br><span class="line"> apriori<span class="punctuation">(</span>data <span class="operator">=</span> Groceries<span class="punctuation">,</span> parameter <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span>support <span class="operator">=</span> <span class="number">0.01</span><span class="punctuation">,</span> confidence <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> inspect<span class="punctuation">(</span>fit<span class="punctuation">)</span></span><br><span class="line">     lhs                                       rhs                support confidence coverage lift count</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="punctuation">&#123;</span>curd<span class="punctuation">,</span> yogurt<span class="punctuation">&#125;</span>                         <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>whole milk<span class="punctuation">&#125;</span>       <span class="number">0.010</span>   <span class="number">0.58</span>       <span class="number">0.017</span>    <span class="number">2.3</span>   <span class="number">99</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span>  <span class="punctuation">&#123;</span>other vegetables<span class="punctuation">,</span> butter<span class="punctuation">&#125;</span>             <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>whole milk<span class="punctuation">&#125;</span>       <span class="number">0.011</span>   <span class="number">0.57</span>       <span class="number">0.020</span>    <span class="number">2.2</span>  <span class="number">113</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span>  <span class="punctuation">&#123;</span>other vegetables<span class="punctuation">,</span> domestic eggs<span class="punctuation">&#125;</span>      <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>whole milk<span class="punctuation">&#125;</span>       <span class="number">0.012</span>   <span class="number">0.55</span>       <span class="number">0.022</span>    <span class="number">2.2</span>  <span class="number">121</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">]</span>  <span class="punctuation">&#123;</span>yogurt<span class="punctuation">,</span> whipped<span class="operator">/</span>sour cream<span class="punctuation">&#125;</span>           <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>whole milk<span class="punctuation">&#125;</span>       <span class="number">0.011</span>   <span class="number">0.52</span>       <span class="number">0.021</span>    <span class="number">2.1</span>  <span class="number">107</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">5</span><span class="punctuation">]</span>  <span class="punctuation">&#123;</span>other vegetables<span class="punctuation">,</span> whipped<span class="operator">/</span>sour cream<span class="punctuation">&#125;</span> <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>whole milk<span class="punctuation">&#125;</span>       <span class="number">0.015</span>   <span class="number">0.51</span>       <span class="number">0.029</span>    <span class="number">2.0</span>  <span class="number">144</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">6</span><span class="punctuation">]</span>  <span class="punctuation">&#123;</span>pip fruit<span class="punctuation">,</span> other vegetables<span class="punctuation">&#125;</span>          <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>whole milk<span class="punctuation">&#125;</span>       <span class="number">0.014</span>   <span class="number">0.52</span>       <span class="number">0.026</span>    <span class="number">2.0</span>  <span class="number">133</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">7</span><span class="punctuation">]</span>  <span class="punctuation">&#123;</span>citrus fruit<span class="punctuation">,</span> root vegetables<span class="punctuation">&#125;</span>        <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>other vegetables<span class="punctuation">&#125;</span> <span class="number">0.010</span>   <span class="number">0.59</span>       <span class="number">0.018</span>    <span class="number">3.0</span>  <span class="number">102</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">8</span><span class="punctuation">]</span>  <span class="punctuation">&#123;</span>tropical fruit<span class="punctuation">,</span> root vegetables<span class="punctuation">&#125;</span>      <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>other vegetables<span class="punctuation">&#125;</span> <span class="number">0.012</span>   <span class="number">0.58</span>       <span class="number">0.021</span>    <span class="number">3.0</span>  <span class="number">121</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">9</span><span class="punctuation">]</span>  <span class="punctuation">&#123;</span>tropical fruit<span class="punctuation">,</span> root vegetables<span class="punctuation">&#125;</span>      <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>whole milk<span class="punctuation">&#125;</span>       <span class="number">0.012</span>   <span class="number">0.57</span>       <span class="number">0.021</span>    <span class="number">2.2</span>  <span class="number">118</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">]</span> <span class="punctuation">&#123;</span>tropical fruit<span class="punctuation">,</span> yogurt<span class="punctuation">&#125;</span>               <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>whole milk<span class="punctuation">&#125;</span>       <span class="number">0.015</span>   <span class="number">0.52</span>       <span class="number">0.029</span>    <span class="number">2.0</span>  <span class="number">149</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">11</span><span class="punctuation">]</span> <span class="punctuation">&#123;</span>root vegetables<span class="punctuation">,</span> yogurt<span class="punctuation">&#125;</span>              <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>other vegetables<span class="punctuation">&#125;</span> <span class="number">0.013</span>   <span class="number">0.50</span>       <span class="number">0.026</span>    <span class="number">2.6</span>  <span class="number">127</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">12</span><span class="punctuation">]</span> <span class="punctuation">&#123;</span>root vegetables<span class="punctuation">,</span> yogurt<span class="punctuation">&#125;</span>              <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>whole milk<span class="punctuation">&#125;</span>       <span class="number">0.015</span>   <span class="number">0.56</span>       <span class="number">0.026</span>    <span class="number">2.2</span>  <span class="number">143</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">13</span><span class="punctuation">]</span> <span class="punctuation">&#123;</span>root vegetables<span class="punctuation">,</span> rolls<span class="operator">/</span>buns<span class="punctuation">&#125;</span>          <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>other vegetables<span class="punctuation">&#125;</span> <span class="number">0.012</span>   <span class="number">0.50</span>       <span class="number">0.024</span>    <span class="number">2.6</span>  <span class="number">120</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">14</span><span class="punctuation">]</span> <span class="punctuation">&#123;</span>root vegetables<span class="punctuation">,</span> rolls<span class="operator">/</span>buns<span class="punctuation">&#125;</span>          <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>whole milk<span class="punctuation">&#125;</span>       <span class="number">0.013</span>   <span class="number">0.52</span>       <span class="number">0.024</span>    <span class="number">2.0</span>  <span class="number">125</span>  </span><br><span class="line"><span class="punctuation">[</span><span class="number">15</span><span class="punctuation">]</span> <span class="punctuation">&#123;</span>other vegetables<span class="punctuation">,</span> yogurt<span class="punctuation">&#125;</span>             <span class="operator">=</span><span class="operator">&gt;</span> <span class="punctuation">&#123;</span>whole milk<span class="punctuation">&#125;</span>       <span class="number">0.022</span>   <span class="number">0.51</span>       <span class="number">0.043</span>    <span class="number">2.0</span>  <span class="number">219</span>  </span><br></pre></td></tr></table></figure><p>如果购物篮里有<code>curd</code>和<code>yogurt</code>，就一定有<code>milk</code>，这个支持度达到了1%，置信度达到了58%。</p><p><code>confidence</code>为置信度，<code>lift</code>类似于相关系数，当<code>lift=1</code>时，表明两个关系并不大，值越大表明相关关系越大，通过这个结果，建议将这些乳制品放一起。</p><h2 id="附录-R内置数据集">附录 R内置数据集</h2><p><strong>向量</strong></p><p>euro#欧元率，长度为11，每个元素都有命名</p><p>landmasses#48个陆地的面积，每个都有命名</p><p>precip#长度为70的命名向量</p><p>rivers#北美141条河流长度</p><p>state.abb#美国50个州的双字母缩写</p><p><strong>state.area#美国50个州的面积</strong></p><p><a href="http://state.name">state.name</a>#美国50个州怕的全称</p><p><strong>因子</strong></p><p><strong>state.division#美国50个州的分类，9个类别</strong></p><p><strong>state.region#美国50个州的地理分类</strong></p><p><strong>矩阵、数组</strong></p><p>euro.cross#11种货币的汇率矩阵</p><p>freeny.x#每个季度影响收入四个因素的记录</p><p><strong>state.x77#美国50个州的八个指标</strong></p><p>USPersonalExpenditure#5个年份在5个消费方向的数据</p><p>VADeaths#1940年弗吉尼亚州死亡率（每千人）</p><p>volcano#某火山区的地理信息（10米×10米的网格）</p><p>WorldPhones#8个区域在7个年份的电话总数</p><p><strong>iris3#3种鸢尾花形态数据</strong></p><p>Titanic#泰坦尼克乘员统计</p><p>UCBAdmissions#伯克利分校1973年院系、录取和性别的频数</p><p>crimtab#3000个男性罪犯左手中指长度和身高关系</p><p>HairEyeColor#592人头发颜色、眼睛颜色和性别的频数</p><p>occupationalStatus#英国男性父子职业联系</p><p><strong>类矩阵</strong></p><p>eurodist#欧洲12个城市的距离矩阵，只有下三角部分</p><p>Harman23.cor#305个女孩八个形态指标的相关系数矩阵</p><p>Harman74.cor#145个儿童24个心理指标的相关系数矩阵</p><p><strong>数据框</strong></p><p>airquality#纽约1973年5-9月每日空气质量</p><p>anscombe#四组x-y数据，虽有相似的统计量，但实际数据差别较大</p><p>attenu#多个观测站对加利福尼亚23次地震的观测数据</p><p>attitude#30个部门在七个方面的调查结果，调查结果是同一部门35个职员赞成的百分比</p><p>beaver1#一只海狸每10分钟的体温数据，共114条数据</p><p>beaver2#另一只海狸每10分钟的体温数据，共100条数据</p><p>BOD#随水质的提高，生化反应对氧的需求（mg/l）随时间（天）的变化</p><p>cars#1920年代汽车速度对刹车距离的影响</p><p>chickwts#不同饮食种类对小鸡生长速度的影响</p><p>esoph#法国的一个食管癌病例对照研究</p><p>faithful#一个间歇泉的爆发时间和持续时间</p><p>Formaldehyde#两种方法测定甲醛浓度时分光光度计的读数</p><p>Freeny#每季度收入和其他四因素的记录</p><p>dating from#配对的病例对照数据，用于条件logistic回归</p><p>InsectSprays#使用不同杀虫剂时昆虫数目</p><p><strong>iris#3种鸢尾花形态数据</strong></p><p>LifeCycleSavings#50个国家的存款率</p><p>longley#强共线性的宏观经济数据</p><p>morley#光速测量试验数据</p><p><strong>mtcars#32辆汽车在11个指标上的数据</strong></p><p>OrchardSprays#使用拉丁方设计研究不同喷雾剂对蜜蜂的影响</p><p>PlantGrowth#三种处理方式对植物产量的影响</p><p>pressure#温度和气压</p><p>Puromycin#两种细胞中辅因子浓度对酶促反应的影响</p><p>quakes#1000次地震观测数据（震级&gt;4）</p><p>randu#在VMS1.5中使用FORTRAN中的RANDU三个一组生成随机数字，共400组。 该随机数字有问题。在VMS2.0以上版本已修复。</p><p>rock#48块石头的形态数据 sleep #两药物的催眠效果</p><p>stackloss#化工厂将氨转为硝酸的数据 swiss #瑞士生育率和社会经济指标</p><p>ToothGrowth#VC剂量和摄入方式对豚鼠牙齿的影响 trees #树木形态指标</p><p>USArrests#美国50个州的四个犯罪率指标</p><p>USJudgeRatings#43名律师的12个评价指标</p><p>warpbreaks#织布机异常数据</p><p>women#15名女性的身高和体重</p><p><strong>列表</strong></p><p>state.center#美国50个州中心的经度和纬度</p><p><strong>类数据框</strong></p><p>ChickWeight#饮食对鸡生长的影响</p><p>CO2#耐寒植物CO2摄取的差异</p><p>DNase#若干次试验中，DNase浓度和光密度的关系</p><p>Indometh #某药物的药物动力学数据</p><p>Loblolly#火炬松的高度、年龄和种源</p><p>Orange #桔子树生长数据</p><p>Theoph#茶碱药动学数据</p><p><strong>时间序列数据</strong></p><p><strong>airmiles#美国1937-1960年客运里程营收（实际售出机位乘以飞行里数）</strong></p><p>AirPassengers#Box &amp; Jenkins航空公司1949-1960年每月国际航线乘客数</p><p>austres#澳大利亚1971-1994每季度人口数（以千为单位）</p><p>BJsales#有关销售的一个时间序列</p><p>BJsales.lead#前一指标的先行指标（leading indicator）</p><p>co2#1959-1997年每月大气co2浓度（ppm）</p><p>discoveries#1860-1959年每年巨大发现或发明的个数</p><p>ldeaths#1974-1979年英国每月支气管炎、肺气肿和哮喘的死亡率</p><p>fdeaths#前述死亡率的女性部分</p><p>mdeaths#前述死亡率的男性部分</p><p>freeny.y#每季度收入</p><p>JohnsonJohnson#1960-1980年每季度Johnson &amp; Johnson股票的红利</p><p>LakeHuron#1875-1972年某一湖泊水位的记录</p><p>lh#黄体生成素水平，10分钟测量一次</p><p>lynx#1821-1934年加拿大猞猁数据</p><p>nhtemp#1912-1971年每年平均温度</p><p>Nile#1871-1970尼罗河流量</p><p>nottem#1920-1939每月大气温度</p><p><strong>presidents#1945-1974年每季度美国总统支持率</strong></p><p>UKDriverDeaths#1969-1984年每月英国司机死亡或严重伤害的数目</p><p>sunspot.month#1749-1997每月太阳黑子数</p><p>sunspot.year#1700-1988每年太阳黑子数</p><p>sunspots#1749-1983每月太阳黑子数</p><p>treering#归一化的树木年轮数据</p><p>UKgas#1960-1986每月英国天然气消耗</p><p>USAccDeaths#1973-1978美国每月意外死亡人数</p><p>uspop#1790–1970美国每十年一次的人口总数（百万为单位）</p><p>WWWusage#每分钟网络连接数</p><p>Seatbelts#多变量时间序列。和UKDriverDeaths时间段相同，反映更多因素。</p><p>EuStockMarkets#多变量时间序列。欧洲股市四个主要指标的每个工作日记录。</p>]]></content>
      
      
      
        <tags>
            
            <tag> R语言 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科研绘图中的图片格式问题</title>
      <link href="/2022/05/07/Academic/%E8%AE%BA%E6%96%87%E6%8E%92%E7%89%88/%E7%A7%91%E7%A0%94%E7%BB%98%E5%9B%BE%E4%B8%AD%E7%9A%84%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F%E9%97%AE%E9%A2%98/"/>
      <url>/2022/05/07/Academic/%E8%AE%BA%E6%96%87%E6%8E%92%E7%89%88/%E7%A7%91%E7%A0%94%E7%BB%98%E5%9B%BE%E4%B8%AD%E7%9A%84%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1>科研绘图中的图片格式问题</h1><p>科研论文投稿需要根据期刊的要求上传符合要求的图片，以下为科研绘图中相关格式问题汇总。</p><h2 id="1-位图和矢量图的区别">1 位图和矢量图的区别</h2><p><strong>位图（Bitmap）</strong></p><p>又称栅格图（Raster graphics）或点阵图，是使用像素阵列(Pixel-array/Dot-matrix点阵)来表示的图像。位图是由一个一个像素点产生，当放大图像时，像素点也放大了，但每个像素点表示的颜色是单一的，所以在位图放大后就会出现马赛克状。处理位图时，输出图像的质量决定于处理过程开始时设置的分辨率高低。简而言之，位图是由小的色块组成，不能支持无限放大。因此分辨率就是需要考虑的一个问题了。</p><p>位图的文件类型很多，如<code>*.bmp</code>、<code>*.pcx</code>、<code>*.gif</code>、<code>*.jpg</code>、<code>*.tif</code>、*photoshop的<code>*.psd</code>等。</p><p><strong>矢量图（Vetorgram）</strong></p><p>也称为面向对象的图像或绘图图像，在数学上定义为一系列由线连接的点。矢量文件中的图形元素称为对象。每个对象都是一个自成一体的实体，它具有颜色、形状、轮廓、大小和屏幕位置等属性。矢量图是根据几何特性来绘制图形，矢量可以是一个点或一条线，矢量图只能靠软件生成。</p><p>矢量图文件容量较小，却可以缩放到任意大小和以任意分辨率在输出设备上打印出来。缺点是难以表现色彩层次丰富的逼真图像效果。</p><p>矢量图形格式也很多，如Adobe illustrator的<code>*.ai</code>、<code>*.eps</code>和<code>*.svg</code>、Auto CAD的<code>*.dwg</code>和<code>*.dxf</code>、Corel DRAW的<code>*.cdr</code>等。</p><p><strong>位图和矢量图的区别</strong>：位图和矢量图之间的显示效果不同，原理不同，绘制工具也不同。</p><ol><li>显示效果不同：位图放大后会有边缘模糊、失真现象。矢量图与分辨率无关，可以将它缩放到任意大小和以任意分辨率在输出设备上打印出来，都不会影响清晰度；</li><li>原理不同：位图是一张图片原始大小的矩形区域，各种颜色的像素组成的像素点阵。矢量图是用数学方程式表达形状、然后在所表达的形状区域内填充像素；</li><li>绘制的工具不同：位图可以由许多摄影摄像、电子处理等设备制作产生。在PS软件中，绘制位图的工具通常是选区工具。矢量图多在AI、cdr、ps等软件处理图像的过程中，能存储的格式为EPS及图像处理软件的原文件。在PS软件中，绘制位图的工具是形状工具；</li><li>占用空间不同：矢量图表现的图像颜色比较单一，所以所占用的空间会很小。位图表现的色彩比较丰富，所以占用的空间会很大，颜色信息越多，占用空间越大，图像越清晰，占用空间越大。</li></ol><p>经过软件矢量图可以很轻松的转化为位图，而位图要想转换为矢量图必须经过复杂而庞大的数据处理，而且生成的矢量图质量也会有很大的出入。</p><h2 id="2-图片格式">2 图片格式</h2><h3 id="2-1-JPG-JPEG格式（位图）">2.1 JPG/JPEG格式（位图）</h3><p>​JPEG是JPG的全名、正式扩展名。但因DOS、Windows 95等早期系统采用的8.3命名规则只支持最长3字符的扩展名，为了兼容采用了.jpg。JPEG格式，缺点保存后图片失真比较大，存储的图像会丢失一部分细节，优点是它的压缩率是相当高的。JPEG是一种压缩比比较大的图片格式，图片以JPEG格式保存以后，会损失掉不少图片信息，但其好处就是图片体积小，放在电脑里，可以占用较小的空间，在网上传播，速度比较快，所以，JPEG和GIF又称为WEB格式。</p><p><strong>优点</strong>：</p><ul><li>它支持极高的压缩率，因此JPEG图像的下载速度大大加快；</li><li>它能够轻松地处理16.8M颜色，可以很好地再现全彩色的图像；</li><li>在对图像的压缩处理过程中，该图像格式可以允许自由地在最小文件尺寸（最低图像质量）和最大文件尺寸（最高图像质量）之间选择；</li><li>该格式的文件尺寸相对较小，下载速度快，有利于在带宽并不“富裕”的情况下传输。</li></ul><p><strong>缺点</strong>：</p><ul><li>并非所有的浏览器都支持将各种JPEG图像插入网页；</li><li>压缩时，可能使图像的质量受到损失，因此不适宜用该格式来显示高清晰度的图像。</li></ul><p><strong>使用场景</strong>：JPEG格式的压缩率是目前各种图像文件格式中最高的。它用有损压缩的方式去除图像的冗余数据，但存在着一定的失真。由于其高效的压缩效率和标准化要求，目前已广泛用于彩色传真、静止图像、电话会议、印刷及新闻图片的传送。由于各种浏览器都支持JPEG这种图像格式，因此它也被广泛用于图像预览和制作HTM网页。</p><h3 id="2-2-PNG格式（位图）">2.2 PNG格式（位图）</h3><p>​“可移植网络图形格式“，是图像文件存储格式，其设计目的是试图替代GIF和TIFF文件格式，同时增加一些GIF文件格式所不具备的特性。对于图片本身质量的减损非常低。因其能够支持压缩不失真、透明背景、渐变图像的制作要求，PNG格式也是各大制图软件例如PS、InDesign输出或编辑的原始格式。PNG文件非常适合在互联网上使用。但它也不足以用作专业印刷。优点：能够相容半透明 / 透明图像，缺点：档案比 JPEG 大，不能用于印刷PNG。</p><p>​PNG格式有8位、24位、32位三种形式，其中8位PNG支持两种不同的透明形式（索引透明和alpha透明），24位PNG不支持透明，32位PNG在24位基础上增加了8位透明通道，因此可展现256级透明程度。PNG8和PNG24后面的数字则是代表这种PNG格式最多可以索引和存储的颜色值。8代表2的8次方也就是256色，而24则代表2的24次方大概有1600多万色。</p><p><strong>优点</strong>：</p><ul><li><strong>体积小</strong>：网络通讯中因受带宽制约，在保证图片清晰、逼真的前提下，网页中不可能大范围的使用文件较大的bmp格式文件；</li><li><strong>无损压缩</strong>：PNG文件采用LZ77算法的派生算法进行压缩，其结果是获得高的压缩比，不损失数据。它利用特殊的编码方法标记重复出现的数据，因而对图像的颜色没有影响，也不可能产生颜色的损失，这样就可以重复保存而不降低图像质量；</li><li><strong>索引彩色模式</strong>：PNG-8格式与GIF图像类似，同样采用8位调色板将RGB彩色图像转换为索引彩色图像。图像中保存的不再是各个像素的彩色信息，而是从图像中挑选出来的具有代表性的颜色编号，每一编号对应一种颜色，图像的数据量也因此减少，这对彩色图像的传播非常有利。更优化的网络传输显示 PNG图像在浏览器上采用流式浏览，即使经过交错处理的图像会在完全下载之前提供浏览者一个基本的图像内容，然后再逐渐清晰起来。它允许连续读出和写入图像数据，这个特性很适合于在通信过程中显示和生成图像；</li><li><strong>支持透明效果</strong>：PNG可以为原图像定义256个透明层次，使得彩色图像的边缘能与任何背景平滑地融合，从而彻底地消除锯齿边缘。这种功能是GIF和JPEG没有的。PNG同时还支持真彩和灰度级图像的Alpha通道透明度；</li><li><strong>其他</strong>：最高支持24位真彩色图像以及8位灰度图像。支持Alpha通道的透明/半透明特性。支持图像亮度的Gamma校准信息。支持存储附加文本信息，以保留图像名称、作者、版权、创作时间、注释等信息。</li></ul><p><strong>缺点</strong>：</p><ul><li>较旧的浏览器和程序可能不支持PNG文件。作为Internet文件格式；</li><li>与JPEG的有损耗压缩相比，PNG提供的压缩量较少；</li><li>作为Internet文件格式，PNG对多图像文件或动画文件不提供任何支持。GIF格式支持多图像文件和动画文件；</li></ul><p><strong>使用场景</strong>：PNG的开发目标是改善并取代GIF作为适合网络传输的格式而不需专利许可，所以被广泛应用于互联网及其他方面上。</p><p><strong>格式对比</strong>：</p><p><strong>PNG与 GIF</strong><br>1、一般情况下将静态GIF图像无损转换为PNG后可以压缩率会略为提高（前提是同样采用8位索引模式）；<br>2、PNG可提供更大颜色深度的支持，包括24位（8位3通道）和48位（16位3通道）真彩色。加入α通道后可进一步支持每像素64位的表示；<br>3、超过8位色深的PNG图像转换为GIF时，图像质量会由于分色（颜色数减少）而下降；<br>4、GIF原生支持动态图像，PNG只能通过非标准实现，在PNG的基础上另有发展出支持动画的APNG和MNG格式，但普及度不高。PNG在IE6等旧浏览器上的支持较差。</p><p><strong>PNG 与JPEG</strong><br>1、JPEG可以对照片（或类似）图像生成更小的文件，这是由于JPEG采用了一种针对照片图像的特定有损编码方法，这种编码适用于低对比，图像颜色过渡平滑，噪声多，且结构不规则的情况下。如果在这种情况下用PNG代替JPEG，文件尺寸增大很多，而图像质量的提高有限。相应的，如果保存文本，线条或类似的边缘清晰，有大块相同颜色区域的图像，PNG格式的压缩效果就要比JPEG好很多，并且不会出现JPEG那样的高对比度区域的图像有损。如果图像既有清晰边缘，又有照片图像的特点，就在在这两种格式之间权衡一下了。JPEG不支持透明度；<br>2、由于JPEG是有损压缩，会产生迭代有损，在重复压缩和解码的过程中会不断丢失信息使图像质量下降。由于PNG是无损的，保存将要被编辑的图像来说更加合适。虽然PNG压缩照片图像也有效，但有专门针对照片图像设计的无损压缩格式，比如无损JPEG2000，Adobe DNG等。总的来说这些格式都不能做到适用所有图像。对于将要发布的图像可以保存成JPEG，用JPEG编码一次不会造成明显的图像有损。</p><p><strong>PNG vs JPEG-LS</strong><br>JPEG-LS是一个“几乎”无损压缩格式，相对于上面提到的有损JPEG压缩，它的知名度不高。它可以直接和PNG相比较，使用一组标准的测试图像。在Waterloo Repertoire ColorSet（一组标准测试图像）下，JPEG-LS通常表现要比PNG好10%-15%，但其中有一些图像PNG表现明显更好一些，大约50%-75%。所以，如果这两种格式都支持而且对图像文件大小很敏感的话，可以用这两种格式都试试，和图像数据本身有比较大关系。</p><p><strong>PNG与TIFF</strong><br>1、TIFF是一个相当多方案结合的格式。它被广泛用作专业图像编辑软件之间图像交换的中间格式，因此它不断支持更多应用程序所需的功能，而对应用程序不关心的图像操作部分支持不多。这也意味着许多应用程序只能识别TIFF的一个子集，而产生更多的潜在混淆之处；<br>2、TIFF使用的最通用的无损压缩算法是LZW。这种算法–GIF中也在使用，直到2003年一直在专利保护之中。有一种TIFF变种使用与PNG相同的压缩算法，但是没有被许多专利程序所支持。TIFF也提供了一种特殊的无损压缩算法，类似CCITTGroup IV，可以对二值图像（比如传真或黑白文本）比PNG有更好的压缩效果。 PNG只支持非自左乘α，而TIFF也支持联合（自左乘）α。PNG规范中不包含嵌入式EXIF（可交换图像文件格式）图像数据的标准，比如数码像机拍得的图像。而TIFF，JPEG 2000, DNG都支持EXIF；<br>3、早期的浏览器不支持PNG图像；JPEG和GIF是主流图像格式。由于GIF的颜色深度限制，网页中的有颜色过渡的图像都是使用JPEG。不管怎样，JPEG压缩都会导致图像的轻微模糊。而PNG可以做到在相应颜色深度下的尽可能精确，同时保持图像文件不大。PNG已经渐渐成为一种对于小的梯度图像的较好的选择，众多浏览器都已经对PNG有了很好的支持</p><h3 id="2-3-TIF-TIFF格式（位图）">2.3 TIF/TIFF格式（位图）</h3><p>​标签图像文件格式(Tag Image File Format，简写为TIFF) 是一种灵活的位图格式，主要用来存储包括照片和艺术图在内的图像。投稿建议500 dpi，一般不小于300 dpi。TIF格式是一种压缩最小的图片处理格式，基本不损失图象信息，但其缺陷就是文件体积太大。</p><p>​TIF和TIFF之间没有真正的区别，TIFF文件以<code>.tif</code>为扩展名。其数据格式是一种3级体系结构，TIF内部结构可以分成三个部分，分别是：文件头信息区、标识信息区和图像数据区。其中所有的标签都是以升序排列，这些标签信息是用来处理文件中的图像信息的。</p><p><strong>优点</strong>：</p><ul><li>文件格式灵活：IFD是TIFF文件中第2个数据结构，它是一个名为标记(tag)的用于区分一个或多个可变长度数据块的表，标记中包含了有关于图像的所有信息。IFD提供了一系列的指针(索引)，这些指针告诉我们各种有关的数据字段在文件中的开始位置，并给出每个字段的数据类型及长度。这种方法允许数据字段定位在文件的任何地方，且可以是任意长度；</li><li>支持多页：由于TIFF格式支持多页，多页文件能够存在一个TIFF文件中而不是让每个扫描页存在一系列的文件中。</li></ul><p><strong>缺点</strong>：</p><ul><li>格式复杂：一方面，要写一种能够识别所有不同标记的软件非常困难。另一方面，一个TIFF文件可以包含多个图像，每个图像都有自己的IFD和一系列标记，并且采用了多种压缩算法。这样也增加了程序设计的复杂度；</li><li>存在安全漏洞。</li></ul><p><strong>使用场景</strong>：TIFF与JPEG和PNG一起成为流行的高位彩色图像格式。TIFF格式在业界得到了广泛的支持，如Adobe公司的Photoshop、The GIMP Team的GIMP、Ulead PhotoImpact和Paint Shop Pro等图像处理应用、QuarkXPress和Adobe InDesign这样的桌面印刷和页面排版应用，扫描、传真、文字处理、光学字符识别和其它一些应用等都支持这种格式。从Aldus获得了PageMaker印刷应用程序的Adobe公司控制着TIFF规范。</p><h3 id="2-4-BMP格式（位图）">2.4 BMP格式（位图）</h3><p>​BMP是英文Bitmap（位图）的简写，即Windows位图。它是Windows操作系统中的标准图像文件格式，能够被多种Windows应用程序所支持，在Windows环境下运行的所有图像处理软件都支持这种格式。位图文件可看成由4个部分组成：位图文件头（bitmap-file header）、位图信息头（bitmap-information header）、彩色表（color table）和定义位图的字节(位图数据，即图像数据，Data Bits 或Data Body)阵列。</p><p><strong>优点</strong>：</p><ul><li><p>不采用任何压缩，无损，颜色准确，有2色、16色、256色、真彩色各种选择；</p></li><li><p>在PC上兼容度一流，几乎能被所有的图形软件“接受”，可称为通用格式，就算不装任何看图软件，用 Windows 的“画笔”一样可以看；</p></li><li><p>结构简单，未经过压缩，储存为bmp格式的图形不会失真，但文件比较大。</p></li></ul><p><strong>缺点</strong>：</p><ul><li>文件占用的空间很大，不支持文件压缩；</li><li>不适用于 Web 页，不受 Web 浏览器支持；</li><li>不支持Alpha（透明背景）通道。</li></ul><p><strong>使用场景</strong>：尽管文件大小比较大，但是位图文件的简单性、在微软视窗和其他地方的广泛使用以及这种格式的优秀文档标准以及没有专利约束，使得它成为其他操作系统图像处理程序能够读写的一种最为常用的格式。</p><h3 id="2-5-SVG格式（矢量图）">2.5 SVG格式（矢量图）</h3><p>​可缩放矢量图形（英语：Scalable Vector Graphics，缩写：SVG）是一种基于可扩展标记语言（XML），用于描述二维矢量图形的图形格式。SVG由W3C制定，是一个开放标准。SVG是一种新型的矢量图形标准，同时它也是一种矢量图形描述的一种标准的语言，这种语言具有非常强的开放性，所以其在应用的过程中主要的对象是网络。SVG严格遵从XML语法，并用文本格式的描述性语言来描述图像内容，因此是一种和图像分辨率无关的矢量图形格式。</p><p><strong>优点</strong>：</p><ul><li>图像文件可读，易于修改和编辑（理论上如此，但实际上却是因为各种不同的SVG档编辑器而可能存储成不易解读的SVG文件）；</li><li>与现有技术可以互动融合。例如，SVG技术本身的动态部分（包括时序控制和动画）就是基于SMIL标准。另外，SVG文件还可嵌入JavaScript（严格地说，应该是ECMAScript）脚本来控制SVG对象；</li><li>SVG图形格式可以方便的创建文字索引，从而实现基于内容的图像搜索；</li><li>SVG图形格式支持多种滤镜和特殊效果，在不改变图像内容的前提下可以实现位图格式中类似文字阴影的效果；</li><li>SVG图形格式可以用来动态生成图形。例如，可用SVG动态生成具有交互功能的地图，嵌入网页中，并显示给终端用户。</li></ul><p><strong>缺点</strong>：</p><ul><li><p>SVG复杂度高会减慢渲染速度；</p></li><li><p>由于原始的SVG档是遵从XML语法，导致资料采用未压缩的方式存放，因此相较于其他的矢量图形格式，同样的文件内容会比其他的文件格式稍大；</p></li><li><p>旧版的SVG Viewer无法正确显示出使用新版SVG格式的矢量图形；</p></li><li><p>SVG不适合游戏应用。</p></li></ul><p><strong>使用场景</strong>：SVG适合用来做动态交互，而且SVG绘图很容易编辑，只需要增加或移除相应的元素就可以了。SVG功能完善，适合静态图片展示，高保真文档查看和打印的应用场景。</p><h3 id="2-6-EPS格式（位图-矢量图）">2.6 EPS格式（位图/矢量图）</h3><p>​EPS是Encapsulated Post Script的缩写。EPS文件是目前桌面印刷系统普遍使用的通用交换格式当中的一种综合格式。EPS文件格式又被称为带有预视图象的PS格式，它是由一PostScript语言的文本文件和一个(可选)低分辨率的由PICT或TIFF格式描述的代表像组成。EPS格式是目前系统中功能最强的一种图像文件格式，向量及位图皆可包容，矢量图形的EPS档可以在Illustrator及CorelDraw中修改，也可再加载到Photoshop中做影像合成，可以在任何的作业平台及高清晰度输出设备上，输出色彩精确的向量或位图，是做分色印刷美工排版人员最爱使用的图像文件格式。</p><p><strong>优点</strong>：功能强大，向量和为图均可包容。可以在任何 Postscript打印机上进行准确的效果呈现，EPS是行业标准格式。</p><p><strong>缺点</strong>：</p><ul><li>屏幕显示可能与输出地显示不一致，屏幕呈现可能是低分辨率的，可能是不同图像，或者只是占位符图像，EPS文件旨在输出，不是用于在屏幕上显示信息的最合适格式；</li><li>文件通常相当大，而且除非使用PostScript打印机，否则只能印出低分辨率的预视档或根本印不出图形。</li></ul><p><strong>使用场景</strong>：EPS格式是一种用于打印的格式，大多数的Web浏览器不支持EPS文件，大多数图像查看共享软件和自由软件也都不支持EPS文件。由于这种原因，EPS格式不能用在Web站点的图像显示上,他不是专业软件的格式。</p><h3 id="2-7-GIF格式（位图-支持动画）">2.7 GIF格式（位图/支持动画）</h3><p>​GIF是一种位图。GIF文件的数据，是一种基于LZW算法的连续色调的无损压缩格式。其压缩率一般在50%左右，它不属于任何应用程序。目前几乎所有相关软件都支持它，公共领域有大量的软件在使用GIF图像文件。GIF图像文件的数据是经过压缩的，而且是采用了可变长度等压缩算法。GIF格式的另一个特点是其在一个GIF文件中可以存多幅彩色图像，如果把存于一个文件中的多幅图像数据逐幅读出并显示到屏幕上，就可构成一种最简单的动画。GIF格式的文件结构整体上分为三部分：文件头、GIF数据流、文件结尾。其中，GIF数据流分为全局配置和图像块。</p><p><strong>优点</strong>：</p><ul><li>支持动画功能，允许某些像素透明；</li><li>支持Bitmap、Grayscale和索引彩色模式；</li><li>GIF是压缩格式的文件，用于减少文件在网络上传递的时间，它能够在保持图像质量的前提下将图像尺寸压缩百分之二十到二十五。</li></ul><p><strong>缺点</strong>：GIF格式仅支持8bit的索引色，即在整个图片中，只能存在256种不同的颜色。即GIF的位深为1-8bit，单色透明，由一个最多256种颜色的调色板实现，图像大小最多为64K×64K像素。GIF主要是为一个数据流而设计的一种传输格式，而不是作为文件的存档格式，因此它是最复杂的一种图像文件格式；</p><p><strong>使用场景</strong>：GIF格式最突出的特点就是支持动画，同时GIF也是一种无损的图像格式，也就是说修改图片之后，图片质量没有损失。再加上GIF支持透明，因此很适合在互联网上使用。但GIF只能处理256种颜色。因此在网页制作中，GIF格式常常用于Logo、小图标及其他色彩相对单一的图像。</p><h3 id="2-8-WMF格式（矢量图）">2.8 WMF格式（矢量图）</h3><p>​WMF格式是一种16位Windows图元文件。图元文件的扩展名包括<code>.wmf</code>和<code>.emf</code>两种。它们是属于矢量类图形，是由简单的线条和封闭线条（图形）组成的矢量图，其主要特点是文件非常小，可以任意缩放而不影响图像质量。WMF格式文件是Microsoft Windows操作平台所支持的一种图形格式文件，目前，其它操作系统尚不支持这种格式，如Unix、Linux等。</p><p><strong>优点</strong>：</p><ul><li>与bmp格式不同，wmf格式文件是设备无关的，即它的输出特性不依赖于具体的输出设备；</li><li>wmf格式文件所占的磁盘空间比其它任何格式的图形文件都要小得多；</li><li>在建立图元文件时，不能实现即画即得，而是将GDI调用记录在图元文件中，之后，在GDI环境中重新执行，才可显示图象；</li><li>显示图元文件的速度要比显示其它格式的图象文件慢，但是它形成图元文件的速度要远大于其它格式。</li></ul><p><strong>缺点</strong>：</p><ul><li>显示图元文件的速度要比显示其它格式的图象文件慢；</li><li>比其它任何格式的图形文件都要小得多；</li><li>wmf格式文件是Microsoft Windows操作平台所支持的一种图形格式文件，目前，其它操作系统尚不支持这种格式，如Unix、Linux等。</li></ul><p><strong>使用场景</strong>：</p><p>图元文件与其它格式的图象文件差别很大。首先，由于图元文件是以图象绘制操作序列来存放数据的，因此，它不适合于图象处理领域；其次，由于图元文件的图象显示速度慢，因此也不适合于需要快速显示的场合。但是wmf格式文件所占的磁盘空间比其它任何格式的图形文件都要小得多。wmf格式文件适合以下场景：</p><ul><li><p>由采集数据绘制曲线的图象快速保存；</p></li><li><p>进程间的图象剪切板数据交换。</p></li></ul><h3 id="2-9-EMF格式（矢量图）">2.9 EMF格式（矢量图）</h3><p>​EMF（Enhanced MetaFile）格式文件为增强型图元文件。它是在印刷工业中应用与Windows操作系统的文件格式。实际上EMF是原始WMF（Windows metafile）格式的32位版本。EMF格式的创建目的是用来解决WMF格式从复杂的图形程序中打印图形时出现的不足的。EMF是设备独立性的一种格式，也就是说EMF可以始终保持着图形的精度，而无论用打印机打印出何种分辨率（dot/inch）的硬拷贝。而在网路上，较小的EMF格式可以节省带宽。EMF是Windows操作系统使用的缓存文件。被打印物品的图形的维度维护的方式并不是打印机上每英寸的点数。</p><p><strong>优点</strong>：</p><ul><li><p>EMF图片的优点是放大不失真，且图片较小，一般的黑白统计图仅几十KB，最重要的是图片是可编辑的。电脑自带的软件只能用画图工具打开EMF图片预览，不能使用照片查看器预览；</p></li><li><p>在网络中，EMF格式的较小的文件尺寸减少了网络堵塞。</p></li></ul><p><strong>缺点</strong>：EMF虽然可以保持图形的精度，但和BMP格式的图片一样不支持动画效果。</p><p><strong>使用场景</strong>：在投稿时都会发现期刊对于提交的图片文件有要求，即图片大小不超过规定大小，图片清晰，图片可编辑。有些期刊更“过分”，整篇文章仅接受3张图片，这样的话势必需要将原始图片进行组合，但是组合的图片数量越多，最后输出的图片就极可能超过规定大小，所以EMF格式图片比较重要。</p><h3 id="2-10-PSD格式（位图）">2.10 PSD格式（位图）</h3><p>​PSD–Photoshop Document（PSD），是著名的Adobe公司的图像处理软件Photoshop的专用格式。这种格式可以存储Photoshop中所有的图层，通道、参考线、注解和颜色模式等信息。在保存图像时，若图像中包含有层，则一般都用Photoshop（PSD）格式保存。PSD格式在保存时会将文件压缩，以减少占用磁盘空间，但PSD格式所包含图像数据信息较多（如图层、通道、剪辑路径、参考线等），因此比其他格式的图像文件还是要大得多。由于PSD文件保留所有原图像数据信息，因而修改起来较为方便，大多数排版软件不支持PSD格式的文件。</p><p>​PSD是PS主要用来处理位图的图像格式，也可以保留图形之类的矢量内容在文件中。</p><p><strong>特点</strong>：</p><ul><li>PSD格式是PS的专用格文件式，也是唯一可以存取所有PS特有的文件信息以及所有色彩模式的格式；</li><li>如果文件中含有图层或通道信息时，就必须以PSD格式存档，它可以将不同的图像进行分层储存，便于修改和制作各种特效。</li></ul><h3 id="2-11-CDR格式（矢量图）">2.11 CDR格式（矢量图）</h3><p>​CorelDraw 是一款平面排版矢量绘图的软件，是著名绘图软件CorelDRAW的专用图形文件格式。它可用作企业VI设计、海报设计、广告设计、包装盒设计、包装袋设计，宣传画册设计、书籍封面、书籍装帧设计、插画设计、名片设计、宣传单设计、报纸广告设计、年历设计、展板设计、海报招贴设计、POP广告、服装设计、排版、拼版、纸张、纸张尺寸、印刷流程等。并且增加了字体识别，英文单词拼写，语法检查的功能。软件内置插件PHOTO–PAINT更有强大的对于位图的调色，抠图，去水印，以及几百种画笔效果，和动画功能。是CDR的版本中功能比较强大且比较稳定的。</p><h3 id="2-12-AI格式（矢量图）">2.12 AI格式（矢量图）</h3><p>​AI格式文件是一种矢量图形文件,适用于Adobe公司的Illustrator软件的输出格式,与PSD格式文件相同,AI文件也是一种分层文件,用户可以对图形内所存在的层进行操作,所不同的是AI格式文件是基于矢量输出,可在任何尺寸大小下按最高分辨率输出,而PSD文件是基于位图输出。与AI格式类似基于矢量输出的格式还有EPS、WMF、CDR等。</p><p>​具体一点来来讲，Illustrator主要为国外平面设计师常用的软件，coreldraw为国内设计软件，它们各有优势。AI兼容性强，大部分文件格式可直接支持，对印刷支持也很好，缺点是没有coreldraw通俗.</p><h3 id="2-13-Canvas格式（位图）">2.13 Canvas格式（位图）</h3><p>​Canvas是 HTML5 新增的元素，可用于通过使用 JavaScript 中的脚本来绘制图形。例如，它可以用于绘制图形、制作照片、创建动画，甚至可以进行实时视频处理或渲染。canvas 只是一个画布，本身并不具有绘图的能力，绘图必须使用 JavaScript 等脚本语言。canvas 标签允许脚本语言动态渲染位图像。canvas 标签创建出了一个可绘制区域，JavaScript 代码可以通过一套完整的绘图功能类似于其他通用二维的 API 访问该区域，从而生成动态的图形。</p><p><strong>格式对比</strong>：</p><p>​Canvas和SVG是HTML5中主要的2D图形技术，前者提供画布标签和绘制API，后者是一整套独立的矢量图形语言，成为W3C标准已经有十多年(2003.1至今)，总的来说，Canvas技术较新，从很小众发展到广泛接受，注重栅格图像处理，SVG则历史悠久，很早就成为国际标准，复杂，发展缓慢（Adobe SVG Viewer近十年没有大的更新）</p><table><thead><tr><th></th><th>Canvas</th><th>SVG</th></tr></thead><tbody><tr><td>历史</td><td>较新，由Apple私有的技术发展而来</td><td>历史悠久，2003年称为W3C标准</td></tr><tr><td>功能</td><td>功能简单，2D绘图API</td><td>功能丰富，各种图形、滤镜、动画等</td></tr><tr><td>特点</td><td>像素，只能脚本驱动</td><td>矢量，XML，CSS，元素操作</td></tr><tr><td>支持</td><td>主流浏览器，IE9+</td><td>主流浏览器，IE9+，其他SVG阅读器</td></tr><tr><td>操作对象</td><td>基于像素（动态点阵图）</td><td>基于图形元素</td></tr><tr><td>元素</td><td>单个HTML元素</td><td>多种图形元素（Rect，Path，Line…）</td></tr><tr><td>驱动</td><td>只能脚本驱动</td><td>支持脚本和CSS</td></tr><tr><td>事件交互</td><td>用户交互到像素点（x,y）</td><td>用户交互到元素（rect，path）</td></tr><tr><td>性能</td><td>适合小面积，大数量应用场景</td><td>适合大面积，小数量应用场景</td></tr></tbody></table><h3 id="2-14-DXF格式（矢量图）">2.14 DXF格式（矢量图）</h3><p>​DXF是AutoCAD（Drawing Interchange Format或者Drawing Exchange Format）绘图交换文件。DXF 是Autodesk（欧特克）公司开发的用于AutoCAD与其它软件之间进行CAD数据交换的CAD数据文件格式。DXF是一种开放的矢量数据格式，可以分为两类：ASCII格式和二进制格式；ASCII具有可读性好的特点，但占用的空间较大；二进制格式则占用的空间小、读取速度快。由于AutoCAD是最流行的CAD系统，DXF也被广泛使用，成为事实上的标准。绝大多数CAD系统都能读入或输出DXF文件。</p><h3 id="2-15-SWF格式（矢量图）">2.15 SWF格式（矢量图）</h3><p>​SWF是一种基于矢量的Flash动画文件格式，一般用FLASH软件创作并生成SWF文件格式，也可以通过相应软件将PDF等类型转换为SWF格式。SWF格式文件广泛用于创建吸引人的应用程序，它们包含丰富的视频、声音、图形和动画。可以在Flash中创建原始内容或者从其它Adobe应用程序（如Photoshop或Illustrator）导入它们，快速设计简单的动画，以及使用Adobe AcitonScript 3.0开发高级的交互式项目。设计人员和开发人员可使用它来创建演示文稿、应用程序和其它允许用户交互的内容。Flash可以包含简单的动画、视频内容、复杂演示文稿和应用程序以及介于它们之间的任何内容。通常，使用Flash创作的各个内容单元称为应用程序，即使它们可能只是很简单的动画。您也可以通过添加图片、声音、视频和特殊效果，构建包含丰富媒体的Flash应用程序。</p><p>​利用Macromedia公司的Flash我们可以制作出一种后缀名为SWF（Shockwave Format）的动画，这种格式的动画图像能够用比较小的体积来表现丰富的多媒体形式。在图像的传输方面，不必等到文件全部下载才能观看，而是可以边下载边看，因此特别适合网络传输，特别是在传输速率不佳的情况下，也能取得较好的效果。SWF动画如今已被大量应用于Web网页进行多媒体演示与交互性设计。此外，SWF动画是其于矢量技术制作的，因此不管将画面放大多少倍，画面不会因此而有任何损害。</p><h3 id="2-16-RIF格式">2.16 RIF格式</h3><p>​RIF文件是由Corel Painter（以前称为MetaCreations Painter）（一种用于数字绘画的程序）创建的光栅图像。它包含的图像可能包括笔触，铅笔素描，图像软管图形以及各种其他绘制的元素。RIF文件可能也不太常见<code>.RIFF</code>文件扩展名。</p><h3 id="2-17-UFO格式">2.17 UFO格式</h3><p>​ufo是另一著名做图软件ulead photoimapct的专用图形格式，文件名看起来很酷吧！致力于追上adobe的友立科技，同样也发展出跟psd类似的图档格式，能够完整纪录所有photoimapct所处理过的属性。不过在记录原理上则有些不同，ufo以物件来代替图层，这一点没什么，因为photoimapct与photoshop本身就有很多的不同。</p><h2 id="3-绘图相关软件">3 绘图相关软件</h2><p>应根据图片格式选择对应的编辑软件。相应的绘图相关软件如下。</p><h3 id="3-1-Adobe-Photoshop">3.1 Adobe Photoshop</h3><p>​主要用于图片的裁切、校色、上色、测量、修补、抠图；打开和保存的格式为TIFF、psd、jpeg、 png等位图格式。</p><p>优点：</p><p>1、摄影师的高级功能；</p><p>2、能够进行专业的色彩分级；</p><p>3、高级层：Photoshop具有多种类型的图层:类型图层，图像图层，矢量形状图层，图层样式，智能对象，智能滤镜，图层蒙版，调整图层和背景。在他们的帮助下，您可以进行多种操作；</p><p>4、有用的插件，滤镜，纹理，叠加层，动作。不同的文本样式，画笔，操作和渐变，以使图像编辑过程更加自动化和轻松；</p><p>5、合并图片；</p><p>6、全面支持绘图板：可以在表面上移动画笔，还可以控制工作压力。这将使您作为雕塑家的工作更加高效和准确；</p><p>7、活跃的+1000000用户社区；</p><p>8、专业图形：图形时，使用此软件可以做的事情实际上没有任何限制；</p><p>9、许多设计工具。您可以使用不同的Photoshop菜单样式或设置自己的尺寸。您还可以保存样式并将其重新用于以后的项目。如果您是Web设计师，请考虑学习Artboards，它们针对RGB颜色模式和带有图形处理器的高级渲染模式进行了优化。该插件简化了开发过程，为您提供了无限数量的画布，您可以在其上为不同的设备和屏幕布置各种设计。画板看起来像是特殊在一些更有用的功能中，我想提到从Adobe Stock中选择不同模板的可能性。这些模板包括库存资源和插图，可用于创建自己的独特项目。</p><p>10、视频剪辑和动画层；</p><p>11、集成图像库；</p><p>12、很容易将文件从一个程序移动到另—个程序；</p><p>13、云存储；</p><p>14、OpenType sVG字体和表情符号支持。</p><p>缺点：</p><ul><li><p>复杂的学习曲线：Photoshop是一个很难掌握的程序。甚至有经验的用户有时也会遇到问题，因为P包含用于图像修饰，设计，动画，3-D图形甚至视频编辑的功能和工具。此外，它得到稳定的升级，即创新。因此，学习曲线比任何其他创意程序都要复杂。您应该花大量时间掌握所有工具，以了解它们在图片编辑期间的工作方式；</p></li><li><p>不适合批量处理照片：尽管我们可能会说出Photoshop的许多优点，但对于每天处理数百张图像的人来说，它并不是最佳选择。该程序用于编辑单独的图片。打开许多照片然后分别编辑它们是很麻烦的。但是，某些批处理图片编辑选项仍然可用。如果转到“文件自动化”菜单，则可以找到“批量编辑”项。实际上，此模式的效果很差，您只能使用以前保存的操作；</p></li><li><p>不完整的更新或未经测试的Beta版本：没有年度更新的事实是Adobe Photoshop的严重缺陷之一。现在，用户可以按特定的时间间隔定期获取更新。结果，错误发生的频率更高。尽管它们并不令人讨厌，并且可以在Adobe支持团队的帮助下迅速修复，但有时它们会在最糟糕的时间发生。例如，当您紧张地尝试按时完成任务时。</p></li></ul><h3 id="3-2-Adobe-Illustrator">3.2 Adobe Illustrator</h3><p><strong>AI（Adobe Illustrator）</strong>：主要用于图片的拼排、写字、画线、标注、绘图；打开和保存的格式为AI、pdf、eps、 emf等矢量格式，作图结束后可导出tiff格式供稿。</p><ul><li><p>细节处理：AI更擅长细节处理差。光影效果，对比度，饱和度等等，这些图片（特别是拍的照片）的细节问题。CDR处理起来很麻烦，而且效果没有AI来得好；</p></li><li><p>稳定性：CDR稳定性好。有时候你设计了一大堆没开自动保存又忘了手动保存。正在吃着火锅唱着歌，突然来个软件失去响应，整个人都会炸。</p></li><li><p>色彩显示： CDR色彩显示好；</p></li><li><p>AI显示的颜色没有CDR饱和细腻，看起来比较干瘪，有点像多年前的苹果屏幕对比安卓屏幕。这就导致ai看起来像国产机；</p></li><li><p>兼容性：Adobe全家桶，Adobe产品线比较丰富，图形图像到音视频，自家产品互相兼容。</p></li></ul><h3 id="3-3-Inkscape">3.3 Inkscape</h3><p><strong>Inkscape软件的特点</strong>：</p><ul><li><p>创建和编辑图形的专业工具：如果你点击Inkscape中的工具栏，你会发现工具可以帮助你处理几何形状、添加文本、渐变、填充、变换形状和线条。一定要看看诸如“绘制手绘线”、“创建和编辑渐变”、“创建图表连接器”、“创建螺旋”等更新工具；</p></li><li><p>节点编辑：这个软件自带的工具允许移动节点和标记。多亏了它，用户可以转换对象的各个部分，或者以许多不同的方式更改它。当您单击此工具时，您可以使所选节点的一个手柄更长，并缩放另一个手柄，从而使其对称。您还可以使用使所选节点自动对称的选项；</p></li><li><p>高级滤镜和效果：Inkscape提供了大约20种不同的预设类别的过滤器，任何人都可以使用。此外，Inkscape用户还可以自己创建过滤器。更重要的是，你可以通过从一个对象复制样式到另一个对象来重复使用一些动态路径效果；</p></li><li><p>生成和编辑SVG文件：Inkscape在创造SVG格式的文件时表现最好。它使用户能够在XML编辑器的帮助下实时地查看和编辑文档。使用命令行工具导出和转换．Inkscape通过命令行模式为用户提供了许多编辑选项。您可以使用单个模板开始批处理、转换文档或创建文件；</p></li><li><p>创意梯度：这个软件支持很多不同的渐变，并带有一个特殊的“创建和编辑渐变”工具，可以完美地创建从一种颜色到另一种颜色的平滑过渡；</p></li><li><p>不支持CMYK：就像其他开源软件一样，Inkscape使用littlelecms库进行色彩管理。为了将矢量图像渲染成栅格图像，它使用Cairo库，该库目前不支持CMYK图像的分色。这就是为什么，这个软件目前不能用于分色；</p></li><li><p>基本格式化功能：访问OpenType函数可能有点困难，因为您必须手动选择使用哪个工具。更重要的是，这个软件不允许创建段落或符号样式。</p></li></ul><h3 id="3-4-CorelDRAW">3.4 CorelDRAW</h3><p><strong>CorelDRAW软件的特点</strong>：</p><ul><li>界面友好：CDR界面简单易懂，而且都很实用；</li><li>强大的插件：CDR的各种插件，你想得到想不到的功能都有，一切都为了提升制图效率；</li><li>印刷行业的饭碗，绝大部分海报，招牌，并没有那么多花里胡哨的效果，CDR足以胜任，而且比AI效率高的多；</li><li>AI适用于慢工出细活，适用于设计时间相对比较充裕的行业；</li><li>CDR适用于业务量大，设计时间紧凑，且设计要求不是特别高的行业。</li></ul><h3 id="3-5-Origin">3.5 Origin</h3><p>​Origin是由OriginLab公司开发的一个科学绘图、数据分析软件，支持在Microsoft Windows下运行。Origin支持各种各样的2D/3D图形。Origin中的数据分析功能包括统计，信号处理，曲线拟合以及峰值分析。Origin中的曲线拟合是采用基于Levernberg-Marquardt算法（LMA）的非线性最小二乘法拟合。Origin强大的数据导入功能，支持多种格式的数据，包括ASCII、Excel、NI TDM、DIADem、NetCDF、SPC等等。图形输出格式多样，例如JPEG，GIF，EPS，TIFF等。内置的查询工具可通过ADO访问数据库数据。</p><h3 id="3-6-R">3.6 R</h3><p>​R 语言是为数学研究工作者设计的一种数学编程语言，主要用于统计分析、绘图、数据挖掘。如果你是一个计算机程序的初学者并且急切地想了解计算机的通用编程，R 语言不是一个很理想的选择，可以选择 Python、C 或 Java。R 语言与 C 语言都是贝尔实验室的研究成果，但两者有不同的侧重领域，R 语言是一种解释型的面向数学理论研究工作者的语言，而 C 语言是为计算机软件工程师设计的。R 语言是解释运行的语言（与 C 语言的编译运行不同），它的执行速度比 C 语言慢得多，不利于优化。但它在语法层面提供了更加丰富的数据结构操作并且能够十分方便地输出文字和图形信息，所以它广泛应用于数学尤其是统计学领域。</p><p>R 语言官方网站：<a href="https://cran.r-project.org/">https://cran.r-project.org/</a></p><h3 id="3-7-PPT-Excel-Visio">3.7 PPT/Excel/Visio</h3><p>​Microsoft Visio是Windows操作系统下运行的流程图和矢量绘图软件，它是Microsoft Office软件的一个部分。常用作绘制流程图、结构图。</p><p>​PPT和Excel也是Microsoft Office软件的一个部分，可以进行简单的图片编辑，通过Excel表格中的数据可以绘制多种图标格式。</p><h3 id="3-8-Graphpad-Prism">3.8 Graphpad Prism</h3><p>Graphpad Prism是由Graphpad公司推出的一款非常实用的医学绘图软件，集生物统计、曲线拟合和科技绘图于一体可用于Windows和Mac电脑，在生物学以及社会和物理科学界得到广泛使用。偏医学，基础功能齐全。(主要图表类别：折线图、热图、柱状图、叠加柱状图、生存分析)</p><h2 id="4-论文图片分辨率">4 论文图片分辨率</h2><h3 id="4-1-像素">4.1 像素</h3><p>像素，英文pixel。其中，pix是picture(图片)的常用简写，el是element(元素)的前两个字母，一起组成了像素的单词。一个像素点，就是一个取样。我们平时接触显示器的时候，总会提到像素，而显示器的一个像素，就是一个方格。电脑显示器、手机显示器，都是由一个一个的方格像素点组成的。你拿一个像素低的显示器（比如Nokia 3310）就可以很明显的看到一个一个的小方格，你现在手机或电脑的萤幕也可以通过放大镜看到一个一个的小方格。没有放大镜，可以打开手机相机对准电脑萤幕用手指放大看。我们以为一个像素就是一个小正方形，其实，一个像素点，还可以是一个圆点，比如现在很流行的室外LED萤幕。大多数情况下，一个像素点用一个圆点或者一个方格显示。论定义的话，一个像素点并不表示一个圆点或者一个方格，而是一个采样。需要注意的是，一个像素点，同一时刻，只能显示一种颜色，这个颜色可以由三原色调配组成。人们常说的相机有800万像素，其实就是指相机拍的一张照片上有800万个像素点。同样大小的一张照片，像素越高，就显得越清晰和精细。</p><h3 id="4-2-解析度">4.2 解析度</h3><p>解析度，英文Image resolution。有一部分的人把解析度叫做“解像度”。解析度用于多个行业，这里只讨论图像相关的。我们经常会看到的电脑解析度有：800×600，1024×768，1440×900，1600×900，1920×1080等。这些物理解析度，指的是液晶屏横向和纵向有多少个像素点。比如1920×1080是指横向有1920个像素点，纵向有1080个像素点。</p><h3 id="4-3-PPI">4.3 PPI</h3><p>​PPI（Pixels Per Inch）也叫像素密度单位，所表示的是每英寸所拥有的像素数量。因此PPI数值越高，即代表显示屏能够以越高的密度显示图像。当然，显示的密度越高，拟真度就越高。Pixels Per Inch是像素的密度单位，就像PPI值越高，画面的细节就会越丰富，所以数码相机拍出来的图片因品牌或生产时间不同可能有所不同，常见的有72PPI，180PPI和300PPI,默认出来就是这么多(A710拍出的是180PPI)。 DPI(Dots Per Inch)是指输出分辨，针对于输出设备而言的，一般的激光打印机的输出分辨率是300PPI-600PPI，印刷的照排机达到1200PPI-2400PPI，常见的冲印一般在150PPI到300PPI之间。</p><p>​PPI是一种解析度的指标，常用来作为图像的解析度指标。通常情况下，每一个像素点都是正方形的，也就是说，在横向和纵向的PPI指标都一样。但是也有一些显示器是特殊的，其像素点是长方形，那么它的PPI在横向和纵像就不一样了。一台4:3的15寸显示器，解析度为1024×768，其横向和纵像的像素密度都是85PPI。有研究机构调查表明，人眼的最高解析度是300PPI。苹果公司在2010年推出的 Iphone 4就借力这个研究结果引出了Retina显示幕的概念，用来指超过300PPI的屏。实际上，根据显示亮度和显示介质的不同，人眼的最高解析度并不都是300PPI。</p><h3 id="4-4-DPI">4.4 DPI</h3><p>DPI，英文Dots Per Inch，每英寸点数。DPI是一种解析度的指标，常用在印表机、扫描器、滑鼠等物理设备解析度指标上。</p><p>我们常说的印表机是多少dpi，是指：在印表机最高解析度模式下，每英寸可以列印多少个墨点数。</p><p>实例：印表机（HP）Deskjet 2131的解析度是4800×1200 dpi。</p><p>解释：在一张纸的横向上，每英寸可以列印4800个墨点；纵向上，每英寸可以列印1200个墨点。换句话说就是，在横向上，两个墨点的距离是1÷4800英寸；在纵向上，两个墨点的距离是1÷1200英寸。有时候也用来表示字体的清晰度，比如字体大小为96DPI，其实就是96×96DPI，意思和上述一样。</p><h3 id="4-5-PPI和DPI对比">4.5 PPI和DPI对比</h3><p>ppi和dpi确实是两个概念，但是有些事情是约定成俗的，图片的ppi无法反映这张图片能在冲印店得到的冲印质量。在冲印店里只用dpi，因为我们拿去的图片必定是为了输出成照片，对于操作人员，他要知道的就是你的图片像素和你所需要印制的尺寸，这两个要素构成了dpi，所以尽管不规范，对于需要冲印的图片我们只有用dpi的大小来沟通。</p><p>DPI和PPI从定义上来看，一个指“点”，一个指“像素”。而实际上，一个“点”通常就是一个“像素”，所以人们分不清楚它们两个的区别。它们两个的区别，在于使用场合。比如，“点”可以指印表机的墨点，也可以指扫描器的采样点，也可以指一个像素点。所以，它们两个的区别，仅仅是使用场合的不同，比如表示印表机的解析度就用DPI，表示图像的解析度就用PPI。有些文献要求图片为300DPI，也就是等于要求图片为300PPI。</p><p>图片尺寸与分辨率、物理尺寸的计算关系如下：</p><p>图像尺寸（垂直或水平像素数目）(pixels) = 分辨率(dpi) × 实际物理尺寸 (inch)</p>]]></content>
      
      
      
        <tags>
            
            <tag> 图片格式 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> 科研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCI期刊的JCR分区和中科院分区</title>
      <link href="/2022/05/07/Academic/%E6%9C%9F%E5%88%8A/SCI%E6%9C%9F%E5%88%8A%E7%9A%84%20JCR%E5%88%86%E5%8C%BA%E5%92%8C%E4%B8%AD%E7%A7%91%E9%99%A2%E5%88%86%E5%8C%BA/"/>
      <url>/2022/05/07/Academic/%E6%9C%9F%E5%88%8A/SCI%E6%9C%9F%E5%88%8A%E7%9A%84%20JCR%E5%88%86%E5%8C%BA%E5%92%8C%E4%B8%AD%E7%A7%91%E9%99%A2%E5%88%86%E5%8C%BA/</url>
      
        <content type="html"><![CDATA[<h1>SCI期刊的JCR分区和中科院分区</h1><h2 id="世界主流三大检索系统">世界主流三大检索系统</h2><p>世界主流三大检索系统指的是SCI、EI和ISTP。SCI指的是Science Citation Index，即“科学引文索引”，收录3700多种期刊。SCIE指的是Science Citation Index Expanded，收录6000多种期刊。SCIE也记为SCI(E)。中国科技部规定从2000年起，SCI论文统计使用SCIE。EI指的是Engineering Index，即《工程索引》。ISTP指的是Index to Scientific &amp; Technical Proceedings，即《科技会议录索引》。</p><p>需要注意的是，SSCI是指社会科学引文索引（Social Sciences Citation Index）。它是SCI的姊妹篇。</p><p>SCI源期刊的查询官网是在https://mjl.clarivate.com/home。SCI期刊名单会逐年变化。</p><p>需要注意的是，SCI收录的期刊不全是英文期刊，但以英文期刊为主。SCI检索系统采用英语，在收录一篇文献时，主要看英文摘要。因此，能否被SCI收录，摘要的内容和质量起很大作用。另外，SCI期刊要求把论文末尾的参考文献全部译成英文。</p><h2 id="期刊的影响因子">期刊的影响因子</h2><p>影响因子（impact factor，简称IF）是指某年某期刊在前两年被SCIE收录的期刊中引用该期刊的次数与这两年该期刊发表的论文总数之间的比值。影响因子代表该期刊被同行的认可程度和期刊的学术影响力。总引文数是指某期刊在某年内被SCIE收录的期刊引用次数的总和。总论文数是指某期刊在某年内刊载论文的总篇数。它代表该期刊所载信息量的大小。</p><p>快速指数是指某年某期刊发表的论文被SCIE收录的期刊在当年所引用的次数与该期刊当年所发表的论文数之间的比值。它代表该期刊在当年对其他（包括其自身）期刊的贡献。</p><p>期刊的引用半衰期是指当某期刊在过去的某一年被SCIE收录的期刊所引用的次数相当于目前的50%时，此年份与当前年份之间的间隔年数。它体现该期刊的发展速度。</p><h2 id="SCI期刊的两种分区方法">SCI期刊的两种分区方法</h2><p>SCI期刊分区包括大区和小区。SCI期刊的分类大区是指SCIE期刊包括以下13个大类学科：医学、生物、农林科学、环境科学与生态学、化学、工程技术、数学、物理、地学、地学天文、社会科学、管理科学、综合性期刊。SCIE期刊的小类分区包括JCR（Journal Citation Reports，译为《期刊引用报告》）学科分类体系中确定的176个学科领域。</p><p>根据期刊影响因子进行评价分区的方法包括汤森路透（Thomson Reuters）分区法和中国科学院分区法两种。后者晚于前者，并被中国的高校和科研机构广为采纳。国内多数单位使用中科院分区表，而且对论文评价通常只用大区，不提小区。</p><p>汤森路透每年出版一本《期刊引用报告》（Journal Citation Reports，简称JCR）。JCR对SCIE期刊的影响因子等指数加以统计。JCR将收录的期刊分为176个不同的学科类别（即通常所称的176个小区）。在每个小区中，按照期刊影响因子从高到低的顺序，把期刊数量划分为以下4个区：</p><p>（1）影响因子位于前25%（含25%）的期刊数量属于1区；</p><p>（2）影响因子位于前25%-50%（含50%）的期刊属于2区；</p><p>（3）影响因子位于前50%~75%（含75%）的期刊属于3区；</p><p>（4）影响因子位于最末25%的期刊属于4区。</p><p>中国科学院文献情报中心根据JCR的数据，在13个大区和176个小区中，各自按照3年平均影响因子把期刊划分为以下4个区：</p><p>（1）前5%的数量属于1区；</p><p>（2）前5%-20%属于2区；</p><p>（3）前20%-50%属于3区；</p><p>（4）后50%属于4区。</p><p>中科院分区法使得1-4区的期刊数量呈金字塔型分布，其中1区和2区的期刊很少，影响因子很高。汤森路透分区法使1~4区的期刊数量呈等额均匀分布。中科院分区法在质量指标分区划分上更加严格。</p><p>在中科院分区法中，鉴于学科内期刊的3年平均影响因子呈偏态分布，为了保证1区期刊数量足够多，划定学科期刊总数前5%的影响因子最高的那批期刊为1区期刊；而对2~4区的期刊使用“3年平均影响因子总和相等”的方式来划分，即在剩下的95%期刊中，计算影响因子总和(S)，使S2=S3=S4=S/3。</p><p>关于SCI分区和影响因子查询，可以使用中国科学院SCI分区微信小程序，网址是http://www.fenqubiao.com。掌握SCI分区的检索工具，能够帮助您快速查找合适的投稿期刊。</p><p><img src="https://s2.loli.net/2023/03/12/kOAU9CbRtW1yP3o.png" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> SCI </tag>
            
            <tag> JCR </tag>
            
            <tag> 期刊 </tag>
            
            <tag> 分区 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Citespace解决运行卡顿的问题</title>
      <link href="/2022/05/07/Academic/%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7/Citespace%E8%A7%A3%E5%86%B3%E8%BF%90%E8%A1%8C%E5%8D%A1%E9%A1%BF%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2022/05/07/Academic/%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7/Citespace%E8%A7%A3%E5%86%B3%E8%BF%90%E8%A1%8C%E5%8D%A1%E9%A1%BF%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1>Citespace解决运行卡顿的问题</h1><p>Citespace最新的windows版本为6.1.R2，该版本和之前的旧版本有点不同，但是运行卡顿问题一如既往，解决卡顿问题和之前的也有点不同。</p><p>本人下载的是msi文件，将其直接安装在D盘的Citespace文件夹下，修改文件之前不要运行Citespace。</p><p>用VSCode或者记事本打开路径 D:\Citespace\app 文件夹下的 CiteSpace.cfg 文件，其中有一行代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java-options=-Xms1g</span><br></pre></td></tr></table></figure><p>将上面的这行代码替换成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java-options=-Xms4g</span><br></pre></td></tr></table></figure><p>并注意保存修改后的文件。</p><p>然后运行Citespace，可以看到JVM内存变大，如图：</p><p><img src="https://s2.loli.net/2023/03/12/YEgSl7TJi29repu.png" alt="image-20220503223827920"></p><p>再点击 GO! 会运行很快。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Citespace </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Citespace使用教程</title>
      <link href="/2022/05/07/Academic/%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7/Citespace%E7%9A%84%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2022/05/07/Academic/%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7/Citespace%E7%9A%84%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>Citespace使用教程</h1><h2 id="1-各种文献分析软件">1 各种文献分析软件</h2><table><thead><tr><th>工具</th><th>网络分析</th><th>网络可视化</th><th>热度图</th><th>转折点</th><th>聚类自动命名</th><th>宏观理论</th><th>双图叠加</th><th>概念树</th><th>时间线</th></tr></thead><tbody><tr><td>CiteSpace</td><td>++</td><td>++</td><td></td><td>+</td><td>+</td><td>+</td><td>+</td><td>+</td><td>+</td></tr><tr><td>VOSViewer</td><td></td><td></td><td>+</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>CitNetExplorer</td><td>+</td><td>+</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>SCI2</td><td>+</td><td>++</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Pajek</td><td>+++</td><td>+</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Gephi</td><td>++</td><td>+++</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="2-Citespace分析和可视化">2 Citespace分析和可视化</h2><p>红色的词代表突发性的词，根据不同的颜色划分不同的实践段，通过分区分不同的研究领域</p><p>Citespace主要分析和可视化方法：</p><p>地图叠加</p><p>网络分析</p><p>文本分析</p><ol><li>地理地图叠加可视化</li><li>宏观双图叠加可视化</li><li>时间序列网络可视化<ul><li>Cluster View</li><li>Timeline View</li><li>Timezone View</li><li>结构变异轨迹</li></ul></li><li>引用趋势可视化<ul><li>Burst View</li></ul></li><li>文本可视化<ul><li>概念树</li></ul></li></ol><h2 id="3-Citespace分析基本步骤">3 Citespace分析基本步骤</h2><h3 id="3-1-分析基本步骤">3.1 分析基本步骤</h3><ol><li>准备数据</li><li>整理数据</li><li>地理数据叠加</li><li>学科关联双图叠加</li><li>网络可视化</li><li>概念树</li><li>解读</li></ol><h3 id="3-2-收集数据">3.2 收集数据</h3><h4 id="3-2-1-可分析数据库">3.2.1 可分析数据库</h4><p>Citespace可以进行引文分析的数据库：</p><p>带有引文的科学文献数据</p><ul><li>Web of Science Core Collection</li><li>Scopus</li><li>CSSCI</li><li>CSCD</li></ul><p>缺少引文的科学文献数据</p><ul><li>Web of Science中其他数据库</li><li>MEDLINE / Pubmed</li><li>CNKI</li></ul><h4 id="3-2-2-网络分析">3.2.2 网络分析</h4><p>(1) 共被引网络分析</p><ul><li>文献共被引，作者共被引，期刊共被引</li></ul><p>(2) 共现网络分析</p><ul><li><p>合作网络：作者，机构，国家，地理位置</p></li><li><p>共词：关键词，学科索引，名词短语</p></li></ul><p>(3) 文献耦合网络分析</p><h4 id="3-2-3-分析和解读策略">3.2.3 分析和解读策略</h4><p>方法：</p><ul><li><p>由浅入深地理/宏观双图叠加，聚类图，时间线，等等</p></li><li><p>学科分类，关键词，被引文献</p></li></ul><p>范围：从整体到局部聚类：从大到小</p><p>时间：由远到近</p><p>色彩：由鲜艳（重要）到平淡</p><p>字体：由大到小</p><p>标签：LSI, LLR, MI</p><p>指标：burst, 中心性, sigma, u180</p><h4 id="3-2-4-要点">3.2.4 要点</h4><ul><li>CiteSpace提供了几种分析科学文献的方法；</li><li>参照分析和解读策略制定最有效而系统的分析方案；</li><li>解读时综合运用科学发展的宏观理论；</li><li>认真区分数据和可视化所表现的来自其它来源的信息。</li></ul><h2 id="4-安装和功能介绍">4 安装和功能介绍</h2><h3 id="4-1-Citespace下载安装">4.1 Citespace下载安装</h3><p>首先确定自己电脑的位数，根据自己电脑的位数下载对应的java位数。</p><p>Citespace下载页面：<a href="http://cluster.ischool.drexel.edu/~cchen/citespace/download/">http://cluster.ischool.drexel.edu/~cchen/citespace/download/</a></p><p>选择对应的Java版本进行安装：<a href="https://www.oracle.com/java/technologies/downloads/#java8-windows">https://www.oracle.com/java/technologies/downloads/#java8-windows</a></p><p>首先需要安装Java环境，其次再进行Citespace安装。</p><h3 id="4-2-功能参数界面">4.2 功能参数界面</h3><p>进入的界面如下：</p><p><img src="https://s2.loli.net/2023/03/12/VFTXZYMC1HsSyD2.png" alt="image-20220503093131658"></p><h4 id="4-2-1-项目区">4.2.1 项目区</h4><p>项目区图片如图所示：</p><p><img src="https://s2.loli.net/2023/03/12/dj7PNU3wkXKOHtI.png" alt="image-20220503085511761"></p><ul><li><code>new</code>是用来导入项目文件进行新的分析；</li><li><code>Demo1:Terrorism(1996-2003)</code>是当前所分析项目的名称；</li><li><code>More Actions...</code>是对当前的项目的再设定</li></ul><p><img src="https://s2.loli.net/2023/03/12/VGA2hxqpnrS5ZXP.png" alt="image-20220503085753631"></p><ul><li><code>Project Home</code>是自己建立的project文件夹文件，随着数据分析会产生很多结果文件，保存在此目录下。</li><li><code>Data Directory</code>是自己下载的原始数据，分析的时候会把路径加载到此位置。</li></ul><h4 id="4-2-2-数据处理过程">4.2.2 数据处理过程</h4><p>数据处理窗口如下：</p><p><img src="https://s2.loli.net/2023/03/12/vQe2cKgRoIirGCz.png" alt="image-20220503092427124"></p><h4 id="4-2-3-时间切片">4.2.3 时间切片</h4><p>对所下载的文献切片处理：</p><p><img src="https://s2.loli.net/2023/03/12/Vvyp7zDOPLxkdWK.png" alt="image-20220503093944134"></p><p>根据需要选择合适的时间切片。</p><h4 id="4-2-4-节点类型选择">4.2.4 节点类型选择</h4><p>根据需要选择合适的节点进行分析：</p><p><img src="https://s2.loli.net/2023/03/12/UmhtW4gsixAeHjP.png" alt="image-20220503094432597"></p><ol><li>节点类型决定了使用CiteSpace分析的目的；</li><li>选择了节点类型，CiteSpace将从对应的字段来提取数据。例如，进行Keyword分析， CiteSpace将从数据中读取DE字段的数据，来提取关键词信息。</li></ol><h4 id="4-2-5-选择阈值">4.2.5 选择阈值</h4><ol><li><p>阈值，在数据处理中CiteSpace会按照用户设定的阈值提取出各个时间切片满足的文献，并最后合并到网络中</p></li><li><p>该步骤可以认为是对数据的精炼，以提取最具影响力的数据来进行可视化。</p></li></ol><p><img src="https://s2.loli.net/2023/03/12/YkQ7VneIozbra3O.png" alt="image-20220503125201085"></p><ul><li>g-indexg指数分析</li><li>Top N分析被引次数前多少的文献</li><li>Top N%分析被引次数前百分之多少的文献</li></ul><h3 id="4-3-可视化界面介绍">4.3 可视化界面介绍</h3><p>点击运行之后，选择可视化可以进入可视化界面：</p><p><img src="https://s2.loli.net/2023/03/12/h8dFWq34eMXaPD5.png" alt="image-20220503212513822"></p><h4 id="4-3-1-快捷功能区">4.3.1 快捷功能区</h4><p>快捷功能区如图：</p><p><img src="https://s2.loli.net/2023/03/12/1g75naWfEjZkONv.png" alt="image-20220503213702544"></p><p>按下停止按键，可以让图形界面停止，选择自己喜欢的图形。</p><p>按下单色显示按键，图形颜色会显示单一颜色，效果如图：</p><p><img src="https://s2.loli.net/2023/03/12/G8l75WyaokIYwsu.png" alt="image-20220503214204320"></p><h4 id="4-3-2-快捷菜单">4.3.2 快捷菜单</h4><p>快捷菜单如图：</p><p><img src="https://s2.loli.net/2023/03/12/YSVkZ7c96GwfClR.png" alt="image-20220504145114993"></p><ul><li>Spotlight（聚光灯）：突出显示中介中心性高的节点之间的连接</li><li>Citation/Frequency Burst：显示英文突发的情况，能够看出论文激增或者突发情况。能够看出该领域哪些文献被突然关注起来，以及关注的变化过程。如下图：</li></ul><p><img src="https://s2.loli.net/2023/03/12/BJLIa2g8jqoZRih.png" alt="image-20220504145857683"></p><p>可以对图片进行放大缩小，在做博士论文的时候，可以通过文献分析这个领域，看看自己的研究方向是这个领域的哪个部分，并对这个部分进行放大进行进一步分析，以及现在的受关注情况，颜色越靠近色条右方，越是最近的研究热点</p><ul><li><p>Link walkthrough：顺序显示对应年份的共被引连线，来考察网络的演化。</p></li><li><p>搜索框：可以在搜索框中搜索人名，分析两个人的兴趣、研究文献的广泛性以及对学科的贡献。</p></li></ul><h4 id="4-3-3-控制面板">4.3.3 控制面板</h4><p>控制面板标签模块调整如图：</p><p><img src="https://s2.loli.net/2023/03/12/vr4FSmABhTU3jLX.png" alt="image-20220504155556944"></p><p>可视化图方面的调整：</p><p><img src="https://s2.loli.net/2023/03/12/C718Ljmx3EwHBbe.png" alt="image-20220504161554324"></p><p>颜色以及透明度设置：</p><p><img src="https://s2.loli.net/2023/03/12/Et67YFToejLRrZi.png" alt="image-20220504163000793"></p><h4 id="4-3-4-查看节点相关信息">4.3.4 查看节点相关信息</h4><p>选中一个节点，然后右击，如图：</p><p><img src="https://s2.loli.net/2023/03/12/XfvaqBxuLl5csg7.png" alt="image-20220504163550225"></p><p>选择<code>Node Detail</code>，能够看到节点的被引的时序图，如下图：</p><p><img src="https://s2.loli.net/2023/03/12/Ft7UYGbwR4sJprj.png" alt="image-20220504163741380"></p><p>右键进行节点设置：</p><p><img src="https://s2.loli.net/2023/03/12/7HbCWpoFkYwGMOa.png" alt="image-20220504180711331"></p><p><code>Add to the Exclusion List</code>：节点排除后重新运行，显示的是所选的节点被排除后的网络</p><p>如果想合并两个节点，先选中第一个节点A，然后右键选择<code>Add to the Alias List(Primary)</code>，然后选择第二个节点B，再通过<code>Add to the Alias List(Primary)</code>，然后再运行，B节点就会合并到A节点中。</p><p><strong>注意</strong>：合并多个节点的时候，如果顺序被弄乱，会不成体系。</p><h2 id="5-数据采集和预处理">5 数据采集和预处理</h2><h3 id="5-1-Citespace分析特点">5.1 Citespace分析特点</h3><p>数据分析与数据组成</p><p>数据分析与数据内容联系密切。对于科技文本数据而言，索引型数据库的数据内容包含了除了正文以外的所有内容，而且还增加了数据库本身对论文的分类标引。</p><p>当然，不同的数据库的格式也有一定的差异性，相比而言 Web of Science 和 Scopus 的数据结构是为完整的，Derwent专利数据 和 CSSCI 次之，CNKI的完整性最小。分析中文的时候建议分析 CSSCI 的数据。</p><p>各个数据库包含的数据完整性不同，因此在CiteSpace中是不能完成有关分析的。如CNKI数据不包含参考文献字段，那就不能进行文献的共被引分析，作者的共被引分析和期刊的共被引分析。</p><p>CiteSpace分析的数据是以WoS数据为基础的，即其他数据库收集的数据都要先经过转换，成为WoS的数据格式才能分析。</p><p><img src="https://s2.loli.net/2023/03/12/wxFsEchbTm7aft5.png" alt="image-20220504190203283"></p><p>Citespace可以分析的数据类型如下所示：</p><p><img src="https://s2.loli.net/2023/03/12/FIkEWRNbg2n5Pdx.png" alt="image-20220504192058578"></p><p>Citespace可以分析的数据源：</p><p><img src="https://s2.loli.net/2023/03/12/HpkdBloWrfx2amv.png" alt="image-20220504195237834"></p><h3 id="5-2-英文数据的采集">5.2 英文数据的采集</h3><ul><li>Web of Science数据采集</li><li>Scopus数据采集</li><li>PubMed数据采集</li><li>德温特专利数据采集</li></ul><p>由于每个学校的购买的数据库年限不一样，并且每个学校购买的数据库更新时间也不同，所以检索的内容可能不同。因此需要在论文中说明所购买数据库的时间范围，以及自己使用数据的时间范围。</p><h4 id="5-2-1-Web-of-Science数据采集">5.2.1 Web of Science数据采集</h4><p>在 Web of Science 上选择 Web of Science Core Collection 搜索库，输入关键词进行搜索，搜索后，选择导出 Plain text file 格式的文件。</p><p><img src="https://s2.loli.net/2023/03/12/J8NMd1uXHmvZef2.png" alt="image-20220502184709600"></p><p>接着进行导出文件设置，如下：</p><p><img src="https://s2.loli.net/2023/03/12/bkRzrPINOwW2hst.png" alt="image-20220502185034940"></p><p>建议将下载的数据文件命名为<code>download_501-1000.txt</code>这样的形式。</p><h4 id="5-2-2-Scopus数据采集">5.2.2 Scopus数据采集</h4><p>在Scopus搜索的英文界面下，搜索相应的内容，然后选择<code>Select all</code>然后点击<code>Export</code>。</p><p><img src="https://s2.loli.net/2023/03/12/ciEKfSG5kaqp8tI.png" alt="image-20220504203832559"></p><p>选择导出<code>RIS Format</code>格式，并且全选所有导出内容，并导出。</p><p><img src="https://s2.loli.net/2023/03/12/Ro1FidhmDHQby6c.png" alt="image-20220504204158131"></p><p>建议将下载的数据文件命名为<code>download_501-1000.ris</code>这样的形式。</p><p>然后将导入检索得到的<code>ris</code>数据：</p><p><img src="https://s2.loli.net/2023/03/12/xIF14zOoVqdTkKW.png" alt="image-20220504205806952"></p><p>选择来源数据库为Scopus，根据如下图所示导入数据并进行转换。</p><p><img src="https://s2.loli.net/2023/03/12/Lt9fadqz8so5gr2.png" alt="image-20220504213843708"></p><p>推荐首选 Web of Science 进行数据检索，否则可能会存在转换数据丢失的情况。</p><p>可以通过如下图看出<code>ris</code>和<code>txt</code>文件之间的区别：</p><p><img src="https://s2.loli.net/2023/03/12/AmTIrj3GwycYHo9.png" alt="image-20220504214552427"></p><h4 id="5-2-3-中文数据的采集">5.2.3 中文数据的采集</h4><ul><li>CSSCI数据采集</li><li>CSCD数据采集</li><li>CNKI数据采集</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Citespace </tag>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机房预约系统</title>
      <link href="/2022/05/06/C++/%E6%9C%BA%E6%88%BF%E9%A2%84%E7%BA%A6%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/05/06/C++/%E6%9C%BA%E6%88%BF%E9%A2%84%E7%BA%A6%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1>机房预约系统</h1><h2 id="1-机房预约系统需求">1 机房预约系统需求</h2><h3 id="1-1-系统简介">1.1 系统简介</h3><p>学校现有几个规则不同的机房，由于使用时经常出现”撞车“的现象，现开发一套机房预约系统，解决这一问题。</p><h3 id="1-2-身份简介">1.2 身份简介</h3><p>分别有三种身份使用该程序：</p><ul><li><strong>学生代表</strong>：申请使用机房</li><li><strong>教师</strong>：审核学生的预约</li><li><strong>管理员</strong>：给学生、教师创建账号</li></ul><h3 id="1-3-机房简介">1.3 机房简介</h3><p>机房共有三间</p><ul><li>1号机房 — 最大容量20人</li><li>2号机房 — 最多容量50人</li><li>3号机房 — 最多容量100人</li></ul><h3 id="1-4-申请简介">1.4 申请简介</h3><ul><li>申请的订单每周由管理员负责清空</li><li>学生可以预约一周内的机房使用，预约的日期为周一至周五，预约时需要选择预约时段（上午、下午）</li><li>教师来审核预约，依据实际情况审核预约通过或者不通过</li></ul><h3 id="1-5-系统具体需求">1.5 系统具体需求</h3><ul><li>首先进入登录界面，可选登录身份有：<ul><li>学生代表</li><li>老师</li><li>管理员</li><li>退出</li></ul></li><li>每个身份都需要进行验证后，进入子菜单<ul><li>学生需要输入：学号、姓名、登录密码</li><li>老师需要输入：职工号、姓名、登录密码</li><li>管理员需要输入：管理员姓名、登录密码</li></ul></li><li>学生具体功能<ul><li>申请预约 — 预约机房</li><li>查看自身的预约 — 查看自己的预约状态</li><li>查看所有预约 — 查看全部预约信息以及预约状态</li><li>取消预约 — 取消自身的预约，预约成功或审核中的预约均可取消</li><li>注销登录 — 退出登录</li></ul></li><li>教师具体功能<ul><li>查看所有预约 — 查看全部预约信息以及预约状态</li><li>审核预约 — 对学生的预约进行审核</li><li>注销登录 — 退出登录</li></ul></li><li>管理员具体功能<ul><li>添加账号 — 添加学生或教师的账号，需要检测学生编号或教师职工号是否重复</li><li>查看账号 — 可以选择查看学生或教师的全部信息</li><li>查看机房 — 查看所有机房的信息</li><li>清空预约 — 清空所有预约记录</li><li>注销登录 — 退出登录</li></ul></li></ul><p><img src="https://s2.loli.net/2023/03/12/RlLjcOyDg5eh8uC.png" alt="image-20220314224954240"></p><h2 id="2-创建项目-2">2 创建项目</h2><p>创建项目步骤如下：</p><ul><li>创建新项目</li><li>添加文件</li></ul><h3 id="2-1-创建项目-2">2.1 创建项目</h3><p>打开Visual studio后，点击创建新项目，创建新的C++项目</p><img src="https://s2.loli.net/2023/03/12/efbYOFo5t7Zw4E3.png" alt="image-20220123124340461" style="zoom: 67%;" /><img src="https://s2.loli.net/2023/03/12/OL9a4HXWxu2YNUP.png" alt="image-20220123125134404" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/12/VoBACc47EKJ3iq8.png" alt="image-20220123125917692" style="zoom:67%;" /><h3 id="2-2-创建文件-2">2.2 创建文件</h3><p>右键源文件，选择添加-&gt;新建项</p><img src="https://s2.loli.net/2023/03/12/AMfNtn4CFOaH8KD.png" alt="image-20220123130442955" style="zoom:67%;" /><p>给C++文件起个名称，然后点击添加即可。</p><img src="https://s2.loli.net/2023/03/12/fsNvDALp9Ojdm7J.png" alt="image-20220123130813668" style="zoom:67%;" /><h2 id="3-创建主菜单">3 创建主菜单</h2><p><strong>功能描述</strong>：设计主菜单，与用户进行交互</p><h3 id="3-1-菜单实现">3.1 菜单实现</h3><p>在主函数main中添加菜单提示，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;<span class="comment">//用于接受用户的选择</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------      欢迎来到机房预约系统      ------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;请输入您的身份：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|        1.学生代表       |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|        2.老  师         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|        3.管 理 员       |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|        0.退  出         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入您的选择：&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-搭建接口">3.2 搭建接口</h3><p>接受用户的选择，搭建接口</p><p>在main中添加代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;<span class="comment">//用于接受用户的选择</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------      欢迎来到机房预约系统      ------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;请输入您的身份：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|        1.学生代表       |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|        2.老  师         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|        3.管 理 员       |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|        0.退  出         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入您的选择：&quot;</span>;</span><br><span class="line">        </span><br><span class="line">cin &gt;&gt; select;<span class="comment">// 接受用户的选择</span></span><br><span class="line"><span class="keyword">switch</span> (select) &#123; <span class="comment">//根据用户选择 实现不同接口</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: <span class="comment">//学生身份</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: <span class="comment">//老师身份</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: <span class="comment">//管理员身份</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: <span class="comment">//退出系统</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>: </span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入有误，请重新选择！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果图：</p><p><img src="https://s2.loli.net/2023/03/12/y8gJzZI7HF6jKr3.png" alt=""></p><p>至此，界面搭建完成。</p><h2 id="4-退出功能实现">4 退出功能实现</h2><h3 id="4-1-退出功能实现">4.1 退出功能实现</h3><p>在main函数分支 0 选项中，添加退出程序的代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎下一次使用&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h3 id="4-2-测试退出功能">4.2 测试退出功能</h3><p>运行程序，效果如图：</p><p><img src="https://s2.loli.net/2023/03/12/bUxwQfo5pjJYHsV.png" alt="image-20220315001801900"></p><p>至此，退出程序功能实现。</p><h2 id="5-创建身份类">5 创建身份类</h2><h3 id="5-1-身份的基类">5.1 身份的基类</h3><ul><li>在整个系统中，有三种身份，分别为：学生代表、老师以及管理员</li><li>三种身份有其共性也有特性，因此我们可以将三种身份抽象出一个身份基类<strong>identity</strong></li><li>在头文件下创建<code>identity.h</code>文件</li></ul><p><code>identity.h</code>中添加代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//身份抽象类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Identity</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//操作菜单</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">openMenu</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">string m_Name;<span class="comment">//用户名</span></span><br><span class="line">string m_Pwd;<span class="comment">//密码</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>效果如图：</p><p><img src="https://s2.loli.net/2023/03/12/CD2vom1rBIcniNG.png" alt="image-20220315103655899"></p><h3 id="5-2-学生类">5.2 学生类</h3><h4 id="5-2-1-功能分析">5.2.1 功能分析</h4><p>学生主要功能是可以通过类中成员函数，实现预约实验室操作</p><p>学生类中主要功能有：</p><ul><li>显示学生操作的菜单界面</li><li>申请预约</li><li>查看自身预约</li><li>查看所有预约</li><li>取消预约</li></ul><h4 id="5-2-2-类的创建">5.2.2 类的创建</h4><p>在头文件以及源文件下创建<code>student.h</code>和<code>student.cpp</code>文件</p><p><code>student.h</code>中添加代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;identity.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//学生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> :<span class="keyword">public</span> Identity &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line"><span class="built_in">Student</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造（学号、姓名、密码）</span></span><br><span class="line"><span class="built_in">Student</span>(<span class="type">int</span> id, string name, string pwd);</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">openMenu</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//申请预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">applyOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看我的预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showMyOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showAllOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取消预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cancelOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//学生学号</span></span><br><span class="line"><span class="type">int</span> m_Id;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>student.cpp中添加代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;student.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Student::<span class="built_in">Student</span>() &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造（学号、姓名、密码）</span></span><br><span class="line">Student::<span class="built_in">Student</span>(<span class="type">int</span> id, string name, string pwd) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::openMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//申请预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::applyOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看我的预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::showMyOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::showAllOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取消预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::cancelOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-老师类">5.3 老师类</h3><h4 id="5-3-1-功能分析">5.3.1 功能分析</h4><p>教师类主要功能是查看学生的预约，并进行审核</p><p>教师类中主要功能有：</p><ul><li>显示教师操作的菜单界面</li><li>查看所有预约</li><li>审核预约</li></ul><h4 id="5-3-2-类的创建">5.3.2 类的创建</h4><p>在头文件以及源文件下创建<code>teacher.h</code>和<code>teacher.cpp</code>文件</p><p><code>teacher.h</code>中添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;identity.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span> :<span class="keyword">public</span> Identity &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line"><span class="built_in">Teacher</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造（职工编号，姓名，密码）</span></span><br><span class="line"><span class="built_in">Teacher</span>(<span class="type">int</span> empId, string name, string pwd);</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">openMenu</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showAllOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//审核预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">validOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m_EmpId;<span class="comment">//教师编号</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>teacher.cpp</code>中添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;teacher.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Teacher::<span class="built_in">Teacher</span>() &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造（职工编号，姓名，密码）</span></span><br><span class="line">Teacher::<span class="built_in">Teacher</span>(<span class="type">int</span> empId, string name, string pwd) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Teacher::openMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Teacher::showAllOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//审核预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Teacher::validOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-4-管理员类">5.4 管理员类</h3><h4 id="5-4-1-功能分析">5.4.1 功能分析</h4><p>管理员类主要功能是对学生和老师账户进行管理，查看机房信息以及清空预约记录</p><p>管理员类中主要功能有：</p><ul><li>显示管理员操作的菜单界面</li><li>添加账号</li><li>查看机房信息</li><li>清空预约记录</li></ul><h4 id="5-4-2-类的创建">5.4.2 类的创建</h4><p>在头文件以及源文件下创建<code>manager.h</code>和<code>manager.cpp</code>文件</p><p><code>manager.h</code>中添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;identity.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Manager</span> :<span class="keyword">public</span> Identity &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line"><span class="built_in">Manager</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造</span></span><br><span class="line"><span class="built_in">Manager</span>(string name, string pwd);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择菜单</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">openMenu</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加账号</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addPerson</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看账号</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPerson</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看机房信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showComputer</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空预约记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cleanFile</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>manager.cpp</code>中添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Manager::<span class="built_in">Manager</span>() &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造</span></span><br><span class="line">Manager::<span class="built_in">Manager</span>(string name, string pwd) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::openMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加账号</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::addPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看账号</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::showPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看机房信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::showComputer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空预约记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::cleanFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，所有的类创建完毕，效果如图：</p><p><img src="https://s2.loli.net/2023/03/12/lHFJqhroUOxfTSe.png" alt="image-20220315134247713"></p><h2 id="6-登录模块">6 登录模块</h2><h3 id="6-1-全局文件添加">6.1 全局文件添加</h3><p>功能描述：</p><p>不同的身份可能会用到不同的文件操作，我们可以将所有的文件名定义到一个全局的文件中</p><p>在头文件中添加<code>globalFile.h</code>文件，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//管理员文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ADMIN_FILE <span class="string">&quot;admin.txt&quot;</span></span></span><br><span class="line"><span class="comment">//学生文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STUDENT_FILE <span class="string">&quot;student.txt&quot;</span></span></span><br><span class="line"><span class="comment">//教师文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TEACHER_FILE <span class="string">&quot;teacher.txt&quot;</span></span></span><br><span class="line"><span class="comment">//机房信息文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COMPUTER_FILE <span class="string">&quot;computer.txt&quot;</span></span></span><br><span class="line"><span class="comment">//订单文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ORDER_FILE <span class="string">&quot;order.txt&quot;</span></span></span><br></pre></td></tr></table></figure><h3 id="6-2-登录函数封装">6.2 登录函数封装</h3><p>功能描述：根据用户的选择，进入不同的身份登录</p><p>在预约系统的cpp文件中添加全局函数<code>void LoginIn(string filename, int type)</code></p><p>参数：</p><ul><li>fileName — 操作的文件名</li><li>type — 登录的身份（1代表学生，2代表老师，3代表管理员）</li></ul><p>LoginIn中添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//登录功能</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LoginIn</span><span class="params">(string fileName, <span class="type">int</span> type)</span> </span>&#123;</span><br><span class="line"><span class="comment">//父类指针，用于指向子类对象</span></span><br><span class="line">Identity* person = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读文件</span></span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(fileName, ios::in);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断文件是否存在</span></span><br><span class="line"><span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//准备接受用户信息</span></span><br><span class="line"><span class="type">int</span> id = <span class="number">0</span>;</span><br><span class="line">string name;</span><br><span class="line">string pwd;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断身份</span></span><br><span class="line"><span class="keyword">if</span> (type == <span class="number">1</span>) &#123; <span class="comment">//学生身份</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入你的学号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您的职工号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入用户名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入密码：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; pwd;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (type == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//学生身份验证</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>) &#123;</span><br><span class="line"><span class="comment">//老师身份验证</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">3</span>) &#123;</span><br><span class="line"><span class="comment">//管理员身份验证</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;验证登录失败！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在main函数的不同分支中，填入不同的登录接口</p><p><img src="https://s2.loli.net/2023/03/12/elqiTzLNF2vsVku.png" alt="image-20220315144432609"></p><h3 id="6-3-学生登陆实现">6.3 学生登陆实现</h3><p>在student.txt文件中添加两条学生信息，用于测试</p><p>添加信息：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 张三 123</span><br><span class="line">2 李四 123456</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><p>第一列 代表 <strong>学号</strong></p></li><li><p>第二列 代表 <strong>学生姓名</strong></p></li><li><p>第三列 代表 <strong>密码</strong></p></li></ul><p>效果图：</p><p><img src="https://s2.loli.net/2023/03/12/GXoz8SvV3T4dxEj.png" alt="image-20220315144743380"></p><p>在Login函数的学生分支中加入如下代码，验证学生身份</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生身份验证</span></span><br><span class="line"><span class="type">int</span> fId;</span><br><span class="line">string fName;</span><br><span class="line">string fPwd;</span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; fId &amp;&amp; ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd) &#123;</span><br><span class="line"><span class="comment">//测试代码：</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; fId &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; fName &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; fPwd &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">if</span> (id == fId &amp;&amp; name == fName &amp;&amp; pwd == fPwd) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生验证登陆成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">person = <span class="keyword">new</span> <span class="built_in">Student</span>(id, name, pwd);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加代码效果图：</p><p><img src="https://s2.loli.net/2023/03/12/C3VI5dyG1zT2Mum.png" alt="image-20220315155409015"></p><p>测试效果：</p><p><img src="https://s2.loli.net/2023/03/12/CJdH8MrfYU4iL27.png" alt="image-20220315155458412"></p><h3 id="6-4-教师登录实现">6.4 教师登录实现</h3><p>在teacher.txt文件中添加一条老师信息，用于测试</p><p>添加信息：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 老王 123</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><p>第一列 代表 <strong>教师职工编号</strong></p></li><li><p>第二列 代表 <strong>教师姓名</strong></p></li><li><p>第三列 代表 <strong>密码</strong></p></li></ul><p>效果图：</p><p><img src="https://s2.loli.net/2023/03/12/k5Vnw7lcZTvmFuy.png" alt="image-20220315160210819"></p><p>添加代码效果图：</p><p><img src="https://s2.loli.net/2023/03/12/A3xOF8HL4SGEbzQ.png" alt="image-20220315160846753"></p><p>测试效果：</p><p><img src="https://s2.loli.net/2023/03/12/38heJkDYzZQsLgT.png" alt="image-20220315160456660"></p><h3 id="6-5-管理员登录实现">6.5 管理员登录实现</h3><p>在admin.txt文件中添加一条管理员信息，由于我们只有一条管理员，因此本案例中没有添加管理员的功能</p><p>添加信息：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin 123</span><br></pre></td></tr></table></figure><p>其中：<code>admin</code>代表管理员用户名，<code>123</code>代表管理员密码</p><p>效果图：</p><p><img src="https://s2.loli.net/2023/03/12/RMiHGFrpC1XAY36.png" alt="image-20220315161306072"></p><p>在Login函数的管理员分支中加入如下代码，验证管理员身份</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//管理员身份验证</span></span><br><span class="line">string fName;<span class="comment">//从文件中获取的姓名</span></span><br><span class="line">string fPwd;<span class="comment">//从文件中获取的密码</span></span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd) &#123;</span><br><span class="line"><span class="keyword">if</span> (name == fName &amp;&amp; pwd == fPwd) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;验证登陆成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">person = <span class="keyword">new</span> <span class="built_in">Manager</span>(name, pwd);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加效果如图：</p><p><img src="https://s2.loli.net/2023/03/12/yXcV4xBIEOUhrj7.png" alt="image-20220315161651633"></p><p>测试效果：</p><p><img src="https://s2.loli.net/2023/03/12/8pEU7hI5TAxBzXD.png" alt="image-20220315162110581"></p><p>至此，所有身份的登录功能全部实现。</p><h2 id="7-管理员模块">7 管理员模块</h2><h3 id="7-1-管理员登录和注销">7.1 管理员登录和注销</h3><h4 id="7-1-1-构造函数">7.1.1 构造函数</h4><p>在Manager类的构造函数中，初始化管理员信息，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Manager::<span class="built_in">Manager</span>(string name,string pwd) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-1-2-管理员子菜单">7.1.2 管理员子菜单</h4><p>在机房预约系统.cpp中，当用户登录的是管理员，添加管理员菜单接口</p><p>将不同的分支提供出来</p><ul><li>添加账号</li><li>查看账号</li><li>查看机房</li><li>清空预约</li><li>注销登录</li></ul><p>从而实现注销功能</p><p>添加全局函数<code>void managerMenu(Identity* &amp;manager)</code>，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进入管理员的子菜单界面</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">managerMenu</span><span class="params">(Identity*&amp; manager)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">//调用管理员子菜单</span></span><br><span class="line">manager-&gt;<span class="built_in">operMenu</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//将父类的指针转为子类的指针，调用子类里其他接口</span></span><br><span class="line">Manager* man = (Manager*)manager;</span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//接受用户的选择</span></span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123;<span class="comment">//添加账号</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;添加账号&quot;</span> &lt;&lt; endl;</span><br><span class="line">man-&gt;<span class="built_in">addPerson</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">2</span>) &#123;<span class="comment">//查看账号</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查看账号&quot;</span> &lt;&lt; endl;</span><br><span class="line">man-&gt;<span class="built_in">showPerson</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">3</span>) &#123;<span class="comment">//查看机房</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查看机房&quot;</span> &lt;&lt; endl;</span><br><span class="line">man-&gt;<span class="built_in">showComputer</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">4</span>) &#123;<span class="comment">//清空预约</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;清空预约&quot;</span> &lt;&lt; endl;</span><br><span class="line">man-&gt;<span class="built_in">cleanFile</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;<span class="comment">//注销</span></span><br><span class="line"><span class="keyword">delete</span> manager;<span class="comment">//销毁掉堆区对象</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;注销成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-1-3-菜单功能实现">7.1.3 菜单功能实现</h4><p>在实现成员函数<code>void Manager::operator()</code>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::operMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎管理员：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot;登录!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;请输入您的身份：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        1.添加账号       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        2.查看账号       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        3.查看机房       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        4.清空预约       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        0.注销登录       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择您的操作：&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-1-4-接口对接">7.1.4 接口对接</h4><p>管理员成功登录后，调用管理员子菜单界面</p><p>在管理员登录验证分支中，添加代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进入管理员子菜单界面</span></span><br><span class="line"><span class="built_in">managerMenu</span>(person);</span><br></pre></td></tr></table></figure><p>添加效果如图：</p><p><img src="https://s2.loli.net/2023/03/12/Jq6wIOAU5zxjQM3.png" alt="image-20220315184354317"></p><p>测试对接，效果如图：</p><p><img src="https://s2.loli.net/2023/03/12/Rf91HUFXlWxcCGB.png" alt="image-20220315184445336"></p><p>登录成功</p><p><img src="https://s2.loli.net/2023/03/12/pzARkaQI1FdCnl9.png" alt="image-20220315184523445"></p><p>注销登录</p><p><img src="https://s2.loli.net/2023/03/12/DR9fUOa5opClGJj.png" alt="image-20220315184554766"></p><p>至此，管理员身份可以成功登录以及注销。</p><h3 id="7-2-添加账号">7.2 添加账号</h3><p>功能描述：给学生或教师添加新的账号</p><p>功能要求：添加学生学号不能重复，教师职工号不能重复</p><h4 id="7-2-1-添加功能实现">7.2.1 添加功能实现</h4><p>在Manager的<strong>addPerson</strong>成员函数中，实现添加新账号功能，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加账号</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::addPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入添加账号类型：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1.添加学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2.添加老师&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    string fileName;</span><br><span class="line">    string tip;</span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line">        fileName = STUDENT_FILE;</span><br><span class="line">        tip = <span class="string">&quot;请输入学号：&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        fileName = TEACHER_FILE;</span><br><span class="line">        tip = <span class="string">&quot;请输入职工编号：&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ofs.<span class="built_in">open</span>(fileName, ios::out | ios::app);</span><br><span class="line">    <span class="type">int</span> id;<span class="comment">//学号或职工号</span></span><br><span class="line">    string name;<span class="comment">//姓名</span></span><br><span class="line">    string pwd;<span class="comment">//密码</span></span><br><span class="line">    cout &lt;&lt; tip &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; name;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入密码：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; pwd;</span><br><span class="line">    ofs &lt;&lt; id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; pwd &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;添加成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试效果：</p><p><img src="https://s2.loli.net/2023/03/12/1toQmICZrUFDvOb.png" alt="image-20220315192120680"></p><p>成功在student.txt文件中添加了一条信息。</p><p><img src="https://s2.loli.net/2023/03/12/mLOaqElFYNZxgwt.png" alt="image-20220315192221297"></p><h4 id="7-2-2-去重操作">7.2.2 去重操作</h4><p>功能描述：添加新账号时，如果是重复的学生编号，或是重复的教师职工编号，提示有误。</p><h5 id="7-2-2-1-读取信息">7.2.2.1 读取信息</h5><p>要去除重复的账号，首先要将学生和教师的账号信息获取到程序中，方可检测；</p><p>在<code>manager.h</code>中，添加两个容器用于存放学生和教师的信息</p><p>添加一个新的成员函数<code>void initVector();</code>初始化容器</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化容器</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initvector</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//学生容器</span></span><br><span class="line">vector&lt;Student&gt;vStu;</span><br><span class="line"><span class="comment">//教师容器</span></span><br><span class="line">vector&lt;Teacher&gt;vTea;</span><br></pre></td></tr></table></figure><p>添加的位置如图：</p><p><img src="https://s2.loli.net/2023/03/12/P4RHySAfMUwd3ib.png" alt="image-20220315193106631"></p><p>在Manager的有参构造函数中，获取目前的学生和教师信息，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化容器</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::initvector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//读取学生文件中信息</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.<span class="built_in">open</span>(STUDENT_FILE, ios::in);</span><br><span class="line">    <span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件读取失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    vStu.<span class="built_in">clear</span>();</span><br><span class="line">    vTea.<span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line">    Student s;</span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; s.m_Id &amp;&amp; ifs &gt;&gt; s.m_Name &amp;&amp; ifs &gt;&gt; s.m_Pwd) &#123;</span><br><span class="line">        vStu.<span class="built_in">push_back</span>(s);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;当前学生数量为：&quot;</span> &lt;&lt; vStu.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    ifs.<span class="built_in">close</span>();<span class="comment">//学生初始化</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取老师文件信息</span></span><br><span class="line">    ifs.<span class="built_in">open</span>(TEACHER_FILE, ios::in);</span><br><span class="line">    Teacher t;</span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; t.m_EmpId &amp;&amp; ifs &gt;&gt; t.m_Name &amp;&amp; ifs &gt;&gt; t.m_Pwd) &#123;</span><br><span class="line">        vTea.<span class="built_in">push_back</span>(t);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;当前教师数量为：&quot;</span> &lt;&lt; vTea.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在有参构造函数中，调用初始化容器函数：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有参构造</span></span><br><span class="line">Manager::<span class="built_in">Manager</span>(string name, string pwd) &#123;</span><br><span class="line"><span class="comment">//初始化管理员信息</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">initvector</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试，运行代码可以看到测试代码获取当前学生和教师数量。</p><p><img src="https://s2.loli.net/2023/03/12/sJhwibWNeA4OlMg.png" alt="image-20220315195148972"></p><h5 id="7-2-2-2-去重函数封装">7.2.2.2 去重函数封装</h5><p>在<code>manager.h</code>文件中添加成员函数<code>bool checkRepeat(int id, int type);</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//检测重复 参数:(传入id 传入类型)返回值: (true 代表有重复, false代表没有重复)</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">checkRepeat</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> type)</span></span>;</span><br></pre></td></tr></table></figure><p>在manager.cpp文件中实现成员函数<code>bool checkRepeat(int id, int type);</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Manager::checkRepeat</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (type == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (vector&lt;Student&gt;::iterator it = vStu.<span class="built_in">begin</span>(); it != vStu.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (id == it-&gt;m_Id) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (vector&lt;Teacher&gt;::iterator it = vTea.<span class="built_in">begin</span>(); it != vTea.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (id == it-&gt;m_EmpId) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7-2-2-3-添加去重操作">7.2.2.3 添加去重操作</h5><p>在添加学生编号或者教师职工号时，检测是否有重复，manager.cpp文件中代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加账号</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::addPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入添加账号类型：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1.添加学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2.添加老师&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    string fileName;</span><br><span class="line">    string tip;</span><br><span class="line">    ofstream ofs;</span><br><span class="line">    string errorTip;<span class="comment">//重复错误提示</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line">        fileName = STUDENT_FILE;</span><br><span class="line">        tip = <span class="string">&quot;请输入学号：&quot;</span>;</span><br><span class="line">        errorTip = <span class="string">&quot;学号重复，请重新输入：&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        fileName = TEACHER_FILE;</span><br><span class="line">        tip = <span class="string">&quot;请输入职工编号：&quot;</span>;</span><br><span class="line">        errorTip = <span class="string">&quot;职工号重复，请重新输入：&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ofs.<span class="built_in">open</span>(fileName, ios::out | ios::app);</span><br><span class="line">    <span class="type">int</span> id;<span class="comment">//学号或职工号</span></span><br><span class="line">    string name;<span class="comment">//姓名</span></span><br><span class="line">    string pwd;<span class="comment">//密码</span></span><br><span class="line">    cout &lt;&lt; tip &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cin &gt;&gt; id;</span><br><span class="line">        <span class="type">bool</span> ret = <span class="keyword">this</span>-&gt;<span class="built_in">checkRepeat</span>(id, <span class="number">1</span>);<span class="comment">//有重复</span></span><br><span class="line">        <span class="keyword">if</span> (ret) &#123;</span><br><span class="line">            cout &lt;&lt; errorTip &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; name;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入密码：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; pwd;</span><br><span class="line">    ofs &lt;&lt; id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; pwd &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;添加成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码位置如图：</p><p><img src="https://s2.loli.net/2023/03/12/We1rdfXjnu52EZP.png" alt="image-20220315200926174"></p><p><img src="https://s2.loli.net/2023/03/12/A6Tuv1CtKEiZIHN.png" alt="image-20220315201022215"></p><p>测试效果：</p><p><img src="https://s2.loli.net/2023/03/12/jqBchVIg3G1YvzQ.png" alt="image-20220315201157592"></p><p><img src="https://s2.loli.net/2023/03/12/clEN6izYGWmaPZ1.png" alt="image-20220315201300102"></p><h5 id="7-2-2-4-bug解决">7.2.2.4 bug解决</h5><p>bug描述：</p><p>虽然可以检测重复的账号，但是刚添加的账号由于没有更新到容器中，因此不会做检测</p><p>导致刚加入的账号的学生学号或者职工编号，再次添加时依然可以重复</p><p>解决方案：在每次添加新账号时，重新初始化容器</p><p>在添加完毕后，加入代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化容器</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">initVector</span>();</span><br></pre></td></tr></table></figure><p>位置如图：</p><p><img src="https://s2.loli.net/2023/03/12/HACiR7lxumGvTsZ.png" alt="image-20220315224802856"></p><p>再次测试，刚加入的账号不会重复添加了。</p><h3 id="7-3-显示账号">7.3 显示账号</h3><p>功能描述：显示学生信息或教师信息</p><h4 id="7-3-1-显示功能实现">7.3.1 显示功能实现</h4><p>在Manager的<strong>showPerson</strong>成员函数中，实现显示账号功能，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看账号</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::showPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择查看的内容：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1.查看所有的学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2.查看所有的老师&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> select = <span class="number">0</span>;<span class="comment">//接受用户的选择</span></span><br><span class="line">    cin &gt;&gt; select;</span><br><span class="line">    <span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">//查看学生</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;所有学生的信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        for_each(vStu.<span class="built_in">begin</span>(), vStu.<span class="built_in">end</span>(), printStudent);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//查看老师</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;所有老师的信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        for_each(vTea.<span class="built_in">begin</span>(), vTea.<span class="built_in">end</span>(), printTeacher);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-3-2-测试">7.3.2 测试</h4><p>测试查看学生效果：</p><p><img src="https://s2.loli.net/2023/03/12/sVIYZEUzjKgwGAm.png" alt="image-20220315230652220"></p><p>测试查看教师效果：</p><p><img src="https://s2.loli.net/2023/03/12/Fal91ID6BU2uKXv.png" alt="image-20220315230725126"></p><p>至此，显示账号功能实现完毕。</p><h3 id="7-4-查看机房">7.4 查看机房</h3><h4 id="7-4-1-添加机房信息">7.4.1 添加机房信息</h4><p>案例需求如下，机房一共有三个，其中1号机房容量20台机器，2号50台机器，3号100台机器</p><p>我们可以将信息录入到computer.txt中：</p><p><img src="https://s2.loli.net/2023/03/12/ucPdoSENCt9F2W5.png" alt="image-20220315231120701"></p><h4 id="7-4-2-机房类创建">7.4.2 机房类创建</h4><p>在头文件下，创建新的文件computer.h，并添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//机房类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_ComId;<span class="comment">//机房Id类</span></span><br><span class="line"><span class="type">int</span> m_MaxNum;<span class="comment">//机房最大容量</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="7-4-3-初始化机房信息">7.4.3 初始化机房信息</h4><p>在Manager管理员类下，添加机房的容器，用于保护机房信息</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//机房容量</span></span><br><span class="line">vector&lt;Computer&gt;vCom;</span><br></pre></td></tr></table></figure><p>在Manager有参构造函数中，初始化机房信息，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有参构造</span></span><br><span class="line">Manager::<span class="built_in">Manager</span>(string name, string pwd) &#123;</span><br><span class="line"><span class="comment">//初始化管理员信息</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">initvector</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取机房信息</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.<span class="built_in">open</span>(COMPUTER_FILE, ios::in);</span><br><span class="line"></span><br><span class="line">    Computer c;</span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; c.m_ComId &amp;&amp; ifs &gt;&gt; c.m_MaxNum) &#123;</span><br><span class="line">        vCom.<span class="built_in">push_back</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;当前机房数量为：&quot;</span> &lt;&lt; vCom.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前的版本机房的信息不会有改动，如果后期有修改功能，最好将获取机房信息封装到一个函数中，方便维护。</p><h4 id="7-4-4-显示机房信息">7.4.4 显示机房信息</h4><p>在Manager类的showComputer成员函数中添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看机房信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::showComputer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;机房信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;Computer&gt; ::iterator it = vCom.<span class="built_in">begin</span>(); it != vCom.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;机房编号：&quot;</span> &lt;&lt; it-&gt;m_ComId &lt;&lt; <span class="string">&quot; 机房最大容量：&quot;</span> &lt;&lt; it-&gt;m_MaxNum &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试显示机房信息功能：</p><p><img src="https://s2.loli.net/2023/03/12/JsufmoKbdCN45pU.png" alt="image-20220315234626256"></p><h3 id="7-5-清空预约">7.5 清空预约</h3><p>功能描述：清空生成的<code>order.txt</code>预约文件</p><h4 id="7-5-1-清空功能实现">7.5.1 清空功能实现</h4><p>在Manager的cleanFile成员函数中添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空预约记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::cleanFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">ofstream <span class="title">ofs</span><span class="params">(ORDER_FILE, ios::trunc)</span></span>;</span><br><span class="line">    ofs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;清空成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试清空，可以随意写入一些信息在order.txt中，然后调用cleanFile清空文件接口，查看是否清空干净。</p><h2 id="8-学生模块">8 学生模块</h2><h3 id="8-1-学生登录和注销">8.1 学生登录和注销</h3><h4 id="8-1-1-构造函数">8.1.1 构造函数</h4><p>在Student类的构造函数中，初始化学生信息，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有参构造（学号、姓名、密码）</span></span><br><span class="line">Student::<span class="built_in">Student</span>(<span class="type">int</span> id, string name, string pwd) &#123;</span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Id = id;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-1-2-管理员子菜单">8.1.2 管理员子菜单</h4><p>在机房预约系统.cpp中，当用户登录的是学生，添加学生菜单接口</p><ul><li><p>将不同的分支提供出来</p><ul><li>申请预约</li><li>查看我的预约</li><li>查看所有预约</li><li>取消预约</li><li>注销登录</li></ul></li><li><p>从而实现注销功能</p></li></ul><p>添加全局函数<code>void studentMenu(Identity*&amp; student)</code>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">studentMenu</span><span class="params">(Identity*&amp; student)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">//学生菜单</span></span><br><span class="line">student-&gt;<span class="built_in">operMenu</span>();</span><br><span class="line"></span><br><span class="line">Student* stu = (Student*)student;</span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123; <span class="comment">//申请预约</span></span><br><span class="line">stu-&gt;<span class="built_in">applyOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">2</span>) &#123; <span class="comment">//查看自身预约</span></span><br><span class="line">stu-&gt;<span class="built_in">showMyOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">3</span>) &#123; <span class="comment">//查看所有预约</span></span><br><span class="line">stu-&gt;<span class="built_in">showAllOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">4</span>) &#123; <span class="comment">//取消预约</span></span><br><span class="line">stu-&gt;<span class="built_in">cancelOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">delete</span> student;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;注销成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-1-3-菜单功能实现">8.1.3 菜单功能实现</h4><p>在实现成员函数<code>void Student::operMenu()</code>，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::operMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎学生：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot;登录!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        1.申请预约       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        2.查看我的预约   |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        3.查看所有预约   |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        4.取消预约       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        0.注销登录       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择您的操作：&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-1-4-接口对接">8.1.4 接口对接</h4><p>学生登录成功后，调用学生的子菜单界面，并在<code>机房预约系统.cpp</code>中的学生登录分支中添加代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进入学生子菜单</span></span><br><span class="line"><span class="built_in">studentMenu</span>(person);</span><br><span class="line"><span class="keyword">return</span>;</span><br></pre></td></tr></table></figure><p>测试对接，效果如图：</p><p><img src="https://s2.loli.net/2023/03/12/9O7bQc48k1DKStm.png" alt="image-20220316102244164"></p><p>学生子菜单：</p><p><img src="https://s2.loli.net/2023/03/12/Kfch8MFpyZCX9j3.png" alt="image-20220316102341314"></p><p>注销登录：</p><p><img src="https://s2.loli.net/2023/03/12/Iu2TbUjiXnZGaks.png" alt="image-20220316102425422"></p><h3 id="8-2-申请预约">8.2 申请预约</h3><h4 id="8-2-1-获取机房信息">8.2.1 获取机房信息</h4><p>在申请预约时，学生可以看到机房的信息，因此我们需要让学生获取到机房的信息</p><p>在student.h中添加新的成员函数如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//机房容器</span></span><br><span class="line">vector&lt;Computer&gt;vCom;</span><br></pre></td></tr></table></figure><p>在学生的有参构造函数中追加代码，效果如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有参构造（学号、姓名、密码）</span></span><br><span class="line">Student::<span class="built_in">Student</span>(<span class="type">int</span> id, string name, string pwd) &#123;</span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Id = id;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取机房信息</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.<span class="built_in">open</span>(COMPUTER_FILE, ios::in);</span><br><span class="line">    Computer c;</span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; c.m_ComId &amp;&amp; ifs &gt;&gt; c.m_MaxNum) &#123;</span><br><span class="line">        vCom.<span class="built_in">push_back</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line">    ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此<code>vCom</code>容器中保存了所有机房的信息。</p><h4 id="8-2-2-预约功能实现">8.2.2 预约功能实现</h4><p>在student.cpp中实现成员函数<code>void Student::applyOrder();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//申请预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::applyOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;机房开放时间为周一至周五！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入申请预约时间：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1.周一&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2.周二&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;3.周三&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;4.周四&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;5.周五&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> date = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> interval = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> room = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cin &gt;&gt; date;</span><br><span class="line">        <span class="keyword">if</span> (date &gt;= <span class="number">1</span> &amp;&amp; date &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入申请预约的时间段：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1.上午&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2.下午&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cin &gt;&gt; interval;</span><br><span class="line">        <span class="keyword">if</span> (interval &gt;= <span class="number">1</span> &amp;&amp; interval &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择机房：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1号机房容量&quot;</span> &lt;&lt; vCom[<span class="number">0</span>].m_MaxNum &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2号机房容量&quot;</span> &lt;&lt; vCom[<span class="number">1</span>].m_MaxNum &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;3号机房容量&quot;</span> &lt;&lt; vCom[<span class="number">2</span>].m_MaxNum &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cin &gt;&gt; room;</span><br><span class="line">        <span class="keyword">if</span> (room &gt;= <span class="number">1</span> &amp;&amp; room &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;预约成功！审核中&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="function">ofstream <span class="title">ofs</span><span class="params">(ORDER_FILE, ios::app)</span></span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;date:&quot;</span> &lt;&lt; date &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;interval:&quot;</span> &lt;&lt; interval &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;stuId:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Id &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;stuName:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;roomId:&quot;</span> &lt;&lt; room &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;status:&quot;</span> &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    ofs.<span class="built_in">close</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试效果：</p><p><img src="https://s2.loli.net/2023/03/12/6LH9AceJjWyaNkq.png" alt="image-20220316111318597"></p><p>在order.txt文件中生成内容如下：</p><p><img src="https://s2.loli.net/2023/03/12/SUkDNM9crCsa7Tz.png" alt="image-20220316121527664"></p><h3 id="8-3-显示预约">8.3 显示预约</h3><h4 id="8-3-1-创建预约类">8.3.1 创建预约类</h4><p>功能描述：显示预约记录时，需要从文件中获取到所有记录，用来显示，创建预约的类来管理记录以及更新</p><p>在头文件以及源文件下分别创建<strong>orderFile.h</strong>和<strong>orderFile.cpp</strong>文件</p><p>orderFile.h中添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;globalFile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OrderFile</span> &#123;</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="built_in">OrderFile</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新预约记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//记录的容器 key --- 记录的条数  value --- 具体记录的键值对信息</span></span><br><span class="line">map&lt;<span class="type">int</span>, map&lt;string, string&gt;&gt;m_OrderData;</span><br><span class="line"></span><br><span class="line"><span class="comment">//预约记录条数</span></span><br><span class="line"><span class="type">int</span> m_Size;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>构造函数</strong>中获取所有信息，并存放在容器中，添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">OrderFile::<span class="built_in">OrderFile</span>() &#123;</span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(ORDER_FILE, ios::in);</span><br><span class="line"></span><br><span class="line">string date;  <span class="comment">//日期</span></span><br><span class="line">string interval;  <span class="comment">//时间段</span></span><br><span class="line">string stuId;  <span class="comment">//学生编号</span></span><br><span class="line">string stuName;  <span class="comment">//学生姓名</span></span><br><span class="line">string roomId;  <span class="comment">//机房编号</span></span><br><span class="line">string status;  <span class="comment">//预约状态</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Size = <span class="number">0</span>;<span class="comment">//预约记录</span></span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; date &amp;&amp; ifs &gt;&gt; interval &amp;&amp; ifs &gt;&gt; stuId &amp;&amp; ifs &gt;&gt; stuName &amp;&amp; ifs &gt;&gt; roomId &amp;&amp; ifs &gt;&gt; status) &#123;</span><br><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; date &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; interval &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; stuId &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; stuName &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; roomId &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; status &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">string key;</span><br><span class="line">string value;</span><br><span class="line">map&lt;string, string&gt;m;</span><br><span class="line"></span><br><span class="line"><span class="comment">//date:1</span></span><br><span class="line"><span class="type">int</span> pos = date.<span class="built_in">find</span>(<span class="string">&quot;:&quot;</span>);<span class="comment">//pos为4</span></span><br><span class="line"><span class="keyword">if</span> (pos != <span class="number">-1</span>) &#123;</span><br><span class="line">key = date.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">value = date.<span class="built_in">substr</span>(pos + <span class="number">1</span>, date.<span class="built_in">size</span>() - pos);<span class="comment">//size为9，pos为4，因此为5到5</span></span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pos = interval.<span class="built_in">find</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pos != <span class="number">-1</span>) &#123;</span><br><span class="line">key = interval.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">value = interval.<span class="built_in">substr</span>(pos + <span class="number">1</span>, interval.<span class="built_in">size</span>() - pos);</span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pos = stuId.<span class="built_in">find</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pos != <span class="number">-1</span>) &#123;</span><br><span class="line">key = stuId.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">value = stuId.<span class="built_in">substr</span>(pos + <span class="number">1</span>, stuId.<span class="built_in">size</span>() - pos);</span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pos = stuName.<span class="built_in">find</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pos != <span class="number">-1</span>) &#123;</span><br><span class="line">key = stuName.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">value = stuName.<span class="built_in">substr</span>(pos + <span class="number">1</span>, stuName.<span class="built_in">size</span>() - pos);</span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pos = roomId.<span class="built_in">find</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pos != <span class="number">-1</span>) &#123;</span><br><span class="line">key = roomId.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">value = roomId.<span class="built_in">substr</span>(pos + <span class="number">1</span>, roomId.<span class="built_in">size</span>() - pos);</span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pos = status.<span class="built_in">find</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pos != <span class="number">-1</span>) &#123;</span><br><span class="line">key = status.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">value = status.<span class="built_in">substr</span>(pos + <span class="number">1</span>, status.<span class="built_in">size</span>() - pos);</span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将小map容器放入到大的map容器中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_OrderData.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(<span class="keyword">this</span>-&gt;m_Size, m));</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Size++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="comment">//for (map&lt;int, map&lt;string, string&gt;&gt;::iterator it = m_OrderData.begin(); it != m_OrderData.end(); it++) &#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;条数为：&quot; &lt;&lt; it-&gt;first &lt;&lt; &quot; value = &quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//for (map&lt;string, string&gt;::iterator mit = it-&gt;second.begin(); mit != it-&gt;second.end(); mit++) &#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot; key = &quot; &lt;&lt; mit-&gt;first &lt;&lt; &quot; value = &quot; &lt;&lt; mit-&gt;second;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更新预约记录的成员函数updateOrder代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新预约记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OrderFile::updateOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Size == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ofstream <span class="title">ofs</span><span class="params">(ORDER_FILE, ios::out | ios::trunc)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m_Size; i++) &#123;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;date:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;date&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;interval:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;interval&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;stuId:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;stuId&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;stuName:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;stuName&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;roomId:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;roomId&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;status:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;status&quot;</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-3-2-显示自身预约">8.3.2 显示自身预约</h4><p>首先我们先添加几条预约记录，可以用程序添加或者直接修改order.txt文件</p><p>order.txt文件内容如下：比如我们有三名同学分别产生了3条预约记录</p><p><img src="https://s2.loli.net/2023/03/12/bp2Ydqm7zjhD6ys.png" alt="image-20220316213706985"></p><p>在Student类的<code>void Student::showMyOrder()</code>成员函数中，添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看我的预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::showMyOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OrderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;无预约记录&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++) &#123;</span><br><span class="line">        <span class="comment">//if判断：如果数据中的学号和我的学号相同；c_str()是将string转为char*，然后再通过atoi将char*转为int</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">atoi</span>(of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>].<span class="built_in">c_str</span>()) == <span class="keyword">this</span>-&gt;m_Id) &#123; </span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; 时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);<span class="comment">//三目运算符</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; 机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line">            string status = <span class="string">&quot; 状态：&quot;</span>;<span class="comment">//0 取消的预约 1 审核中 2 已预约 -1 预约失败</span></span><br><span class="line">            <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">                status += <span class="string">&quot;预约成功&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;-1&quot;</span>) &#123;</span><br><span class="line">                status += <span class="string">&quot;审核未通过，预约失败&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                status += <span class="string">&quot;预约已取消&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试效果：</p><p><img src="https://s2.loli.net/2023/03/12/HVM4kvZ2w3WReaX.png" alt="image-20220316220514277"></p><h4 id="8-3-3-显示所有预约">8.3.3 显示所有预约</h4><p>在Student类的<code>void Student::showAllOrder()</code>成员函数中，添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::showAllOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OrderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;无预约记录&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++) &#123;</span><br><span class="line">        cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;. &quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);<span class="comment">//三目运算符</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 学号：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuName&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line">        string status = <span class="string">&quot; 状态：&quot;</span>;<span class="comment">//0 取消的预约 1 审核中 2 已预约 -1 预约失败</span></span><br><span class="line">        <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            status += <span class="string">&quot;预约成功&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;-1&quot;</span>) &#123;</span><br><span class="line">            status += <span class="string">&quot;审核未通过，预约失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            status += <span class="string">&quot;预约已取消&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试效果：</p><p><img src="https://s2.loli.net/2023/03/12/WQdRwDj92k1fIrJ.png" alt="image-20220316221136250"></p><h3 id="8-4-取消预约">8.4 取消预约</h3><p>在Student类的<code>void Student::cancelOrder()</code>成员函数中，添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取消预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::cancelOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OrderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;无预约记录&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;审核中或预约成功的记录可以取消，请输入取消的记录&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;v;</span><br><span class="line">    <span class="type">int</span> index = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">atoi</span>(of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>].<span class="built_in">c_str</span>()) == <span class="keyword">this</span>-&gt;m_Id) &#123;<span class="comment">//判断是否和自己的学号相同</span></span><br><span class="line">            <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span> || of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">                v.<span class="built_in">push_back</span>(i);</span><br><span class="line">                cout &lt;&lt; index++ &lt;&lt; <span class="string">&quot;. &quot;</span>;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot; 预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot; 时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot; 机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line">                string status = <span class="string">&quot; 状态：&quot;</span>;<span class="comment">//0 取消的预约 1 审核中 2 已预约 -1 预约失败</span></span><br><span class="line">                <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                    status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">                    status += <span class="string">&quot;预约成功&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;-1&quot;</span>) &#123;</span><br><span class="line">                    status += <span class="string">&quot;审核未通过，预约失败&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    status += <span class="string">&quot;预约已取消&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入取消的记录，0代表返回&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cin &gt;&gt; select;</span><br><span class="line">        <span class="keyword">if</span> (select &gt;= <span class="number">0</span> &amp;&amp; select &lt;= v.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (select == <span class="number">0</span>) &#123;  <span class="comment">//输入0代表返回</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//cout &lt;&lt; &quot;记录所在位置：&quot; &lt;&lt; v[select - 1] &lt;&lt; endl;</span></span><br><span class="line">                of.m_OrderData[v[select - <span class="number">1</span>]][<span class="string">&quot;status&quot;</span>] = <span class="string">&quot;0&quot;</span>;<span class="comment">//将状态改为0，表示取消的预约</span></span><br><span class="line">                of.<span class="built_in">updateOrder</span>();</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;已取消预约&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试效果：</p><p><img src="https://s2.loli.net/2023/03/12/GATnlzW2dQFi1bp.png" alt="image-20220316231820054"></p><p><img src="https://s2.loli.net/2023/03/12/PoeAlW45VUZSQLd.png" alt="image-20220316231901439"></p><p>order.txt文件如下：</p><p><img src="https://s2.loli.net/2023/03/12/wDEQ4XlOajMc2T3.png" alt="image-20220316232052824"></p><h2 id="9-教师模块">9 教师模块</h2><h3 id="9-1-教师登录和注销">9.1 教师登录和注销</h3><h4 id="9-1-1-构造函数">9.1.1 构造函数</h4><p>在Teacher类的构造函数中，初始化教师信息，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有参构造（职工编号，姓名，密码）</span></span><br><span class="line">Teacher::<span class="built_in">Teacher</span>(<span class="type">int</span> empId, string name, string pwd) &#123;</span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpId = empId;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-1-2-教师子菜单">9.1.2 教师子菜单</h4><p>在<code>机房预约系统.cpp</code>中，当用户登录的是教师，添加教师菜单接口</p><ul><li>将不同的分支提供出来<ul><li>查看所有预约</li><li>审核预约</li><li>注销登录</li></ul></li><li>实现注销功能</li></ul><p>添加全局函数<code>void TeacherMenu(Identity*&amp; Teacher)</code>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">TeacherMenu</span><span class="params">(Identity*&amp; teacher)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">//教师菜单</span></span><br><span class="line">teacher-&gt;<span class="built_in">operMenu</span>();</span><br><span class="line"></span><br><span class="line">Teacher* tea = (Teacher*)teacher;</span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line">tea-&gt;<span class="built_in">showAllOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">2</span>) &#123;</span><br><span class="line"><span class="comment">//审核预约</span></span><br><span class="line">tea-&gt;<span class="built_in">validOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">delete</span> teacher;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;注销成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-1-3-菜单功能实现">9.1.3 菜单功能实现</h4><p>在实现成员函数<code>void Teacher::operMenu()</code>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Teacher::operMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎教师：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot;登录!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        1.查看所有预约   |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        2.审核预约       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        0.注销登录       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择您的操作：&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-1-4-接口对接">9.1.4 接口对接</h4><p>教师登录成功后，调用教师的子菜单界面，在教师登录分支中，添加代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进入教师的子菜单界面</span></span><br><span class="line"><span class="built_in">TeacherMenu</span>(person);</span><br></pre></td></tr></table></figure><p>添加效果如图：</p><p><img src="https://s2.loli.net/2023/03/12/6BdcjGXeYi5SWUO.png" alt="image-20220316234038253"></p><p>测试效果：</p><p><img src="https://s2.loli.net/2023/03/12/Ro6xDstgN7Wfpra.png" alt="image-20220316234336926"></p><p>教师子菜单：</p><p><img src="https://s2.loli.net/2023/03/12/yu5ehoPGDKMtdFI.png" alt="image-20220316234408940"></p><p>注销登录：</p><p><img src="https://s2.loli.net/2023/03/12/nTbZPLj7QGiHp5t.png" alt="image-20220316234954863"></p><h3 id="9-2-查看所有预约">9.2 查看所有预约</h3><h4 id="9-2-1-所有预约功能实现">9.2.1 所有预约功能实现</h4><p>该功能与学生身份的查看所有预约功能相似，用于显示所有预约记录</p><p>在<code>teacher.cpp</code>中实现成员函数<code>void Teacher::showAllOrder()</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Teacher::showAllOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OrderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;无预约记录&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++) &#123;</span><br><span class="line">        cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;. &quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);<span class="comment">//三目运算符</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 学号：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuName&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line">        string status = <span class="string">&quot; 状态：&quot;</span>;<span class="comment">//0 取消的预约 1 审核中 2 已预约 -1 预约失败</span></span><br><span class="line">        <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            status += <span class="string">&quot;预约成功&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;-1&quot;</span>) &#123;</span><br><span class="line">            status += <span class="string">&quot;审核未通过，预约失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            status += <span class="string">&quot;预约已取消&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-2-2-测试功能">9.2.2 测试功能</h4><p>运行测试教师身份，并查看所有预约功能：</p><p><img src="https://s2.loli.net/2023/03/12/CFZ15H96IgowYr2.png" alt="image-20220317000156333"></p><h3 id="9-3-审核预约">9.3 审核预约</h3><h4 id="9-3-1-审核功能实现">9.3.1 审核功能实现</h4><p>功能描述：教师审核学生的预约，依据实际情况审核预约</p><p>在<code>teacher.cpp</code>中实现成员函数<code>void Teacher::validOrder()</code>，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//审核预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Teacher::validOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OrderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;无预约记录&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;待审核的预约记录如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;v;</span><br><span class="line">    <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            v.<span class="built_in">push_back</span>(i);</span><br><span class="line">            cout &lt;&lt; ++index &lt;&lt; <span class="string">&quot;. &quot;</span>;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; 预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; 时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; 机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line">            string status = <span class="string">&quot; 状态：&quot;</span>;<span class="comment">//0 取消的预约 1 审核中 2 已预约 -1 预约失败</span></span><br><span class="line">            <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入审核的预约记录，0代表返回&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cin &gt;&gt; select;</span><br><span class="line">        <span class="keyword">if</span> (select &gt;= <span class="number">0</span> &amp;&amp; select &lt;= v.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (select == <span class="number">0</span>) &#123;  <span class="comment">//输入0代表返回</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入审核结果：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;1.通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;2.不通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">                cin &gt;&gt; ret;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (ret == <span class="number">1</span>) &#123;</span><br><span class="line">                    of.m_OrderData[v[select - <span class="number">1</span>]][<span class="string">&quot;status&quot;</span>] = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    of.m_OrderData[v[select - <span class="number">1</span>]][<span class="string">&quot;status&quot;</span>] = <span class="string">&quot;-1&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                of.<span class="built_in">updateOrder</span>();</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;审核完毕！&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试效果：</p><p><img src="https://s2.loli.net/2023/03/12/zV9A8qMfSxcu2Xp.png" alt="image-20220317002017671"></p><p><img src="https://s2.loli.net/2023/03/12/m9UpTjzZqJP3NBy.png" alt="image-20220317002046617"></p><p>通过学生登陆进行查看：</p><p><img src="https://s2.loli.net/2023/03/12/tqRyjADc19P8JIs.png" alt="image-20220317002542336"></p><p><img src="https://s2.loli.net/2023/03/12/y8B6IvSflWmtHUw.png" alt="image-20220317002616033"></p><p>order.txt文件：</p><p><img src="https://s2.loli.net/2023/03/12/BMnZFewSdaoxvbI.png" alt="image-20220317002854092"></p><p>审核预约成功！</p><h2 id="10-所有程序">10 所有程序</h2><h3 id="机房预约系统-cpp">机房预约系统.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;globalFile.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;identity.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;student.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;teacher.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//进入管理员的子菜单界面</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">managerMenu</span><span class="params">(Identity*&amp; manager)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">//调用管理员子菜单</span></span><br><span class="line">manager-&gt;<span class="built_in">operMenu</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//将父类的指针转为子类的指针，调用子类里其他接口</span></span><br><span class="line">Manager* man = (Manager*)manager;</span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//接受用户的选择</span></span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123;<span class="comment">//添加账号</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;添加账号&quot; &lt;&lt; endl;</span></span><br><span class="line">man-&gt;<span class="built_in">addPerson</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">2</span>) &#123;<span class="comment">//查看账号</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;查看账号&quot; &lt;&lt; endl;</span></span><br><span class="line">man-&gt;<span class="built_in">showPerson</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">3</span>) &#123;<span class="comment">//查看机房</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;查看机房&quot; &lt;&lt; endl;</span></span><br><span class="line">man-&gt;<span class="built_in">showComputer</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">4</span>) &#123;<span class="comment">//清空预约</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;清空预约&quot; &lt;&lt; endl;</span></span><br><span class="line">man-&gt;<span class="built_in">cleanFile</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;<span class="comment">//注销</span></span><br><span class="line"><span class="keyword">delete</span> manager;<span class="comment">//销毁掉堆区对象</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;注销成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//学生菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">studentMenu</span><span class="params">(Identity*&amp; student)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">//学生菜单</span></span><br><span class="line">student-&gt;<span class="built_in">operMenu</span>();</span><br><span class="line"></span><br><span class="line">Student* stu = (Student*)student;</span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123; <span class="comment">//申请预约</span></span><br><span class="line">stu-&gt;<span class="built_in">applyOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">2</span>) &#123; <span class="comment">//查看自身预约</span></span><br><span class="line">stu-&gt;<span class="built_in">showMyOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">3</span>) &#123; <span class="comment">//查看所有预约</span></span><br><span class="line">stu-&gt;<span class="built_in">showAllOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">4</span>) &#123; <span class="comment">//取消预约</span></span><br><span class="line">stu-&gt;<span class="built_in">cancelOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">delete</span> student;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;注销成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TeacherMenu</span><span class="params">(Identity*&amp; teacher)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">//教师菜单</span></span><br><span class="line">teacher-&gt;<span class="built_in">operMenu</span>();</span><br><span class="line"></span><br><span class="line">Teacher* tea = (Teacher*)teacher;</span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line">tea-&gt;<span class="built_in">showAllOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">2</span>) &#123;</span><br><span class="line"><span class="comment">//审核预约</span></span><br><span class="line">tea-&gt;<span class="built_in">validOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">delete</span> teacher;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;注销成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//登录功能</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LoginIn</span><span class="params">(string fileName, <span class="type">int</span> type)</span> </span>&#123;</span><br><span class="line"><span class="comment">//父类指针，用于指向子类对象</span></span><br><span class="line">Identity* person = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读文件</span></span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(fileName, ios::in);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断文件是否存在</span></span><br><span class="line"><span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//准备接受用户信息</span></span><br><span class="line"><span class="type">int</span> id = <span class="number">0</span>;</span><br><span class="line">string name;</span><br><span class="line">string pwd;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断身份</span></span><br><span class="line"><span class="keyword">if</span> (type == <span class="number">1</span>) &#123; <span class="comment">//学生身份</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入你的学号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您的职工号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入用户名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入密码：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; pwd;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (type == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//学生身份验证</span></span><br><span class="line"><span class="type">int</span> fId;</span><br><span class="line">string fName;</span><br><span class="line">string fPwd;</span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; fId &amp;&amp; ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd) &#123;</span><br><span class="line"><span class="comment">//测试代码：</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; fId &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; fName &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; fPwd &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">if</span> (id == fId &amp;&amp; name == fName &amp;&amp; pwd == fPwd) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生验证登陆成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">person = <span class="keyword">new</span> <span class="built_in">Student</span>(id, name, pwd);</span><br><span class="line"><span class="comment">//进入学生子菜单</span></span><br><span class="line"><span class="built_in">studentMenu</span>(person);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>) &#123;</span><br><span class="line"><span class="comment">//老师身份验证</span></span><br><span class="line"><span class="type">int</span> fId;</span><br><span class="line">string fName;</span><br><span class="line">string fPwd;</span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; fId &amp;&amp; ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd) &#123;</span><br><span class="line"><span class="comment">//测试代码：</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; fId &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; fName &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; fPwd &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">if</span> (id == fId &amp;&amp; name == fName &amp;&amp; pwd == fPwd) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;教师验证登陆成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">person = <span class="keyword">new</span> <span class="built_in">Teacher</span>(id, name, pwd);</span><br><span class="line"><span class="comment">//进入教师的子菜单界面</span></span><br><span class="line"><span class="built_in">TeacherMenu</span>(person);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">3</span>) &#123;</span><br><span class="line"><span class="comment">//管理员身份验证</span></span><br><span class="line">string fName;<span class="comment">//从文件中获取的姓名</span></span><br><span class="line">string fPwd;<span class="comment">//从文件中获取的密码</span></span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd) &#123;</span><br><span class="line"><span class="keyword">if</span> (name == fName &amp;&amp; pwd == fPwd) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;验证登陆成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">person = <span class="keyword">new</span> <span class="built_in">Manager</span>(name, pwd);</span><br><span class="line"><span class="comment">//进入管理员子菜单界面</span></span><br><span class="line"><span class="built_in">managerMenu</span>(person);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;验证登录失败！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;<span class="comment">//用于接受用户的选择</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------  欢迎来到机房预约系统  ---------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;请输入您的身份：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|        1.学生代表       |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|        2.老  师         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|        3.管 理 员       |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|        0.退  出         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入您的选择：&quot;</span>;</span><br><span class="line">cin &gt;&gt; select;<span class="comment">// 接受用户的选择</span></span><br><span class="line"><span class="keyword">switch</span> (select) &#123; <span class="comment">//根据用户选择 实现不同接口</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: <span class="comment">//学生身份</span></span><br><span class="line"><span class="built_in">LoginIn</span>(STUDENT_FILE, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: <span class="comment">//老师身份</span></span><br><span class="line"><span class="built_in">LoginIn</span>(TEACHER_FILE, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: <span class="comment">//管理员身份</span></span><br><span class="line"><span class="built_in">LoginIn</span>(ADMIN_FILE, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: <span class="comment">//退出系统</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎下一次使用&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>: </span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入有误，请重新选择！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="globalFile-h">globalFile.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//管理员文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ADMIN_FILE <span class="string">&quot;admin.txt&quot;</span></span></span><br><span class="line"><span class="comment">//学生文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STUDENT_FILE <span class="string">&quot;student.txt&quot;</span></span></span><br><span class="line"><span class="comment">//教师文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TEACHER_FILE <span class="string">&quot;teacher.txt&quot;</span></span></span><br><span class="line"><span class="comment">//机房信息文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COMPUTER_FILE <span class="string">&quot;computer.txt&quot;</span></span></span><br><span class="line"><span class="comment">//订单文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ORDER_FILE <span class="string">&quot;order.txt&quot;</span></span></span><br></pre></td></tr></table></figure><h3 id="Identity-h">Identity.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//身份抽象类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Identity</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//操作菜单</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">operMenu</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">string m_Name;<span class="comment">//用户名</span></span><br><span class="line">string m_Pwd;<span class="comment">//密码</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="computer-h">computer.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//机房类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_ComId;<span class="comment">//机房Id类</span></span><br><span class="line"><span class="type">int</span> m_MaxNum;<span class="comment">//机房最大容量</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="student-h">student.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;computer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;identity.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;globalFile.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;orderFile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//学生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> :<span class="keyword">public</span> Identity &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line"><span class="built_in">Student</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造（学号、姓名、密码）</span></span><br><span class="line"><span class="built_in">Student</span>(<span class="type">int</span> id, string name, string pwd);</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">operMenu</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//申请预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">applyOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看我的预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showMyOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showAllOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取消预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cancelOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//学生学号</span></span><br><span class="line"><span class="type">int</span> m_Id;</span><br><span class="line"></span><br><span class="line"><span class="comment">//机房容器</span></span><br><span class="line">vector&lt;Computer&gt;vCom;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="student-cpp">student.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;student.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Student::<span class="built_in">Student</span>() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造（学号、姓名、密码）</span></span><br><span class="line">Student::<span class="built_in">Student</span>(<span class="type">int</span> id, string name, string pwd) &#123;</span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Id = id;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取机房信息</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.<span class="built_in">open</span>(COMPUTER_FILE, ios::in);</span><br><span class="line">    Computer c;</span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; c.m_ComId &amp;&amp; ifs &gt;&gt; c.m_MaxNum) &#123;</span><br><span class="line">        vCom.<span class="built_in">push_back</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line">    ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::operMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎学生代表：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot;登录!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        1.申请预约       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        2.查看我的预约   |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        3.查看所有预约   |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        4.取消预约       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        0.注销登录       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择您的操作：&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//申请预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::applyOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;机房开放时间为周一至周五！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入申请预约时间：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1.周一&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2.周二&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;3.周三&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;4.周四&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;5.周五&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> date = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> interval = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> room = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cin &gt;&gt; date;</span><br><span class="line">        <span class="keyword">if</span> (date &gt;= <span class="number">1</span> &amp;&amp; date &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入申请预约的时间段：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1.上午&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2.下午&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cin &gt;&gt; interval;</span><br><span class="line">        <span class="keyword">if</span> (interval &gt;= <span class="number">1</span> &amp;&amp; interval &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择机房：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1号机房容量&quot;</span> &lt;&lt; vCom[<span class="number">0</span>].m_MaxNum &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2号机房容量&quot;</span> &lt;&lt; vCom[<span class="number">1</span>].m_MaxNum &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;3号机房容量&quot;</span> &lt;&lt; vCom[<span class="number">2</span>].m_MaxNum &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cin &gt;&gt; room;</span><br><span class="line">        <span class="keyword">if</span> (room &gt;= <span class="number">1</span> &amp;&amp; room &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;预约成功！审核中&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="function">ofstream <span class="title">ofs</span><span class="params">(ORDER_FILE, ios::app)</span></span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;date:&quot;</span> &lt;&lt; date &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;interval:&quot;</span> &lt;&lt; interval &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;stuId:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Id &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;stuName:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;roomId:&quot;</span> &lt;&lt; room &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;status:&quot;</span> &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    ofs.<span class="built_in">close</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看我的预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::showMyOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OrderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;无预约记录&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++) &#123;</span><br><span class="line">        <span class="comment">//if判断：如果数据中的学号和我的学号相同；c_str()是将string转为char*，然后再通过atoi将char*转为int</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">atoi</span>(of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>].<span class="built_in">c_str</span>()) == <span class="keyword">this</span>-&gt;m_Id) &#123; </span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; 时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);<span class="comment">//三目运算符</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; 机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line">            string status = <span class="string">&quot; 状态：&quot;</span>;<span class="comment">//0 取消的预约 1 审核中 2 已预约 -1 预约失败</span></span><br><span class="line">            <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">                status += <span class="string">&quot;预约成功&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;-1&quot;</span>) &#123;</span><br><span class="line">                status += <span class="string">&quot;审核未通过，预约失败&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                status += <span class="string">&quot;预约已取消&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::showAllOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OrderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;无预约记录&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++) &#123;</span><br><span class="line">        cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;. &quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);<span class="comment">//三目运算符</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 学号：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuName&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line">        string status = <span class="string">&quot; 状态：&quot;</span>;<span class="comment">//0 取消的预约 1 审核中 2 已预约 -1 预约失败</span></span><br><span class="line">        <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            status += <span class="string">&quot;预约成功&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;-1&quot;</span>) &#123;</span><br><span class="line">            status += <span class="string">&quot;审核未通过，预约失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            status += <span class="string">&quot;预约已取消&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取消预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::cancelOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OrderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;无预约记录&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;审核中或预约成功的记录可以取消，请输入取消的记录&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;v;</span><br><span class="line">    <span class="type">int</span> index = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">atoi</span>(of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>].<span class="built_in">c_str</span>()) == <span class="keyword">this</span>-&gt;m_Id) &#123;<span class="comment">//判断是否和自己的学号相同</span></span><br><span class="line">            <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span> || of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">                v.<span class="built_in">push_back</span>(i);</span><br><span class="line">                cout &lt;&lt; index++ &lt;&lt; <span class="string">&quot;. &quot;</span>;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot; 预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot; 时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot; 机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line">                string status = <span class="string">&quot; 状态：&quot;</span>;<span class="comment">//0 取消的预约 1 审核中 2 已预约 -1 预约失败</span></span><br><span class="line">                <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                    status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">                    status += <span class="string">&quot;预约成功&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;-1&quot;</span>) &#123;</span><br><span class="line">                    status += <span class="string">&quot;审核未通过，预约失败&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    status += <span class="string">&quot;预约已取消&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入取消的记录，0代表返回&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cin &gt;&gt; select;</span><br><span class="line">        <span class="keyword">if</span> (select &gt;= <span class="number">0</span> &amp;&amp; select &lt;= v.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (select == <span class="number">0</span>) &#123;  <span class="comment">//输入0代表返回</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//cout &lt;&lt; &quot;记录所在位置：&quot; &lt;&lt; v[select - 1] &lt;&lt; endl;</span></span><br><span class="line">                of.m_OrderData[v[select - <span class="number">1</span>]][<span class="string">&quot;status&quot;</span>] = <span class="string">&quot;0&quot;</span>;<span class="comment">//将状态改为0，表示取消的预约</span></span><br><span class="line">                of.<span class="built_in">updateOrder</span>();</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;已取消预约&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="manager-h-2">manager.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;globalFile.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;identity.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;student.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;teacher.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;computer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;orderFile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Manager</span> :<span class="keyword">public</span> Identity &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line"><span class="built_in">Manager</span>();</span><br><span class="line"><span class="comment">//有参构造</span></span><br><span class="line"><span class="built_in">Manager</span>(string name, string pwd);</span><br><span class="line"><span class="comment">//选择菜单</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">operMenu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//添加账号</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addPerson</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//查看账号</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPerson</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//查看机房信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showComputer</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//清空预约记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cleanFile</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化容器</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initvector</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//学生容器</span></span><br><span class="line">vector&lt;Student&gt;vStu;</span><br><span class="line"><span class="comment">//教师容器</span></span><br><span class="line">vector&lt;Teacher&gt;vTea;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检测重复 参数:(传入id 传入类型)返回值: (true 代表有重复, false代表没有重复)</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">checkRepeat</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> type)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//机房容量</span></span><br><span class="line">vector&lt;Computer&gt;vCom;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="manager-cpp-2">manager.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Manager::<span class="built_in">Manager</span>() &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造</span></span><br><span class="line">Manager::<span class="built_in">Manager</span>(string name, string pwd) &#123;</span><br><span class="line"><span class="comment">//初始化管理员信息</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化容器</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">initvector</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取机房信息</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.<span class="built_in">open</span>(COMPUTER_FILE, ios::in);</span><br><span class="line"></span><br><span class="line">    Computer c;</span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; c.m_ComId &amp;&amp; ifs &gt;&gt; c.m_MaxNum) &#123;</span><br><span class="line">        vCom.<span class="built_in">push_back</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;当前机房数量为：&quot;</span> &lt;&lt; vCom.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::operMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎管理员：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot;登录!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;请输入您的身份：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        1.添加账号       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        2.查看账号       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        3.查看机房       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        4.清空预约       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        0.注销登录       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择您的操作：&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加账号</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::addPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入添加账号类型：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1.添加学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2.添加老师&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    string fileName;</span><br><span class="line">    string tip;</span><br><span class="line">    ofstream ofs;</span><br><span class="line">    string errorTip;<span class="comment">//重复错误提示</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line">        fileName = STUDENT_FILE;</span><br><span class="line">        tip = <span class="string">&quot;请输入学号：&quot;</span>;</span><br><span class="line">        errorTip = <span class="string">&quot;学号重复，请重新输入：&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        fileName = TEACHER_FILE;</span><br><span class="line">        tip = <span class="string">&quot;请输入职工编号：&quot;</span>;</span><br><span class="line">        errorTip = <span class="string">&quot;职工号重复，请重新输入：&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ofs.<span class="built_in">open</span>(fileName, ios::out | ios::app);</span><br><span class="line">    <span class="type">int</span> id;<span class="comment">//学号或职工号</span></span><br><span class="line">    string name;<span class="comment">//姓名</span></span><br><span class="line">    string pwd;<span class="comment">//密码</span></span><br><span class="line">    cout &lt;&lt; tip &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cin &gt;&gt; id;</span><br><span class="line">        <span class="type">bool</span> ret = <span class="keyword">this</span>-&gt;<span class="built_in">checkRepeat</span>(id, <span class="number">1</span>);<span class="comment">//有重复</span></span><br><span class="line">        <span class="keyword">if</span> (ret) &#123;</span><br><span class="line">            cout &lt;&lt; errorTip &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; name;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入密码：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; pwd;</span><br><span class="line">    ofs &lt;&lt; id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; pwd &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;添加成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    ofs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用初始化容器接口，重新获取文件中的数据</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">initvector</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student&amp; s)</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;学号：&quot;</span> &lt;&lt; s.m_Id &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; s.m_Name &lt;&lt; <span class="string">&quot; 密码：&quot;</span> &lt;&lt; s.m_Pwd &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printTeacher</span><span class="params">(Teacher&amp; t)</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;职工号：&quot;</span> &lt;&lt; t.m_EmpId &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; t.m_Name &lt;&lt; <span class="string">&quot; 密码：&quot;</span> &lt;&lt; t.m_Pwd &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看账号</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::showPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择查看的内容：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1.查看所有的学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2.查看所有的老师&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> select = <span class="number">0</span>;<span class="comment">//接受用户的选择</span></span><br><span class="line">    cin &gt;&gt; select;</span><br><span class="line">    <span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">//查看学生</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;所有学生的信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        for_each(vStu.<span class="built_in">begin</span>(), vStu.<span class="built_in">end</span>(), printStudent);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//查看老师</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;所有老师的信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        for_each(vTea.<span class="built_in">begin</span>(), vTea.<span class="built_in">end</span>(), printTeacher);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看机房信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::showComputer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;机房信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;Computer&gt; ::iterator it = vCom.<span class="built_in">begin</span>(); it != vCom.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;机房编号：&quot;</span> &lt;&lt; it-&gt;m_ComId &lt;&lt; <span class="string">&quot; 机房最大容量：&quot;</span> &lt;&lt; it-&gt;m_MaxNum &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空预约记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::cleanFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">ofstream <span class="title">ofs</span><span class="params">(ORDER_FILE, ios::trunc)</span></span>;</span><br><span class="line">    ofs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;清空成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化容器</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::initvector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//读取学生文件中信息</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.<span class="built_in">open</span>(STUDENT_FILE, ios::in);</span><br><span class="line">    <span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件读取失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    vStu.<span class="built_in">clear</span>();</span><br><span class="line">    vTea.<span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line">    Student s;</span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; s.m_Id &amp;&amp; ifs &gt;&gt; s.m_Name &amp;&amp; ifs &gt;&gt; s.m_Pwd) &#123;</span><br><span class="line">        vStu.<span class="built_in">push_back</span>(s);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;当前学生数量为：&quot;</span> &lt;&lt; vStu.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    ifs.<span class="built_in">close</span>();<span class="comment">//学生初始化</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取老师文件信息</span></span><br><span class="line">    ifs.<span class="built_in">open</span>(TEACHER_FILE, ios::in);</span><br><span class="line">    Teacher t;</span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; t.m_EmpId &amp;&amp; ifs &gt;&gt; t.m_Name &amp;&amp; ifs &gt;&gt; t.m_Pwd) &#123;</span><br><span class="line">        vTea.<span class="built_in">push_back</span>(t);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;当前教师数量为：&quot;</span> &lt;&lt; vTea.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Manager::checkRepeat</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (type == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (vector&lt;Student&gt;::iterator it = vStu.<span class="built_in">begin</span>(); it != vStu.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (id == it-&gt;m_Id) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (vector&lt;Teacher&gt;::iterator it = vTea.<span class="built_in">begin</span>(); it != vTea.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (id == it-&gt;m_EmpId) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="teacher-h">teacher.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;identity.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;orderFile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span> :<span class="keyword">public</span> Identity &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line"><span class="built_in">Teacher</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造（职工编号，姓名，密码）</span></span><br><span class="line"><span class="built_in">Teacher</span>(<span class="type">int</span> empId, string name, string pwd);</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">operMenu</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showAllOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//审核预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">validOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m_EmpId;<span class="comment">//教师编号</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="teacher-cpp">teacher.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;teacher.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line">Teacher::<span class="built_in">Teacher</span>() &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造（职工编号，姓名，密码）</span></span><br><span class="line">Teacher::<span class="built_in">Teacher</span>(<span class="type">int</span> empId, string name, string pwd) &#123;</span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpId = empId;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Pwd = pwd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Teacher::operMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;欢迎教师：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">&quot;登录!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        1.查看所有预约   |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        2.审核预约       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|        0.注销登录       |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t|                         |\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t---------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择您的操作：&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看所有预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Teacher::showAllOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OrderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;无预约记录&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++) &#123;</span><br><span class="line">        cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;. &quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);<span class="comment">//三目运算符</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 学号：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuId&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;stuName&quot;</span>];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot; 机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line">        string status = <span class="string">&quot; 状态：&quot;</span>;<span class="comment">//0 取消的预约 1 审核中 2 已预约 -1 预约失败</span></span><br><span class="line">        <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            status += <span class="string">&quot;预约成功&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;-1&quot;</span>) &#123;</span><br><span class="line">            status += <span class="string">&quot;审核未通过，预约失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            status += <span class="string">&quot;预约已取消&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//审核预约</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Teacher::validOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OrderFile of;</span><br><span class="line">    <span class="keyword">if</span> (of.m_Size == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;无预约记录&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;待审核的预约记录如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;v;</span><br><span class="line">    <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; of.m_Size; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            v.<span class="built_in">push_back</span>(i);</span><br><span class="line">            cout &lt;&lt; ++index &lt;&lt; <span class="string">&quot;. &quot;</span>;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; 预约日期：周&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;date&quot;</span>];</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; 时段：&quot;</span> &lt;&lt; (of.m_OrderData[i][<span class="string">&quot;interval&quot;</span>] == <span class="string">&quot;1&quot;</span> ? <span class="string">&quot;上午&quot;</span> : <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; 机房：&quot;</span> &lt;&lt; of.m_OrderData[i][<span class="string">&quot;roomId&quot;</span>];</span><br><span class="line">            string status = <span class="string">&quot; 状态：&quot;</span>;<span class="comment">//0 取消的预约 1 审核中 2 已预约 -1 预约失败</span></span><br><span class="line">            <span class="keyword">if</span> (of.m_OrderData[i][<span class="string">&quot;status&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                status += <span class="string">&quot;审核中&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; status &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入审核的预约记录，0代表返回&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cin &gt;&gt; select;</span><br><span class="line">        <span class="keyword">if</span> (select &gt;= <span class="number">0</span> &amp;&amp; select &lt;= v.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (select == <span class="number">0</span>) &#123;  <span class="comment">//输入0代表返回</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入审核结果：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;1.通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;2.不通过&quot;</span> &lt;&lt; endl;</span><br><span class="line">                cin &gt;&gt; ret;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (ret == <span class="number">1</span>) &#123;</span><br><span class="line">                    of.m_OrderData[v[select - <span class="number">1</span>]][<span class="string">&quot;status&quot;</span>] = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    of.m_OrderData[v[select - <span class="number">1</span>]][<span class="string">&quot;status&quot;</span>] = <span class="string">&quot;-1&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                of.<span class="built_in">updateOrder</span>();</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;审核完毕！&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="orderFile-h">orderFile.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;globalFile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OrderFile</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="built_in">OrderFile</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新预约记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateOrder</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//记录的容器 key --- 记录的条数  value --- 具体记录的键值对信息</span></span><br><span class="line">map&lt;<span class="type">int</span>, map&lt;string, string&gt;&gt;m_OrderData;</span><br><span class="line"></span><br><span class="line"><span class="comment">//预约记录条数</span></span><br><span class="line"><span class="type">int</span> m_Size;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="orderFile-cpp">orderFile.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;orderFile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">OrderFile::<span class="built_in">OrderFile</span>() &#123;</span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(ORDER_FILE, ios::in);</span><br><span class="line"></span><br><span class="line">string date;  <span class="comment">//日期</span></span><br><span class="line">string interval;  <span class="comment">//时间段</span></span><br><span class="line">string stuId;  <span class="comment">//学生编号</span></span><br><span class="line">string stuName;  <span class="comment">//学生姓名</span></span><br><span class="line">string roomId;  <span class="comment">//机房编号</span></span><br><span class="line">string status;  <span class="comment">//预约状态</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Size = <span class="number">0</span>;<span class="comment">//预约记录</span></span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; date &amp;&amp; ifs &gt;&gt; interval &amp;&amp; ifs &gt;&gt; stuId &amp;&amp; ifs &gt;&gt; stuName &amp;&amp; ifs &gt;&gt; roomId &amp;&amp; ifs &gt;&gt; status) &#123;</span><br><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; date &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; interval &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; stuId &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; stuName &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; roomId &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; status &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">string key;</span><br><span class="line">string value;</span><br><span class="line">map&lt;string, string&gt;m;</span><br><span class="line"></span><br><span class="line"><span class="comment">//date:1</span></span><br><span class="line"><span class="type">int</span> pos = date.<span class="built_in">find</span>(<span class="string">&quot;:&quot;</span>);<span class="comment">//pos为4</span></span><br><span class="line"><span class="keyword">if</span> (pos != <span class="number">-1</span>) &#123;</span><br><span class="line">key = date.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">value = date.<span class="built_in">substr</span>(pos + <span class="number">1</span>, date.<span class="built_in">size</span>() - pos);<span class="comment">//size为9，pos为4，因此为5到5</span></span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pos = interval.<span class="built_in">find</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pos != <span class="number">-1</span>) &#123;</span><br><span class="line">key = interval.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">value = interval.<span class="built_in">substr</span>(pos + <span class="number">1</span>, interval.<span class="built_in">size</span>() - pos);</span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pos = stuId.<span class="built_in">find</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pos != <span class="number">-1</span>) &#123;</span><br><span class="line">key = stuId.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">value = stuId.<span class="built_in">substr</span>(pos + <span class="number">1</span>, stuId.<span class="built_in">size</span>() - pos);</span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pos = stuName.<span class="built_in">find</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pos != <span class="number">-1</span>) &#123;</span><br><span class="line">key = stuName.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">value = stuName.<span class="built_in">substr</span>(pos + <span class="number">1</span>, stuName.<span class="built_in">size</span>() - pos);</span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pos = roomId.<span class="built_in">find</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pos != <span class="number">-1</span>) &#123;</span><br><span class="line">key = roomId.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">value = roomId.<span class="built_in">substr</span>(pos + <span class="number">1</span>, roomId.<span class="built_in">size</span>() - pos);</span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pos = status.<span class="built_in">find</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pos != <span class="number">-1</span>) &#123;</span><br><span class="line">key = status.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">value = status.<span class="built_in">substr</span>(pos + <span class="number">1</span>, status.<span class="built_in">size</span>() - pos);</span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将小map容器放入到大的map容器中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_OrderData.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(<span class="keyword">this</span>-&gt;m_Size, m));</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Size++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="comment">//for (map&lt;int, map&lt;string, string&gt;&gt;::iterator it = m_OrderData.begin(); it != m_OrderData.end(); it++) &#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;条数为：&quot; &lt;&lt; it-&gt;first &lt;&lt; &quot; value = &quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//for (map&lt;string, string&gt;::iterator mit = it-&gt;second.begin(); mit != it-&gt;second.end(); mit++) &#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot; key = &quot; &lt;&lt; mit-&gt;first &lt;&lt; &quot; value = &quot; &lt;&lt; mit-&gt;second;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新预约记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OrderFile::updateOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Size == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ofstream <span class="title">ofs</span><span class="params">(ORDER_FILE, ios::out | ios::trunc)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m_Size; i++) &#123;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;date:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;date&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;interval:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;interval&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;stuId:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;stuId&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;stuName:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;stuName&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;roomId:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;roomId&quot;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;status:&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_OrderData[i][<span class="string">&quot;status&quot;</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C++工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>演讲比赛流程管理系统</title>
      <link href="/2022/05/06/C++/%E6%BC%94%E8%AE%B2%E6%AF%94%E8%B5%9B%E6%B5%81%E7%A8%8B%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/05/06/C++/%E6%BC%94%E8%AE%B2%E6%AF%94%E8%B5%9B%E6%B5%81%E7%A8%8B%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1>演讲比赛流程管理系统</h1><h2 id="1-演讲比赛程序要求">1 演讲比赛程序要求</h2><h3 id="1-1-比赛规则">1.1 比赛规则</h3><ul><li>学校举行一场演讲比赛，共有12个人参加，<strong>比赛共两轮</strong>，第一轮为淘汰赛，第二轮为决赛。</li><li>每名选手都有对应的<strong>编号</strong>，如10001 ~ 10012</li><li>比赛方式：<strong>分组比赛，每组6个人</strong></li><li>第一轮分为两个小组，整体按照选手编号进行<strong>抽签</strong>，根据抽签顺序演讲</li><li>十个评委分别给每名选手打分，去除最高分和最低分，求的平均分为本轮选手的成绩</li><li>当小组演讲完后，淘汰组内排名最后的三个选手，<strong>前三名晋级</strong>，进入下一轮的比赛</li><li>第二轮为决赛，<strong>前三名胜出</strong></li><li>每轮比赛过后需要<strong>显示晋级选手的信息</strong></li></ul><h3 id="1-2-程序功能">1.2 程序功能</h3><ul><li>开始演讲比赛：完成整届比赛的流程，每个比赛阶段需要给用户一个提示，用户按任意键后继续下一个阶段</li><li>查看往届记录：查看之前比赛前三名结果，每次比赛都会记录到文件中，文件用.csv后缀名保存</li><li>清空比赛记录：将文件中数据清空</li><li>退出比赛程序：可以退出当前程序</li></ul><h3 id="1-3-程序效果图">1.3 程序效果图</h3><p><img src="https://s2.loli.net/2023/03/12/6mQtn91ExINuVX4.png" alt="image-20220313155347334"></p><h2 id="2-项目创建">2 项目创建</h2><p><strong>创建项目步骤如下</strong>：</p><ul><li>创建新项目</li><li>添加文件</li></ul><h3 id="2-1-创建项目-3">2.1 创建项目</h3><p>创建项目步骤如下：</p><ul><li>创建新项目</li><li>添加文件</li></ul><h3 id="2-1-创建项目-4">2.1 创建项目</h3><p>打开Visual studio后，点击创建新项目，创建新的C++项目</p><img src="https://s2.loli.net/2023/03/12/7neYcNWEyLC34Xk.png" alt="image-20220123124340461" style="zoom: 67%;" /><img src="https://s2.loli.net/2023/03/12/OL9a4HXWxu2YNUP.png" alt="image-20220123125134404" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/12/VoBACc47EKJ3iq8.png" alt="image-20220123125917692" style="zoom:67%;" /><h3 id="2-2-创建文件-3">2.2 创建文件</h3><p>右键源文件，选择添加-&gt;新建项</p><img src="https://s2.loli.net/2023/03/12/AMfNtn4CFOaH8KD.png" alt="image-20220123130442955" style="zoom:67%;" /><p>给C++文件起个名称，然后点击添加即可。</p><img src="https://s2.loli.net/2023/03/12/fsNvDALp9Ojdm7J.png" alt="image-20220123130813668" style="zoom:67%;" /><h2 id="3-创建管理类-2">3 创建管理类</h2><p><strong>功能描述</strong>：</p><ul><li>提供菜单界面与用户交互</li><li>对演讲比赛流程进行控制</li><li>与文件的读写交互</li></ul><h3 id="3-1-创建文件-2">3.1 创建文件</h3><ul><li>在头文件和源文件的文件夹下分别创建<code>speechManager.h</code>和<code>speechManager.cpp</code>文件</li></ul><p><img src="https://s2.loli.net/2023/03/12/epGWm7gVry3Auwd.png" alt="image-20220312141057724"></p><h3 id="3-2-头文件实现">3.2 头文件实现</h3><p>在<code>speechManager.h</code>中设计管理类</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设计演讲比赛的管理类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SpeechManager</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="built_in">SpeechManager</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~<span class="built_in">SpeechManager</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="3-3-源文件实现">3.3 源文件实现</h3><p>在<code>speechManager.cpp</code>中将构造函数和析构函数实现</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;speechManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">SpeechManager::<span class="built_in">SpeechManager</span>() &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">SpeechManager::~<span class="built_in">SpeechManager</span>() &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-菜单功能-2">4 菜单功能</h2><p>功能描述：与用户的沟通界面</p><h3 id="4-1-添加成员函数-2">4.1 添加成员函数</h3><p>在管理类<code>speechManager.h</code>中添加成员函数<code>void show_Menu();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show_Menu</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h3 id="4-2-菜单功能实现-2">4.2 菜单功能实现</h3><ul><li>在管理类<code>speechManager.cpp</code>中实现<code>show_Menu()</code>函数</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::show_Menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********  欢迎参加演讲比赛  ********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********   1.开始演讲比赛   ********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********   2.查看往届记录   ********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********   3.清空比赛记录   ********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********   0.退出比赛记录   ********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-测试菜单功能-2">4.3 测试菜单功能</h3><ul><li>在<code>演讲比赛流程管理系统.cpp</code>中测试菜单功能</li></ul><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SpeechManager sm;</span><br><span class="line">sm.<span class="built_in">show_Menu</span>();</span><br></pre></td></tr></table></figure><p>运行效果图：</p><p><img src="https://s2.loli.net/2023/03/12/WNdTYgUSPwRofpI.png" alt="image-20220312144514775"></p><h2 id="5-退出功能-2">5 退出功能</h2><p>功能描述：实现退出程序</p><h3 id="5-1-提供功能接口-2">5.1 提供功能接口</h3><ul><li>在main函数中提供分支选择，提供每个功能接口</li></ul><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;speechManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SpeechManager sm;</span><br><span class="line"><span class="type">int</span> choice = <span class="number">0</span>; <span class="comment">//用来存储用户的选项</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">sm.<span class="built_in">show_Menu</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; choice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: <span class="comment">//开始比赛</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: <span class="comment">//查看记录</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: <span class="comment">//清空记录</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: <span class="comment">//退出系统</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>); <span class="comment">//清屏</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-实现退出功能-2">5.2 实现退出功能</h3><p>在<code>speechManager.h</code>中提供退出系统的成员函数<code>void exitSystem();</code></p><p>在<code>speechManager.h</code>中提供具体的功能实现</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//退出系统</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::exitSystem</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎下次使用&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-测试功能-2">5.3 测试功能</h3><p>在main函数分支 0 选项中，调用退出程序的接口</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">0</span>: <span class="comment">//退出系统</span></span><br><span class="line">sm.<span class="built_in">exitSystem</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>效果如图：</p><p><img src="https://s2.loli.net/2023/03/12/CloKNjVqZwutRfg.png" alt="image-20220312150528020"></p><h2 id="6-演讲比赛功能">6 演讲比赛功能</h2><h3 id="6-1-功能分析">6.1 功能分析</h3><p>比赛流程：</p><p>抽签→开始演讲比赛→显示第一轮比赛结果→</p><p>抽签→开始演讲比赛→显示前三名结果→保存分数</p><h3 id="6-2-创建选手类">6.2 创建选手类</h3><p>选手类中的属性包含：选手姓名、分数</p><p>头文件中创建<code>speaker.h</code>文件，并添加代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选手类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Speaker</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string m_Name; <span class="comment">//姓名</span></span><br><span class="line"><span class="type">double</span> m_Score[<span class="number">2</span>]; <span class="comment">//分数，最多有两轮得分</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="6-3-比赛">6.3 比赛</h3><h4 id="6-3-1-成员属性添加">6.3.1 成员属性添加</h4><p>在<code>speechManager.h</code>中添加属性</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//成员属性</span></span><br><span class="line"><span class="comment">//保存第一轮比赛选手的编号</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v1;</span><br><span class="line"><span class="comment">//第一轮晋级选手编号容器</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v2;</span><br><span class="line"><span class="comment">//胜出的前三名选手编号容器</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;vVictory;</span><br><span class="line"><span class="comment">//存放编号以及对应具体选手的容器</span></span><br><span class="line">map&lt;<span class="type">int</span>, Speaker&gt;m_Speaker;</span><br><span class="line"><span class="comment">//存放比赛的轮数</span></span><br><span class="line"><span class="type">int</span> m_Index;</span><br></pre></td></tr></table></figure><h4 id="6-3-2-初始化属性">6.3.2 初始化属性</h4><p>在<code>speechManager.h</code>中提供开始比赛的成员函数<code>void initSpeech();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化容器和属性</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initSpeech</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>在speechManager.cpp中实现<code>void initSpeech();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化容器和属性</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::initSpeech</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//容器都置空</span></span><br><span class="line"><span class="keyword">this</span>-&gt;v1.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;v2.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;vVictory.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Speaker.<span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化比赛轮数</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Index = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SpeechManager构造函数中调用<code>void initSpeech();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">SpeechManager::<span class="built_in">SpeechManager</span>() &#123;</span><br><span class="line"><span class="comment">//初始化容器和属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">initSpeech</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-3-3-创建选手">6.3.3 创建选手</h4><p>在<code>speechManager.h</code>中提供开始比赛的成员函数<code>void createSpeaker();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建12名选手</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">createSpeaker</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>在<code>speechManager.cpp</code>中实现<code>void createSpeaker();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::createSpeaker</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string nameSeed = <span class="string">&quot;ABCDEFGHIJKL&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; nameSeed.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">string name = <span class="string">&quot;选手&quot;</span>;</span><br><span class="line">name += nameSeed[i];</span><br><span class="line"></span><br><span class="line">Speaker sp;</span><br><span class="line">sp.m_Name = name;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) &#123;</span><br><span class="line">sp.m_Score[j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建选手编号，并且放入到v1容器中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;v1.<span class="built_in">push_back</span>(i + <span class="number">1001</span>);</span><br><span class="line"><span class="comment">//选手编号以及对应的选手 放入到map容器中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Speaker.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(i + <span class="number">1001</span>, sp));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>speechManager.cpp</code>中对<code>SpeechManager</code>类中调用<code>void createSpeaker();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">SpeechManager::<span class="built_in">SpeechManager</span>() &#123;</span><br><span class="line"><span class="comment">//初始化容器和属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">initSpeech</span>();</span><br><span class="line"><span class="comment">//创建12名选手</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">createSpeaker</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试，在main函数中，可以在创建完管理对象后，使用下列代码测试12名选手初始状态</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试代码：</span></span><br><span class="line"><span class="comment">//测试12名选手的创建</span></span><br><span class="line"><span class="keyword">for</span> (map&lt;<span class="type">int</span>, Speaker&gt;::iterator it = sm.m_Speaker.<span class="built_in">begin</span>(); it != sm.m_Speaker.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;选手编号：&quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; it-&gt;second.m_Name &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; it-&gt;second.m_Score[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试效果图：</p><p><img src="https://s2.loli.net/2023/03/12/a1EKs3elAptqSPR.png" alt="image-20220312183901650"></p><p>测试完毕后，可以将测试代码删除或注释。</p><h4 id="6-3-4-开始比赛成员函数添加">6.3.4 开始比赛成员函数添加</h4><p>在<code>speechManager.h</code>中提供开始比赛的成员函数<code>void startSpeech();</code></p><p>该函数功能时主要控制比赛的流程</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开始比赛 - 比赛流程</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">startSpeech</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>在speechManager.cpp中将<code>startSpeech</code>的空实现先写入</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开始比赛</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::startSpeech</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//第一轮比赛</span></span><br><span class="line"><span class="comment">//1.抽签</span></span><br><span class="line">    <span class="built_in">speechDraw</span>();</span><br><span class="line"><span class="comment">//2.比赛</span></span><br><span class="line"><span class="comment">//3.显示晋级结果</span></span><br><span class="line"><span class="comment">//第二轮比赛</span></span><br><span class="line"><span class="comment">//1.抽签</span></span><br><span class="line"><span class="comment">//2.比赛</span></span><br><span class="line"><span class="comment">//3.显示最终结果</span></span><br><span class="line"><span class="comment">//4.保存分数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-3-5-抽签">6.3.5 抽签</h4><p><strong>功能描述</strong>：</p><p>正式比赛前，所有选手的比赛顺序需要打乱，只需要将存放选手编号的容器打乱次序即可</p><p>在<code>speechManager.h</code>中提供抽签的成员函数<code>void speechManager();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽签</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speechDraw</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>在speechManager.cpp中实现成员函数<code>void speechDraw();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽签</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::speechDraw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第 &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot; 轮比赛选手正在抽签&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;抽签后演讲顺序如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//第一轮比赛</span></span><br><span class="line"><span class="built_in">random_shuffle</span>(v1.<span class="built_in">begin</span>(), v1.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = v1.<span class="built_in">begin</span>(); it != v1.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//第二轮比赛</span></span><br><span class="line"><span class="built_in">random_shuffle</span>(v2.<span class="built_in">begin</span>(), v2.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = v2.<span class="built_in">begin</span>(); it != v2.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在startSpeech比赛流程控制的函数中，调用抽签函数</p><p><img src="https://s2.loli.net/2023/03/12/P75w8xK4fOTSydX.png" alt="image-20220312190246239"></p><p>在main函数中，分支 1 选项中，调用开始比赛的接口</p><p><img src="https://s2.loli.net/2023/03/12/oj4L2YG5hVmy8OE.png" alt="image-20220312190413410"></p><p>测试效果图：</p><p><img src="https://s2.loli.net/2023/03/12/wYNar6qlcPhSz4H.png" alt="image-20220312191833223"></p><h4 id="6-3-6-开始比赛">6.3.6 开始比赛</h4><p>在speechManager.h中提供比赛的成员函数<code>void speechContest();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//比赛</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speechContest</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>在speechManager.cpp中实现成员函数<code>void speechContest();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::speechContest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第 &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot; 轮比赛开始：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//准备临时的容器存放小组的容器</span></span><br><span class="line">multimap&lt;<span class="type">double</span>, <span class="type">int</span>, greater&lt;<span class="type">double</span>&gt;&gt;groupScore;</span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;<span class="comment">//记录人员的个数</span></span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v_Src;<span class="comment">//比赛选手的容器</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>) &#123;</span><br><span class="line">v_Src = v1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">v_Src = v2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历所有选手进行比赛</span></span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = v_Src.<span class="built_in">begin</span>(); it != v_Src.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">num++;</span><br><span class="line"><span class="comment">//评委打分</span></span><br><span class="line">deque&lt;<span class="type">double</span>&gt;d;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="type">double</span> score = (<span class="built_in">rand</span>() % <span class="number">401</span> + <span class="number">600</span>) / <span class="number">10.f</span>; <span class="comment">//600~1000</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; score &lt;&lt; &quot; &quot;;</span></span><br><span class="line">d.<span class="built_in">push_back</span>(score);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cout &lt;&lt; endl;</span></span><br><span class="line"><span class="built_in">sort</span>(d.<span class="built_in">begin</span>(), d.<span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;<span class="type">double</span>&gt;());<span class="comment">//从大到小排序</span></span><br><span class="line">d.<span class="built_in">pop_front</span>();<span class="comment">//去除最高分</span></span><br><span class="line">d.<span class="built_in">pop_back</span>();<span class="comment">//去除最低分</span></span><br><span class="line"><span class="type">double</span> sum = <span class="built_in">accumulate</span>(d.<span class="built_in">begin</span>(), d.<span class="built_in">end</span>(), <span class="number">0.0f</span>);<span class="comment">//总分</span></span><br><span class="line"><span class="type">double</span> avg = sum / (<span class="type">double</span>)d.<span class="built_in">size</span>();<span class="comment">//平均分</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打印平均分</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;编号：&quot; &lt;&lt; *it &lt;&lt; &quot; 姓名：&quot; &lt;&lt; this-&gt;m_Speaker[*it].m_Name &lt;&lt; &quot; 获取平均分：&quot; &lt;&lt; avg &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将平均分放入到map容器中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Speaker[*it].m_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] = avg;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将打分数放入到临时小组容器中</span></span><br><span class="line">groupScore.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(avg, *it));<span class="comment">//key是得分，value是具体选手的编号</span></span><br><span class="line"><span class="comment">//每6人取出前三名</span></span><br><span class="line"><span class="keyword">if</span> (num % <span class="number">6</span> == <span class="number">0</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; num / <span class="number">6</span> &lt;&lt; <span class="string">&quot;小组比赛名次：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (multimap&lt;<span class="type">double</span>, <span class="type">int</span>, greater&lt;<span class="type">double</span>&gt;&gt;::iterator it = groupScore.<span class="built_in">begin</span>(); it != groupScore.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;编号：&quot;</span> &lt;&lt; it-&gt;second </span><br><span class="line"> &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[it-&gt;second].m_Name </span><br><span class="line"> &lt;&lt; <span class="string">&quot; 成绩：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[it-&gt;second].m_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//取走前三名</span></span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (multimap&lt;<span class="type">double</span>, <span class="type">int</span>, greater&lt;<span class="type">double</span>&gt;&gt;::iterator it = groupScore.<span class="built_in">begin</span>(); it != groupScore.<span class="built_in">end</span>() &amp;&amp; count &lt; <span class="number">3</span>; it++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>) &#123;</span><br><span class="line">v2.<span class="built_in">push_back</span>((*it).second);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">vVictory.<span class="built_in">push_back</span>((*it).second);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">groupScore.<span class="built_in">clear</span>();<span class="comment">//小组容器清空</span></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;轮比赛完毕！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-3-7-显示比赛分数">6.3.7 显示比赛分数</h4><p>在<code>speechMananger.h</code>中提供显示分数的成员函数<code>void showScore();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示比赛结果</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showScore</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>在<code>speechManager.cpp</code>中实现成员函数<code>void showScore();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示比赛结果</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::showScore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;轮晋级选手信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>) &#123;</span><br><span class="line">v = v2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">v = vVictory;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = v.<span class="built_in">begin</span>(); it != v.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;选手编号：&quot;</span> &lt;&lt; *it &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Name </span><br><span class="line"> &lt;&lt; <span class="string">&quot; 得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">show_Menu</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在startSpeech比赛流程控制的函数中，调用显示比赛分数函数</p><p><img src="https://s2.loli.net/2023/03/12/MEdWn369rsYaeQp.png" alt="image-20220313113009813"></p><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/zIrCMHEgjFLpkx5.png" alt="image-20220313113113137"></p><h4 id="6-3-8-第二轮比赛">6.3.8 第二轮比赛</h4><p>第二轮比赛流程同第一轮，只是比赛的轮是+1，其余流程不变</p><p>在<code>startSpeech</code>比赛流程控制的函数中，加入第二轮的流程</p><p><img src="https://s2.loli.net/2023/03/12/1IwJZtHsBE7GoxD.png" alt="image-20220313113702890"></p><p>测试，将整个比赛流程跑一遍</p><p><img src="https://s2.loli.net/2023/03/12/W8TlB1GK97XZHgP.png" alt="image-20220313113857138"></p><h3 id="6-4-保存分数">6.4 保存分数</h3><p><strong>功能描述</strong>：将每次演讲比赛的得分记录到文件中</p><p><strong>功能实现</strong>：在speechManager.h中添加保存记录的成员函数<code>void saveRecord();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">saveRecord</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>在speechManager.cpp中实现成员函数<code>void saveRecord();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::saveRecord</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">&quot;speech.csv&quot;</span>, ios==out | ios==app);<span class="comment">//用追加的方式写文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将每个选手的数据写入到文件中</span></span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = vVictory.<span class="built_in">begin</span>(); it != vVictory.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">ofs &lt;&lt; *it &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Score[<span class="number">1</span>] &lt;&lt; <span class="string">&quot;,&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">ofs &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭</span></span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;记录已经保存&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在startSpeech比赛流程控制的函数中，最后调用保存记录分数函数</p><p><img src="https://s2.loli.net/2023/03/12/dCzQqDjgRG31fmH.png" alt="image-20220313124457335"></p><p>测试效果：</p><p><img src="https://s2.loli.net/2023/03/12/Rwg4Za2tcC93byM.png" alt="image-20220313124542790"></p><p>利用记事本打开speech.csv，里面保存了前三名选手的编号以及得分</p><p><img src="https://s2.loli.net/2023/03/12/ATIvE6qZJMnp5Vj.png" alt="image-20220313124857565"></p><p>至此，整个演讲比赛功能制作完毕。</p><h2 id="7-查看记录">7 查看记录</h2><h3 id="7-1-读取记录分数">7.1 读取记录分数</h3><p>在<code>speechManager.h</code>中添加保存记录的成员函数<code>void loadRecord();</code></p><p>添加判断文件是否为空的标志<code>bool fileIsEmpty;</code></p><p>添加往届记录的容器<code>map&lt;int, vector&lt;string&gt;&gt; m_Record;</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//读取记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loadRecord</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//文件为空的标志</span></span><br><span class="line"><span class="type">bool</span> fileIsEmpty;</span><br><span class="line"><span class="comment">//存放往届记录的容器</span></span><br><span class="line">map&lt;<span class="type">int</span>, vector&lt;string&gt;&gt; m_Record;</span><br></pre></td></tr></table></figure><p>在speechManager.cpp中实现成员函数<code>void loadRecord();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//读取记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::loadRecord</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">ifstream <span class="title">ifs</span><span class="params">(<span class="string">&quot;speech.csv&quot;</span>, ios::in)</span></span>;<span class="comment">//读文件</span></span><br><span class="line"><span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//文件清空的情况</span></span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line">ifs &gt;&gt; ch;</span><br><span class="line"><span class="keyword">if</span> (ifs.<span class="built_in">eof</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件为空&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//文件不为空</span></span><br><span class="line"><span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">ifs.<span class="built_in">putback</span>(ch);<span class="comment">//将上面读取的单个字符放回</span></span><br><span class="line"></span><br><span class="line">string data;</span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; data) &#123;</span><br><span class="line">cout &lt;&lt; data &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>speechManager</code>构造函数中调用获取往届记录。</p><p><img src="https://s2.loli.net/2023/03/12/Nrs4HhWRO5bQMaB.png" alt="image-20220313132101702"></p><h3 id="7-2-查看记录功能">7.2 查看记录功能</h3><p>在speechManager.h中添加保存记录的成员函数<code>void showRecord();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示往届记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showRecord</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>在speechManager.cpp中实现成员函数<code>void showRecord();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示往届记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::showRecord</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; <span class="keyword">this</span>-&gt;m_Record.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;届&quot;</span> &lt;&lt;</span><br><span class="line"><span class="string">&quot;冠军编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">0</span>] &lt;&lt; <span class="string">&quot; 得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">1</span>] &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="string">&quot;季军编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">2</span>] &lt;&lt; <span class="string">&quot; 得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">3</span>] &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="string">&quot;亚军编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">4</span>] &lt;&lt; <span class="string">&quot; 得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">5</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-3-测试功能">7.3 测试功能</h3><p>在main函数分支 2 选项中，调用查看记录的接口</p><p><img src="https://s2.loli.net/2023/03/12/QUgPcyWj2Lpn3Ak.png" alt="image-20220313140332781"></p><h3 id="7-4-bug解决">7.4 bug解决</h3><p>目前程序中有几处bug未解决：</p><ol><li>查看往届记录，若问价不存在或为空，并未提示</li></ol><p>解决方式：在showRecord函数中，开始判断文件状态</p><p><img src="https://s2.loli.net/2023/03/12/dXpqofyCjnkRUVS.png" alt="image-20220313141139884"></p><ol start="2"><li>若记录为空或不存在，比完赛后依然提示记录为空</li></ol><p>解决方式：saveRecord中更新文件为空的标志</p><p><img src="https://s2.loli.net/2023/03/12/GSfp5va4cLKMWeR.png" alt="image-20220313141453502"></p><ol start="3"><li>比完赛后查不到本届比赛的记录，没有实时更新</li></ol><p>解决方式：比赛完毕后，所有数据重置</p><p><img src="https://s2.loli.net/2023/03/12/nUBTORpGrQyA54o.png" alt="image-20220313142009085"></p><ol start="4"><li>在初始化时，没有初始化记录容器</li></ol><p>解决方式：initSpeech中添加初始化记录容器</p><p><img src="https://s2.loli.net/2023/03/12/h9rJvgiz1WZXtCx.png" alt="image-20220313145234536"></p><ol start="5"><li>每次记录都是一样的</li></ol><p>解决方式：在main函数一开始添加随机数种子</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br></pre></td></tr></table></figure><p>所有bug解决后测试：</p><p><img src="https://s2.loli.net/2023/03/12/fXa5jDKwxUJ976A.png" alt="image-20220313150652485"></p><h2 id="8-清空记录">8 清空记录</h2><h3 id="8-1-清空记录功能实现">8.1 清空记录功能实现</h3><p>在<code>speechManager.h</code>中添加保存记录的成员函数<code>void clearRecord();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clearRecord</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>在<code>speechManager.cpp</code>中实现成员函数<code>void clearRecord();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::clearRecord</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;确认清空？&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1.确认&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2.返回&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//打开模式 ios::trunc 如果存在删除文件并重新创建</span></span><br><span class="line"><span class="function">ofstream <span class="title">ofs</span><span class="params">(<span class="string">&quot;speech.csv&quot;</span>, ios::trunc)</span></span>;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">initSpeech</span>();</span><br><span class="line"><span class="comment">//创建选手</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">createSpeaker</span>();</span><br><span class="line"><span class="comment">//获取往届记录</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">loadRecord</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;清空成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-2-测试清空">8.2 测试清空</h3><p>在main函数分支 3 选项中，调用清空比赛记录的接口</p><p><img src="https://s2.loli.net/2023/03/12/NWQ3RmGEozcCbAx.png" alt="image-20220313151825067"></p><p>运行程序，测试清空记录：</p><p><img src="https://s2.loli.net/2023/03/12/Vn5BJYG21vQPTI3.png" alt="image-20220313151918085"></p><p>speech.csv中记录为空：</p><p><img src="https://s2.loli.net/2023/03/12/WgMu673pJraNixE.png" alt="image-20220313152002983"></p><p>至此，演讲比赛流程管理系统结束。</p><h2 id="9-所有程序">9 所有程序</h2><h3 id="基于STL的演讲比赛流程管理系统-cpp">基于STL的演讲比赛流程管理系统.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;speechManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">SpeechManager sm;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试代码：</span></span><br><span class="line"><span class="comment">////测试12名选手的创建</span></span><br><span class="line"><span class="comment">//for (map&lt;int, Speaker&gt;::iterator it = sm.m_Speaker.begin(); it != sm.m_Speaker.end(); it++) &#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;选手编号：&quot; &lt;&lt; it-&gt;first &lt;&lt; &quot; 姓名：&quot; &lt;&lt; it-&gt;second.m_Name &lt;&lt; &quot; 分数：&quot; &lt;&lt; it-&gt;second.m_Score[0] &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> choice = <span class="number">0</span>; <span class="comment">//用来存储用户的选项</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">sm.<span class="built_in">show_Menu</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; choice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: <span class="comment">//开始比赛</span></span><br><span class="line">sm.<span class="built_in">startSpeech</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: <span class="comment">//查看记录</span></span><br><span class="line">sm.<span class="built_in">showRecord</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: <span class="comment">//清空记录</span></span><br><span class="line">sm.<span class="built_in">clearRecord</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: <span class="comment">//退出系统</span></span><br><span class="line">sm.<span class="built_in">exitSystem</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>); <span class="comment">//清屏</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="speaker-h">speaker.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选手类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Speaker</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string m_Name;<span class="comment">//姓名</span></span><br><span class="line"><span class="type">double</span> m_Score[<span class="number">2</span>]; <span class="comment">//分数，最多有两轮得分</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="speechManager-h">speechManager.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;functional&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;speaker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设计演讲比赛的管理类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SpeechManager</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="built_in">SpeechManager</span>();</span><br><span class="line"><span class="comment">//显示菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show_Menu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//退出系统</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">exitSystem</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化容器和属性</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initSpeech</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//成员属性</span></span><br><span class="line"><span class="comment">//保存第一轮比赛选手的编号</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v1;</span><br><span class="line"><span class="comment">//第一轮晋级选手编号容器</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v2;</span><br><span class="line"><span class="comment">//胜出的前三名选手编号容器</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;vVictory;</span><br><span class="line"><span class="comment">//存放编号以及对应具体选手的容器</span></span><br><span class="line">map&lt;<span class="type">int</span>, Speaker&gt;m_Speaker;</span><br><span class="line"><span class="comment">//存放比赛的轮数</span></span><br><span class="line"><span class="type">int</span> m_Index;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建12名选手</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">createSpeaker</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开始比赛 - 比赛流程</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">startSpeech</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽签</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speechDraw</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示比赛结果</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showScore</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//比赛</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speechContest</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">saveRecord</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loadRecord</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//文件为空的标志</span></span><br><span class="line"><span class="type">bool</span> fileIsEmpty;</span><br><span class="line"><span class="comment">//存放往届记录的容器</span></span><br><span class="line">map&lt;<span class="type">int</span>, vector&lt;string&gt;&gt; m_Record;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示往届记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showRecord</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clearRecord</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~<span class="built_in">SpeechManager</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="speechManager-cpp">speechManager.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;speechManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">SpeechManager::<span class="built_in">SpeechManager</span>() &#123;</span><br><span class="line"><span class="comment">//初始化容器和属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">initSpeech</span>();</span><br><span class="line"><span class="comment">//创建12名选手</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">createSpeaker</span>();</span><br><span class="line"><span class="comment">//获取往届记录</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">loadRecord</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::show_Menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********  欢迎参加演讲比赛  ********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********   1.开始演讲比赛   ********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********   2.查看往届记录   ********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********   3.清空比赛记录   ********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********   0.退出比赛记录   ********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//退出系统</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::exitSystem</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎下次使用&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化容器和属性</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::initSpeech</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//容器都置空</span></span><br><span class="line"><span class="keyword">this</span>-&gt;v1.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;v2.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;vVictory.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Speaker.<span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化比赛轮数</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Index = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//初始化记录容器</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Record.<span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::createSpeaker</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string nameSeed = <span class="string">&quot;ABCDEFGHIJKL&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; nameSeed.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">string name = <span class="string">&quot;选手&quot;</span>;</span><br><span class="line">name += nameSeed[i];</span><br><span class="line"></span><br><span class="line">Speaker sp;</span><br><span class="line">sp.m_Name = name;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) &#123;</span><br><span class="line">sp.m_Score[j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建选手编号，并且放入到v1容器中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;v1.<span class="built_in">push_back</span>(i + <span class="number">1001</span>);</span><br><span class="line"><span class="comment">//选手编号以及对应的选手 放入到map容器中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Speaker.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(i + <span class="number">1001</span>, sp));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开始比赛</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::startSpeech</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//第一轮比赛</span></span><br><span class="line"><span class="comment">//1.抽签</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">speechDraw</span>();</span><br><span class="line"><span class="comment">//2.比赛</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">speechContest</span>();</span><br><span class="line"><span class="comment">//3.显示晋级结果</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">showScore</span>();</span><br><span class="line"><span class="comment">//第二轮比赛</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Index++;</span><br><span class="line"><span class="comment">//1.抽签</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">speechDraw</span>();</span><br><span class="line"><span class="comment">//2.比赛</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">speechContest</span>();</span><br><span class="line"><span class="comment">//3.显示最终结果</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">showScore</span>();</span><br><span class="line"><span class="comment">//4.保存分数</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">saveRecord</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//重置比赛</span></span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">initSpeech</span>();</span><br><span class="line"><span class="comment">//创建选手</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">createSpeaker</span>();</span><br><span class="line"><span class="comment">//获取往届记录</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">loadRecord</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;本届比赛完毕！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽签</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::speechDraw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第 &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot; 轮比赛选手正在抽签&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;抽签后演讲顺序如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//第一轮比赛</span></span><br><span class="line"><span class="built_in">random_shuffle</span>(v1.<span class="built_in">begin</span>(), v1.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = v1.<span class="built_in">begin</span>(); it != v1.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//第二轮比赛</span></span><br><span class="line"><span class="built_in">random_shuffle</span>(v2.<span class="built_in">begin</span>(), v2.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = v2.<span class="built_in">begin</span>(); it != v2.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::speechContest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第 &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot; 轮比赛开始：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//准备临时的容器存放小组的容器</span></span><br><span class="line">multimap&lt;<span class="type">double</span>, <span class="type">int</span>, greater&lt;<span class="type">double</span>&gt;&gt;groupScore;</span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;<span class="comment">//记录人员的个数</span></span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v_Src;<span class="comment">//比赛选手的容器</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>) &#123;</span><br><span class="line">v_Src = v1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">v_Src = v2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历所有选手进行比赛</span></span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = v_Src.<span class="built_in">begin</span>(); it != v_Src.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">num++;</span><br><span class="line"><span class="comment">//评委打分</span></span><br><span class="line">deque&lt;<span class="type">double</span>&gt;d;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="type">double</span> score = (<span class="built_in">rand</span>() % <span class="number">401</span> + <span class="number">600</span>) / <span class="number">10.f</span>; <span class="comment">//600~1000</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; score &lt;&lt; &quot; &quot;;</span></span><br><span class="line">d.<span class="built_in">push_back</span>(score);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cout &lt;&lt; endl;</span></span><br><span class="line"><span class="built_in">sort</span>(d.<span class="built_in">begin</span>(), d.<span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;<span class="type">double</span>&gt;());<span class="comment">//从大到小排序</span></span><br><span class="line">d.<span class="built_in">pop_front</span>();<span class="comment">//去除最高分</span></span><br><span class="line">d.<span class="built_in">pop_back</span>();<span class="comment">//去除最低分</span></span><br><span class="line"><span class="type">double</span> sum = <span class="built_in">accumulate</span>(d.<span class="built_in">begin</span>(), d.<span class="built_in">end</span>(), <span class="number">0.0f</span>);<span class="comment">//总分</span></span><br><span class="line"><span class="type">double</span> avg = sum / (<span class="type">double</span>)d.<span class="built_in">size</span>();<span class="comment">//平均分</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打印平均分</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;编号：&quot; &lt;&lt; *it &lt;&lt; &quot; 姓名：&quot; &lt;&lt; this-&gt;m_Speaker[*it].m_Name &lt;&lt; &quot; 获取平均分：&quot; &lt;&lt; avg &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将平均分放入到map容器中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Speaker[*it].m_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] = avg;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将打分数放入到临时小组容器中</span></span><br><span class="line">groupScore.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(avg, *it));<span class="comment">//key是得分，value是具体选手的编号</span></span><br><span class="line"><span class="comment">//每6人取出前三名</span></span><br><span class="line"><span class="keyword">if</span> (num % <span class="number">6</span> == <span class="number">0</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; num / <span class="number">6</span> &lt;&lt; <span class="string">&quot;小组比赛名次：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (multimap&lt;<span class="type">double</span>, <span class="type">int</span>, greater&lt;<span class="type">double</span>&gt;&gt;::iterator it = groupScore.<span class="built_in">begin</span>(); it != groupScore.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;编号：&quot;</span> &lt;&lt; it-&gt;second </span><br><span class="line"> &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[it-&gt;second].m_Name </span><br><span class="line"> &lt;&lt; <span class="string">&quot; 成绩：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[it-&gt;second].m_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//取走前三名</span></span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (multimap&lt;<span class="type">double</span>, <span class="type">int</span>, greater&lt;<span class="type">double</span>&gt;&gt;::iterator it = groupScore.<span class="built_in">begin</span>(); it != groupScore.<span class="built_in">end</span>() &amp;&amp; count &lt; <span class="number">3</span>; it++, count++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>) &#123;</span><br><span class="line">v2.<span class="built_in">push_back</span>((*it).second);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">vVictory.<span class="built_in">push_back</span>((*it).second);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">groupScore.<span class="built_in">clear</span>();<span class="comment">//小组容器清空</span></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;轮比赛完毕！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示比赛结果</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::showScore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;轮晋级选手信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>) &#123;</span><br><span class="line">v = v2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">v = vVictory;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = v.<span class="built_in">begin</span>(); it != v.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;选手编号：&quot;</span> &lt;&lt; *it &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Name </span><br><span class="line"> &lt;&lt; <span class="string">&quot; 得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">show_Menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::saveRecord</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">&quot;speech.csv&quot;</span>, ios==out | ios==app);<span class="comment">//用追加的方式写文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将每个选手的数据写入到文件中</span></span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = vVictory.<span class="built_in">begin</span>(); it != vVictory.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">ofs &lt;&lt; *it &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Speaker[*it].m_Score[<span class="number">1</span>] &lt;&lt; <span class="string">&quot;,&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">ofs &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭</span></span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;记录已经保存&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有记录了，文件不为空</span></span><br><span class="line"><span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::loadRecord</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">ifstream <span class="title">ifs</span><span class="params">(<span class="string">&quot;speech.csv&quot;</span>, ios::in)</span></span>;<span class="comment">//读文件</span></span><br><span class="line"><span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;文件不存在&quot; &lt;&lt; endl;</span></span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//文件清空的情况</span></span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line">ifs &gt;&gt; ch;</span><br><span class="line"><span class="keyword">if</span> (ifs.<span class="built_in">eof</span>()) &#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;文件为空&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//文件不为空</span></span><br><span class="line"><span class="keyword">this</span>-&gt;fileIsEmpty = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">ifs.<span class="built_in">putback</span>(ch);<span class="comment">//将上面读取的单个字符放回</span></span><br><span class="line"></span><br><span class="line">string data;</span><br><span class="line"><span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; data) &#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; data &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//1002,86.675,1009,81.3,1007,78.55,</span></span><br><span class="line">vector&lt;string&gt;v;<span class="comment">//为了存放6个string字符串</span></span><br><span class="line"><span class="type">int</span> pos = <span class="number">-1</span>;<span class="comment">//查到“,”位置的变量</span></span><br><span class="line"><span class="type">int</span> start = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">pos = data.<span class="built_in">find</span>(<span class="string">&quot;,&quot;</span>, start);</span><br><span class="line"><span class="keyword">if</span> (pos == <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="comment">//没有找到的情况</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">string temp = data.<span class="built_in">substr</span>(start, pos - start);</span><br><span class="line"><span class="comment">//cout &lt;&lt; temp &lt;&lt; endl;</span></span><br><span class="line">v.<span class="built_in">push_back</span>(temp);</span><br><span class="line">start = pos + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Record.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(index, v));</span><br><span class="line">index++;</span><br><span class="line">&#125;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//for (map&lt;int, vector&lt;string&gt;&gt;::iterator it = m_Record.begin(); it != m_Record.end(); it++) &#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; it-&gt;first &lt;&lt; &quot;冠军编号：&quot; &lt;&lt; it-&gt;second[0]</span></span><br><span class="line"><span class="comment">// &lt;&lt; &quot; 分数：&quot; &lt;&lt; it-&gt;second[1] &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示往届记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::showRecord</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;fileIsEmpty) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在，或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Record.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;届&quot;</span> &lt;&lt;</span><br><span class="line"><span class="string">&quot;冠军编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">0</span>] &lt;&lt; <span class="string">&quot; 得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">1</span>] &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="string">&quot;季军编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">2</span>] &lt;&lt; <span class="string">&quot; 得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">3</span>] &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="string">&quot;亚军编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">4</span>] &lt;&lt; <span class="string">&quot; 得分：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Record[i][<span class="number">5</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SpeechManager::clearRecord</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;确认清空？&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1.确认&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2.返回&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//打开模式 ios::trunc 如果存在删除文件并重新创建</span></span><br><span class="line"><span class="function">ofstream <span class="title">ofs</span><span class="params">(<span class="string">&quot;speech.csv&quot;</span>, ios::trunc)</span></span>;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">initSpeech</span>();</span><br><span class="line"><span class="comment">//创建选手</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">createSpeaker</span>();</span><br><span class="line"><span class="comment">//获取往届记录</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">loadRecord</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;清空成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">SpeechManager::~<span class="built_in">SpeechManager</span>() &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C++工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda和Python</title>
      <link href="/2022/05/06/Python/Anaconda%E5%92%8CPython/"/>
      <url>/2022/05/06/Python/Anaconda%E5%92%8CPython/</url>
      
        <content type="html"><![CDATA[<h1>Anaconda和Python</h1><p>Pip是python自带的包管理工具，通过此工具可以在python命令窗口中下载软件包</p><p>Conda也是包管理工具，比Pip更强大</p><h2 id="1-Conda和Pip的区别">1 Conda和Pip的区别</h2><table><thead><tr><th>Conda</th><th>Pip</th></tr></thead><tbody><tr><td>下载的是二进制文件，不需要安装</td><td>下载后需要安装</td></tr><tr><td>每个工程都有单独的环境管理</td><td>需要额外的环境管理工具</td></tr><tr><td>支持其他语言，安装有兼容性检测</td><td>安装时不检测兼容性</td></tr><tr><td>超过1500个包</td><td>超15000个包</td></tr></tbody></table><h2 id="2-Anaconda镜像源更改">2 Anaconda镜像源更改</h2><p>安装Anaconda后，在Anaconda Powershell Prompt中依次输入以下命令添加镜像源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/</span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><p>完成之后，输入以下命令查看所有的镜像源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --get channels</span><br></pre></td></tr></table></figure><h2 id="3-通过Conda创建环境">3 通过Conda创建环境</h2><p>通过Conda创建环境：</p><p><img src="https://vip2.loli.io/2023/03/13/QjIYFGp2SaRhqKd.png" alt="image-20220330092159167"></p><p>在Anaconda Powershell Prompt中输入以下命令查看搭建的环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> list</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/BWw2XFgyh3178jG.png" alt="image-20220330092743210"></p><p>如果想转换到<code>project03</code>环境，在Anaconda Powershell Prompt中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate project03</span><br></pre></td></tr></table></figure><p>如果想查看环境内可用软件包，在Anaconda Powershell Prompt中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure><p>如果想查看环境内下载的软件包，在Anaconda Powershell Prompt中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list</span><br></pre></td></tr></table></figure><p><code>conda list</code>命令查看的包括base中的软件包，<code>pip list</code>命令查看的不包括base中的软件包</p><h2 id="4-软件包安装">4 软件包安装</h2><p>有两种安装方式，一种是通过pycharm进行安装；另外一种是通过Anaconda进行安装</p><h3 id="4-1-通过pycharm安装软件包">4.1 通过pycharm安装软件包</h3><p>在pycharm中打开设置，对工程的解释器的软件包进行安装：</p><p><img src="https://vip2.loli.io/2023/03/13/Pp9rKcqZdFJb1Hz.png" alt="image-20220330094259487"></p><p><img src="https://vip2.loli.io/2023/03/13/RAdVqrgJnXPmDjO.png" alt="image-20220330094948380"></p><h3 id="4-2-通过Conda安装软件包">4.2 通过Conda安装软件包</h3><p>安装之前通过<code>conda activate project03</code>切换到需要安装软件包的工程中，比如<code>project03</code>环境。然后通过<code>conda install numpy</code>来安装numpy软件包。</p><p><img src="https://vip2.loli.io/2023/03/13/btrcJe9dOKZAaXM.png" alt="image-20220330115138342"></p><p>安装完软件包之后，通过<code>conda list</code>命令可以查看是否安装成功。</p><p><img src="https://vip2.loli.io/2023/03/13/9zbDK6oXFpci41Z.png" alt="image-20220330115321533"></p><p>也可以在<code>D:\Anaconda\envs\project03\Lib\site-packages</code>中找到<code>numpy</code>文件夹，查看是否安装。</p><p>还可以通过在pycharm中查看是否安装，如图：</p><p><img src="https://vip2.loli.io/2023/03/13/wh5aKGj2PtkFRz7.png" alt="image-20220330115751101"></p><h2 id="5-PyTorch安装">5 PyTorch安装</h2><p>PyTorch是一个开源的Python机器学习库，基于Torch，用于自然语言处理等应用程序。</p><p>PyTorch官方网站：<a href="https://pytorch.org/">https://pytorch.org/</a></p><p>CUDA选择自己主机的英伟达显卡的版本，CUDA是英伟达显卡的架构名称，英伟达显卡开发软件包也叫CUDA。</p><p>CUDA(Compute Unified Device Architecture)，是显卡厂商NVIDIA退出的通用并行计算架构，该架构使GPU能够解决复杂的计算问题。</p><p>可以在CMD终端中，通过<code>nvidia-smi</code>命令查看CUDA版本。</p><p><img src="https://vip2.loli.io/2023/03/13/EpuKACzHn8rjM4h.png" alt="image-20220330120824019"></p><p>根据自己主机的CUDA版本选择合适的版本。</p><p><img src="https://vip2.loli.io/2023/03/13/Oe8yRKq4wIot1PL.png" alt="image-20220330121032412"></p><p>将安装命令复制，在Anaconda Powershell Prompt中输入，进行安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch</span><br></pre></td></tr></table></figure><p>如果出现安装错误，可以通过<code>conda clean --all</code>命令清除后重新安装。</p><p>如果不了解清除操作，可以通过<code>conda clean --help </code>了解其用途。</p><p>再通过<code>conda clean -t</code>清除缓存包，然后重新进行安装。</p><p>最后通过如下程序测试是否安装成功：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_hi</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="comment"># Use a breakpoint in the code line below to debug your script.</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;Hi, <span class="subst">&#123;name&#125;</span>&#x27;</span>)  <span class="comment"># Press Ctrl+F8 to toggle the breakpoint.</span></span><br><span class="line">    <span class="built_in">print</span>(torch.__version__)  <span class="comment"># pytorch版本</span></span><br><span class="line">    <span class="built_in">print</span>(torch.version.cuda)  <span class="comment"># cuda版本</span></span><br><span class="line">    <span class="built_in">print</span>(torch.backends.cudnn.version())  <span class="comment"># cudnn版本</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;gpu:&#x27;</span>, torch.cuda.is_available())  <span class="comment"># gpu加速是否可用</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Press the green button in the gutter to run the script.</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print_hi(<span class="string">&#x27;PyCharm&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="6-Anaconda常用命令">6 Anaconda常用命令</h2><p>在Anaconda Powershell Prompt中常用的命令：</p><ul><li><code>conda env list</code>   查看所有创建的conda环境</li><li><code>conda activate 环境名</code>   进入某一个环境中</li><li><code>conda deactivate</code>   退出当前环境</li><li><code>conda remove -n 环境名 --all</code>   删除某一个环境</li><li><code>python</code>   通过该命令可以进入python终端中</li><li><code>exit()</code>   通过该命令可以退回原来的环境</li><li><code>conda list</code>   查看当前环境下安装的所有软件包</li><li><code>conda -h</code> 或 <code>conda --help</code>   查看conda的帮助文档；</li><li><code>conda -V</code> 或 <code>conda --version</code>   查看conda的版本，注意第一个 V 是大写；</li><li><code>conda install 软件包</code>   安装软件包，例如<code>conda install numpy</code>，注意切换到某一个环境中使用此命令</li><li><code>conda create -n 环境名 python=版本号 </code>   创建新的环境，并配置python版本号。eg:<code>conda create -n project_test python=3.8</code></li></ul><p>当输入某一个命令不知道后面写什么的时候，可以通过在后面加<code>-h</code>，查看后面如何写，eg：<code>conda create -h</code>。</p><p><img src="https://vip2.loli.io/2023/03/13/4C7vU5kSzKOT8xY.png" alt="image-20220330165105112"></p><p>当下载好软件包之后，通过python可以查看版本，是否安装成功：</p><p><img src="https://vip2.loli.io/2023/03/13/JKjCOLcgkZ9IePh.png" alt="image-20220330180138600"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python运行环境搭建方法</title>
      <link href="/2022/05/06/Python/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/05/06/Python/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1>Python运行环境搭建方法</h1><p><strong>方法一</strong>：通过PyCharm新建环境</p><p>在某个空文件夹下，新建python文件，可以通过以下的方式新建环境或者选用已经存在的环境，该环境保存在<code>D:\Anaconda\envs\</code>文件夹下。</p><p><img src="https://vip2.loli.io/2023/03/13/FMU5wIeBJ7knojX.png" alt="image-20220331170028829"></p><p><strong>方法二</strong>：通过Conda新建环境</p><p>在Anaconda Powershell Prompt终端中通过<code>conda create -n 环境名 python=版本号 </code>命令创建新的环境，并配置python版本号。</p><p><img src="https://vip2.loli.io/2023/03/13/Hv8jgLVT5c6YzU1.png" alt="image-20220331184120723"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Pycharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python教程</title>
      <link href="/2022/05/06/Python/Python%E6%95%99%E7%A8%8B/"/>
      <url>/2022/05/06/Python/Python%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>Python教程</h1><h2 id="1-Python基本语法">1 Python基本语法</h2><p>R语言 - 包更多，功能拓展更丰富编程更复杂，容易出错</p><p>Python - 简洁、遍历、不易错性，是火爆市场的不二法门</p><p>学习Python编程的利器：<br>Python官方文档：<a href="https://www.python.org/doc/">https://www.python.org/doc/</a></p><p>iPython：<a href="https://www.ipython.org/">https://www.ipython.org/</a></p><p>jupyter notebook：<a href="http://jupyter-notebook.readthedocs.io/cn/latest/">http://jupyter-notebook.readthedocs.io/cn/latest/</a></p><p>Pycharm：<a href="https://www.jetbrains.com/pycharm/">https://www.jetbrains.com/pycharm/</a></p><p>Pip：<a href="https://pip.pypa.io/en/stable/installing/">https://pip.pypa.io/en/stable/installing/</a></p><p>基本数据类型：</p><ul><li>整数（int）</li><li>浮点数（float）</li><li>字符串（str）</li><li>布尔值（bool）</li></ul><p>具体效果如图：</p><p><img src="https://vip2.loli.io/2023/03/13/1RO49uryntEDX8v.png" alt="image-20220318200613202"></p><blockquote><p>注意：<code>true</code>和<code>false</code>不是bool类型，<code>True</code>和<code>False</code>为bool类型</p></blockquote><p>可以通过以下命令将字符进行转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>(<span class="string">&#x27;8&#x27;</span>)</span><br></pre></td></tr></table></figure><p>输出结果为数字类型的8。</p><p>同理，如图：</p><p><img src="https://vip2.loli.io/2023/03/13/uBLyvO5C7tRdpWE.png" alt="image-20220318201638704"></p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网络带宽计算</span></span><br><span class="line">bandwidth = <span class="number">100</span></span><br><span class="line">ratio = <span class="number">8</span></span><br><span class="line"><span class="built_in">print</span>(bandwidth / ratio)</span><br></pre></td></tr></table></figure><p>==注意==：Python对于单引号和双引号没有区分，如果想用引号的嵌套，需要用双引号。</p><p>对于不懂的函数可以通过<code>help(语法)</code>来进行学习。</p><p>为了写出的代码非常美观，应当尽量满足PEP8规范：<a href="https://peps.python.org/pep-0008/">https://peps.python.org/pep-0008/</a></p><h2 id="2-序列">2  序列</h2><h3 id="2-1-序列的概念">2.1 序列的概念</h3><p><strong>序列</strong>：指的是它的成员都是有序排列并且可以i通过下表偏移量访问到它的一个或几个成员</p><p><strong>字符串</strong>、<strong>列表</strong>、<strong>元组</strong>三种类型都属于序列</p><ul><li>字符串：<code>“abcd”</code></li><li>列表：<code>[0,&quot;abcd&quot;]</code></li><li>元组：<code>(&quot;abc&quot;,&quot;def&quot;)</code></li></ul><h3 id="2-2-字符串的定义和使用">2.2 字符串的定义和使用</h3><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 记录生肖，根据年份判断生肖</span></span><br><span class="line">chinese_zodiac = <span class="string">&#x27;鼠牛虎兔龙蛇马羊猴鸡狗猪&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(chinese_zodiac[<span class="number">0</span>:<span class="number">4</span>])  <span class="comment"># 访问的下标是0-3，输出的是 鼠牛虎兔</span></span><br><span class="line"><span class="built_in">print</span>(chinese_zodiac[-<span class="number">1</span>])  <span class="comment"># 输出的是 猪</span></span><br><span class="line"><span class="built_in">print</span>(chinese_zodiac[-<span class="number">3</span>])  <span class="comment"># 输出的是 鸡</span></span><br></pre></td></tr></table></figure><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 记录生肖，根据年份判断生肖</span></span><br><span class="line">chinese_zodiac = <span class="string">&#x27;猴鸡狗猪鼠牛虎兔龙蛇马羊&#x27;</span></span><br><span class="line">year = <span class="number">2022</span></span><br><span class="line"><span class="built_in">print</span>(year % <span class="number">12</span>) <span class="comment"># 输出 6</span></span><br><span class="line"><span class="built_in">print</span>(chinese_zodiac[year % <span class="number">12</span>]) <span class="comment"># 输出 虎</span></span><br></pre></td></tr></table></figure><p><strong>字符串的常用操作</strong>：</p><ol><li>成员关系操作符 <code>in</code> <code>not in</code>示例：<code>对象 [not] in 序列</code></li><li>连接操作符 <code>+</code>示例：<code>序列 + 序列</code></li><li>重复操作符 <code>*</code>示例：<code>序列 * 序列</code></li><li>切片操作符 <code>[:]</code>示例：<code>序列[0:整数]</code></li></ol><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 记录生肖，根据年份判断生肖</span></span><br><span class="line">chinese_zodiac = <span class="string">&#x27;猴鸡狗猪鼠牛虎兔龙蛇马羊&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 成员关系操作符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;狗&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> chinese_zodiac)  <span class="comment"># 输出为 False</span></span><br><span class="line"><span class="comment"># 链接操作符</span></span><br><span class="line"><span class="built_in">print</span>(chinese_zodiac + chinese_zodiac)  <span class="comment"># 输出为 猴鸡狗猪鼠牛虎兔龙蛇马羊猴鸡狗猪鼠牛虎兔龙蛇马羊</span></span><br><span class="line"><span class="built_in">print</span>(chinese_zodiac + <span class="string">&#x27;abcd&#x27;</span>)  <span class="comment"># 输出为 猴鸡狗猪鼠牛虎兔龙蛇马羊abcd</span></span><br><span class="line"><span class="comment"># 重复操作符</span></span><br><span class="line"><span class="built_in">print</span>(chinese_zodiac * <span class="number">3</span>)  <span class="comment"># 输出为 猴鸡狗猪鼠牛虎兔龙蛇马羊猴鸡狗猪鼠牛虎兔龙蛇马羊猴鸡狗猪鼠牛虎兔龙蛇马羊</span></span><br><span class="line"><span class="comment"># 切片操作符</span></span><br><span class="line"><span class="built_in">print</span>(chinese_zodiac[<span class="number">0</span>:<span class="number">2</span>])  <span class="comment"># 输出为 猴鸡</span></span><br></pre></td></tr></table></figure><p>==注意==：列表和元组的区别，列表中的数据可以变更，元组中的数据不能变更。</p><h3 id="2-2-元组的定义和常用操作">2.2 元组的定义和常用操作</h3><p>示例：在Python的shell中输入以下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a=(1,3,5,7)</span><br><span class="line">b=4</span><br><span class="line">filter(lambda x: x &lt; b , a) #输出为 &lt;filter object at 0x000002715049DB40&gt;</span><br><span class="line">list (filter(lambda x: x &lt; b , a)) #输出为 [1, 3]</span><br><span class="line">len(list (filter(lambda x: x &lt; b , a))) #输出为 2</span><br><span class="line">b=6</span><br><span class="line">len(list (filter(lambda x: x &lt; b , a))) #输出为 3</span><br><span class="line">b=8</span><br><span class="line">len(list (filter(lambda x: x &lt; b , a))) #输出为 4</span><br></pre></td></tr></table></figure><p>效果如图：</p><p><img src="https://vip2.loli.io/2023/03/13/6GbuK31cRl9PeBE.png" alt="image-20220318221706992"></p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">zodiac_name = (<span class="string">&#x27;魔羯座&#x27;</span>, <span class="string">&#x27;水瓶座&#x27;</span>, <span class="string">&#x27;双鱼座&#x27;</span>, <span class="string">&#x27;白羊座&#x27;</span>, <span class="string">&#x27;金牛座&#x27;</span>, <span class="string">&#x27;双子座&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;巨蟹座&#x27;</span>, <span class="string">&#x27;狮子座&#x27;</span>, <span class="string">&#x27;处女座&#x27;</span>, <span class="string">&#x27;天秤座&#x27;</span>, <span class="string">&#x27;天蝎座&#x27;</span>, <span class="string">&#x27;射手座&#x27;</span>)</span><br><span class="line">zodiac_days = ((<span class="number">1</span>, <span class="number">20</span>), (<span class="number">2</span>, <span class="number">19</span>), (<span class="number">3</span>, <span class="number">21</span>), (<span class="number">4</span>, <span class="number">21</span>), (<span class="number">5</span>, <span class="number">21</span>), (<span class="number">6</span>, <span class="number">22</span>),</span><br><span class="line">               (<span class="number">7</span>, <span class="number">23</span>), (<span class="number">8</span>, <span class="number">23</span>), (<span class="number">9</span>, <span class="number">23</span>), (<span class="number">10</span>, <span class="number">23</span>), (<span class="number">11</span>, <span class="number">23</span>), (<span class="number">12</span>, <span class="number">23</span>))</span><br><span class="line">(month, day) = (<span class="number">2</span>, <span class="number">15</span>)</span><br><span class="line">zodiac_day = <span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x &lt;= (month, day), zodiac_days)</span><br><span class="line"><span class="built_in">print</span>(zodiac_day) <span class="comment"># 输出 &lt;filter object at 0x000001B54FF3BF10&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(zodiac_day))<span class="comment"># 输出 [(1, 20)]</span></span><br></pre></td></tr></table></figure><h3 id="2-3-列表的定义和常用操作">2.3 列表的定义和常用操作</h3><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a_list=[<span class="string">&#x27;abc&#x27;</span>,<span class="string">&#x27;xyz&#x27;</span>]</span><br><span class="line">a_list.append(<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a_list) <span class="comment">#输出为 [&#x27;abc&#x27;, &#x27;xyz&#x27;, &#x27;X&#x27;]</span></span><br><span class="line">a_list.remove(<span class="string">&#x27;xyz&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a_list) <span class="comment">#输出为 [&#x27;abc&#x27;, &#x27;X&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="3-条件与循环">3 条件与循环</h2><h3 id="3-1-条件语句">3.1 条件语句</h3><p>条件语句：if</p><p>使用方法：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if 表达式: </span><br><span class="line">代码块</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if 表达式: </span><br><span class="line">代码块 </span><br><span class="line">elif 表达式:</span><br><span class="line">代码块</span><br><span class="line">else:</span><br><span class="line">代码块</span><br></pre></td></tr></table></figure><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line"><span class="keyword">if</span> x == <span class="string">&#x27;abc&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x的值和abc相等&#x27;</span>)  <span class="comment"># 输出 x的值和abc相等</span></span><br></pre></td></tr></table></figure><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="string">&#x27;abcd&#x27;</span></span><br><span class="line"><span class="keyword">if</span> x == <span class="string">&#x27;abc&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x的值和abc相等&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x的值和abc不相等&#x27;</span>)  <span class="comment"># 输出 x的值和abc不相等</span></span><br></pre></td></tr></table></figure><p>示例3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">5</span></span><br><span class="line"><span class="keyword">if</span> x &lt; <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x&lt;5&gt;&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> x == <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x=5&#x27;</span>)  <span class="comment"># 输出 x=5</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x&gt;5&#x27;</span>)</span><br></pre></td></tr></table></figure><p>示例4：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chinese_zodiac = <span class="string">&#x27;猴鸡狗猪鼠牛虎兔龙蛇马羊&#x27;</span></span><br><span class="line">year = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请用户输入出生年份&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> chinese_zodiac[year % <span class="number">12</span>] == <span class="string">&#x27;狗&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;狗年运势&#x27;</span>)  <span class="comment"># 输入：2018 输出： 狗年运势</span></span><br></pre></td></tr></table></figure><h3 id="3-2-循环语句">3.2 循环语句</h3><h4 id="3-2-1-for语句">3.2.1 for语句</h4><p>for语句使用方法：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for 迭代变量 in 可迭代对象:</span><br><span class="line">代码块</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">chinese_zodiac = <span class="string">&#x27;猴鸡狗猪鼠牛虎兔龙蛇马羊&#x27;</span></span><br><span class="line"><span class="keyword">for</span> cz <span class="keyword">in</span> chinese_zodiac:   <span class="comment">#不需要定义变量cz，默认从第一个字符开始</span></span><br><span class="line">    <span class="built_in">print</span>(cz)  <span class="comment"># 输出 猴鸡狗猪鼠牛虎兔龙蛇马羊</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">13</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)   <span class="comment"># 输出 0 1 2 3 4 5 6 7 8 9 10 11 12</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">13</span>):</span><br><span class="line">    <span class="built_in">print</span>(j)   <span class="comment"># 输出 1 2 3 4 5 6 7 8 9 10 11 12</span></span><br><span class="line"><span class="keyword">for</span> year <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2000</span>, <span class="number">2019</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%s 年的生肖是 %s&#x27;</span> % (year, chinese_zodiac[year % <span class="number">12</span>]))   <span class="comment"># 输出 2000年的生肖是龙 2001年的生肖是蛇 ...</span></span><br></pre></td></tr></table></figure><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">zodiac_name = (<span class="string">&#x27;魔羯座&#x27;</span>, <span class="string">&#x27;水瓶座&#x27;</span>, <span class="string">&#x27;双鱼座&#x27;</span>, <span class="string">&#x27;白羊座&#x27;</span>, <span class="string">&#x27;金牛座&#x27;</span>, <span class="string">&#x27;双子座&#x27;</span>, <span class="string">&#x27;巨蟹座&#x27;</span>, <span class="string">&#x27;狮子座&#x27;</span>, <span class="string">&#x27;处女座&#x27;</span>, <span class="string">&#x27;天秤座&#x27;</span>, <span class="string">&#x27;天蝎座&#x27;</span>, <span class="string">&#x27;射手座&#x27;</span>)</span><br><span class="line">zodiac_days = ((<span class="number">1</span>, <span class="number">20</span>), (<span class="number">2</span>, <span class="number">19</span>), (<span class="number">3</span>, <span class="number">21</span>), (<span class="number">4</span>, <span class="number">21</span>), (<span class="number">5</span>, <span class="number">21</span>), (<span class="number">6</span>, <span class="number">22</span>),</span><br><span class="line">               (<span class="number">7</span>, <span class="number">23</span>), (<span class="number">8</span>, <span class="number">23</span>), (<span class="number">9</span>, <span class="number">23</span>), (<span class="number">10</span>, <span class="number">23</span>), (<span class="number">11</span>, <span class="number">23</span>), (<span class="number">12</span>, <span class="number">23</span>))</span><br><span class="line">int_month = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入月份:&#x27;</span>))</span><br><span class="line">int_day = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入日期:&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> zd_num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(zodiac_days)):  <span class="comment"># len是计算列表的长度 range是取值范围</span></span><br><span class="line">    <span class="keyword">if</span> zodiac_days[zd_num] &gt;= (int_month, int_day):</span><br><span class="line">        <span class="built_in">print</span>(zodiac_name[zd_num])</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> int_day == <span class="number">12</span> <span class="keyword">and</span> int_day &gt; <span class="number">23</span>:</span><br><span class="line">        <span class="built_in">print</span>(zodiac_name[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://vip2.loli.io/2023/03/13/JpwlSPAHbmvCOf5.png" alt="image-20220319093114795"></p><h4 id="3-2-2-while语句">3.2.2 while语句</h4><p>while语句使用方法：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">while 表达式: </span><br><span class="line">代码块</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">number = <span class="number">8</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(number)</span><br><span class="line">    number = number + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> number == <span class="number">12</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> number &gt; <span class="number">10</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>运行结果为： 8  9  10  a  11</p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">zodiac_name = (<span class="string">&#x27;魔羯座&#x27;</span>, <span class="string">&#x27;水瓶座&#x27;</span>, <span class="string">&#x27;双鱼座&#x27;</span>, <span class="string">&#x27;白羊座&#x27;</span>, <span class="string">&#x27;金牛座&#x27;</span>, <span class="string">&#x27;双子座&#x27;</span>, <span class="string">&#x27;巨蟹座&#x27;</span>, <span class="string">&#x27;狮子座&#x27;</span>, <span class="string">&#x27;处女座&#x27;</span>, <span class="string">&#x27;天秤座&#x27;</span>, <span class="string">&#x27;天蝎座&#x27;</span>, <span class="string">&#x27;射手座&#x27;</span>)</span><br><span class="line">zodiac_days = ((<span class="number">1</span>, <span class="number">20</span>), (<span class="number">2</span>, <span class="number">19</span>), (<span class="number">3</span>, <span class="number">21</span>), (<span class="number">4</span>, <span class="number">21</span>), (<span class="number">5</span>, <span class="number">21</span>), (<span class="number">6</span>, <span class="number">22</span>),</span><br><span class="line">               (<span class="number">7</span>, <span class="number">23</span>), (<span class="number">8</span>, <span class="number">23</span>), (<span class="number">9</span>, <span class="number">23</span>), (<span class="number">10</span>, <span class="number">23</span>), (<span class="number">11</span>, <span class="number">23</span>), (<span class="number">12</span>, <span class="number">23</span>))</span><br><span class="line">int_month = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入月份:&#x27;</span>))</span><br><span class="line">int_day = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入日期:&#x27;</span>))</span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> zodiac_days[n] &lt; (int_month, int_day):</span><br><span class="line">    <span class="keyword">if</span> int_month == <span class="number">12</span> <span class="keyword">and</span> int_day &gt; <span class="number">23</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    n += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(zodiac_name[n])</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/F83pudkzNnesfJK.png" alt="image-20220319094458102"></p><h2 id="4-映射与字典">4 映射与字典</h2><h3 id="4-1-字典的定义和常用操作">4.1 字典的定义和常用操作</h3><p>映射的类型：字典</p><p>字典包含哈希值和指向的对象。</p><p>使用方法：<code>&#123;&quot;哈希值&quot;:&quot;对象&quot;&#125;</code>  例如：<code>&#123;'length':180, 'width':80&#125;</code></p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(dict1))</span><br><span class="line">dict2 = &#123;<span class="string">&#x27;x&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;y&#x27;</span>: <span class="number">2</span>&#125;</span><br><span class="line">dict2[<span class="string">&#x27;z&#x27;</span>] = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(dict2)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/CfM6ubHVxndUoQ7.png" alt="image-20220319101207737"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">chinese_zodiac = <span class="string">&#x27;鼠牛虎兔龙蛇马羊猴鸡狗猪&#x27;</span></span><br><span class="line">zodiac_name = (<span class="string">&#x27;魔羯座&#x27;</span>, <span class="string">&#x27;水瓶座&#x27;</span>, <span class="string">&#x27;双鱼座&#x27;</span>, <span class="string">&#x27;白羊座&#x27;</span>, <span class="string">&#x27;金牛座&#x27;</span>, <span class="string">&#x27;双子座&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;巨蟹座&#x27;</span>, <span class="string">&#x27;狮子座&#x27;</span>, <span class="string">&#x27;处女座&#x27;</span>, <span class="string">&#x27;天秤座&#x27;</span>, <span class="string">&#x27;天蝎座&#x27;</span>, <span class="string">&#x27;射手座&#x27;</span>)</span><br><span class="line">zodiac_days = ((<span class="number">1</span>, <span class="number">20</span>), (<span class="number">2</span>, <span class="number">19</span>), (<span class="number">3</span>, <span class="number">21</span>), (<span class="number">4</span>, <span class="number">21</span>), (<span class="number">5</span>, <span class="number">21</span>), (<span class="number">6</span>, <span class="number">22</span>),</span><br><span class="line">               (<span class="number">7</span>, <span class="number">23</span>), (<span class="number">8</span>, <span class="number">23</span>), (<span class="number">9</span>, <span class="number">23</span>), (<span class="number">10</span>, <span class="number">23</span>), (<span class="number">11</span>, <span class="number">23</span>), (<span class="number">12</span>, <span class="number">23</span>))</span><br><span class="line"></span><br><span class="line">cz_num = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> chinese_zodiac:</span><br><span class="line">    cz_num[i] = <span class="number">0</span></span><br><span class="line">z_num = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> zodiac_name:</span><br><span class="line">    z_num[i] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">    year = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入年份:&#x27;</span>))</span><br><span class="line">    month = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入月份:&#x27;</span>))</span><br><span class="line">    day = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入日期:&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> zodiac_days[n] &lt; (month, day):</span><br><span class="line">        <span class="keyword">if</span> month == <span class="number">12</span> <span class="keyword">and</span> day &gt; <span class="number">23</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        n += <span class="number">1</span></span><br><span class="line">    <span class="comment"># 输出生肖和星座</span></span><br><span class="line">    <span class="built_in">print</span>(zodiac_name[n])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%s 年的生肖是 %s&#x27;</span> % (year, chinese_zodiac[(year + <span class="number">8</span>) % <span class="number">12</span>]))</span><br><span class="line">    cz_num[chinese_zodiac[(year + <span class="number">8</span>) % <span class="number">12</span>]] += <span class="number">1</span></span><br><span class="line">    z_num[zodiac_name[(year + <span class="number">8</span>) % <span class="number">12</span>]] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 输出生肖和星座的统计信息</span></span><br><span class="line">    <span class="keyword">for</span> each_key <span class="keyword">in</span> cz_num.keys():   <span class="comment"># 通过 .keys 取出所有的key</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;生肖 %s 有 %d 个&#x27;</span> %</span><br><span class="line">              (each_key, cz_num[each_key]))  <span class="comment"># 字符串输出用%s，整数输出用%d</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> each_key <span class="keyword">in</span> z_num.keys():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;星座 %s 有 %d 个&#x27;</span> % (each_key, z_num[each_key]))  <span class="comment"># 字符串输出用%s，整数输出用%d</span></span><br></pre></td></tr></table></figure><h3 id="4-2-列表推导式与字典推导式">4.2 列表推导式与字典推导式</h3><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从 1 到 10 的所有偶数的平方</span></span><br><span class="line"><span class="comment"># 列表推导式</span></span><br><span class="line"><span class="comment"># 方法一：传统方法</span></span><br><span class="line">alist = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    <span class="keyword">if</span> ((i % <span class="number">2</span>) == <span class="number">0</span>):</span><br><span class="line">        alist.append(i*i)</span><br><span class="line"><span class="built_in">print</span>(alist)</span><br><span class="line"><span class="comment"># 方法二：列表推导式</span></span><br><span class="line">blist = [i*i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>) <span class="keyword">if</span>(i % <span class="number">2</span>) == <span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(blist)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典推导式</span></span><br><span class="line">zodiac_name = (<span class="string">&#x27;魔羯座&#x27;</span>, <span class="string">&#x27;水瓶座&#x27;</span>, <span class="string">&#x27;双鱼座&#x27;</span>, <span class="string">&#x27;白羊座&#x27;</span>, <span class="string">&#x27;金牛座&#x27;</span>, <span class="string">&#x27;双子座&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;巨蟹座&#x27;</span>, <span class="string">&#x27;狮子座&#x27;</span>, <span class="string">&#x27;处女座&#x27;</span>, <span class="string">&#x27;天秤座&#x27;</span>, <span class="string">&#x27;天蝎座&#x27;</span>, <span class="string">&#x27;射手座&#x27;</span>)</span><br><span class="line">z_num = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> zodiac_name:</span><br><span class="line">    z_num[i] = <span class="number">0</span></span><br><span class="line"><span class="built_in">print</span>(z_num)</span><br><span class="line"></span><br><span class="line">z_num = &#123;i: <span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> zodiac_name&#125;</span><br><span class="line"><span class="built_in">print</span>(z_num)</span><br></pre></td></tr></table></figure><h2 id="5-文件和输入输出">5 文件和输入输出</h2><p>使用Python对文件进行基本的读写操作：</p><ul><li>打开文件 <code>open()</code></li><li>输入 <code>read()</code></li><li>输入一行 <code>readline()</code></li><li>文件内移动 <code>seek()</code></li><li>输出 <code>write()</code></li><li>关闭文件 <code>close()</code></li></ul><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将小说的主要人物记录在文件中</span></span><br><span class="line">file1 = <span class="built_in">open</span>(<span class="string">&#x27;name.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)  <span class="comment"># 如果没有标注打开的模式，默认以只读的方式打开  w是写入</span></span><br><span class="line">file1.write(<span class="string">&#x27;诸葛亮&#x27;</span>)</span><br><span class="line">file1.close()</span><br><span class="line"></span><br><span class="line">file2 = <span class="built_in">open</span>(<span class="string">&#x27;name.txt&#x27;</span>)  <span class="comment"># 以只读的方式打开</span></span><br><span class="line"><span class="built_in">print</span>(file2.read())</span><br><span class="line">file2.close()</span><br><span class="line"></span><br><span class="line">file3 = <span class="built_in">open</span>(<span class="string">&#x27;name.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)  <span class="comment"># 如果直接写，会将原有的内容覆盖掉，用 a 用来增加内容</span></span><br><span class="line">file3.write(<span class="string">&#x27;刘备&#x27;</span>)</span><br><span class="line">file3.close()</span><br><span class="line"></span><br><span class="line">file4 = <span class="built_in">open</span>(<span class="string">&#x27;name.txt&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(file4.readline())</span><br><span class="line"></span><br><span class="line">file5 = <span class="built_in">open</span>(<span class="string">&#x27;name.txt&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file5.readlines():</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;**********&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行输出：</p><p><img src="https://vip2.loli.io/2023/03/13/TGAqFYhPSNZQW7K.png" alt="image-20220319111819333"></p><p>同时会产生一个<code>name.txt</code>文件，文件内容为：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">诸葛亮刘备</span><br></pre></td></tr></table></figure><p>示例2：读取多行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">file4 = <span class="built_in">open</span>(<span class="string">&#x27;name.txt&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(file4.readline())  <span class="comment">#读取第一行</span></span><br><span class="line">file4.close()</span><br><span class="line"></span><br><span class="line">file5 = <span class="built_in">open</span>(<span class="string">&#x27;name.txt&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file5.readlines():</span><br><span class="line">    <span class="built_in">print</span>(line)  <span class="comment"># line已经代表每一行的值</span></span><br><span class="line">file5.close()</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/A1SpmUH7gFKVMIY.png" alt="image-20220319113014580"></p><p>示例3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">file6 = <span class="built_in">open</span>(<span class="string">&#x27;name.txt&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前文件指针的位置 %s &#x27;</span> % file6.tell())  <span class="comment"># 告诉文件光标在什么位置</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前读取了一个字符 %s &#x27;</span> % file6.read(<span class="number">4</span>))  <span class="comment"># 告诉文件光标在什么位置</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前指针的位置 %s &#x27;</span> % file6.tell())  <span class="comment"># 告诉文件光标在什么位置</span></span><br><span class="line"><span class="comment"># seek()中如果有两个参数，第一个参数代表偏移的位置，第二个参数 0 表示从文件开头偏移  1 表示从当前位置偏移  2 表示从文件结尾</span></span><br><span class="line"><span class="comment"># file6.seek(0)  #表示光标回到文件开头</span></span><br><span class="line"><span class="built_in">print</span>(file6.seek(<span class="number">6</span>, <span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前文件指针的位置 %s &#x27;</span> % file6.tell())  <span class="comment"># 告诉文件光标在什么位置</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我们进行了seek操作&#x27;</span>)  <span class="comment"># seek中可以填写两个参数，第一个为偏移位置，当前的位置  file6.seek(0)为回到指针0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前文件指针的位置 %s &#x27;</span> % file6.tell())  <span class="comment"># 告诉文件光标在什么位置</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前读取了一个字符 %s &#x27;</span> % file6.read(<span class="number">1</span>))  <span class="comment"># 告诉文件光标在什么位置</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前指针的位置 %s &#x27;</span> % file6.tell())  <span class="comment"># 告诉文件光标在什么位置</span></span><br><span class="line">file6.close()</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/UbBvMzPSwRAt31G.png" alt="image-20220319115037577"></p><h2 id="6-错误和异常">6 错误和异常</h2><p>==错误 ≠ 异常==</p><p>异常是在出现错误时采用正常控制流以外的动作</p><p>异常处理的一般流程是：检测到错误，引发异常；对异常进行捕获的操作</p><p>使用方法：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">&lt;监控异常&gt;</span><br><span class="line">except Exception[, reason]:</span><br><span class="line">&lt;异常处理代码&gt;</span><br><span class="line">finally:</span><br><span class="line">&lt;无论异常是否发生都执行&gt;</span><br></pre></td></tr></table></figure><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    year = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;input year:&#x27;</span>))</span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;年份要输入数字：&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/KiBgwoGzjXxv4EV.png" alt="image-20220320095206545"></p><p>可以通过组成元组来进行多个错误捕获：<code>except (ValueError, AttributeError, KeyError, ZeroDivisionError)</code></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span> / <span class="number">0</span>)</span><br><span class="line"><span class="keyword">except</span> (ValueError, AttributeError, KeyError, ZeroDivisionError) <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这里对异常捕获 %s&#x27;</span> % e)</span><br></pre></td></tr></table></figure><p>这里将错误提示信息重新命名为变量，并进行打印，常用于调试时的错误信息提示。</p><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/aZlx2cSsjpFbhq9.png" alt="image-20220320101402211"></p><p>示例3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span> / <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> a:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%s&#x27;</span> % a)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/PEx1uQiCq7yLIDl.png" alt="image-20220320101326850"></p><p>示例4：可以通过<code>raise</code>来自定义错误类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">raise</span> NameError(<span class="string">&#x27;helloError&#x27;</span>)  <span class="comment"># 可以自己定义错误信息</span></span><br><span class="line"><span class="keyword">except</span> NameError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;my custom error&#x27;</span>)</span><br></pre></td></tr></table></figure><p>示例5：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    aaa = <span class="built_in">open</span>(<span class="string">&#x27;name1.txt&#x27;</span>)  <span class="comment"># 可以自己定义错误信息</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    aaa.close()</span><br></pre></td></tr></table></figure><h2 id="7-函数">7 函数</h2><h3 id="7-1-函数的定义和常用操作">7.1 函数的定义和常用操作</h3><p><strong>函数</strong>：函数是对程序逻辑进行结构化的一种编程方法。</p><p>函数的定义：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def 函数名称():</span><br><span class="line">代码</span><br><span class="line">return 需要返回的内容</span><br></pre></td></tr></table></figure><p>函数的调用：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名称()</span><br></pre></td></tr></table></figure><p>示例1：</p><p>原始未利用自定义函数的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取人物</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;name.txt&#x27;</span>)</span><br><span class="line">data = f.read()</span><br><span class="line"><span class="built_in">print</span>(data.split(<span class="string">&#x27;|&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取兵器的名称</span></span><br><span class="line">f2 = <span class="built_in">open</span>(<span class="string">&#x27;weapon.txt&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="comment"># data2 = f2.read()</span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f2.readlines():</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(line.strip(<span class="string">&#x27;\n&#x27;</span>))  <span class="comment"># 通过strip(&#x27;\n&#x27;)将文件末尾的换行符进行删除</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">f3 = <span class="built_in">open</span>(<span class="string">&#x27;sanguo.txt&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(f3.read().replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>))  <span class="comment"># 读取内容，并将文本中的换行替换成空格</span></span><br></pre></td></tr></table></figure><p>可以利用函数进行实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">open</span>(filename).read())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;test func&#x27;</span>)</span><br><span class="line">func(<span class="string">&#x27;name.txt&#x27;</span>)</span><br></pre></td></tr></table></figure><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_item</span>(<span class="params">hero</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;sanguo.txt&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read().replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        name_num = re.findall(hero, data)  <span class="comment"># 这里的findall是出现一次输出一次</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;主角 %s 出现了 %s 次&#x27;</span> % (hero, <span class="built_in">len</span>(name_num)))</span><br><span class="line">    <span class="keyword">return</span> name_num</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取人物的信息</span></span><br><span class="line">name_dict = &#123;&#125;</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;name.txt&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        names = line.split(<span class="string">&#x27;|&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> names:</span><br><span class="line">            <span class="comment"># print(n)</span></span><br><span class="line">            name_num = find_item(n)</span><br><span class="line">            name_dict[n] = name_num</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/EcJkL9g4iaDIrmh.png" alt="image-20220320112533528"></p><h3 id="7-2-函数的可变长操作">7.2 函数的可变长操作</h3><p>在函数中，需要按照顺序进行参数传入，如果想跳跃使用，则通过关键字参数来进行调用，示例如图：</p><p><img src="https://vip2.loli.io/2023/03/13/SxtODfP8dT61Jqu.png" alt="image-20220320113619401"></p><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">a, b, c</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;a = %s&#x27;</span> % a)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;b = %s&#x27;</span> % b)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;c = %s&#x27;</span> % c)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func(<span class="number">1</span>, c=<span class="number">3</span>, b=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/sJowUX1KuktFDrY.png" alt="image-20220320114913143"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  取参数的个数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">howlong</span>(<span class="params">first, *other</span>):  <span class="comment"># 通过加*的方式变为可变长参数，未加*的参数必须要进行填写</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span> + <span class="built_in">len</span>(other))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">howlong(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>)</span><br><span class="line">howlong(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/JL5zAU9OHjud3XS.png" alt="image-20220320115042393"></p><h3 id="7-3-函数的变量作用域">7.3 函数的变量作用域</h3><p>当函数外部的变量赋值后，在函数内部使用相同名称的变量时，会默认使用函数外部的变量；如果在函数内部对变量进行重新赋值，则会新建一个函数内部的变量，该变量的名称和函数外部定义的变量名称相同。</p><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var1 = <span class="number">123</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="built_in">print</span>(var1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func()</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/yMRQ1F3lpJ4us7a.png" alt="image-20220320125032063"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var1 = <span class="number">123</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    var1 = <span class="number">456</span></span><br><span class="line">    <span class="built_in">print</span>(var1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line"><span class="built_in">print</span>(var1)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/xy2anhWSs1gp3b8.png" alt="image-20220320125155667"></p><p>示例3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var1 = <span class="number">123</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="comment"># global var2 = 456  # 该行语法错误</span></span><br><span class="line">    <span class="keyword">global</span> var2</span><br><span class="line">    var2 = <span class="number">456</span></span><br><span class="line">    <span class="built_in">print</span>(var2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line"><span class="built_in">print</span>(var1)</span><br><span class="line"><span class="built_in">print</span>(var2)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/uNMqsIKQO1ZD478.png" alt="image-20220320125545198"></p><h3 id="7-4-函数的迭代器和生成器">7.4 函数的迭代器和生成器</h3><h4 id="7-4-1-迭代器">7.4.1 迭代器</h4><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">list1 = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">it = <span class="built_in">iter</span>(list1)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(it))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(it))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(it))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(it))  <span class="comment">#这一行代码错误，已经迭代结束了</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/bsBzMo7PKr6dNJm.png" alt="image-20220320160330240"></p><h4 id="7-4-2-生成器">7.4.2 生成器</h4><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;starting...&quot;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        res = <span class="keyword">yield</span> <span class="number">4</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;res:&quot;</span>, res)</span><br><span class="line"></span><br><span class="line">g = foo()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*&quot;</span> * <span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(g))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*&quot;</span> * <span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(g))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/sgVecURa2FLXdWZ.png" alt="image-20220320164159222"></p><p>分析：<br>1.程序开始执行以后，因为foo函数中有yield关键字，所以foo函数并不会真的执行，而是先得到一个生成器g(相当于一个对象)<br>2.直到调用next方法，foo函数正式开始执行，先执行foo函数中的print方法，然后进入while循环<br>3.程序遇到yield关键字，然后把yield想想成return，return了一个4之后，程序停止，并没有执行赋值给res操作，此时next(g)语句执行完成，所以输出的前两行（第一个是while上面的print的结果，第二个是return出的结果）是执行print(next(g))的结果，<br>4.程序执行print(&quot;*&quot;<em>20)，输出20个</em><br>5.又开始执行下面的print(next(g))，这个时候和上面那个差不多，不过不同的是，这个时候是从刚才那个next程序停止的地方开始执行的，也就是要执行res的赋值操作，这时候要注意，这个时候赋值操作的右边是没有值的（因为刚才那个是return出去了，并没有给赋值操作的左边传参数），所以这个时候res赋值是None，所以接着下面的输出就是<code>res:None</code>。<br>6.程序会继续在while里执行，又一次碰到yield,这个时候同样return 出4，然后程序停止，print函数输出的4就是这次return出的4。<br>到这里你可能就明白yield和return的关系和区别了，带yield的函数是一个生成器，而不是一个函数了，这个生成器有一个函数就是next函数，next就相当于“下一步”生成哪个数，这一次的next开始的地方是接着上一次的next停止的地方执行的，所以调用next的时候，生成器并不会从foo函数的开始执行，只是接着上一步停止的地方开始，然后遇到yield后，return出要生成的数，此步就结束。</p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">frange</span>(<span class="params">star, stop, step</span>):</span><br><span class="line">    x = star</span><br><span class="line">    <span class="keyword">while</span> x &lt; stop:</span><br><span class="line">        <span class="keyword">yield</span> x</span><br><span class="line">        x += step</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> frange(<span class="number">10</span>, <span class="number">20</span>, <span class="number">0.5</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/uIS1oW7mpV3xckK.png" alt="image-20220320191101081"></p><h3 id="7-5-lambda表达式">7.5 lambda表达式</h3><p><strong>示例1</strong>：将lambda函数赋值给一个变量，通过这个变量间接调用该lambda函数。</p><p>通过传统的方法定义函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sum</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="keyword">return</span> x+y</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>(<span class="number">5</span>,<span class="number">9</span>))</span><br></pre></td></tr></table></figure><p>通过lambda的方法定义函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add = <span class="keyword">lambda</span> x, y: x + y</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">5</span>, <span class="number">9</span>))</span><br></pre></td></tr></table></figure><p><strong>示例2</strong>：将lambda函数作为参数传递给其他函数。部分Python内置函数接收函数作为参数。</p><p>通过传统方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">odd</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> x%<span class="number">2</span></span><br><span class="line">temp = <span class="built_in">range</span>(<span class="number">10</span>)</span><br><span class="line">show = <span class="built_in">filter</span>(odd,temp)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(show))   <span class="comment">#[1, 3, 5, 7, 9]</span></span><br></pre></td></tr></table></figure><p>通过lambda函数实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x%<span class="number">2</span>,<span class="built_in">range</span>(<span class="number">10</span>))))    <span class="comment">#[1, 3, 5, 7, 9]</span></span><br></pre></td></tr></table></figure><p>此时lambda函数用于指定过滤列表元素的条件。</p><p><strong>示例3</strong>：将lambda函数作为其他函数的返回值，返回给调用者。</p><blockquote><p>函数的返回值也可以是函数。例如<code>return lambda x, y: x+y</code>返回一个加法函数。这时，lambda函数实际上是定义在某个函数内部的函数，称之为嵌套函数，或者内部函数。对应的，将包含嵌套函数的函数称之为外部函数。内部函数能够访问外部函数的局部变量，这个特性是闭包(Closure)编程的基础。</p></blockquote><p><strong>示例4</strong>：将lambda函数赋值给其他函数，从而将其他函数用该lambda函数替换。</p><blockquote><p>例如：为了把标准库time中的函数sleep的功能屏蔽(Mock)，我们可以在程序初始化时调用：time.sleep=lambda x:None。这样，在后续代码中调用time库的sleep函数将不会执行原有的功能。例如，执行<code>time.sleep(3)</code>时，程序不会休眠3秒钟，而是什么都不做</p></blockquote><p><strong>示例5</strong>：将<code>if...else</code>语句缩减为单一的条件表达式，</p><p><strong>语法</strong>：<code>expression1 if A else expression2</code></p><p>如果<code>A</code>为<code>True</code>，条件表达式的结果为<code>expression1</code>，否则为<code>expression2</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">s</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">if</span> x==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;yes&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;no&quot;</span></span><br><span class="line"><span class="built_in">print</span>(s(<span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span>(s(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><p>使用lambda函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="keyword">lambda</span> x:<span class="string">&quot;yes&quot;</span> <span class="keyword">if</span> x==<span class="number">1</span> <span class="keyword">else</span> <span class="string">&quot;no&quot;</span></span><br><span class="line"><span class="built_in">print</span>(s(<span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span>(s(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h3 id="7-6-Python内建函数">7.6 Python内建函数</h3><h4 id="7-6-1filter函数">7.6.1filter函数</h4><p>filter函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x &gt; <span class="number">2</span>, a)))  <span class="comment"># 需要将filter强制转换成列表类型，否则系统不会执行</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/aw6KzmJ5xc7UTbo.png" alt="image-20220320213250479"></p><h4 id="7-6-2-map函数">7.6.2 map函数</h4><p>map函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + <span class="number">1</span>, a)))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/DQknoZyUq6fAM59.png" alt="image-20220320213331709"></p><h4 id="7-6-3-reduce函数">7.6.3 reduce函数</h4><p>reduce函数：</p><p>reduce函数不能直接使用，在终端中通过<code>from functools import reduce</code>命令导入相应的函数包，然后才能使用reduce函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line">reduce(<span class="keyword">lambda</span> x, y: x + y, [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], <span class="number">1</span>)  <span class="comment"># 将数值1通过lambda函数分别对列表中的元素依次进行运算</span></span><br><span class="line"><span class="comment"># ((1+2)+3)+4</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/TuAf1rYeO9PKmpc.png" alt="image-20220320214536358"></p><h4 id="7-6-4-zip函数">7.6.4 zip函数</h4><p>zip函数：zip() 函数用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的列表。</p><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zip((1, 2, 3), (4, 5, 6))</span></span><br><span class="line"><span class="built_in">print</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">zip</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/bU8tmivLxfDK4dE.png" alt="image-20220321100237335"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dicta = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;aaa&#x27;</span>, <span class="string">&#x27;b&#x27;</span>: <span class="string">&#x27;bbb&#x27;</span>&#125;</span><br><span class="line">dictb = <span class="built_in">zip</span>(dicta.values(), dicta.keys())</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dict</span>(dictb))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/gWnPuaFBUkKfyxR.png" alt="image-20220321100838416"></p><h3 id="7-7-闭包">7.7 闭包</h3><p>闭包概念：在一个内部函数中，对外部作用域的变量进行引用，(并且一般外部函数的返回值为内部函数)，那么内部函数就被认为是闭包。</p><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sum</span>(<span class="params">a</span>):  <span class="comment"># 内部函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">b</span>):  <span class="comment"># 内部函数</span></span><br><span class="line">        <span class="built_in">print</span>(a)</span><br><span class="line">        <span class="built_in">print</span>(b)</span><br><span class="line">        <span class="keyword">return</span> a + b  <span class="comment"># 外部函数的变量 a 被内部函数引用称为闭包</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> add</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># add 函数名称或函数的引用</span></span><br><span class="line"><span class="comment"># add() 函数的调用</span></span><br><span class="line"><span class="comment"># num1 = func()</span></span><br><span class="line"></span><br><span class="line">num2 = <span class="built_in">sum</span>(<span class="number">2</span>)  <span class="comment"># 该行代码返回的是一个函数</span></span><br><span class="line"><span class="built_in">print</span>(num2)</span><br><span class="line"><span class="built_in">print</span>(num2(<span class="number">5</span>))</span><br><span class="line"><span class="comment"># print(type(num1))</span></span><br><span class="line"><span class="comment"># print(type(num2))</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/vHzIAF4RlxZKkG8.png" alt="image-20220321110446033"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">counter</span>(<span class="params">a</span>):</span><br><span class="line">    cnt = [a]  <span class="comment"># 列表</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_one</span>():</span><br><span class="line">        cnt[<span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> cnt[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> add_one</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">num5 = counter(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(num5())</span><br><span class="line"><span class="built_in">print</span>(num5())</span><br><span class="line"><span class="built_in">print</span>(num5())</span><br><span class="line"><span class="built_in">print</span>(num5())</span><br><span class="line"></span><br><span class="line">num9 = counter(<span class="number">9</span>)</span><br><span class="line"><span class="built_in">print</span>(num9())</span><br><span class="line"><span class="built_in">print</span>(num9())</span><br><span class="line"><span class="built_in">print</span>(num9())</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/RY1hVSygwL8QDsB.png" alt="image-20220321113526662"></p><p>示例3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算公式 a * x + b = y</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">a_line</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">arg_y</span>(<span class="params">x</span>):</span><br><span class="line">        <span class="keyword">return</span> a * x + b</span><br><span class="line">    <span class="keyword">return</span> arg_y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">line1 = a_line(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">line2 = a_line(<span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(line1(<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(line2(<span class="number">20</span>))</span><br></pre></td></tr></table></figure><p>如果通过lambda来实现闭包，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算公式 a * x + b = y</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">a_line</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">lambda</span> x: a * x + b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">line1 = a_line(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">line2 = a_line(<span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(line1(<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(line2(<span class="number">20</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/9W3tIknV1m5X2UQ.png" alt="image-20220321123815152"></p><h3 id="7-8-装饰器">7.8 装饰器</h3><p>装饰器的概念：装饰器(Decorators)是 Python 的一个重要部分。简单地说：他们是修改其他函数的功能的函数。他们有助于让我们的代码更简短，也更Pythonic（Python范儿）。</p><p><strong>闭包和装饰器的不同点</strong>：闭包传入的是变量，内部引用的是变量；装饰器传入的是函数，内部引用的也是函数。</p><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">timer</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>():</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        func()</span><br><span class="line">        stop_time = time.time()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;运行时间是 %s 秒&#x27;</span> % (stop_time - start_time))</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@timer  </span><span class="comment"># 装饰函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">i_can_sleep</span>():  <span class="comment"># 被装饰函数</span></span><br><span class="line">    time.sleep(<span class="number">3</span>)  <span class="comment"># 将暂停运行 3 秒这个函数传递给 timer ，对应timer中的函数为 func</span></span><br><span class="line"></span><br><span class="line">i_can_sleep()  <span class="comment"># 该行命令等同于 timer(i_can_sleep()) 或 a = timer(i_can_sleep())</span></span><br></pre></td></tr></table></figure><p>运行过程：首先运行到<code>i_can_sleep()</code>时，会自动寻找<code>i_can_sleep()</code>这个函数，发现这个函数被装饰，会跳转到<code>timer</code>这个装饰函数，将被装饰函数<code>i_can_sleep()</code>作为<code>func</code>传入，并运行<code>wrapper()</code>函数。</p><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/7AL23UlEsa5I1iP.png" alt="image-20220321130135760"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">new_tips</span>(<span class="params">argv</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tips</span>(<span class="params">func</span>):</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">nei</span>(<span class="params">a, b</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;start %s  %s&#x27;</span> % (argv, func.__name__)) <span class="comment"># 通过func.__name__读取函数名</span></span><br><span class="line">            func(a, b)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;stop&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> nei</span><br><span class="line">    <span class="keyword">return</span> tips</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@new_tips(<span class="params"><span class="string">&#x27;add_module&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="built_in">print</span>(a + b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@new_tips(<span class="params"><span class="string">&#x27;sub_module&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sub</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="built_in">print</span>(a - b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add(<span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">sub(<span class="number">9</span>, <span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">4</span>, <span class="number">5</span>))</span><br><span class="line"><span class="built_in">print</span>(sub(<span class="number">9</span>, <span class="number">4</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/dhiT89oJOQfKe6x.png" alt="image-20220321131658615"></p><p>可以通过<code>@装饰器</code>来进行重复进行调用。</p><h3 id="7-9-上下文管理器">7.9 上下文管理器</h3><p>通过with来进行上下文管理：</p><p>传统方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fd = <span class="built_in">open</span>(<span class="string">&#x27;name.txt&#x27;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> fd:</span><br><span class="line">        <span class="built_in">print</span>(line)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    fd.close()</span><br></pre></td></tr></table></figure><p>通过with来进行上下文管理：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;name.txt&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        <span class="built_in">print</span>(line)  <span class="comment"># 当运行出现异常的时候，with会自动调用finally来关闭文件</span></span><br></pre></td></tr></table></figure><h2 id="8-模块">8 模块</h2><p>模块是在代码量变得相当大之后，为了将需要重复使用的有组织的代码段放在一起，这部分代码可以附加到现有程序中，附加的过程叫做导入（import）。</p><p>导入模块的一般写法：</p><ul><li><code>import 模块名称</code></li><li><code>from 模块名称 import 方法名</code></li></ul><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os  <span class="comment"># 导入 os 模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time  <span class="comment"># 导入 time 模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> m  <span class="comment"># 可以将 matplotlib 进行重命名为 m</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep  <span class="comment"># 导入 time 模块中的 sleep 函数</span></span><br><span class="line">sleep()  <span class="comment"># 使用sleep函数，不推荐使用，可能出现自己定义的函数名称和sleep重名</span></span><br></pre></td></tr></table></figure><p>新建一个<code>mymod.py</code>文件，并写入如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">print_me</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;me&#x27;</span>)</span><br></pre></td></tr></table></figure><p>新建一个<code>mod_test.py</code>文件，并写入如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mymod</span><br><span class="line">mymod.print_me()</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/oJAeOkS4XFHVDR2.png" alt="image-20220321154631823"></p><h2 id="9-面向对象编程">9 面向对象编程</h2><h3 id="9-1-类与实例">9.1 类与实例</h3><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Player</span>():  <span class="comment"># 定义一个类  类的名称第一个字母大写</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, hp, occu</span>):</span><br><span class="line">        self.__name = name  <span class="comment"># self指的是实例化本身，即user1和user2，通过增加下划线，对类进行封装，该类的属性可以不被访问到</span></span><br><span class="line">        self.hp = hp  <span class="comment"># 在面向对象中，变量被成为属性</span></span><br><span class="line">        self.occu = occu</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">print_role</span>(<span class="params">self</span>):  <span class="comment"># 定义一个方法/功能，在面向对象中，函数被称为方法</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s: %s %s &#x27;</span> % (self.__name, self.hp, self.occu))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">updateName</span>(<span class="params">self, newname</span>):</span><br><span class="line">        self.__name = newname</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">user1 = Player(<span class="string">&#x27;tom&#x27;</span>, <span class="number">100</span>, <span class="string">&#x27;war&#x27;</span>)  <span class="comment"># 类的实例化</span></span><br><span class="line">user2 = Player(<span class="string">&#x27;jerry&#x27;</span>, <span class="number">100</span>, <span class="string">&#x27;master&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line">user1.print_role()</span><br><span class="line">user2.print_role()</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/dMByYqWTUCG3Om6.png" alt="image-20220321163604416"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Player</span>():  <span class="comment"># 定义一个类  类的名称第一个字母大写</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, hp, occu</span>):  <span class="comment"># 类中第一个参数一定是self</span></span><br><span class="line">        self.__name = name  <span class="comment"># self指的是user1和user2，通过增加下划线，对类进行封装，该类的属性可以不被访问到</span></span><br><span class="line">        self.hp = hp  <span class="comment"># 在面向对象中，变量被成为属性</span></span><br><span class="line">        self.occu = occu</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">print_role</span>(<span class="params">self</span>):  <span class="comment"># 定义一个方法/功能，在面向对象中，函数被称为方法</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s: %s %s &#x27;</span> % (self.__name, self.hp, self.occu))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">updateName</span>(<span class="params">self, newname</span>):  <span class="comment"># 类中第一个参数一定是self</span></span><br><span class="line">        self.__name = newname</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">New</span>():</span><br><span class="line">    <span class="comment"># 下面通过单引号&#x27;xxx&#x27;或者&quot;&quot;&quot;xxx&quot;&quot;&quot;来对这个类进行说明，并不会报错</span></span><br><span class="line">    <span class="string">&#x27;定义怪物类&#x27;</span></span><br><span class="line">    <span class="keyword">pass</span>  <span class="comment">#如果不确定这个类中写什么，可以暂时写一个pass，编译器不会报错</span></span><br><span class="line"></span><br><span class="line">user1 = Player(<span class="string">&#x27;tom&#x27;</span>, <span class="number">100</span>, <span class="string">&#x27;war&#x27;</span>)  <span class="comment"># 类的实例化</span></span><br><span class="line">user2 = Player(<span class="string">&#x27;jerry&#x27;</span>, <span class="number">100</span>, <span class="string">&#x27;master&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line">user1.print_role()</span><br><span class="line">user2.print_role()</span><br><span class="line"></span><br><span class="line">user1.updateName(<span class="string">&#x27;wilson&#x27;</span>)</span><br><span class="line">user1.print_role()</span><br><span class="line">user1.__name = (<span class="string">&#x27;aaa&#x27;</span>)    <span class="comment">#无法更改类中属性的值，因为已经被封装，只有通过类本身的函数(方法)来更改</span></span><br><span class="line">user1.print_role()</span><br></pre></td></tr></table></figure><h3 id="9-2-类的继承">9.2 类的继承</h3><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Monster</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, hp=<span class="number">90</span></span>):</span><br><span class="line">        self.hp = hp  <span class="comment"># 变量被称为属性</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;移动到某个位置&#x27;</span>)  <span class="comment"># 函数被称为方法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">whoami</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我是怪物父类&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animals</span>(<span class="title class_ inherited__">Monster</span>):  <span class="comment"># 在括号中写继承父类的名字  #Animals作为Monster的子类，使用Animals的时候就能够调用Monster的hp和run</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;普通的怪物&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, hp=<span class="number">10</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(hp)  <span class="comment"># 子类hp属性和父类hp属性属于重复定义，父类中初始化了某些属性，子类不用重复初始化该子类</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Boss</span>(<span class="title class_ inherited__">Monster</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Boss类怪物&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, hp=<span class="number">1000</span></span>):</span><br><span class="line">        self.hp = hp</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">whoami</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我是怪物我怕谁haha&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a1 = Monster(<span class="number">100</span>)  <span class="comment"># 会直接赋值替换原来__init__初始化的值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a1:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a1.hp)</span><br><span class="line"><span class="built_in">print</span>(a1.run())</span><br><span class="line">a2 = Animals(<span class="number">1</span>)  <span class="comment"># a2</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a2:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a2.hp)</span><br><span class="line"><span class="built_in">print</span>(a2.run())  <span class="comment"># 此时可以看出a2可以继承父类方法</span></span><br><span class="line"><span class="built_in">print</span>(a2.whoami())  <span class="comment"># 此时可以看出a2可以继承父类方法</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a3:&#x27;</span>)</span><br><span class="line">a3 = Boss(<span class="number">800</span>)</span><br><span class="line"><span class="built_in">print</span>(a3.hp)</span><br><span class="line">a3.whoami()  <span class="comment"># 子类的继承中如果有重名的方法，会替换父类中的方法</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a1的类型 %s &#x27;</span> % <span class="built_in">type</span>(a1))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a2的类型 %s &#x27;</span> % <span class="built_in">type</span>(a2))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a3的类型 %s &#x27;</span> % <span class="built_in">type</span>(a3))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(a2, Monster))  <span class="comment"># isinstance可以用来判断a2是否为Monster的子类</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/hefZOSDP7mMY2yk.png" alt="image-20220322093031444"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Testwith</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__enter__</span>(<span class="params">self</span>):  <span class="comment"># 类初始化的时候会调用这一行</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;run&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__exit__</span>(<span class="params">self, exc_type, exc_val, exc_tb</span>):  <span class="comment"># 类结束的时候会调用这一行</span></span><br><span class="line">        <span class="keyword">if</span> exc_tb <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># 没有异常，则exc_tb值为空</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;正常结束&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Has error %s &#x27;</span> % exc_tb)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> Testwith():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Test is running&#x27;</span>)</span><br><span class="line">    <span class="keyword">raise</span> NameError(<span class="string">&#x27;testNameError&#x27;</span>)  <span class="comment"># 用raise抛出异常</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/A1Hrl7uUvc4Tqkf.png" alt="image-20220322094948501"></p><h2 id="10-多线程编程">10 多线程编程</h2><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> current_thread</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">myThread</span>(<span class="params">arg1, arg2</span>):</span><br><span class="line">    <span class="built_in">print</span>(current_thread().name, <span class="string">&#x27;start&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%s %s&#x27;</span> % (arg1, arg2))</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(current_thread().name, <span class="string">&#x27;stop&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;运行开始&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">    t1 = threading.Thread(target=myThread, args=(i, i + <span class="number">1</span>))</span><br><span class="line">    t1.start()  <span class="comment"># 加上start方法之后多线程才能运行起来</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;运行结束&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(current_thread().name, <span class="string">&#x27;end&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行分析：主线程运行结束才会运行</p><p>运行结果1：</p><p><img src="https://vip2.loli.io/2023/03/13/J8Lvjt5PICgoU6e.png" alt="image-20220322110411275"></p><p>运行结果2：</p><p><img src="https://vip2.loli.io/2023/03/13/msL5iAI6DXPlUB4.png" alt="image-20220322110202697"></p><p>如果运行的多线程中某些线程先结束，希望该线程等待其他线程全部结束后再继续运行，则通过<code>join</code>的方法来实现。</p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> current_thread</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mythread</span>(threading.Thread):  <span class="comment"># 使用Thread方法的名称，不是引用</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(current_thread().name, <span class="string">&#x27;start&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;run&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(current_thread().name, <span class="string">&#x27;stop&#x27;</span>)</span><br><span class="line"></span><br><span class="line">t1 = Mythread()</span><br><span class="line">t1.start()</span><br><span class="line">t1.join()  <span class="comment">#为了使Thread先结束，主线程后结束，采用join的方法</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(current_thread().name, <span class="string">&#x27;end&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/ZmbI5S2V4Jw63jL.png" alt="image-20220322111716144"></p><p>经典的生产者和消费者的问题：</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread, current_thread</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue</span><br><span class="line"></span><br><span class="line">queue = Queue(<span class="number">5</span>)  <span class="comment"># 定义队列的长度为 5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ProducerThread</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        name = current_thread().name</span><br><span class="line">        nums = <span class="built_in">range</span>(<span class="number">100</span>)</span><br><span class="line">        <span class="keyword">global</span> queue</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            num = random.choice(nums)</span><br><span class="line">            queue.put(num)  <span class="comment"># 向队列中加入数据</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;生产者 %s 生产了数据 %s&#x27;</span> % (name, num))</span><br><span class="line">            t = random.randint(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">            time.sleep(t)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;生产者 %s 睡眠了 %s 秒&#x27;</span> % (name, t))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ConsumerThread</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        name = current_thread().name</span><br><span class="line">        <span class="keyword">global</span> queue</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            num = queue.get()  <span class="comment"># 根据加入的数据的顺序进行读取</span></span><br><span class="line">            queue.task_done()  <span class="comment"># 没有用join等待，因为task_done这个方法中已经封装好了线程等待和线程同步的代码，可以直接使用</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;消费者 %s 消耗了数据 %s&#x27;</span> % (name, num))</span><br><span class="line">            t = random.randint(<span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line">            time.sleep(t)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;消费者 %s 睡眠了 %s 秒&#x27;</span> % (name, t))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p1 = ProducerThread(name=<span class="string">&#x27;p1&#x27;</span>)</span><br><span class="line">p1.start()</span><br><span class="line">p2 = ProducerThread(name=<span class="string">&#x27;p2&#x27;</span>)</span><br><span class="line">p2.start()</span><br><span class="line">p3 = ProducerThread(name=<span class="string">&#x27;p3&#x27;</span>)</span><br><span class="line">p3.start()</span><br><span class="line"></span><br><span class="line">c1 = ConsumerThread(name=<span class="string">&#x27;c1&#x27;</span>)</span><br><span class="line">c1.start()</span><br><span class="line">c2 = ConsumerThread(name=<span class="string">&#x27;c2&#x27;</span>)</span><br><span class="line">c2.start()</span><br><span class="line">c3 = ConsumerThread(name=<span class="string">&#x27;c3&#x27;</span>)</span><br><span class="line">c3.start()</span><br><span class="line">c4 = ConsumerThread(name=<span class="string">&#x27;c4&#x27;</span>)</span><br><span class="line">c4.start()</span><br></pre></td></tr></table></figure><p>运行分析：如果生产者多余消费者，当队列中存放的数据满了之后，则生产者将不再生产数据，只要当消耗着消耗部分后，队列中有多余位置，才会产生数据。</p><h2 id="11-标准库">11 标准库</h2><p>Python官方文档对应地址：<a href="https://docs.python.org/3/library/index.html">https://docs.python.org/3/library/index.html</a></p><p>Python常用的标准库：</p><ul><li>Built-in Types</li><li>Text Processing Services</li><li>Data Types</li><li>Generic Operating System Services</li><li>Internet Data Handling</li><li>Development Tools</li><li>Debugging and Profiling</li></ul><h3 id="11-1-正则表达式库-re">11.1 正则表达式库 - re</h3><h4 id="11-1-1-正则表达式元字符">11.1.1 正则表达式元字符</h4><p>示例1：匹配相同字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">p = re.<span class="built_in">compile</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(p.match(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(p.match(<span class="string">&#x27;b&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/TgMP7rQlhdtn6eX.png" alt="image-20220322215847856"></p><p>示例2：<code>.</code>可以匹配所有任意的单个字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">d = re.<span class="built_in">compile</span>(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(d.match(<span class="string">&#x27;c&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(d.match(<span class="string">&#x27;t&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/VE7OlACzFcinWm2.png" alt="image-20220322212152620"></p><p>示例3：<code>^</code>以什么作为开头，从开头进行搜索</p><p>示例4：<code>$</code>以什么作为结尾，从后面往前面进行匹配，比如以<code>d = re.compile('jpg$')</code>表示以<code>jpg</code>作为结尾，来进行检索。</p><p>示例5：<code>*</code>表示匹配前面的字符出现0次到多次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">b = re.<span class="built_in">compile</span>(<span class="string">&#x27;ca*t&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;cat&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;caat&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/eHbsIaZUh9n41pq.png" alt="image-20220322220015635"></p><p>示例6：<code>?</code>代表字符出现0次或1次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">b = re.<span class="built_in">compile</span>(<span class="string">&#x27;c?t&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;ct&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;cat&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;caaat&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/vQsDIeRBwPWYi3N.png" alt="image-20220322221537819"></p><p>示例7：<code>&#123;内容&#125;</code>表示前面字符出现指定次数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">b = re.<span class="built_in">compile</span>(<span class="string">&#x27;ca&#123;4,6&#125;t&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;ct&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;cat&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;caaaat&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;caaaaat&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;caaaaaaat&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/z2OlsYpXoKaxhER.png" alt="image-20220323100133927"></p><p>示例8：<code>[内容]</code>表示匹配方括号中的任意一个字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">b = re.<span class="built_in">compile</span>(<span class="string">&#x27;ca[abcd]t&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;ct&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;cat&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;caabcdt&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;cact&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;cabt&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/7DT3MHPgYvCQZBF.png" alt="image-20220323100227459"></p><p>示例9：<code>\d</code>用来匹配多个数字字符<code>[0-9]</code>（多个<code>[0-9]</code>也可以用<code>[0-9]+</code>表示）</p><p>示例10：<code>\D</code>用来匹配非数字字符</p><p>示例11：<code>\s</code>表示匹配的是字符串</p><p>示例12：<code>.*?</code>表示不匹配贪婪模式，例如下面的内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span>   /<span class="attr">img</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>   /<span class="attr">img</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果使用<code>.*?</code>不匹配贪婪模式，则只会匹配第一行，不会匹配所有的行。</p><h4 id="11-1-2-正则表达式分组功能">11.1.2 正则表达式分组功能</h4><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">b = re.<span class="built_in">compile</span>(<span class="string">&#x27;ca...t&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;cat&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;caabct&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;cact&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;**********&#x27;</span>)</span><br><span class="line">c = re.<span class="built_in">compile</span>(<span class="string">&#x27;ca.&#123;2&#125;t&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(c.match(<span class="string">&#x27;cat&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(c.match(<span class="string">&#x27;cact&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(c.match(<span class="string">&#x27;cacbt&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/VC5Ejg1p7JkOIhr.png" alt="image-20220323105849066"></p><h4 id="11-1-3-正则表达式中match和search的区别">11.1.3 正则表达式中match和search的区别</h4><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">b = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(\d+)-(\d+)-(\d+)&#x27;</span>)  <span class="comment"># 在前面加上r代表后面的内容不进行转义</span></span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;2022-05-30&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;2022-05-30&#x27;</span>).group(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;2022-05-30&#x27;</span>).group(<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(b.match(<span class="string">&#x27;2022-05-30&#x27;</span>).groups())</span><br><span class="line">(year, month, day) = b.match(<span class="string">&#x27;2022-05-30&#x27;</span>).groups()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;year = %s&#x27;</span> % year)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;month = %s&#x27;</span> % month)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;day = %s&#x27;</span> % day)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/kUKpgtjqDwIVHOs.png" alt="image-20220323113655477"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">b = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(\d+)-(\d+)-(\d+)&#x27;</span>)  <span class="comment"># 在前面加上r代表后面的内容不进行转义</span></span><br><span class="line"><span class="built_in">print</span>(b.search(<span class="string">&#x27;aa2022-05-30bbb&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b.search(<span class="string">&#x27;aa2022-05-30bbb&#x27;</span>).group())  <span class="comment"># search用来搜索指定字符串</span></span><br><span class="line"><span class="built_in">print</span>(b.search(<span class="string">&#x27;aa2022-05-30bbb&#x27;</span>).group(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(b.search(<span class="string">&#x27;aa2022-05-30bbb&#x27;</span>).group(<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(b.search(<span class="string">&#x27;aa2022-05-30bbb&#x27;</span>).groups())</span><br><span class="line">(year, month, day) = b.search(<span class="string">&#x27;aa2022-05-30bbb&#x27;</span>).groups()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;year = %s&#x27;</span> % year)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;month = %s&#x27;</span> % month)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;day = %s&#x27;</span> % day)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/P9p6e8RC4LruBNZ.png" alt="image-20220323114845268"></p><h4 id="11-1-4-正则表达式替换函数sub">11.1.4 正则表达式替换函数sub()</h4><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">phone = <span class="string">&#x27;123-456-798 # 这是电话号码&#x27;</span></span><br><span class="line"><span class="comment"># 用r表示后面的字符不进行转义，#表示匹配#号，#.*表示匹配#后面所有内容，*是多个的意思，$表示一直到结尾</span></span><br><span class="line"><span class="comment"># sub(&#x27;原来需要替换的内容&#x27;,&#x27;需要替换的新内容&#x27;,字符串名字)</span></span><br><span class="line">p2 = re.sub(<span class="string">r&#x27;#.*$&#x27;</span>, <span class="string">&#x27;&#x27;</span>, phone)</span><br><span class="line"><span class="built_in">print</span>(p2)</span><br><span class="line">p3 = re.sub(<span class="string">r&#x27;\D&#x27;</span>, <span class="string">&#x27;&#x27;</span>, p2)  <span class="comment"># \D 表示选择非数字的部分</span></span><br><span class="line"><span class="built_in">print</span>(p3)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/4yORedaI5TshkZE.png" alt="image-20220323121112440"></p><h3 id="11-2-日期与时间函数库">11.2 日期与时间函数库</h3><p>time模块多数是用来查看日期和时间</p><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(time.time())  <span class="comment"># 显示的是1970年1月1日到现在的秒数</span></span><br><span class="line"><span class="built_in">print</span>(time.localtime())</span><br><span class="line"><span class="built_in">print</span>(time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(time.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/l1xHCZKqwVnuY8E.png" alt="image-20220323150706546"></p><p>datetime多用于时间的修改</p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.now())</span><br><span class="line"><span class="comment"># 如果想获取十分钟以后的时间，可以通过类似加减法的方式来进行计算</span></span><br><span class="line">newtime = datetime.timedelta(minutes=<span class="number">10</span>)  <span class="comment"># timedelta为偏移时间</span></span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.now() + newtime)</span><br><span class="line"></span><br><span class="line">one_day = datetime.datetime(<span class="number">2000</span>, <span class="number">5</span>, <span class="number">27</span>)</span><br><span class="line"><span class="built_in">print</span>(one_day)</span><br><span class="line">new_date = datetime.timedelta(days=<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(one_day + new_date)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/SBhsIxoKARTuENQ.png" alt="image-20220323151549821"></p><h3 id="11-3-数学相关库">11.3 数学相关库</h3><p>数学相关的库为：<code>Numeric and Mathmatical Modules</code></p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(random.randint(<span class="number">1</span>, <span class="number">5</span>))  <span class="comment"># 产生1到5的整数(包括1和5)</span></span><br><span class="line"><span class="built_in">print</span>(random.choice([<span class="string">&#x27;aa&#x27;</span>, <span class="string">&#x27;bb&#x27;</span>, <span class="string">&#x27;cc&#x27;</span>]))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/C6AtPi1nQ4BrgLZ.png" alt="image-20220323152430186"></p><h3 id="11-4-对文件和文件夹操作库">11.4 对文件和文件夹操作库</h3><p>在Linux的终端中，常用操作命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span>     <span class="comment">#返回当前的地址</span></span><br><span class="line"><span class="built_in">cd</span> ..   <span class="comment"># 访问上一级目录</span></span><br><span class="line"><span class="built_in">cd</span> /tmp   <span class="comment">#访问根目录下的tmp文件夹，这个进入方式为绝对路径</span></span><br><span class="line"><span class="built_in">cd</span> ./tmp   <span class="comment">#访问当前目录的下一级目录，即进入tmp文件夹，这个进入方式为相对路径</span></span><br><span class="line"><span class="built_in">mkdir</span> /tmp/a    <span class="comment">#建立文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /tmp/a    <span class="comment">#如果不存在相应的文件，通过</span></span><br><span class="line"><span class="built_in">rmdir</span> g   <span class="comment">#如果当前终端在g文件夹的上一级目录中，可以通过此命令来删除g文件夹</span></span><br><span class="line"><span class="built_in">rm</span> -rf /tmp/a  <span class="comment">#如果某个目录中存在子目录，可以通过此命令将a文件夹和a文件夹下的所有文件进行删除</span></span><br></pre></td></tr></table></figure><h4 id="11-4-1-文件夹操作库-os-path">11.4.1 文件夹操作库-os.path</h4><p>通过文件夹操作库对文件和文件夹进行操作</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(os.path.abspath(<span class="string">&#x27;.&#x27;</span>))  <span class="comment"># 通过 . 来获取绝对路径</span></span><br><span class="line"><span class="built_in">print</span>(os.path.abspath(<span class="string">&#x27;..&#x27;</span>))  <span class="comment"># 通过 .. 来获取上一级的绝对路径</span></span><br><span class="line"><span class="built_in">print</span>(os.path.exists(<span class="string">&#x27;/users&#x27;</span>))  <span class="comment"># 判断根目录下的users文件夹是否存在，如果存在返回True，不存在返回False</span></span><br><span class="line"><span class="built_in">print</span>(os.path.isfile(<span class="string">&#x27;/Code/Code_py&#x27;</span>))  <span class="comment"># 判断Code_py是否为文件</span></span><br><span class="line"><span class="built_in">print</span>(os.path.isdir(<span class="string">&#x27;/Code/Code_py&#x27;</span>))  <span class="comment"># 判断Code_py是否为文件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(os.path.join(<span class="string">&#x27;/tmp/a/&#x27;</span>, <span class="string">&#x27;b/c&#x27;</span>))  <span class="comment"># 将两个路径进行拼接</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/6SoHl1LxbwpDUNO.png" alt="image-20220323162927586"></p><h4 id="11-4-2-文件夹操作库-pathlib-Path">11.4.2 文件夹操作库-pathlib.Path</h4><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line">p = Path(<span class="string">&#x27;/Code/Code_py&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(p.resolve())  <span class="comment"># 通过此方法可以得到相对路径的绝对路径</span></span><br><span class="line"><span class="built_in">print</span>(p.is_dir())</span><br><span class="line"></span><br><span class="line">q = Path(<span class="string">&#x27;/tmp/a&#x27;</span>)</span><br><span class="line"><span class="comment"># parents设为True，当q对应的目录不存在，则创建目录</span></span><br><span class="line"><span class="comment"># parents设为False，当q对应的目录不存在，则不创建目录</span></span><br><span class="line">Path.mkdir(q,parents=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/Ewm5eTPFCZibYvJ.png" alt="image-20220323165930706"></p><p>可以看到该文件夹已经创建</p><p><img src="https://vip2.loli.io/2023/03/13/PdTFZsuzGoIy8xY.png" alt="image-20220323165426767"></p><h2 id="12-机器学习">12 机器学习</h2><h3 id="12-1-numpy库">12.1 numpy库</h3><p>numpy库：用于高性能科学计算和数据分析，是常用的高级数据分析库的基础包，用numpy库的运行效率比python自身的运行效率更高。</p><p>需要在终端中通过<code>pip3 install numpy</code>命令来安装numpy库，运行效果：</p><p><img src="https://vip2.loli.io/2023/03/13/TlZO9m4hkB5tung.png" alt="image-20220325102818737"></p><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">arr1 = np.array([<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="built_in">print</span>(arr1)</span><br><span class="line"><span class="built_in">print</span>(arr1.dtype)</span><br><span class="line"></span><br><span class="line">arr2 = np.array([<span class="number">1.2</span>, <span class="number">2.3</span>, <span class="number">3.4</span>])</span><br><span class="line"><span class="built_in">print</span>(arr2)</span><br><span class="line"><span class="built_in">print</span>(arr2.dtype)</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以有多种数据类型：int8 int16 int32 int64等  numpy可以根据输入的数据类型自动进行转换</span></span><br><span class="line"><span class="built_in">print</span>(arr1 + arr2)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/Mdpq1DJVCTQhyPL.png" alt="image-20220325104808949"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">arr2 = np.array([<span class="number">1.2</span>, <span class="number">2.3</span>, <span class="number">3.4</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(arr2 * <span class="number">10</span>)</span><br><span class="line">data = ((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>))</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line">arr3 = np.array((data))  <span class="comment"># 将data转为二维矩阵</span></span><br><span class="line"><span class="built_in">print</span>(arr3)</span><br><span class="line"><span class="built_in">print</span>(arr3.dtype)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;np:zeros, ones和empty：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(np.zeros(<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(np.zeros((<span class="number">3</span>, <span class="number">5</span>)))</span><br><span class="line"><span class="built_in">print</span>(np.ones((<span class="number">4</span>,<span class="number">6</span>)))</span><br><span class="line"><span class="built_in">print</span>(np.empty((<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>)))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/ix4yoKARu9Y8TH6.png" alt="image-20220325115100759"></p><p>示例3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">arr4 = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(arr4[<span class="number">5</span>:<span class="number">8</span>])</span><br><span class="line">arr4[<span class="number">5</span>:<span class="number">8</span>] = <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(arr4)</span><br><span class="line">arr_slice = arr4[<span class="number">5</span>:<span class="number">8</span>].copy()  <span class="comment"># 对原有数据进行切片(部分赋值)给arr_slice</span></span><br><span class="line"><span class="built_in">print</span>(arr_slice)</span><br><span class="line">arr_slice[:] = <span class="number">15</span></span><br><span class="line"><span class="built_in">print</span>(arr_slice)</span><br><span class="line"><span class="built_in">print</span>(arr4)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/LBedGTP78DYa3Sf.png" alt="image-20220325120711789"></p><h3 id="12-2-pandas库">12.2 pandas库</h3><p>pandas是用来数据预处理、数据清洗非常重要的库。</p><p>需要在终端中通过<code>pip3 install pandas</code>命令来安装pandas库，运行效果：</p><p><img src="https://vip2.loli.io/2023/03/13/5WFSkOhcbMU67nE.png" alt="image-20220325121921191"></p><p>Series可以看作一维的字典，dataframe可以看作二维的字典。</p><h4 id="12-2-1-Series数据结构">12.2.1 Series数据结构</h4><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># pandas会将你的数据自动进行数据排列或者按照自定义的方式进行排列显示，避免数据没有对齐，处理数据出现失误</span></span><br><span class="line"><span class="comment"># pandas可以很灵活处理缺失的数据，也可以填充想要的值</span></span><br><span class="line"></span><br><span class="line">obj = Series([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, -<span class="number">7</span>])</span><br><span class="line"><span class="built_in">print</span>(obj)</span><br><span class="line"><span class="built_in">print</span>(obj.index)</span><br><span class="line"><span class="built_in">print</span>(obj.values)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/UtMDdIb8ylY1e6K.png" alt="image-20220325202537583"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">obj2 = Series([<span class="number">4</span>, <span class="number">7</span>, -<span class="number">5</span>, <span class="number">3</span>], index=[<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;a&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(obj2)</span><br><span class="line"></span><br><span class="line">obj2[<span class="string">&#x27;c&#x27;</span>] = <span class="number">6</span></span><br><span class="line"><span class="built_in">print</span>(obj2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a&#x27;</span> <span class="keyword">in</span> obj2)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/OJZ9gNLpQnwvmfr.png" alt="image-20220325202849669"></p><p>示例3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">sdata = &#123;</span><br><span class="line">    <span class="string">&#x27;beijing&#x27;</span>: <span class="number">35000</span>,</span><br><span class="line">    <span class="string">&#x27;shanghai&#x27;</span>: <span class="number">71000</span>,</span><br><span class="line">    <span class="string">&#x27;guangzhou&#x27;</span>: <span class="number">16000</span>,</span><br><span class="line">    <span class="string">&#x27;shenzhen&#x27;</span>: <span class="number">5000</span>&#125;</span><br><span class="line">obj3 = Series(sdata)</span><br><span class="line"><span class="built_in">print</span>(obj3)</span><br><span class="line"></span><br><span class="line">obj3.index = [<span class="string">&#x27;bj&#x27;</span>, <span class="string">&#x27;gz&#x27;</span>, <span class="string">&#x27;sh&#x27;</span>, <span class="string">&#x27;sz&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(obj3)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/sbnMOUkV524grQo.png" alt="image-20220325203508667"></p><h4 id="12-2-2-Dataframe数据结构">12.2.2 Dataframe数据结构</h4><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;city&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;shanghai&#x27;</span>, <span class="string">&#x27;shanghai&#x27;</span>, <span class="string">&#x27;shanghai&#x27;</span>, <span class="string">&#x27;beijing&#x27;</span>, <span class="string">&#x27;beijing&#x27;</span>], <span class="string">&#x27;year&#x27;</span>: [</span><br><span class="line">            <span class="number">2016</span>, <span class="number">2017</span>, <span class="number">2018</span>, <span class="number">2017</span>, <span class="number">2018</span>], <span class="string">&#x27;pop&#x27;</span>: [</span><br><span class="line">                <span class="number">1.5</span>, <span class="number">1.7</span>, <span class="number">3.6</span>, <span class="number">2.4</span>, <span class="number">2.9</span>]&#125;</span><br><span class="line">frame = DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(frame)</span><br><span class="line">frame2 = DataFrame(data, columns=[<span class="string">&#x27;year&#x27;</span>, <span class="string">&#x27;city&#x27;</span>, <span class="string">&#x27;pop&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(frame2)</span><br><span class="line"><span class="built_in">print</span>(frame2[<span class="string">&#x27;city&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;***************&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;year:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(frame2.year)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/RZO6udqWQs4XMxy.png" alt="image-20220325205253855"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;city&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;shanghai&#x27;</span>, <span class="string">&#x27;shanghai&#x27;</span>, <span class="string">&#x27;shanghai&#x27;</span>, <span class="string">&#x27;beijing&#x27;</span>, <span class="string">&#x27;beijing&#x27;</span>], <span class="string">&#x27;year&#x27;</span>: [</span><br><span class="line">            <span class="number">2016</span>, <span class="number">2017</span>, <span class="number">2018</span>, <span class="number">2017</span>, <span class="number">2018</span>], <span class="string">&#x27;pop&#x27;</span>: [</span><br><span class="line">                <span class="number">1.5</span>, <span class="number">1.7</span>, <span class="number">3.6</span>, <span class="number">2.4</span>, <span class="number">2.9</span>]&#125;</span><br><span class="line">frame = DataFrame(data)</span><br><span class="line">frame2 = DataFrame(data, columns=[<span class="string">&#x27;year&#x27;</span>, <span class="string">&#x27;city&#x27;</span>, <span class="string">&#x27;pop&#x27;</span>])</span><br><span class="line"></span><br><span class="line">frame2[<span class="string">&#x27;new&#x27;</span>] = <span class="number">100</span></span><br><span class="line"><span class="built_in">print</span>(frame2)  <span class="comment"># 增加一个新的列</span></span><br><span class="line">frame2[<span class="string">&#x27;cap&#x27;</span>] = frame2.city == <span class="string">&#x27;beijing&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(frame2)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/WLu3n1qMENYfCFr.png" alt="image-20220325205810945"></p><p>示例3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">pop = &#123;<span class="string">&#x27;beijing&#x27;</span>: &#123;<span class="number">2008</span>: <span class="number">1.5</span>, <span class="number">2009</span>: <span class="number">2.0</span>&#125;,</span><br><span class="line">       <span class="string">&#x27;shanghai&#x27;</span>: &#123;<span class="number">2008</span>: <span class="number">2.0</span>, <span class="number">2009</span>: <span class="number">3.6</span>&#125;&#125;</span><br><span class="line">frame3 = DataFrame(pop)</span><br><span class="line"><span class="built_in">print</span>(frame3)</span><br><span class="line"><span class="built_in">print</span>(frame3.T)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/DZIQb5UqONpyuCM.png" alt="image-20220325210309868"></p><p>示例4：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">obj4 = Series([<span class="number">4.5</span>, <span class="number">7.2</span>, -<span class="number">5.3</span>, <span class="number">3.6</span>], index=[<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;a&#x27;</span>])</span><br><span class="line">obj5 = obj4.reindex([<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>], fill_value=<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(obj5)</span><br><span class="line"></span><br><span class="line">obj6 = Series([<span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;purple&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>], index=[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>])</span><br><span class="line"><span class="built_in">print</span>(obj6.reindex(<span class="built_in">range</span>(<span class="number">6</span>), method=<span class="string">&#x27;ffill&#x27;</span>))  <span class="comment">#如果用后面的值进行填充，用 bfill</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/cu6bNnIASxV4klX.png" alt="image-20220325211625055"></p><p>示例5：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> nan <span class="keyword">as</span> NA</span><br><span class="line">data = Series([<span class="number">1</span>, NA, <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"><span class="built_in">print</span>(data.dropna())  <span class="comment"># 删除NA对应的索引</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/dzvRbKwPjGeJYsM.png" alt="image-20220325213552479"></p><p>示例6：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> nan <span class="keyword">as</span> NA</span><br><span class="line"></span><br><span class="line">data2 = DataFrame([[<span class="number">1.</span>, <span class="number">6.5</span>, <span class="number">3</span>], [<span class="number">1.</span>, NA, NA], [NA, NA, NA]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;下面展示的是删除一整行全为NAN的这一行&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(data2.dropna(how=<span class="string">&#x27;all&#x27;</span>))</span><br><span class="line"></span><br><span class="line">data2[<span class="number">4</span>] = NA</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;下面展示的是删除一整行全为NAN的这一列：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(data2)</span><br><span class="line"><span class="built_in">print</span>(data2.dropna(axis=<span class="number">1</span>, how=<span class="string">&#x27;all&#x27;</span>))</span><br><span class="line">data2.fillna(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>((<span class="string">&#x27;******&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(data2)</span><br><span class="line">data2.fillna(<span class="number">0</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(data2.fillna(<span class="number">0</span>, inplace=<span class="literal">True</span>))</span><br><span class="line"><span class="built_in">print</span>(data2)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/HBEUyVgGqiCeASm.png" alt="image-20220325213724732"></p><h4 id="12-2-3-层次化索引">12.2.3 层次化索引</h4><p>pandas支持多层次索引</p><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">data3 = Series(np.random.random(<span class="number">10</span>), index=[</span><br><span class="line">               [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;d&#x27;</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>]])</span><br><span class="line"><span class="built_in">print</span>(data3)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;输出单个索引：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(data3[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;输出多个索引：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(data3[<span class="string">&#x27;b&#x27;</span>:<span class="string">&#x27;d&#x27;</span>])</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/dlDS6IVxZvaC13g.png" alt="image-20220325224129406"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">data3 = Series(np.random.random(<span class="number">10</span>), index=[</span><br><span class="line">               [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;d&#x27;</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;将Series一维数据转换成DataFrame二维数据:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(data3.unstack())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;DataFrame二维数据转换成将Series一维数据:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(data3.unstack().stack())</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/W6k5cONiTbxjfuy.png" alt="image-20220325224458466"></p><h3 id="12-3-matplotlib库">12.3 matplotlib库</h3><p>matplotlib库主要用于绘图。</p><p>需要在终端中通过<code>pip3 install matplotlib</code>命令来安装matplotlib库。</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib .pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># 绘制菜单的曲线</span></span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>],[<span class="number">4</span>,<span class="number">8</span>,<span class="number">10</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/oGVk4XhvMW9i7cx.png" alt="image-20220325225815865"></p><p>示例2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib .pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.linspace(-np.pi, np.pi, <span class="number">100</span>)  <span class="comment"># x轴的定义域为-3.14 到3.14，中间间隔100个元素</span></span><br><span class="line">plt.plot(x, np.sin(x))</span><br><span class="line"><span class="comment"># 显示所画的图</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/NwyIYKlUe2dBPRO.png" alt="image-20220325230248280"></p><p>示例3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib .pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.linspace(-np.pi, np.pi, <span class="number">100</span>)  <span class="comment"># x轴的定义域为-3.14 到3.14，中间间隔100个元素</span></span><br><span class="line">plt.figure(<span class="number">1</span>, dpi=<span class="number">50</span>)  <span class="comment"># 创建图表1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">    plt.plot(x, np.sin(x / i))</span><br><span class="line"><span class="comment"># 显示所画的图</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/Z3cjtkWGVgEzALp.png" alt="image-20220325230813588"></p><p>示例4：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib .pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.figure(<span class="number">1</span>, dpi=<span class="number">50</span>)  <span class="comment"># 创建图表1，dpi代表图片精细度，dpi越大文件越大，杂志要dpi300以上</span></span><br><span class="line">data = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>]</span><br><span class="line">plt.hist(data)  <span class="comment"># 只要传入数据，直方图就会统计数据出现的次数</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/UJgA1qCDfa67eSm.png" alt="image-20220325231558628"></p><p>示例4：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib .pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">y = x</span><br><span class="line">fig = plt.figure()</span><br><span class="line">plt.scatter(x,y,c = <span class="string">&#x27;r&#x27;</span>,marker=<span class="string">&#x27;o&#x27;</span>)  <span class="comment"># c = &#x27;r&#x27;表示散点的颜色为红色，marker表示指定散点形状为圆形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/BFdEqcA9ZRVPOSv.png" alt="image-20220325232159772"></p><h3 id="12-4-seaborn库">12.4 seaborn库</h3><p>需要在终端中通过<code>pip3 install seaborn</code>命令来安装seaborn库。</p><h3 id="12-5-tensorflow库">12.5 tensorflow库</h3><p>需要在终端中通过<code>pip3 install tensorflow</code>命令来安装tensorflow库。</p><h2 id="13-爬虫">13 爬虫</h2><p>常用的网络库包括：</p><ul><li>urllib库：数据收集和下载的库</li><li>requests库：数据收集和下载的库</li><li>BeautifulSoup库：格式处理</li><li>http协议常用库</li><li>http协议常用库</li><li>xml格式处理库</li></ul><p>httpbin.org是测试http协议的网站，可以通过它测试http功能。</p><p>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://www.baidu.com&#x27;</span></span><br><span class="line">response = request.urlopen(url, timeout=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>))  <span class="comment"># 将读取的网页通过utf-8进行读取，utf-8是汉字编码的一种方式</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/H56k84FKlQYyc2n.png" alt="image-20220326082959576"></p><p>示例2：</p><p>可以通过输入<code>httpbin.org/get?a=123&amp;b=456</code>来告诉服务器a的值为123，b的值为456。</p><p><img src="https://vip2.loli.io/2023/03/13/SCLJXGdZN8WnyQ6.png" alt="image-20220326084109093"></p><p>通过上面的<code>get</code>来往服务器传递数据，有传输数据大小的限制。还有另一种向服务器传递数据的限制，向服务器提供密码的时候会用post来进行提交。</p><p>示例3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">data = <span class="built_in">bytes</span>(parse.urlencode(&#123;<span class="string">&#x27;word&#x27;</span>: <span class="string">&#x27;hello&#x27;</span>&#125;), encoding=<span class="string">&#x27;utf-8&#x27;</span>)  <span class="comment"># 对数据进行封装</span></span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;***********************&#x27;</span>)</span><br><span class="line">response = request.urlopen(<span class="string">&#x27;http://httpbin.org/post&#x27;</span>, data=data)  <span class="comment"># 通过urlopen打开网页，同时指定传输的数据</span></span><br><span class="line"><span class="built_in">print</span>(response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;***********************&#x27;</span>)</span><br><span class="line">response2 = request.urlopen(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>, timeout=<span class="number">1</span>)  <span class="comment"># 强烈建议写timeout，否则会出现卡死的情况</span></span><br><span class="line"><span class="built_in">print</span>(response2.read())</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/ZUEPMgNp7Wbm2nw.png" alt="image-20220326091811914"></p><p>示例4：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response3 = request.urlopen(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>, timeout=<span class="number">0.1</span>)  <span class="comment"># 强烈建议写timeout，否则会出现卡死的情况</span></span><br><span class="line"><span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(e.reason, socket.timeout):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;TIME OUT&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/ivqXoAuLeCKNtJT.png" alt="image-20220326093115888"></p><p>示例5：用headers来伪装头部</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span>  request,parse</span><br><span class="line">url = <span class="string">&#x27;http://httpbin.org/post&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:98.0) Gecko/20100101 Firefox/98.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-623e6011-127adb2c4d8dfd857e37a791&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dict</span> = &#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;value&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data = <span class="built_in">bytes</span>(parse.urlencode(<span class="built_in">dict</span>), encoding=<span class="string">&#x27;utf-8&#x27;</span>)  <span class="comment"># 对字典重新编码,即将其变为网页的字节形式进行封装</span></span><br><span class="line">req = request.Request(url=url,data=data,headers=headers,method=<span class="string">&#x27;POST&#x27;</span>)</span><br><span class="line">response = request.urlopen(req)</span><br><span class="line"><span class="built_in">print</span>(response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/2GiIuft9bPFvDHc.png" alt="image-20220326095411505"></p><p>需要在终端中通过<code>pip3 install requests</code>命令来安装requests库。</p><p>示例6：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get请求</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&#x27;http://httpbin.org/get&#x27;</span></span><br><span class="line">data = &#123;<span class="string">&#x27;key&#x27;</span>: <span class="string">&#x27;value&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>: <span class="string">&#x27;xyz&#x27;</span>&#125;</span><br><span class="line"><span class="comment"># .get是使用get方式请求url，字典类型的data不用机型额外处理</span></span><br><span class="line">response = requests.get(url, data)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># post请求</span></span><br><span class="line">url = <span class="string">&#x27;http://httpbin.org/post&#x27;</span></span><br><span class="line">data = &#123;<span class="string">&#x27;key&#x27;</span>: <span class="string">&#x27;value&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>: <span class="string">&#x27;xyz&#x27;</span>&#125;</span><br><span class="line"><span class="comment"># .post表示为post方法</span></span><br><span class="line">response = requests.post(url, data)</span><br><span class="line"><span class="comment"># 返回类型为json格式</span></span><br><span class="line"><span class="built_in">print</span>(response.json())</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/M7VE14ObzFJwoxL.png" alt="image-20220326100647336"></p><p>示例7：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = requests.get(<span class="string">&#x27;http://www.cnu.cc/discoveryPage/hot-111&#x27;</span>).text</span><br><span class="line"><span class="built_in">print</span>(content)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是网页中对应的信息，通过正则表达式提取</span></span><br><span class="line"><span class="comment"># &lt;div class =&quot;grid-item work-thumbnail&gt;</span></span><br><span class="line"><span class="comment"># &lt;a href=&quot;http://www.cnu.cc//works/244938&quot; class =&quot;thumbnail&quot; target=&quot;_blank&quot;&gt;</span></span><br><span class="line"><span class="comment"># &lt;div class =&quot;title&quot;&gt;Fashion kids | 复古同年&lt; / div&gt;</span></span><br><span class="line"><span class="comment"># &lt;div class =&quot;author&quot;&gt; Lynride &lt; / div&gt;</span></span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;a href=&quot;(.*?)&quot;.*?title&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>, re.S)</span><br><span class="line">results = re.findall(pattern, content)</span><br><span class="line"><span class="built_in">print</span>(results)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line">    url, name = result</span><br><span class="line">    <span class="built_in">print</span>(url, re.sub(<span class="string">&#x27;\\s&#x27;</span>, <span class="string">&#x27;&#x27;</span>, name))</span><br></pre></td></tr></table></figure><p>运行结果：部分运行结果如下</p><p><img src="https://vip2.loli.io/2023/03/13/OTCaL5yKlcqm7Ns.png" alt="image-20220326104506764"></p><p>需要在终端中通过<code>pip3 install bs4</code>命令来安装BeautifulSoup库。</p><p>示例8：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">html_doc = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;title&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(html_doc, <span class="string">&#x27;lxml&#x27;</span>)  <span class="comment"># 选用html解析器</span></span><br><span class="line"><span class="comment"># print(soup)</span></span><br><span class="line"><span class="built_in">print</span>(soup.prettify())  <span class="comment"># 当格式比较混乱的时候，通过此方法可以对其格式化处理</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;*********title:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.title)</span><br><span class="line"><span class="built_in">print</span>(soup.title.string)</span><br><span class="line"><span class="built_in">print</span>(soup.title.parent.name)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;*********head:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.head)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;*********body:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.body)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;*********p:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.p)  <span class="comment"># 找到p标签</span></span><br><span class="line"><span class="built_in">print</span>(soup.p[<span class="string">&#x27;class&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;*********a:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.a)  <span class="comment"># 找到第一个a标签</span></span><br><span class="line"><span class="built_in">print</span>(soup.a[<span class="string">&#x27;class&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;*********all p:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.find_all(<span class="string">&#x27;p&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;*********all a:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.find_all(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;*********link3:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.find(<span class="built_in">id</span>=<span class="string">&quot;link3&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;*********href:&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> soup.find_all(<span class="string">&#x27;a&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(link.get(<span class="string">&#x27;href&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;get_text:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.get_text())</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://vip2.loli.io/2023/03/13/bTFx3QPUj7dsZhY.png" alt="image-20220326111938282"></p><p><img src="https://vip2.loli.io/2023/03/13/2MKqLcTVoAm5naW.png" alt="image-20220326112022076"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python练习网站</title>
      <link href="/2022/05/06/Python/Python%E7%BB%83%E4%B9%A0%E7%BD%91%E7%AB%99/"/>
      <url>/2022/05/06/Python/Python%E7%BB%83%E4%B9%A0%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h1>Python练习网站</h1><p>[1] Python主站：<a href="https://www.python.org">https://www.python.org</a></p><p>[2] Python中文学习大本营：<a href="http://www.pythondoc.com/">http://www.pythondoc.com/</a></p><p>[3] 菜鸟Python教程：<a href="https://www.runoob.com/python3/python3-tutorial.html">https://www.runoob.com/python3/python3-tutorial.html</a></p><p>[4] W3school：<a href="https://www.w3school.com.cn/python/python_sets.asp">https://www.w3school.com.cn/python/python_sets.asp</a></p><p>[5] 廖雪峰的官方网站：<a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017501655757856">https://www.liaoxuefeng.com/wiki/1016959663602400/1017501655757856</a></p><p>[6] Python123学习主站：<a href="https://python123.io">https://python123.io</a></p><p>[7] Python Requests: <a href="https://www.python-requests.org">https://www.python-requests.org</a></p><p>[8] Python Beautiful Soup: <a href="https://www.crummy.com/software/BeautifulSoup">https://www.crummy.com/software/BeautifulSoup</a></p><p>[9] Python Scrapy: <a href="https://scrapy.org/">https://scrapy.org/</a></p><p>[10] Python学习网：<a href="http://www.py.cn/">http://www.py.cn/</a></p><p>[11] Python中文开发者社区：<a href="https://www.pythontab.com/">https://www.pythontab.com/</a></p><p>[12] Github：<a href="https://github.com/">https://github.com/</a></p><p>[13] CSDN：<a href="https://edu.csdn.net/">https://edu.csdn.net/</a></p><h1>Python书籍</h1><p>《笨方法学Python》</p><p>《Python编程从入门到实践》</p><p>《Python基础教程第2版》</p><p>《流畅的Python》</p><p>《Python核心编程》</p><p>《编写高质量Python代码的59个有效方法》</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS基础概念</title>
      <link href="/2022/05/06/ROS/ROS%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
      <url>/2022/05/06/ROS/ROS%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h1>ROS基础概念</h1><p>对ROS支持最好的是Ubuntu版本的Linux系统</p><p>Ubuntu安装对比</p><p><img src="https://vip2.loli.io/2023/03/13/bLXQZ3aAU5hEP4k.png" alt="Ubuntu安装方法对比"></p><h2 id="1-Linux终端相关命令">1. Linux终端相关命令</h2><p>查看当前的位置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure><p>上级目录和下级目录切换：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..    <span class="comment"># 切换为上级目录</span></span><br><span class="line"><span class="built_in">cd</span>       <span class="comment"># 切换为root目录</span></span><br><span class="line"><span class="built_in">cd</span> yyy   <span class="comment"># 打开yyy文件夹</span></span><br></pre></td></tr></table></figure><p>创建新的文件夹：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> <span class="built_in">test</span>   <span class="comment"># 创建文件夹，文件夹名字为test]]</span></span><br></pre></td></tr></table></figure><p>查看当前文件夹下相关文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>创建文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> <span class="built_in">test</span>    <span class="comment"># 创建test文件 </span></span><br></pre></td></tr></table></figure><p>将文件剪切到某一个路径下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> <span class="built_in">test</span> /home/yww/000   <span class="comment"># 将test文件剪切到000文件夹中</span></span><br></pre></td></tr></table></figure><p>拷贝文件并将其放到另外一个文件夹中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> <span class="built_in">test</span> 111/test2   <span class="comment"># 将当前路径下的test文件复制到当前路径下的111文件夹中，并将该test文件重新命名为test2文件</span></span><br></pre></td></tr></table></figure><p>删除文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> <span class="built_in">test</span>   <span class="comment"># 删除文件</span></span><br><span class="line"><span class="built_in">rm</span> -r 000/  <span class="comment"># 删除000文件夹，-r是递归删除的意思，因为一个文件夹下可能有多个文件</span></span><br></pre></td></tr></table></figure><p>提升当前文件的权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update   <span class="comment"># 更新当前系统的软件源列表</span></span><br></pre></td></tr></table></figure><p>帮助文档：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> --<span class="built_in">help</span>  <span class="comment"># 可以看到rm相关指令的使用方法</span></span><br><span class="line">sudo --<span class="built_in">help</span>  <span class="comment"># 可以看到sudo相关指令的使用方法</span></span><br><span class="line"><span class="built_in">cd</span> --<span class="built_in">help</span>   <span class="comment"># 可以看到cd相关指令的使用方法</span></span><br></pre></td></tr></table></figure><h2 id="2-C-Python极简编程基础">2. C++/Python极简编程基础</h2><h3 id="2-1-ROS编译命令">2.1 ROS编译命令</h3><p>安装g++编译器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install g++</span><br></pre></td></tr></table></figure><p>安装Python解释器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python</span><br></pre></td></tr></table></figure><p>C++编译相关命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ c++_for.cpp -o c++_for   <span class="comment"># 通过g]]++软件编译c++_for.cpp成文件名为c++_for的可执行文件</span></span><br><span class="line">./c++_for     <span class="comment"># 运行可执行文件  ./ 的作用就是运行某个程序或者脚本</span></span><br></pre></td></tr></table></figure><p>python编译相关命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python python_for.py    <span class="comment"># 直接通过python解释器对python_for]].py文件进行解释</span></span><br></pre></td></tr></table></figure><p>具体相关的操作如下：</p><p><img src="https://vip2.loli.io/2023/03/13/4nZbsHDecJGa5Yo.png" alt="vxTIBNMHKzgaXyd"></p><p>面向对象的编译：</p><p><img src="https://vip2.loli.io/2023/03/13/fwL8HIPEArOnBS3.png" alt="aBpvfiKV8UjCelT"></p><h3 id="2-2-ROS小海龟仿真">2.2 ROS小海龟仿真</h3><p>1、启动ROS Master</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br></pre></td></tr></table></figure><p>2、启动小海龟仿真器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun turtlesim turtlesim_node</span><br></pre></td></tr></table></figure><p>3、启动海龟控制节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun turtlesim turtle_teleop_key</span><br></pre></td></tr></table></figure><h2 id="3-ROS组成部分">3. ROS组成部分</h2><h3 id="3-1-节点与节点管理器">3.1 节点与节点管理器</h3><h4 id="3-1-1-节点（Node）—执行单元">3.1.1 节点（Node）—执行单元</h4><ul><li>执行具体任务的进程、独立运行的可执行文件；</li><li>不同节点可使用不同的编程语言，可分布式运行在不同的主机上；</li><li>节点在系统中的名称必须是唯一的。</li></ul><h4 id="3-1-2-节点管理器（ROS-Master）—控制单元">3.1.2 节点管理器（ROS Master）—控制单元</h4><ul><li>为节点提供命名和注册服务；</li><li>跟踪和记录话题/服务通信，辅助节点相互查找、建立连接；</li><li>提供参数服务器，节点使用此服务器存储和检索运行时的参数。</li></ul><h3 id="3-2-话题通讯">3.2 话题通讯</h3><h4 id="3-2-1-话题（Topic）—异步通信机制">3.2.1 话题（Topic）—异步通信机制</h4><ul><li>节点间用来传输数据的重要总线；</li><li>使用<strong>发布/订阅</strong>模型，数据由发布者传输到订阅者，同一个话题的订阅者或发布者可以不唯一。</li></ul><h4 id="3-2-2-消息（Message）—话题数据">3.2.2 消息（Message）—话题数据</h4><ul><li>具有一定的类型和数据结构，包括ROS提供的标准类型和用户自定义类型；</li><li>使用编程语言无关的 .msg 文件定义，编译过程中生成对应的代码文件。</li></ul><p>如图所示：</p><p><img src="https://vip2.loli.io/2023/03/13/HuDVjKzmP28XpkG.png" alt="image-20220106155710598"></p><h3 id="3-3-服务通信">3.3 服务通信</h3><h4 id="3-3-1-服务（Service）—同步通信机制">3.3.1 服务（Service）—同步通信机制</h4><ul><li>使用<strong>客户端/服务器</strong>（C/S）模型，客户端发送请求数据，服务器完成处理后返回<strong>应答</strong>数据；</li><li>使用编程语言无关的.srv文件定义请求和应答数据结构，编译过程中生成对应的代码。</li><li>服务一般是请求一次调用一次，后续如果使用可能不会再次调用，和topic的区别在于不会多次请求。</li></ul><p><img src="https://vip2.loli.io/2023/03/13/BZb9SmhtiFAWUJ1.png" alt="jL2GrOVcY9DFTMW"></p><p><img src="https://vip2.loli.io/2023/03/13/rfEpq7v61GDWLUC.png" alt="A49f1qrIRZ7ibJO"></p><h4 id="3-3-2-话题和服务的对比">3.3.2 话题和服务的对比</h4><p><img src="https://vip2.loli.io/2023/03/13/gIU6p73NEMzj1Ku.png" alt="H758dzbs4JxnkPl"></p><h3 id="3-4-参数">3.4 参数</h3><h4 id="3-4-1-参数（Parameter）—全局共享字典">3.4.1 参数（Parameter）—全局共享字典</h4><ul><li>可通过<strong>网络</strong>访问的共享、多变量<strong>字典</strong>；</li><li>节点使用此服务器来存储和检索运行时的<strong>参数</strong>；</li><li>适合存储静态、非二进制的<strong>配置参数</strong>，不适合存储动态配置的数据。</li></ul><h3 id="3-5-文件系统">3.5 文件系统</h3><h4 id="3-5-1-功能包（Package）">3.5.1 功能包（Package）</h4><ul><li>ROS软件中的基本单元，包含节点源码、配置文件、数据定义等</li></ul><h4 id="3-5-2-功能包清单（Package-manifest）">3.5.2 功能包清单（Package manifest）</h4><ul><li>记录功能包的基本信息，包含作者信息、许可信息、依赖选项、编译标志等</li></ul><h4 id="3-5-3-元功能包（Meta-Packages）">3.5.3 元功能包（Meta Packages）</h4><ul><li>组织多个用于同一目的的功能包</li></ul><p><img src="https://vip2.loli.io/2023/03/13/5oOE2teY9fNhk4C.png" alt="image-20220106151521814"></p><p><img src="https://vip2.loli.io/2023/03/13/IiDXQYLxUoSArk5.png" alt="image-20220106154422975"></p><h2 id="4-ROS命令行工具">4. ROS命令行工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun turtlesim</span><br></pre></td></tr></table></figure><p>turtlesim是一个功能包的名字，通过 tab 键可以将功能包里面所有节点列出，</p><p><img src="https://vip2.loli.io/2023/03/13/p6PWweqvR3yBGdk.png" alt="image-20220105223429728"></p><h3 id="4-1-rqt-graph">4.1 rqt_graph</h3><p>rqt_graph是基于qt的可视化工具，用来显示系统计算图的工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rqt_graph   <span class="comment"># 显示出系统的计算图，可以知道这个系统是干嘛的</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/KxvnIdYjCEhqDM3.png" alt="image-20220105223849599"></p><h3 id="4-2-rosnode">4.2 rosnode</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rosnode   <span class="comment"># 显示系统节点的指令</span></span><br><span class="line">rosnode list  <span class="comment"># 将系统所有的节点全部列出的指令</span></span><br><span class="line">rosnode info  <span class="comment"># 用来查看某一个节点具体信息是什么样的</span></span><br><span class="line">rosnode info /turtlesim   <span class="comment"># 差看turtlesim这个节点是什么样的</span></span><br></pre></td></tr></table></figure><p>如果不知道这个指令的意思，可以直接回车，即可看到该指令相关的含义和使用方法</p><p>对于运行小海龟后，通过 rosnode list 可以列出所有的节点为 rosout teleop_turtle turtlesim三个节点，rosout在rqt中没有体现，这个是只要启动roscore就会自动启动的一个节点，用来输出一些日志之类的信息，一般不用考虑。</p><p><img src="https://vip2.loli.io/2023/03/13/GMpinrNOR4eT1Wl.png" alt="image-20220105225200652"></p><p>由图可以看出小海龟发布了哪些话题，订阅了哪些话题，根据订阅的话题对小海龟做一些移动，以及一些服务，通过服务完成 一些配置。</p><h3 id="4-3-rostopic">4.3 rostopic</h3><p>跟话题相关的命令行工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rostopic list  <span class="comment"># 通过rostopic]] list可以打印出当前话题的列表</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/47YEciCj56fartb.png" alt="image-20220105230024752"></p><p><img src="https://vip2.loli.io/2023/03/13/GiOaFDZejLTqHXQ.png" alt="image-20220105231138306"></p><p>twist指的是消息，linear指的是线速度，angular指的是角速度，每个速度分为xyz方向上的分量。pub指令只会发布一次，如果希望小海龟一直动，需要一个循环</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rostopic pub -r 10 /turtle1/cmd_vel geometry_msgs/Twist <span class="string">&quot;linear:</span></span><br><span class="line"><span class="string">  x: 1.0</span></span><br><span class="line"><span class="string">  y: 0.0</span></span><br><span class="line"><span class="string">  z: 0.0</span></span><br><span class="line"><span class="string">angular:</span></span><br><span class="line"><span class="string">  x: 0.0</span></span><br><span class="line"><span class="string">  y: 0.0</span></span><br><span class="line"><span class="string">  z: 0.0&quot;</span></span><br></pre></td></tr></table></figure><p>如果想看看Twist消息的结构，可以通过rosmsg来查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosmsg show geometry_msgs/Twist</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/pJ6xEXNUQPVYi1w.png" alt="image-20220105232232640"></p><h3 id="4-4-rosservice">4.4 rosservice</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosservice list    <span class="comment"># 通过该指令可以列出有哪些服务</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/PAsRlTSY6Z7yt41.png" alt="image-20220105233059696"></p><p>产生一个相同的海龟，可以通过以下指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rosservice call /spawn <span class="string">&quot;x: 0.0</span></span><br><span class="line"><span class="string">y: 0.0</span></span><br><span class="line"><span class="string">theta: 0.0</span></span><br><span class="line"><span class="string">name: &#x27;turtle2&#x27;&quot;</span></span><br></pre></td></tr></table></figure><p>这里的xy为小海龟的位置，theta为角度，name为海龟的名字</p><p><img src="https://vip2.loli.io/2023/03/13/flwFGbKgVu1Xpqa.png" alt="image-20220105233631611"></p><h3 id="4-5-rosbag">4.5 rosbag</h3><p>记录当前系统所有话题的数据，并进行保存，下次使用时再复现出来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosbag record -a -O cmd_record</span><br></pre></td></tr></table></figure><p>-a 表示将所有的数据都保存下来，-O 将保存的数据保存为 cmd_record 的压缩包</p><p><img src="https://vip2.loli.io/2023/03/13/OJhvdHEeIZVoc8P.png" alt="image-20220105235231189"></p><p>记录结束之后，按 ctrl + c 数据就被保存下来，保存的数据在当前终端的默认路径下。</p><p>启动roscore，再启动仿真器节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun turtlesim turtlesim_node</span><br></pre></td></tr></table></figure><p>通过数据包复现刚才的指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosbag play cmd_record.bag</span><br></pre></td></tr></table></figure><p>即可复现之前的操作过程。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS编程实现</title>
      <link href="/2022/05/06/ROS/ROS%E7%BC%96%E7%A8%8B%E5%AE%9E%E7%8E%B0/"/>
      <url>/2022/05/06/ROS/ROS%E7%BC%96%E7%A8%8B%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1>ROS编程实现</h1><h2 id="1-创造工作空间和功能包">1. 创造工作空间和功能包</h2><p>工作空间（workspace）是一个存放工程开发相关文件的文件夹</p><p><strong>src</strong>：代码空间（Source Space），用来放置功能包的代码、配置文件、launch文件</p><p><strong>build</strong>：编译空间（Build Space），编译过程中产生的中间文件，二进制文件，不用考虑</p><p><strong>devel</strong>：开发空间（Development Space）放置开发中编译生成的可执行文件，一些库、脚本</p><p><strong>install</strong>：安装空间（Install Space），安装指令/程序的位置，放置开发后生成的可执行文件，和devel文件夹类似</p><p><img src="https://vip2.loli.io/2023/03/13/4U3YOziuL1brVHE.png" alt="image-20220107221102273"></p><h3 id="1-1-创建工作空间">1.1 创建工作空间</h3><p><strong>创建工作空间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/catkin_ws/src</span><br><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src</span><br><span class="line">catkin_init_workspace</span><br></pre></td></tr></table></figure><p><strong>编译工作空间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws/</span><br><span class="line">catkin_make</span><br></pre></td></tr></table></figure><p><strong>设置环境变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> devel/setup.bash</span><br></pre></td></tr></table></figure><p><strong>检查环境变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$ROS_PACKAGE_PATH</span>   <span class="comment"># 显示ROS功能包路径，只有前面source之后才能通过echo命令显示出来</span></span><br></pre></td></tr></table></figure><p>如果想产生install文件夹，可以通过<code>catkin_make install</code>编译后即可产生install安装空间，存放最终编译的可执行文件</p><p><img src="https://vip2.loli.io/2023/03/13/KsGfw1ahl3TObqp.png" alt="image-20220107223553725"></p><h3 id="1-2-创建功能包">1.2 创建功能包</h3><p><strong>创建功能包</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src</span><br><span class="line">catkin_create_pkg test_pkg std_msgs rospy roscpp catkin_create_pkg &lt;package_name&gt; [depend 1][depend 2][depend 3]</span><br></pre></td></tr></table></figure><p>test_pkg编译过程中用到哪些库，就需要跟哪些依赖，比如std_msgs、rospy、roscpp，这些库都放到src文件夹中。</p><p><strong>编译功能包</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make</span><br><span class="line"><span class="built_in">source</span> ~/catkin_ws/devel/setup.bash</span><br></pre></td></tr></table></figure><p><strong>同一个工作空间下，不允许存在同名功能包，不同工作空间下，允许存在同名功能包</strong></p><p>编译过后，C++头文件可以放到include文件夹中，功能包中一定有CMakeLists.txt和package.xml，这两个文件说明该文件夹为功能包。</p><p><strong>package.xml的作用</strong>：记录该功能包相关的信息、个人信息、开源许可证、功能包依赖信息等，如果需要增加相应的依赖，可以再进行拓展。</p><p><strong>CMakeLists.txt的作用</strong>：描述功能包的编译规则，主要的语法是Cmake语法。</p><h2 id="2-发布者Publisher的编程实现">2. 发布者Publisher的编程实现</h2><p>发布者编程实现原理图：</p><p><img src="https://vip2.loli.io/2023/03/13/dmIiyEf2h9rB3qt.png" alt="image-20220108001134600"></p><h3 id="2-1-创建功能包">2.1 创建功能包</h3><p>具体操作步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~catkin_ws/src</span><br><span class="line">catkin_create_pkg learning_topic rospy roscpp std_msgs geometry_msgs turtlesim</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/NdroFRhOAfUyJMt.png" alt="image-20220108001818372"></p><h3 id="2-2-配置发布者代码编译规则">2.2 配置发布者代码编译规则</h3><p><strong>如何配置CMakeLists.txt中的编译规则：</strong></p><ul><li>设置需要编译的代码和生成的可执行文件；</li><li>设置链接库；</li><li>CMakeLists.txt中主要描述了如何编译以及编译的规则。</li></ul><p>在<code>~/catkin_ws/src/learning_topic</code>文件夹下的<code>CMakeLists.txt</code>文件中加入如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_executable(velocity_publisher src/velocity_publisher.cpp) <span class="comment">##将src/velocity_publisher.cpp编译成名为velocity_publisher的可执行文件</span></span><br><span class="line">target_link_libraries(velocity_publisher <span class="variable">$&#123;catkin_LIBRARIES&#125;</span>) <span class="comment">##将可执行文件velocity_publisher和ROS相关的库做一个链接，比如C++的接口#python不用做接口，python不需要编译</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/ptEPkH6lIseZ4xu.png" alt="image-20220108232013967"></p><h3 id="2-3-用C-python实现发布者">2.3 用C++/python实现发布者</h3><p>在src文件夹中创建cpp文件</p><p><strong>C++代码实现一个发布者</strong>：</p><ul><li>初始化ROS节点；</li><li>向ROS Master注册节点信息，包括发布的话题名和话题中的消息类型；</li><li>创建消息数据；</li><li>按照一定频率循环发布消息。</li></ul><p><strong>具体实现的C++代码</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*该例程将发布turtle1/cmd_vel话题，消息类型geometry_msgs:Twist</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span>    <span class="comment">//包含ROS相关的头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;geometry_msgs/Twist.h&gt;</span>  <span class="comment">//ROS中线速度和角速度相关消息的头文件，geometry_msgs库中已经定义好的头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ROS节点初始化，</span></span><br><span class="line">    ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;velocity_publisher&quot;</span>); <span class="comment">//velocity_publisher为节点的名字，在ROS中节点名不能重复。                             //argc和argv为输入的参数来设置初始化的属性，默认情况下属性不作配置，只有velocity_publisher这个名字</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建节点句柄，主要用来管理ROS相关API的资源，比如发布者创建API调用需要节点句柄的调用，用来管理节点资源。</span></span><br><span class="line">    ros::NodeHandle n;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*创建一个Publisher，发布名为/turtle1/cmd_vel的topic，消息类型为geometry_msgs::Twist，队列长度10。Publisher里面有一个缓存（队列），先把数据放入缓存中，再根据实际传输能力传输数据，当缓存空间不够或者传输速度太慢，会将最老的数据删除，只保留缓存长度的数据，再进行数据传输，出现这种情况时，会出现掉帧掉数据的情况*/</span></span><br><span class="line">    ros==Publisher turtle_vel_pub = n.<span class="built_in">advertise</span>&lt;geometry_msgs==Twist&gt;(<span class="string">&quot;/turtle1/cmd_vel&quot;</span>,<span class="number">10</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置循环的频率，后续有一个while循环，loop_rate用来设置频率的</span></span><br><span class="line">    <span class="function">ros::Rate <span class="title">loop_rate</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (ros::<span class="built_in">ok</span>()) <span class="comment">//封装数据，发不出去，延时满足频率，进行下一次循环</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 初始化geometry_msgs::Twist类型的消息，</span></span><br><span class="line">        geometry_msgs::Twist vel_msg; <span class="comment">//设置Twist消息的内容，首先创建Twist消息，Twist是一个类，首先创建类的对象，对象中包括线速度角速度</span></span><br><span class="line">        vel_msg.linear.x = <span class="number">0.5</span>;  <span class="comment">//设置线速度</span></span><br><span class="line">        vel_msg.angular.z = <span class="number">0.2</span>;  <span class="comment">//设置角速度</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 发布消息</span></span><br><span class="line">        turtle_vel_pub.<span class="built_in">publish</span>(vel_msg); <span class="comment">//调用发布者turtle_vel_pub，使用publish这个方法，publisher的输入是vel_msg</span></span><br><span class="line">        <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Publish turtlesim velocity command[%0.2f m/s, %0.2f rad/s]&quot;</span>,vel_msg.linear.x, vel_msg.angular.z);</span><br><span class="line">        <span class="comment">//ROS_INFO相当于printf，用来输出信息</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 按照循环频率演示</span></span><br><span class="line">        loop_rate.<span class="built_in">sleep</span>();<span class="comment">//延时10Hz</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>python代码实现一个发布者</strong>：</p><ul><li>初始化ROS节点；</li><li>向ROS Master注册节点信息，包括发布的话题名和话题中的消息类型；</li><li>创建消息数据；</li><li>按照一定频率循环发布消息。</li></ul><p><strong>具体实现的python代码</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该例程将发布turtle1/cmd_vel话题，消息类型geometry_msgs::Twist</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Twist</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">velocity_publisher</span>():</span><br><span class="line"><span class="comment"># ROS节点初始化</span></span><br><span class="line">    rospy.init_node(<span class="string">&#x27;velocity_publisher&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个Publisher，发布名为/turtle1/cmd_vel的topic，消息类型为geometry_msgs::Twist，队列长度10</span></span><br><span class="line">    turtle_vel_pub = rospy.Publisher(<span class="string">&#x27;/turtle1/cmd_vel&#x27;</span>, Twist, queue_size=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置循环的频率</span></span><br><span class="line">    rate = rospy.Rate(<span class="number">10</span>) </span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line"><span class="comment"># 初始化geometry_msgs::Twist类型的消息</span></span><br><span class="line">        vel_msg = Twist()</span><br><span class="line">        vel_msg.linear.x = <span class="number">0.5</span></span><br><span class="line">        vel_msg.angular.z = <span class="number">0.2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发布消息</span></span><br><span class="line">        turtle_vel_pub.publish(vel_msg)</span><br><span class="line">    rospy.loginfo(<span class="string">&quot;Publsh turtle velocity command[%0.2f m/s, %0.2f rad/s]&quot;</span>, </span><br><span class="line">vel_msg.linear.x, vel_msg.angular.z)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照循环频率延时</span></span><br><span class="line">        rate.sleep()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        velocity_publisher()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="2-4-编译并运行发布者">2.4 编译并运行发布者</h3><p>编译具体操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make   <span class="comment"># 用该指令进行编译</span></span><br><span class="line"><span class="built_in">source</span> devel/setup.bash   <span class="comment"># 设置环境变量，可以将该句程序放入.bashrc文件的最后一行</span></span><br><span class="line">roscore</span><br><span class="line">rosrun turtlesim turtlesim_node</span><br><span class="line">rosrun learning_topic velocity_publisher <span class="comment"># 运行learning_topic文件中的velocity_publisher节点</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/hzcQkKZFwBvP3pH.png" alt="image-20220108234447167"></p><p>python文件放在scripts文件夹中，同时注意要设置python文件具有可执行文件。</p><p><img src="https://vip2.loli.io/2023/03/13/ItZwVRczbSDnqCG.png" alt="image-20220109001406674"></p><h2 id="3-订阅者Subscriber的编程实现">3. 订阅者Subscriber的编程实现</h2><p>订阅者编程实现原理图：</p><p><img src="https://vip2.loli.io/2023/03/13/uknUS8toJce4Iva.png" alt="image-20220109002944532"></p><h3 id="3-1-配置发布者代码编译规则">3.1 配置发布者代码编译规则</h3><p><strong>如何配置CMakeLists.txt中的编译规则：</strong></p><ul><li>设置需要编译的代码和生成的可执行文件；</li><li>设置链接库</li></ul><p>在<code>~/catkin_ws/src/learning_topic</code>文件夹下的<code>CMakeLists.txt</code>文件中加入如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_executable(pose_subscriber src/pose_subscriber.cpp) <span class="comment"># 将src/pose_subscriber.cpp编译成名为pose_subscriber的可执行文件</span></span><br><span class="line">target_link_libraries(pose_subscriber <span class="variable">$&#123;catkin_LIBRARIES&#125;</span>) <span class="comment"># 将可执行文件pose_subscriber和ROS相关的库做一个链接，比如C++的接口</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/oVTUtKCMJXHjWk3.png" alt="image-20220109010041310"></p><h3 id="3-2-用C-python实现订阅者">3.2 用C++/python实现订阅者</h3><p><strong>C++代码实现一个订阅者</strong>：</p><ul><li>初始化ROS节点；</li><li>订阅需要的话题；</li><li>循环等待话题消息，接收到消息后进入回调函数；</li><li>在回调函数中完成消息处理。</li></ul><p><strong>具体实现的C++代码</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该例程将订阅/turtle1/pose话题，消息类型turtlesim::Pose，这是小海龟仿真器自己定义的信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;turtlesim/Pose.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收到订阅的消息后，会进入消息回调函数，turtlesim::Pose是消息的结构，后面的ConstPtr调用的是长指针</span></span><br><span class="line"><span class="comment">//当msg数据传输过来的时候，就以长指针的形式指向turtlesim::Pose这个姿态信息的数据内容</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">poseCallback</span><span class="params">(<span class="type">const</span> turtlesim==Pose==ConstPtr&amp; msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 将接收到的消息打印出来</span></span><br><span class="line">    <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Turtle pose: x:%0.6f, y:%0.6f&quot;</span>, msg-&gt;x, msg-&gt;y); <span class="comment">//输出海龟的信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 初始化ROS节点</span></span><br><span class="line">    ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;pose_subscriber&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建节点句柄</span></span><br><span class="line">    ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个Subscriber这个类，创建一个pose_sub这个对象，订阅名为/turtle1/pose的topic，需要和turtlesim相对应，注册回调函数poseCallback</span></span><br><span class="line">    <span class="comment">//其中10为订阅话题的队列长度，poseCallback为回调函数，因为数据不知道什么时候发送过来，因此有回调函数，当有数据进来，就调用回调函数进行处理</span></span><br><span class="line">    ros::Subscriber pose_sub = n.<span class="built_in">subscribe</span>(<span class="string">&quot;/turtle1/pose&quot;</span>, <span class="number">10</span>, poseCallback);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环等待回调函数，死循环，不断查看队列中是否有数据过来，如果有则进入poseCallback进行处理，如果没有则不断地死循环</span></span><br><span class="line">    ros::<span class="built_in">spin</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>python代码实现一个订阅者</strong>：</p><ul><li>初始化ROS节点；</li><li>订阅需要的话题；</li><li>循环等待话题消息，接收到消息后进入回调函数；</li><li>在回调函数中完成消息处理。</li></ul><p><strong>具体实现的python代码</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该例程将订阅/turtle1/pose话题，消息类型turtlesim::Pose</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> turtlesim.msg <span class="keyword">import</span> Pose</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">poseCallback</span>(<span class="params">msg</span>):</span><br><span class="line">    rospy.loginfo(<span class="string">&quot;Turtle pose: x:%0.6f, y:%0.6f&quot;</span>, msg.x, msg.y)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pose_subscriber</span>():</span><br><span class="line"><span class="comment"># ROS节点初始化</span></span><br><span class="line">    rospy.init_node(<span class="string">&#x27;pose_subscriber&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个Subscriber，订阅名为/turtle1/pose的topic，注册回调函数poseCallback</span></span><br><span class="line">    rospy.Subscriber(<span class="string">&quot;/turtle1/pose&quot;</span>, Pose, poseCallback)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环等待回调函数</span></span><br><span class="line">    rospy.spin()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    pose_subscriber()</span><br></pre></td></tr></table></figure><p>python可以不用编译，直接可以运行。</p><h3 id="3-3-编译并运行发布者">3.3 编译并运行发布者</h3><p>编译具体操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make   <span class="comment"># 用该指令进行编译</span></span><br><span class="line"><span class="built_in">source</span> devel/setup.bash   <span class="comment"># 设置环境变量，可以将该句程序放入.bashrc文件的最后一行</span></span><br><span class="line">roscore</span><br><span class="line">rosrun turtlesim turtlesim_node</span><br><span class="line">rosrun learning_topic velocity_subscriber<span class="comment">#运行learning_topic文件中的velocity_subscriber节点,如果小海龟不移动，则订阅的小海龟的位置不变。</span></span><br><span class="line">rosrun turtlesim turtle_teleop_key <span class="comment"># 运行键盘遥控节点，控制小海龟移动，可以看到订阅的小海龟位置发生改变</span></span><br></pre></td></tr></table></figure><h2 id="4-话题消息的定义与使用">4. 话题消息的定义与使用</h2><h3 id="4-1-自定义消息文件的配置">4.1 自定义消息文件的配置</h3><p><strong>步骤一：定义msg文件</strong></p><p>在<code>learning_topic</code>文件夹中创建<code>msg</code>文件夹，跟消息相关定义都存放在<code>msg</code>文件夹中，方便管理，创建文件<code>person.msg</code>，打开文件，将下列文件放入<code>person.msg</code>文件中。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">string name</span><br><span class="line">uint8 sex</span><br><span class="line">uint8 age</span><br><span class="line"></span><br><span class="line">uint8 unknown = <span class="number">0</span></span><br><span class="line">uint8 male    = <span class="number">1</span></span><br><span class="line">uint8 female  = <span class="number">2</span></span><br></pre></td></tr></table></figure><p><strong>步骤二：在package.xml中添加功能包依赖</strong></p><p>在<code>learning_topic</code>文件夹中打开<code>package.xml</code>文件，添加下面的语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>message_generation<span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>message_runtime<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一个是编译依赖，编译依赖是一个动态产生message的功能包；一个是执行依赖，执行依赖是一个执行message的功能包。如下图：</p><p><img src="https://vip2.loli.io/2023/03/13/e29H7xKyvX3cPm1.png" alt="image-20220109143133953"></p><p><strong>步骤三：在CMakeLists.txt添加编译选项</strong></p><ul><li>find_package(……  message_generation)</li><li>add_message_files(FILES Person.msg)    将定义的Person.msg作为接口，针对其来进行编译</li></ul><p>​generate_messages(DEPENDENCIES std_msgs)    编译Person.msg需要ROS已有的库或者包，需要依赖std_msgs</p><ul><li>catkin_package(……  message_runtime)    创建message运行依赖</li></ul><p>分别对应CMakeLists.txt文件中的内容为：</p><p><img src="https://vip2.loli.io/2023/03/13/7fu93b6YQDGvRFn.png" alt="image-20220109143527394"></p><p><img src="https://vip2.loli.io/2023/03/13/UHa1WuT2AVNIxpo.png" alt="image-20220109144602025"></p><p><img src="https://vip2.loli.io/2023/03/13/qW41ksztpO3u6hV.png" alt="image-20220109145204729"></p><p><strong>步骤四：编译生成语言相关文件</strong></p><p>在工作空间的根目录<code>catkin_ws</code>下通过<code>catkin_make</code>进行编译，生成Person.h头文件。</p><p><img src="https://vip2.loli.io/2023/03/13/udlmAP5y4Fq1MgC.png" alt="image-20220109150648353"></p><h3 id="4-2-话题消息的使用">4.2 话题消息的使用</h3><p>如何根据上面4.1生成的<code>Person.h</code>头文件，通过程序来使用它，具体操作步骤如下：</p><p>在src文件夹中创建cpp文件</p><h4 id="4-2-1-C-代码实现发布者">4.2.1 C++代码实现发布者</h4><ul><li>初始化ROS节点；</li><li>向ROS Master注册节点信息，包括发布的话题名和话题中的消息类型；</li><li>创建消息数据；</li><li>按照一定频率循环发布消息。</li></ul><p><strong>具体实现的C++代码</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该例程将发布/person_info话题，自定义消息类型learning_topic::Person</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;learning_topic/Person.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ROS节点初始化</span></span><br><span class="line">    ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;person_publisher&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建节点句柄</span></span><br><span class="line">    ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个Publisher，发布名为/person_info的topic，消息类型为learning_topic::Person，队列长度10</span></span><br><span class="line">    ros==Publisher person_info_pub = n.<span class="built_in">advertise</span>&lt;learning_topic==Person&gt;(<span class="string">&quot;/person_info&quot;</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置循环的频率</span></span><br><span class="line">    <span class="function">ros::Rate <span class="title">loop_rate</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (ros::<span class="built_in">ok</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 初始化learning_topic::Person类型的消息</span></span><br><span class="line">    learning_topic::Person person_msg;</span><br><span class="line">person_msg.name = <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line">person_msg.age  = <span class="number">18</span>;</span><br><span class="line">person_msg.sex  = learning_topic==Person==male;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发布消息</span></span><br><span class="line">person_info_pub.<span class="built_in">publish</span>(person_msg);</span><br><span class="line"></span><br><span class="line">       <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Publish Person Info: name:%s  age:%d  sex:%d&quot;</span>, </span><br><span class="line">  person_msg.name.<span class="built_in">c_str</span>(), person_msg.age, person_msg.sex);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按照循环频率延时</span></span><br><span class="line">        loop_rate.<span class="built_in">sleep</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-2-C-代码实现订阅者">4.2.2 C++代码实现订阅者</h4><ul><li>初始化ROS节点；</li><li>订阅需要的话题；</li><li>循环等待话题消息，接收到消息后进入回调函数；</li><li>在回调函数中完成消息处理。</li></ul><p><strong>具体实现的C++代码</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该例程将订阅/person_info话题，自定义消息类型learning_topic::Person</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;learning_topic/Person.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收到订阅的消息后，会进入消息回调函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">personInfoCallback</span><span class="params">(<span class="type">const</span> learning_topic==Person==ConstPtr&amp; msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 将接收到的消息打印出来</span></span><br><span class="line">    <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Subcribe Person Info: name:%s  age:%d  sex:%d&quot;</span>, </span><br><span class="line"> msg-&gt;name.<span class="built_in">c_str</span>(), msg-&gt;age, msg-&gt;sex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 初始化ROS节点</span></span><br><span class="line">    ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;person_subscriber&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建节点句柄</span></span><br><span class="line">    ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个Subscriber，订阅名为/person_info的topic，注册回调函数personInfoCallback</span></span><br><span class="line">    ros::Subscriber person_info_sub = n.<span class="built_in">subscribe</span>(<span class="string">&quot;/person_info&quot;</span>, <span class="number">10</span>, personInfoCallback);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环等待回调函数</span></span><br><span class="line">    ros::<span class="built_in">spin</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-3-编译配置文件">4.2.3  编译配置文件</h4><p>添加订阅者和发布者相关程序后，需要对CMakeList_List.txt文件进行配置</p><p>配置<code>CMakeLists.txt中</code>的编译规则：</p><ul><li>设置需要编译的代码和生成的可执行文件；</li><li>设置链接库；</li><li>添加依赖项。</li></ul><p>在<code>catkin_ws/src/learning_topic</code>文件夹下的<code>CMakeList_List.txt</code>文件中加入以下代码：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">add_executable(person_publisher src/person_publisher.cpp)</span><br><span class="line">target_link_libraries(person_publisher $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(person_publisher $&#123;PROJECT_NAME&#125;_generate_messages_cpp)</span><br><span class="line"></span><br><span class="line">add_executable(person_subscriber src/person_subscriber.cpp)</span><br><span class="line">target_link_libraries(person_subscriber $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(person_subscriber $&#123;PROJECT_NAME&#125;_generate_messages_cpp)</span><br></pre></td></tr></table></figure><p>有一些代码是动态生成的，需要将可执行文件和动态生成的程序产生依赖关系，因此需要通过<code>add_dependencies</code>命令来做一些连接。要和自己自定义的消息进行连接必须要添加这样一行代码。如图所示：</p><p><img src="https://vip2.loli.io/2023/03/13/9gh3G7AZmzuBCY8.png" alt="image-20220109153302090"></p><p>在工作空间的根目录<code>catkin_ws</code>下，通过<code>catkin_make</code>进行编译。</p><p>ROS Master是帮助节点之间创建连接，一旦两者创建连接后，关闭<code>roscore</code>，publisher和subscriber依然发布消息和订阅消息，此时ROS Master不再起作用。</p><h4 id="4-2-4-python代码实现">4.2.4 python代码实现</h4><p>发布者python实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该例程将发布/person_info话题，自定义消息类型learning_topic::Person</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> learning_topic.msg <span class="keyword">import</span> Person   <span class="comment"># 对应的msg文件也生成了python文件，通过import形式引入进来</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">velocity_publisher</span>():</span><br><span class="line"><span class="comment"># ROS节点初始化</span></span><br><span class="line">    rospy.init_node(<span class="string">&#x27;person_publisher&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个Publisher，发布名为/person_info的topic，消息类型为learning_topic::Person，队列长度10</span></span><br><span class="line">    person_info_pub = rospy.Publisher(<span class="string">&#x27;/person_info&#x27;</span>, Person, queue_size=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置循环的频率</span></span><br><span class="line">    rate = rospy.Rate(<span class="number">10</span>) </span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line"><span class="comment"># 初始化learning_topic::Person类型的消息</span></span><br><span class="line">    person_msg = Person()</span><br><span class="line">    person_msg.name = <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line">    person_msg.age  = <span class="number">18</span>;</span><br><span class="line">    person_msg.sex  = Person.male;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发布消息</span></span><br><span class="line">        person_info_pub.publish(person_msg)</span><br><span class="line">    rospy.loginfo(<span class="string">&quot;Publsh person message[%s, %d, %d]&quot;</span>, </span><br><span class="line">person_msg.name, person_msg.age, person_msg.sex)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照循环频率延时</span></span><br><span class="line">        rate.sleep()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        velocity_publisher()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>订阅者python实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该例程将订阅/person_info话题，自定义消息类型learning_topic::Person</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> learning_topic.msg <span class="keyword">import</span> Person</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">personInfoCallback</span>(<span class="params">msg</span>):</span><br><span class="line">    rospy.loginfo(<span class="string">&quot;Subcribe Person Info: name:%s  age:%d  sex:%d&quot;</span>, </span><br><span class="line"> msg.name, msg.age, msg.sex)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">person_subscriber</span>():</span><br><span class="line"><span class="comment"># ROS节点初始化</span></span><br><span class="line">    rospy.init_node(<span class="string">&#x27;person_subscriber&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个Subscriber，订阅名为/person_info的topic，注册回调函数personInfoCallback</span></span><br><span class="line">    rospy.Subscriber(<span class="string">&quot;/person_info&quot;</span>, Person, personInfoCallback)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环等待回调函数</span></span><br><span class="line">    rospy.spin()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    person_subscriber()</span><br></pre></td></tr></table></figure><h2 id="5-客户端Client的编程实现">5. 客户端Client的编程实现</h2><p>客户端Client编程实现原理图：</p><p><img src="https://vip2.loli.io/2023/03/13/I375BL9bwA8QJeu.png" alt="image-20220109162256828"></p><h3 id="5-1创建功能包">5.1创建功能包</h3><p>代码实现如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src</span><br><span class="line">catkin_create_pkg learning_service roscpp rospy std_msgs geometry_msgs turtlesim</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/XEJbFPGeKhvWZLu.png" alt="image-20220109162826338"></p><p><img src="https://vip2.loli.io/2023/03/13/8eJc7oUq2nYPvsO.png" alt="image-20220109162908264"></p><h3 id="5-2-C-python代码实现客户端">5.2 C++/python代码实现客户端</h3><h4 id="5-2-1-C-代码实现客户端">5.2.1 C++代码实现客户端</h4><p>在learning_service文件夹下的src文件中，新建turtle_spawn.cpp文件，实现流程如下：</p><ul><li>初始化ROS节点；</li><li>创建一个Client实例；</li><li>发布服务请求数据；</li><li>等待Server处理之后的应答结果。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该例程将请求/spawn服务，服务数据类型turtlesim::Spawn</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;turtlesim/Spawn.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 初始化ROS节点</span></span><br><span class="line">ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;turtle_spawn&quot;</span>); <span class="comment">//节点名为spawn</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建节点句柄</span></span><br><span class="line">ros::NodeHandle node;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发现/spawn服务后，创建一个服务客户端，连接名为/spawn的service</span></span><br><span class="line">ros==service==<span class="built_in">waitForService</span>(<span class="string">&quot;/spawn&quot;</span>);  <span class="comment">//循环等待spawn这样一个服务，是一个阻塞式的服务，只有服务在系统中存在了，才能请求这个服务</span></span><br><span class="line">ros==ServiceClient add_turtle = node.<span class="built_in">serviceClient</span>&lt;turtlesim==Spawn&gt;(<span class="string">&quot;/spawn&quot;</span>);<span class="comment">//创建客户端ServiceClient</span></span><br><span class="line">    <span class="comment">//客户端用来给spawn服务发送请求，请求的数据类型为turtlesim::Spawn，/spawn代表服务的名字。    </span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 初始化turtlesim::Spawn的请求数据</span></span><br><span class="line">turtlesim::Spawn srv;  <span class="comment">//定义srv</span></span><br><span class="line">srv.request.x = <span class="number">2.0</span>;   <span class="comment">//海龟的x轴坐标</span></span><br><span class="line">srv.request.y = <span class="number">2.0</span>;   <span class="comment">//海龟的y轴坐标，没有角速度</span></span><br><span class="line">srv.request.name = <span class="string">&quot;turtle2&quot;</span>; <span class="comment">//海龟的名字</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求服务调用，发一个日志，告诉终端已经准备好这个请求了</span></span><br><span class="line"><span class="built_in">ROS_INFO</span>(<span class="string">&quot;Call service to spwan turtle[x:%0.6f, y:%0.6f, name:%s]&quot;</span>, </span><br><span class="line"> srv.request.x, srv.request.y, srv.request.name.<span class="built_in">c_str</span>());</span><br><span class="line"></span><br><span class="line">add_turtle.<span class="built_in">call</span>(srv);<span class="comment">//请求的方法用call，call也是阻塞性函数，把request发出去后一直在等待服务器给反馈</span></span><br><span class="line">    <span class="comment">//如果一直等待超过call的时间，会提示超时</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示服务调用结果</span></span><br><span class="line"><span class="built_in">ROS_INFO</span>(<span class="string">&quot;Spwan turtle successfully [name:%s]&quot;</span>, srv.response.name.<span class="built_in">c_str</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="5-2-2-python代码实现客户端">5.2.2 python代码实现客户端</h4><p>在learning_service文件夹下的src文件中，新建turtle_spawn.cpp文件，实现流程如下：</p><ul><li>初始化ROS节点；</li><li>创建一个Client实例；</li><li>发布服务请求数据；</li><li>等待Server处理之后的应答结果。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该例程将请求/spawn服务，服务数据类型turtlesim::Spawn</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> turtlesim.srv <span class="keyword">import</span> Spawn</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">turtle_spawn</span>():</span><br><span class="line"><span class="comment"># ROS节点初始化</span></span><br><span class="line">    rospy.init_node(<span class="string">&#x27;turtle_spawn&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发现/spawn服务后，创建一个服务客户端，连接名为/spawn的service</span></span><br><span class="line">    rospy.wait_for_service(<span class="string">&#x27;/spawn&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        add_turtle = rospy.ServiceProxy(<span class="string">&#x27;/spawn&#x27;</span>, Spawn)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求服务调用，输入请求数据</span></span><br><span class="line">        response = add_turtle(<span class="number">2.0</span>, <span class="number">2.0</span>, <span class="number">0.0</span>, <span class="string">&quot;turtle2&quot;</span>)<span class="comment">##x轴坐标、y轴坐标、角度值、海龟的名字</span></span><br><span class="line">        <span class="keyword">return</span> response.name</span><br><span class="line">    <span class="keyword">except</span> rospy.ServiceException, e:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Service call failed: %s&quot;</span>%e</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"><span class="comment"># 服务调用并显示调用结果</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Spwan turtle successfully [name:%s]&quot;</span> %(turtle_spawn())</span><br></pre></td></tr></table></figure><h3 id="5-3-配置客户端代码编译规则">5.3 配置客户端代码编译规则</h3><p>如何配置<code>CMakeLists.txt</code>中的编译规则</p><ul><li>设置需要编译的代码和生成的可执行文件</li><li>设置链接库</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_executable(turtle_spawn src/turtle_spawn.cpp)  //将turtle_spawn.cpp文件编译成turtle_spawn的可执行文件</span><br><span class="line">target_link_libraries(turtle_spawn $&#123;catkin_LIBRARIES&#125;)  //将turtle_spawn链接到ROS对应的库</span><br></pre></td></tr></table></figure><h3 id="5-4-编译并运行客户端">5.4 编译并运行客户端</h3><p>回到工作空间的根目录<code>catkin_ws</code>文件夹下，通过<code>catkin_make</code>进行编译。</p><p><img src="https://vip2.loli.io/2023/03/13/UOfBI6FKLCm9GeP.png" alt="image-20220109173743981"></p><p>在<code>catkin_ws/devel/lib</code>文件夹下产生的<code>learning_service</code>文件夹就是编译后产生的，里面的<code>turtle_spawn</code>文件就是编译产生的可执行文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make</span><br><span class="line"><span class="built_in">source</span> devel/setup.bash</span><br><span class="line">roscore</span><br><span class="line">rosrun turtlesim turtlesim_node</span><br><span class="line">rosrun learning_service turtle_spawn</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/PtQmqkRWNx6DHI2.png" alt="image-20220109174700615"></p><p><img src="https://vip2.loli.io/2023/03/13/Po7h1aQr6VUJIHN.png" alt="image-20220109174536473"></p><p><strong>注意</strong>：要将python文件的权限选择允许作为程序执行文件，如下所示。</p><p><img src="https://vip2.loli.io/2023/03/13/y7plz98hiPtFOnW.png" alt="image-20220109175841987"></p><h2 id="6-服务端Server的编程实现">6. 服务端Server的编程实现</h2><p>服务端Server编程实现原理图：</p><p><img src="https://vip2.loli.io/2023/03/13/PjMR357A9ua8ter.png" alt="image-20220109180341410"></p><h3 id="6-1-用C-python实现一个服务器">6.1 用C++/python实现一个服务器</h3><h4 id="6-1-1-用C-实现一个服务器">6.1.1 用C++实现一个服务器</h4><p>在learning_service文件夹下的src文件中，新建turtle_command_server.cpp文件，实现流程如下：</p><ul><li>初始化ROS节点；</li><li>创建一个Server实例；</li><li>循环等待服务请求，进入回调函数；</li><li>在回调函数中完成服务功能的处理，并反馈应答数据。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该例程将执行/turtle_command服务，服务数据类型std_srvs/Trigger</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;geometry_msgs/Twist.h&gt;</span>  <span class="comment">//topic的头文件Twist</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;std_srvs/Trigger.h&gt;</span> <span class="comment">//服务数据类型的头文件Trigger</span></span></span><br><span class="line"></span><br><span class="line">ros::Publisher turtle_vel_pub;  <span class="comment">//全局的publisher</span></span><br><span class="line"><span class="type">bool</span> pubCommand = <span class="literal">false</span>;  <span class="comment">//作为标志位，标志海龟是运动还是停止，false是停止</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// service回调函数，输入参数req，输出参数res</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">commandCallback</span><span class="params">(std_srvs==Trigger==Request  &amp;req,</span></span></span><br><span class="line"><span class="params"><span class="function">         std_srvs==Trigger==Response &amp;res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pubCommand = !pubCommand;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示请求数据</span></span><br><span class="line">    <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Publish turtle velocity command [%s]&quot;</span>, pubCommand==<span class="literal">true</span>?<span class="string">&quot;Yes&quot;</span>:<span class="string">&quot;No&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置反馈数据</span></span><br><span class="line">res.success = <span class="literal">true</span>;</span><br><span class="line">res.message = <span class="string">&quot;Change turtle command state!&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ROS节点初始化</span></span><br><span class="line">    ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;turtle_command_server&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建节点句柄</span></span><br><span class="line">    ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建一个名为/turtle_command的server，注册回调函数commandCallback，实例为command_service，定义service的名字为turtle_command</span></span><br><span class="line">    <span class="comment">//类似订阅者，因为不知道数据什么时候过来，通过回调函数commandCallback来处理request，即一旦service收到request之后立刻跳到回调函数里面</span></span><br><span class="line">    <span class="comment">//在回调函数里面再做针对server的处理</span></span><br><span class="line">    ros::ServiceServer command_service = n.<span class="built_in">advertiseService</span>(<span class="string">&quot;/turtle_command&quot;</span>, commandCallback);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个Publisher，发布名为/turtle1/cmd_vel的topic，消息类型为geometry_msgs::Twist，队列长度10</span></span><br><span class="line">turtle_vel_pub = n.<span class="built_in">advertise</span>&lt;geometry_msgs::Twist&gt;(<span class="string">&quot;/turtle1/cmd_vel&quot;</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环等待回调函数</span></span><br><span class="line">    <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Ready to receive turtle command.&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置循环的频率</span></span><br><span class="line"><span class="function">ros::Rate <span class="title">loop_rate</span><span class="params">(<span class="number">10</span>)</span></span>;<span class="comment">//进行一秒钟10Hz来做topic的发布</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(ros::<span class="built_in">ok</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 查看一次回调函数队列</span></span><br><span class="line">    ros::<span class="built_in">spinOnce</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果标志为true，则发布速度指令</span></span><br><span class="line"><span class="keyword">if</span>(pubCommand)</span><br><span class="line">&#123;</span><br><span class="line">geometry_msgs::Twist vel_msg;</span><br><span class="line">vel_msg.linear.x = <span class="number">0.5</span>;</span><br><span class="line">vel_msg.angular.z = <span class="number">0.2</span>;</span><br><span class="line">turtle_vel_pub.<span class="built_in">publish</span>(vel_msg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//按照循环频率延时</span></span><br><span class="line">    loop_rate.<span class="built_in">sleep</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-1-2-用python实现一个服务器">6.1.2 用python实现一个服务器</h4><p>在python程序中没有spinOnce这条指令，通过python中的多线程指令来完成标志位是True还是False。</p><p>在learning_service文件夹下的scripts文件中，新建turtle_command_server.py文件，实现流程如下：</p><ul><li>初始化ROS节点；</li><li>创建一个Server实例；</li><li>循环等待服务请求，进入回调函数；</li><li>在回调函数中完成服务功能的处理，并反馈应答数据。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该例程将执行/turtle_command服务，服务数据类型std_srvs/Trigger</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">import</span> thread,time</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Twist</span><br><span class="line"><span class="keyword">from</span> std_srvs.srv <span class="keyword">import</span> Trigger, TriggerResponse</span><br><span class="line"></span><br><span class="line">pubCommand = <span class="literal">False</span>;</span><br><span class="line">turtle_vel_pub = rospy.Publisher(<span class="string">&#x27;/turtle1/cmd_vel&#x27;</span>, Twist, queue_size=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">command_thread</span>():</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:     <span class="comment"># 如果是True就继续，如果是False就跳过</span></span><br><span class="line"><span class="keyword">if</span> pubCommand:</span><br><span class="line">vel_msg = Twist()</span><br><span class="line">vel_msg.linear.x = <span class="number">0.5</span></span><br><span class="line">vel_msg.angular.z = <span class="number">0.2</span></span><br><span class="line">turtle_vel_pub.publish(vel_msg)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">commandCallback</span>(<span class="params">req</span>):</span><br><span class="line"><span class="keyword">global</span> pubCommand</span><br><span class="line">pubCommand = <span class="built_in">bool</span>(<span class="number">1</span>-pubCommand)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示请求数据</span></span><br><span class="line">rospy.loginfo(<span class="string">&quot;Publish turtle velocity command![%d]&quot;</span>, pubCommand)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 反馈数据</span></span><br><span class="line"><span class="keyword">return</span> TriggerResponse(<span class="number">1</span>, <span class="string">&quot;Change turtle command state!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">turtle_command_server</span>():</span><br><span class="line"><span class="comment"># ROS节点初始化</span></span><br><span class="line">    rospy.init_node(<span class="string">&#x27;turtle_command_server&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个名为/turtle_command的server，注册回调函数commandCallback</span></span><br><span class="line">    s = rospy.Service(<span class="string">&#x27;/turtle_command&#x27;</span>, Trigger, commandCallback)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环等待回调函数</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Ready to receive turtle command.&quot;</span></span><br><span class="line"></span><br><span class="line">    thread.start_new_thread(command_thread, ())</span><br><span class="line">    rospy.spin()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    turtle_command_server()</span><br></pre></td></tr></table></figure><h3 id="6-2-配置服务器代码编译规则">6.2 配置服务器代码编译规则</h3><p>如何配置<code>CMakeList.txt</code>中的编译规则：</p><ul><li>设置需要编译的代码和生成的可执行文件；</li><li>设置链接库。</li></ul><p>将下面的规则加入CMakeList.txt中：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_executable(turtle_command_server src/turtle_command_server.cpp)</span><br><span class="line">target_link_libraries(turtle_command_server $&#123;catkin_LIBRARIES&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/XoRenuDF458E3hy.png" alt="image-20220109192708646"></p><h3 id="6-3-编译并运行服务器">6.3 编译并运行服务器</h3><h4 id="6-3-1-编译运行C-程序">6.3.1 编译运行C++程序</h4><p>编译运行流程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make</span><br><span class="line"><span class="built_in">source</span> devel/setup.bash  <span class="comment"># 如果不想每次source，则需要在.bashrc中添加一行代码：source /home/yww/catkin_ws/devel/setup.bash</span></span><br><span class="line">roscore</span><br><span class="line">rosrun turtlesim turtlesim_node</span><br><span class="line">rosrun learning_service turtle_command_server</span><br><span class="line">rosservice call/turtle_command <span class="string">&quot;&#123;&#125;&quot;</span> <span class="comment">#&#123;&#125;里面的内容是request的内容，是空的，</span></span><br></pre></td></tr></table></figure><p>输入后的效果：</p><p><img src="https://vip2.loli.io/2023/03/13/fxuYL7aRTzOeoFt.png" alt="image-20220109194230634"></p><p>再一次最后一行命令的效果：</p><p><img src="https://vip2.loli.io/2023/03/13/italRSYCeoLwjQP.png" alt="image-20220109194523039"></p><p><img src="https://vip2.loli.io/2023/03/13/IOaQmGNPbh9c2X5.png" alt="image-20220109194633759"></p><h4 id="6-3-2-编译运行python程序">6.3.2 编译运行python程序</h4><p>编译运行流程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make</span><br><span class="line"><span class="built_in">source</span> devel/setup.bash</span><br><span class="line">roscore</span><br><span class="line">rosrun turtlesim turtlesim_node</span><br><span class="line">rosrun learning_service turtle_command_server.py</span><br><span class="line">rosservice call/turtle_command <span class="string">&quot;&#123;&#125;&quot;</span> <span class="comment">#&#123;&#125;里面的内容是request的内容，是空的，</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/3htKFXcLkvoCpl1.png" alt="image-20220109200517280"></p><h2 id="7-服务数据的定义和使用">7. 服务数据的定义和使用</h2><p>服务模型的结构图：</p><p><img src="https://vip2.loli.io/2023/03/13/EYZXke6VHWzq1QT.png" alt="image-20220109234711913"></p><h3 id="7-1-如何自定义服务数据">7.1 如何自定义服务数据</h3><p><strong>步骤一：定义srv文件</strong></p><p>打开<code>catkin_ws/src/learning_service/srv</code>文件夹，创建<code>Person.srv</code>文件，打开，并输入以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">string  name</span><br><span class="line">uint8   age</span><br><span class="line">uint8   sex</span><br><span class="line"></span><br><span class="line">uint8   unknown = 0</span><br><span class="line">uint8   male    = 1</span><br><span class="line">uint8   female  = 2</span><br><span class="line">---</span><br><span class="line">string result</span><br></pre></td></tr></table></figure><p>在<code>---</code>上面是<code>request</code>，在<code>---</code>下面是<code>response</code>。</p><p><strong>步骤二：在package.xml中添加功能包依赖</strong></p><p>打开<code>catkin_ws/src/learning_service</code>文件夹中打开<code>package.xml</code>文件，将下面的代码加入其中：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>message_generation<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>message_runtime<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/czYhETmyweR7kHn.png" alt="image-20220110000303130"></p><p><strong>步骤三：在CMakeLists.txt添加编译选项</strong></p><p>打开<code>catkin_ws/src/learning_service</code>文件夹中打开CMakeLists.txt文件中做如下修改</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">find_package(... message_generation)</span><br><span class="line"></span><br><span class="line">add_service_files(FILES Person.srv)</span><br><span class="line">generate_messages(DEPENDENCIES std_msgs)</span><br><span class="line"></span><br><span class="line">catkin_package(... message_runtime)</span><br></pre></td></tr></table></figure><p>具体实现的效果如图：</p><p><img src="https://vip2.loli.io/2023/03/13/pqE3li6BDVe5auo.png" alt="image-20220110001104459"></p><p><img src="https://vip2.loli.io/2023/03/13/yo4kPsgbaXFLOCD.png" alt="image-20220110001211592"></p><p><img src="https://vip2.loli.io/2023/03/13/tZOwnVfG74MxivP.png" alt="image-20220110001315761"></p><p><strong>步骤四：编译生成语言相关文件</strong></p><p>回到工作空间根目录<code>catkin_ws</code>下，通过<code>catkin_make</code>进行编译。</p><p>编译后在<code>Person.h</code>文件中包含了<code>PersonRequest.h</code>和<code>PersonResponse.h</code>文件，用的时候包含一个<code>Person.h</code>就可以</p><p><img src="https://vip2.loli.io/2023/03/13/DFvZP1CU6RbTMdp.png" alt="image-20220110001845113"></p><h3 id="7-2-相关代码实现">7.2 相关代码实现</h3><h4 id="7-2-1-C-相关代码实现">7.2.1 C++相关代码实现</h4><p><strong>Client端的C++代码编写</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该例程将请求/show_person服务，服务数据类型learning_service::Person</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;learning_service/Person.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 初始化ROS节点</span></span><br><span class="line">ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;person_client&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建节点句柄</span></span><br><span class="line">ros::NodeHandle node;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发现/spawn服务后，创建一个服务客户端，连接名为/spawn的service</span></span><br><span class="line">ros==service==<span class="built_in">waitForService</span>(<span class="string">&quot;/show_person&quot;</span>);<span class="comment">//等待show_person服务</span></span><br><span class="line">ros==ServiceClient person_client = node.<span class="built_in">serviceClient</span>&lt;learning_service==Person&gt;(<span class="string">&quot;/show_person&quot;</span>);</span><br><span class="line">    <span class="comment">//learning_service::Person是自己定义的，数据service的对象是通道/show_person</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化learning_service::Person的请求数据</span></span><br><span class="line">learning_service::Person srv; <span class="comment">//Person和定义的srv的文件名完全一致</span></span><br><span class="line">srv.request.name = <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line">srv.request.age  = <span class="number">20</span>;</span><br><span class="line">srv.request.sex  = learning_service==Person==Request::male;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求服务调用</span></span><br><span class="line"><span class="built_in">ROS_INFO</span>(<span class="string">&quot;Call service to show person[name:%s, age:%d, sex:%d]&quot;</span>, </span><br><span class="line"> srv.request.name.<span class="built_in">c_str</span>(), srv.request.age, srv.request.sex);</span><br><span class="line"></span><br><span class="line">person_client.<span class="built_in">call</span>(srv);<span class="comment">//通过person_client.call把请求数据发出去，然后等待server的反馈结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示服务调用结果</span></span><br><span class="line"><span class="built_in">ROS_INFO</span>(<span class="string">&quot;Show person result : %s&quot;</span>, srv.response.result.<span class="built_in">c_str</span>());<span class="comment">// 反馈收到后，显示反馈结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>代码22行中的名字和srv的文件名一致，如下图：</p><p><img src="https://vip2.loli.io/2023/03/13/URdnaLYIbSzG5pX.png" alt="image-20220110004537101"></p><p><strong>Server端的C++代码编写</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该例程将执行/show_person服务，服务数据类型learning_service::Person</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;learning_service/Person.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// service回调函数，输入参数req，输出参数res</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">personCallback</span><span class="params">(learning_service==Person==Request  &amp;req,</span></span></span><br><span class="line"><span class="params"><span class="function">         learning_service==Person==Response &amp;res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 显示请求数据</span></span><br><span class="line">    <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Person: name:%s  age:%d  sex:%d&quot;</span>, req.name.<span class="built_in">c_str</span>(), req.age, req.sex);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置反馈数据</span></span><br><span class="line">res.result = <span class="string">&quot;OK&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ROS节点初始化</span></span><br><span class="line">    ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;person_server&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建节点句柄</span></span><br><span class="line">    ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个名为/show_person的server，注册回调函数personCallback</span></span><br><span class="line">    ros::ServiceServer person_service = n.<span class="built_in">advertiseService</span>(<span class="string">&quot;/show_person&quot;</span>, personCallback);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环等待回调函数</span></span><br><span class="line">    <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Ready to show person informtion.&quot;</span>);</span><br><span class="line">    ros::<span class="built_in">spin</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-2-2-python相关代码实现">7.2.2 python相关代码实现</h4><p>客户端相关的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">########################################################################</span></span><br><span class="line"><span class="comment">####          Copyright 2020 GuYueHome (www.guyuehome.com).          ###</span></span><br><span class="line"><span class="comment">########################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 该例程将请求/show_person服务，服务数据类型learning_service::Person</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> learning_service.srv <span class="keyword">import</span> Person, PersonRequest</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">person_client</span>():</span><br><span class="line"><span class="comment"># ROS节点初始化</span></span><br><span class="line">    rospy.init_node(<span class="string">&#x27;person_client&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发现/spawn服务后，创建一个服务客户端，连接名为/spawn的service</span></span><br><span class="line">    rospy.wait_for_service(<span class="string">&#x27;/show_person&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        person_client = rospy.ServiceProxy(<span class="string">&#x27;/show_person&#x27;</span>, Person)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求服务调用，输入请求数据</span></span><br><span class="line">        response = person_client(<span class="string">&quot;Tom&quot;</span>, <span class="number">20</span>, PersonRequest.male)</span><br><span class="line">        <span class="keyword">return</span> response.result</span><br><span class="line">    <span class="keyword">except</span> rospy.ServiceException, e:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Service call failed: %s&quot;</span>%e</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"><span class="comment"># 服务调用并显示调用结果</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Show person result : %s&quot;</span> %(person_client())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">########################################################################</span></span><br><span class="line"><span class="comment">####          Copyright 2020 GuYueHome (www.guyuehome.com).          ###</span></span><br><span class="line"><span class="comment">########################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 该例程将执行/show_person服务，服务数据类型learning_service::Person</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> learning_service.srv <span class="keyword">import</span> Person, PersonResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">personCallback</span>(<span class="params">req</span>):</span><br><span class="line"><span class="comment"># 显示请求数据</span></span><br><span class="line">    rospy.loginfo(<span class="string">&quot;Person: name:%s  age:%d  sex:%d&quot;</span>, req.name, req.age, req.sex)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 反馈数据</span></span><br><span class="line">    <span class="keyword">return</span> PersonResponse(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">person_server</span>():</span><br><span class="line"><span class="comment"># ROS节点初始化</span></span><br><span class="line">    rospy.init_node(<span class="string">&#x27;person_server&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个名为/show_person的server，注册回调函数personCallback</span></span><br><span class="line">    s = rospy.Service(<span class="string">&#x27;/show_person&#x27;</span>, Person, personCallback)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环等待回调函数</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Ready to show person informtion.&quot;</span></span><br><span class="line">    rospy.spin()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    person_server()</span><br></pre></td></tr></table></figure><h3 id="7-3-配置服务器-客户端代码编译规则">7.3 配置服务器/客户端代码编译规则</h3><p>配置<code>CMakeLists.txt</code>中的编译规则：</p><ul><li>设置需要编译的代码和生成的可执行文件；</li><li>设置链接库；</li><li>添加依赖项，依赖动态生成的cpp文件。</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">add_executable(person_server src/person_server.cpp)</span><br><span class="line">target_link_libraries(person_server $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(person_server $&#123;PROJECT_NAME&#125;_gencpp)</span><br><span class="line"></span><br><span class="line">add_executable(person_client src/person_client.cpp)</span><br><span class="line">target_link_libraries(person_client $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(person_client $&#123;PROJECT_NAME&#125;_gencpp)</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/fjQBeEGps6t37r2.png" alt="image-20220110010101564"></p><h3 id="7-4-编译并运行发布者和订阅者">7.4 编译并运行发布者和订阅者</h3><p>编译运行流程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make</span><br><span class="line"><span class="built_in">source</span> devel/setup.bash</span><br><span class="line">roscore</span><br><span class="line">rosrun learning_service person_server</span><br><span class="line">rosrun learning_service person_client</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/sHj6VOLxoE7erk5.png" alt="image-20220110010428506"></p><p><img src="https://vip2.loli.io/2023/03/13/nkJXecROVPBYdbf.png" alt="image-20220110010845829"></p><p>客户端每请求一次服务端显示一次。</p><h2 id="8-参数的使用与编程方法">8. 参数的使用与编程方法</h2><p>参数模型结构图：</p><p><img src="https://vip2.loli.io/2023/03/13/CrBgFfMZkDuasOz.png" alt="image-20220110215606138"></p><p>ROS Master中有一个参数服务器Parameter Server，是一个全局字典，用来保存各个节点之间的配置参数，各个节点都可以访问。</p><h3 id="8-1-参数模型的使用方法">8.1 参数模型的使用方法</h3><p>参数模型实现：</p><p>首先创建功能包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src</span><br><span class="line">catkin_create_pkg learning_parameter roscpp rospy std_ws</span><br></pre></td></tr></table></figure><p>rosparam命令行的使用方式：</p><p><code>rosparam list</code> 列出当前有多少参数</p><p><code>rosparam get param_key</code> 显示某个参数值</p><p><code>rosparam set param_key param_value </code> 设置某个参数值</p><p><code>rosparam dump file_name</code> 保存参数到文件</p><p><code>rosparam load file_name </code> 从文件读取参数</p><p><code>rosparam delete param_key</code> 删除参数</p><p><code>rosparam</code> 通过rosparam可以看到对该句命令的解释</p><p><img src="https://vip2.loli.io/2023/03/13/lhvQWdw8B9IgrSJ.png" alt="image-20220110220808769"></p><p>以小海龟案例为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br><span class="line">rosrun turtlesim turtlesim_node</span><br><span class="line">rosparam list</span><br></pre></td></tr></table></figure><p>可以显示如下：</p><p><img src="https://vip2.loli.io/2023/03/13/Ziud3seSpWjvgUP.png" alt="image-20220110222413859"></p><p>background_b、background_g、background_r是小海龟背景的颜色值</p><p>rosdistro是当前的ros是Melodic</p><p>rosversion是小海龟当前的版本</p><p>run_id为进程的id号</p><p>如果想得到某个参数的值，可以通过<code>rosparam get /background_b</code>获得：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosparam get /background_b</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/bpx7kB12YzO6vDC.png" alt="image-20220110223202858"></p><p>如果想修改某个参数的值，可以通过<code>rosparam set /background_b</code>修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosparam <span class="built_in">set</span> /background_b 100</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/cmnTU7jh5zDME1J.png" alt="image-20220110224131388"></p><p>需要发送一个请求才能把小海龟背景颜色给改变：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosservice call /clear <span class="string">&quot;&#123;&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>这个请求的服务名字为clear，发送空即可，发送请求后仿真器会查询rgb值，如果有更改，会根据新的值刷新背景颜色。</p><p><img src="https://vip2.loli.io/2023/03/13/OEMB9UwDqVCg35A.png" alt="image-20220110224737789"></p><p>保存ros系统的参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosparam dump yww_param.yaml</span><br></pre></td></tr></table></figure><p>回车之后会自动保存为<code>yww_param.yaml</code>文件，没有任何提示。</p><p>也可以更改<code>yww_param.yaml</code>中的数据，然后用以下命令进行加载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosparam load yww_param.yaml</span><br></pre></td></tr></table></figure><p>修改好之后通过获取<code>rosparam get /background_b</code>之后的值。</p><h3 id="8-2-用C-python实现参数的使用">8.2 用C++/python实现参数的使用</h3><h4 id="8-2-1-用C-实现参数的使用">8.2.1 用C++实现参数的使用</h4><p>通过以下代码实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src/learning_parameter/src</span><br><span class="line"><span class="built_in">touch</span> parameter_config.cpp</span><br></pre></td></tr></table></figure><p>其中<code>parameter_config.cpp</code>代码的结构为：</p><ul><li>初始化ROS节点；</li><li>get函数获取参数；</li><li>set函数设置参数。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该例程设置/读取海龟例程中的参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;std_srvs/Empty.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> red, green, blue;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ROS节点初始化</span></span><br><span class="line">    ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;parameter_config&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建节点句柄</span></span><br><span class="line">    ros::NodeHandle node;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取背景颜色参数</span></span><br><span class="line">ros==param==<span class="built_in">get</span>(<span class="string">&quot;/background_r&quot;</span>, red);</span><br><span class="line">ros==param==<span class="built_in">get</span>(<span class="string">&quot;/background_g&quot;</span>, green);</span><br><span class="line">ros==param==<span class="built_in">get</span>(<span class="string">&quot;/background_b&quot;</span>, blue);</span><br><span class="line"></span><br><span class="line"><span class="built_in">ROS_INFO</span>(<span class="string">&quot;Get Backgroud Color[%d, %d, %d]&quot;</span>, red, green, blue);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置背景颜色参数</span></span><br><span class="line">ros==param==<span class="built_in">set</span>(<span class="string">&quot;/background_r&quot;</span>, <span class="number">255</span>);</span><br><span class="line">ros==param==<span class="built_in">set</span>(<span class="string">&quot;/background_g&quot;</span>, <span class="number">255</span>);</span><br><span class="line">ros==param==<span class="built_in">set</span>(<span class="string">&quot;/background_b&quot;</span>, <span class="number">255</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">ROS_INFO</span>(<span class="string">&quot;Set Backgroud Color[255, 255, 255]&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取背景颜色参数</span></span><br><span class="line">ros==param==<span class="built_in">get</span>(<span class="string">&quot;/background_r&quot;</span>, red);</span><br><span class="line">ros==param==<span class="built_in">get</span>(<span class="string">&quot;/background_g&quot;</span>, green);</span><br><span class="line">ros==param==<span class="built_in">get</span>(<span class="string">&quot;/background_b&quot;</span>, blue);</span><br><span class="line"></span><br><span class="line"><span class="built_in">ROS_INFO</span>(<span class="string">&quot;Re-get Backgroud Color[%d, %d, %d]&quot;</span>, red, green, blue);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用服务，刷新背景颜色</span></span><br><span class="line">ros==service==<span class="built_in">waitForService</span>(<span class="string">&quot;/clear&quot;</span>);</span><br><span class="line">ros==ServiceClient clear_background = node.<span class="built_in">serviceClient</span>&lt;std_srvs==Empty&gt;(<span class="string">&quot;/clear&quot;</span>);</span><br><span class="line">std_srvs::Empty srv;</span><br><span class="line">clear_background.<span class="built_in">call</span>(srv);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sleep</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-2-2-用python实现参数的使用">8.2.2 用python实现参数的使用</h4><p>其中<code>parameter_config.py</code>代码的结构为：</p><ul><li>初始化ROS节点；</li><li>get函数获取参数；</li><li>set函数设置参数。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该例程设置/读取海龟例程中的参数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> std_srvs.srv <span class="keyword">import</span> Empty</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parameter_config</span>():</span><br><span class="line"><span class="comment"># ROS节点初始化</span></span><br><span class="line">    rospy.init_node(<span class="string">&#x27;parameter_config&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取背景颜色参数</span></span><br><span class="line">    red   = rospy.get_param(<span class="string">&#x27;/background_r&#x27;</span>)</span><br><span class="line">    green = rospy.get_param(<span class="string">&#x27;/background_g&#x27;</span>)</span><br><span class="line">    blue  = rospy.get_param(<span class="string">&#x27;/background_b&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    rospy.loginfo(<span class="string">&quot;Get Backgroud Color[%d, %d, %d]&quot;</span>, red, green, blue)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置背景颜色参数</span></span><br><span class="line">    rospy.set_param(<span class="string">&quot;/background_r&quot;</span>, <span class="number">255</span>);</span><br><span class="line">    rospy.set_param(<span class="string">&quot;/background_g&quot;</span>, <span class="number">255</span>);</span><br><span class="line">    rospy.set_param(<span class="string">&quot;/background_b&quot;</span>, <span class="number">255</span>);</span><br><span class="line"></span><br><span class="line">    rospy.loginfo(<span class="string">&quot;Set Backgroud Color[255, 255, 255]&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取背景颜色参数</span></span><br><span class="line">    red   = rospy.get_param(<span class="string">&#x27;/background_r&#x27;</span>)</span><br><span class="line">    green = rospy.get_param(<span class="string">&#x27;/background_g&#x27;</span>)</span><br><span class="line">    blue  = rospy.get_param(<span class="string">&#x27;/background_b&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    rospy.loginfo(<span class="string">&quot;Get Backgroud Color[%d, %d, %d]&quot;</span>, red, green, blue)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发现/spawn服务后，创建一个服务客户端，连接名为/spawn的service</span></span><br><span class="line">    rospy.wait_for_service(<span class="string">&#x27;/clear&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        clear_background = rospy.ServiceProxy(<span class="string">&#x27;/clear&#x27;</span>, Empty)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求服务调用，输入请求数据</span></span><br><span class="line">        response = clear_background()</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">    <span class="keyword">except</span> rospy.ServiceException, e:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Service call failed: %s&quot;</span>%e</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    parameter_config()</span><br></pre></td></tr></table></figure><h3 id="8-3-配置代码编译规则">8.3 配置代码编译规则</h3><p>配置<code>CMakeLists.txt</code>中的编译规则：</p><ul><li>设置需要编译的代码和生成的可执行文件</li><li>设置链接库</li></ul><p>将以下代码加入<code>CMakeLists.txt</code>中：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_executable(parameter_config src/parameter_config.cpp)</span><br><span class="line">target_link_libraries(parameter_config $&#123;catkin_LIBRARIES&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/SeNEGzXbALjxd7w.png" alt="image-20220110232209217"></p><p>然后在工作空间<code>catkin_ws</code>中用<code>catkin_make</code>进行编译，具体步骤如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make</span><br><span class="line"><span class="built_in">source</span> devel/setup.bash</span><br><span class="line">roscore</span><br><span class="line">rosrun turtlesim turtlesim_node</span><br><span class="line">rosrun learning_parameter parameter_config</span><br></pre></td></tr></table></figure><p>现象：小海龟的背景颜色由蓝色变为白色。</p><p><img src="https://vip2.loli.io/2023/03/13/Rm3lbIEVxkuLwpN.png" alt="image-20220110232902080"></p><p><img src="https://vip2.loli.io/2023/03/13/CQIOMuvlH7dPjp9.png" alt="image-20220110232751454"></p><h2 id="9-ROS中的坐标系管理系统">9. ROS中的坐标系管理系统</h2><p>机器人中的坐标变换（参考《机器人学导论》）：</p><p><img src="https://vip2.loli.io/2023/03/13/nCWLOdtzXpbFHru.png" alt="image-20220110234826366"></p><p><img src="https://vip2.loli.io/2023/03/13/KtdDPoFUzAY3eEI.png" alt="image-20220110235326959"></p><p><strong>通过tf管理两个坐标系</strong>。</p><p>坐标变换的示例，打开终端输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-melodic-turtle-tf</span><br><span class="line">roslaunch turtle_tf turtle_tf_demo.launch</span><br><span class="line">rosrun turtlesim turtle_teleop_key</span><br><span class="line">rosrun tf view_frames</span><br></pre></td></tr></table></figure><p>第一句命令的意思是需要安装<code>turtle_tf</code>示例的功能包。</p><p><strong>工具一</strong>：看到系统中所有tf之间的关系</p><p><code>rosrun tf view_frames</code>可以可视化看到系统中所有tf之间的关系，也是调试机器人经常用到的工具，输入命令后需要监听5s，5s内所有坐标系之间的关系都保存下来。</p><p><img src="https://vip2.loli.io/2023/03/13/snMwevWptE5xIF7.png" alt="image-20220111000720492"></p><p>world坐标系就是全局坐标系，表示的是整个仿真器的坐标原点，即左下角的原点，这个坐标点是不会动的。</p><p><strong>工具二</strong>：通过<code>tf_echo</code>查看两个坐标系之间的关系：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun tf tf_echo turtle1 turtle2</span><br></pre></td></tr></table></figure><p>这个描述了turtle2坐标系通过怎样的变换变换到turtle1坐标系。</p><p>Translation：即在xyz三个方向上的平移。</p><p>Rotation：坐标系通过怎样的旋转可以变成一样的姿态。分别进行四元数、弧度、角度单位来进行描述。</p><p><img src="https://vip2.loli.io/2023/03/13/BHMvL6jnlIw2eGy.png" alt="image-20220111001708097"></p><p><strong>工具三</strong>：通过<code>rviz</code>查看两个坐标系之间的关系：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun rviz rviz -d `rospack find turtle_tf` /rviz/turtle_rviz.rviz</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/hZA8mVTcbjuk5g6.png" alt="image-20220111002507221"></p><p>两个小海龟之间的坐标系的关系，可以通过两者和world坐标系的关系计算得到，两个四元矩阵具体计算如下：</p><p><img src="https://vip2.loli.io/2023/03/13/c4ZCjAowxbiXrRh.png" alt="image-20220111002759743"></p><h2 id="10-tf坐标系广播与监听的编程实现">10. tf坐标系广播与监听的编程实现</h2><p>创建功能包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src</span><br><span class="line">catkin_create_pkg learning_tf roscpp rospy tf turtlesim</span><br></pre></td></tr></table></figure><h3 id="10-1-创建tf广播器代码（C-python）">10.1 创建tf广播器代码（C++/python）</h3><p>如何实现一个tf广播器</p><ul><li>定义TF广播器（TransformBroadcaster）；</li><li>创建坐标变换值；</li><li>发布坐标变换（SendTransform）。</li></ul><p>在<code>catkin_ws/src/learning_tf/src</code>文件夹下创建<code>turtle_tf_broadcaste.cpp</code>文件，具体C++代码内容如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该例程产生tf数据，并计算、发布turtle2的速度指令</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tf/transform_broadcaster.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;turtlesim/Pose.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">std::string turtle_name;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">poseCallback</span><span class="params">(<span class="type">const</span> turtlesim::PoseConstPtr&amp; msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 创建tf的广播器</span></span><br><span class="line"><span class="type">static</span> tf::TransformBroadcaster br;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化tf数据，填充坐标系之间的映射关系</span></span><br><span class="line">tf::Transform transform;</span><br><span class="line">transform.<span class="built_in">setOrigin</span>( tf::<span class="built_in">Vector3</span>(msg-&gt;x, msg-&gt;y, <span class="number">0.0</span>) );<span class="comment">//设置xyz方向上的平移参数，由于是平面所以z为0。</span></span><br><span class="line">tf::Quaternion q;</span><br><span class="line">q.<span class="built_in">setRPY</span>(<span class="number">0</span>, <span class="number">0</span>, msg-&gt;theta);<span class="comment">//设置xyz轴的旋转角度，由于是平面所以xy轴都为0，只存在z轴的旋转</span></span><br><span class="line">transform.<span class="built_in">setRotation</span>(q);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 广播world与海龟坐标系之间的tf数据，广播之后可以在tf树中看到对应的关系</span></span><br><span class="line">br.<span class="built_in">sendTransform</span>(tf==<span class="built_in">StampedTransform</span>(transform, ros==Time::<span class="built_in">now</span>(), <span class="string">&quot;world&quot;</span>, turtle_name));</span><br><span class="line">    <span class="comment">//tf是有时间的概念，所以会有时间戳，记录的是当前时间。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 初始化ROS节点</span></span><br><span class="line">ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;my_tf_broadcaster&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入参数作为海龟的名字</span></span><br><span class="line"><span class="keyword">if</span> (argc != <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ROS_ERROR</span>(<span class="string">&quot;need turtle name as argument&quot;</span>); </span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">turtle_name = argv[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 订阅海龟的位姿话题</span></span><br><span class="line">ros::NodeHandle node;</span><br><span class="line">ros::Subscriber sub = node.<span class="built_in">subscribe</span>(turtle_name+<span class="string">&quot;/pose&quot;</span>, <span class="number">10</span>, &amp;poseCallback);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环等待回调函数</span></span><br><span class="line">ros::<span class="built_in">spin</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>具体python代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该例程将请求/show_person服务，服务数据类型learning_service::Person</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> roslib</span><br><span class="line">roslib.load_manifest(<span class="string">&#x27;learning_tf&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tf</span><br><span class="line"><span class="keyword">import</span> turtlesim.msg</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handle_turtle_pose</span>(<span class="params">msg, turtlename</span>):</span><br><span class="line">    br = tf.TransformBroadcaster()</span><br><span class="line">    br.sendTransform((msg.x, msg.y, <span class="number">0</span>),</span><br><span class="line">                     tf.transformations.quaternion_from_euler(<span class="number">0</span>, <span class="number">0</span>, msg.theta),</span><br><span class="line">                     rospy.Time.now(),</span><br><span class="line">                     turtlename,</span><br><span class="line">                     <span class="string">&quot;world&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    rospy.init_node(<span class="string">&#x27;turtle_tf_broadcaster&#x27;</span>)</span><br><span class="line">    turtlename = rospy.get_param(<span class="string">&#x27;~turtle&#x27;</span>)</span><br><span class="line">    rospy.Subscriber(<span class="string">&#x27;/%s/pose&#x27;</span> % turtlename,</span><br><span class="line">                     turtlesim.msg.Pose,</span><br><span class="line">                     handle_turtle_pose,</span><br><span class="line">                     turtlename)</span><br><span class="line">    rospy.spin()</span><br></pre></td></tr></table></figure><h3 id="10-2-创建tf监听器代码（C-python）">10.2 创建tf监听器代码（C++/python）</h3><p>如何实现一个tf监听器</p><ul><li>定义TF广播器（TransformListener）；</li><li>查找坐标变换（waitForTransform、lookupTransform）。</li></ul><p>在<code>catkin_ws/src/learning_tf/src</code>文件夹下创建<code>turtle_tf_Listener.cpp</code>文件，具体内容如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该例程监听tf数据，并计算、发布turtle2的速度指令</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tf/transform_listener.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;geometry_msgs/Twist.h&gt;</span>  <span class="comment">//给海龟发送速度指令</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;turtlesim/Spawn.h&gt;</span>  <span class="comment">//另外一只海龟通过Spawn来产生</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 初始化ROS节点</span></span><br><span class="line">ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;my_tf_listener&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建节点句柄</span></span><br><span class="line">ros::NodeHandle node;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求产生turtle2</span></span><br><span class="line">ros==service==<span class="built_in">waitForService</span>(<span class="string">&quot;/spawn&quot;</span>);</span><br><span class="line">ros==ServiceClient add_turtle = node.<span class="built_in">serviceClient</span>&lt;turtlesim==Spawn&gt;(<span class="string">&quot;/spawn&quot;</span>);</span><br><span class="line">turtlesim::Spawn srv;</span><br><span class="line">add_turtle.<span class="built_in">call</span>(srv);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建发布turtle2速度控制指令的发布者</span></span><br><span class="line">ros==Publisher turtle_vel = node.<span class="built_in">advertise</span>&lt;geometry_msgs==Twist&gt;(<span class="string">&quot;/turtle2/cmd_vel&quot;</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建tf的监听器</span></span><br><span class="line">tf::TransformListener listener;</span><br><span class="line"></span><br><span class="line"><span class="function">ros::Rate <span class="title">rate</span><span class="params">(<span class="number">10.0</span>)</span></span>;<span class="comment">//设置while循环的频率</span></span><br><span class="line"><span class="keyword">while</span> (node.<span class="built_in">ok</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 获取turtle1与turtle2坐标系之间的tf数据</span></span><br><span class="line">tf::StampedTransform transform;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">listener.<span class="built_in">waitForTransform</span>(<span class="string">&quot;/turtle2&quot;</span>, <span class="string">&quot;/turtle1&quot;</span>, ros==<span class="built_in">Time</span>(<span class="number">0</span>), ros==<span class="built_in">Duration</span>(<span class="number">3.0</span>));<span class="comment">//是否存在turtle1和turtle2坐标系</span></span><br><span class="line">listener.<span class="built_in">lookupTransform</span>(<span class="string">&quot;/turtle2&quot;</span>, <span class="string">&quot;/turtle1&quot;</span>, ros::<span class="built_in">Time</span>(<span class="number">0</span>), transform);<span class="comment">//如果存在则进行这一句，再查询两个坐标系的关系</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">catch</span> (tf::TransformException &amp;ex) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ROS_ERROR</span>(<span class="string">&quot;%s&quot;</span>,ex.<span class="built_in">what</span>());</span><br><span class="line">ros::<span class="built_in">Duration</span>(<span class="number">1.0</span>).<span class="built_in">sleep</span>();</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据turtle1与turtle2坐标系之间的位置关系，发布turtle2的速度控制指令</span></span><br><span class="line">geometry_msgs::Twist vel_msg;</span><br><span class="line">vel_msg.angular.z = <span class="number">4.0</span> * <span class="built_in">atan2</span>(transform.<span class="built_in">getOrigin</span>().<span class="built_in">y</span>(),</span><br><span class="line">                        transform.<span class="built_in">getOrigin</span>().<span class="built_in">x</span>());<span class="comment">//角速度计算</span></span><br><span class="line">vel_msg.linear.x = <span class="number">0.5</span> * <span class="built_in">sqrt</span>(<span class="built_in">pow</span>(transform.<span class="built_in">getOrigin</span>().<span class="built_in">x</span>(), <span class="number">2</span>) +</span><br><span class="line">                      <span class="built_in">pow</span>(transform.<span class="built_in">getOrigin</span>().<span class="built_in">y</span>(), <span class="number">2</span>));<span class="comment">//线速度计算</span></span><br><span class="line">turtle_vel.<span class="built_in">publish</span>(vel_msg);<span class="comment">//发布速度</span></span><br><span class="line"></span><br><span class="line">rate.<span class="built_in">sleep</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>具体python代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该例程将请求/show_person服务，服务数据类型learning_service::Person</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> roslib</span><br><span class="line">roslib.load_manifest(<span class="string">&#x27;learning_tf&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> tf</span><br><span class="line"><span class="keyword">import</span> geometry_msgs.msg</span><br><span class="line"><span class="keyword">import</span> turtlesim.srv</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    rospy.init_node(<span class="string">&#x27;turtle_tf_listener&#x27;</span>) <span class="comment"># 初始化节点</span></span><br><span class="line"></span><br><span class="line">    listener = tf.TransformListener() <span class="comment"># 创建tf_listener</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 通过Spawn产生新的海龟</span></span><br><span class="line">    rospy.wait_for_service(<span class="string">&#x27;spawn&#x27;</span>)</span><br><span class="line">    spawner = rospy.ServiceProxy(<span class="string">&#x27;spawn&#x27;</span>, turtlesim.srv.Spawn)</span><br><span class="line">    spawner(<span class="number">4</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="string">&#x27;turtle2&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    turtle_vel = rospy.Publisher(<span class="string">&#x27;turtle2/cmd_vel&#x27;</span>, geometry_msgs.msg.Twist,queue_size=<span class="number">1</span>)<span class="comment">#创建publisher发布海龟2的速度指令</span></span><br><span class="line"></span><br><span class="line">    rate = rospy.Rate(<span class="number">10.0</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():  <span class="comment"># 查询坐标1和坐标2之间的坐标关系，查询的是当前时间，得到平移trans和旋转rot</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            (trans,rot) = listener.lookupTransform(<span class="string">&#x27;/turtle2&#x27;</span>, <span class="string">&#x27;/turtle1&#x27;</span>, rospy.Time(<span class="number">0</span>))</span><br><span class="line">        <span class="keyword">except</span> (tf.LookupException, tf.ConnectivityException, tf.ExtrapolationException):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        angular = <span class="number">4</span> * math.atan2(trans[<span class="number">1</span>], trans[<span class="number">0</span>])</span><br><span class="line">        linear = <span class="number">0.5</span> * math.sqrt(trans[<span class="number">0</span>] ** <span class="number">2</span> + trans[<span class="number">1</span>] ** <span class="number">2</span>)</span><br><span class="line">        cmd = geometry_msgs.msg.Twist()</span><br><span class="line">        cmd.linear.x = linear</span><br><span class="line">        cmd.angular.z = angular</span><br><span class="line">        turtle_vel.publish(cmd)</span><br><span class="line"></span><br><span class="line">        rate.sleep()</span><br></pre></td></tr></table></figure><h3 id="10-3-配置编译规则">10.3 配置编译规则</h3><p>打开<code>catkin_ws/src/learning_tf/src</code>文件夹，配置<code>CMakeLists.txt</code>中的编译规则：</p><ul><li>设置需要编译的代码和生成 的可执行文件</li><li>设置链接库</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">add_executable(turtle_tf_broadcaster src/turtle_tf_broadcaster.cpp)</span><br><span class="line">target_link_libraries(turtle_tf_broadcaster $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line"></span><br><span class="line">add_executable(turtle_tf_listener src/turtle_tf_listener.cpp)</span><br><span class="line">target_link_libraries(turtle_tf_listener $&#123;catkin_LIBRARIES&#125;)</span><br></pre></td></tr></table></figure><p>然后回到工作空间的根目录catkin_ws通过<code>catkin_make</code>进行编译。</p><p>通过以下命令运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make</span><br><span class="line"><span class="built_in">source</span> devel/setup.bash</span><br><span class="line">roscore</span><br><span class="line">rosrun turtlesim turtlesim_node</span><br><span class="line">rosrun learning_tf turtle_tf_broadcaster_name:=turtle1_tf_broadcaster /turtle1</span><br><span class="line">rosrun learning_tf turtle_tf_broadcaster_name:=turtle2_tf_broadcaster /turtle2</span><br><span class="line">rosrun learning_tf turtle_tf_listener</span><br><span class="line">rosrun turtlesim turtle_teleop_key</span><br></pre></td></tr></table></figure><p>上面第6、7行代码中<code>turtle1_tf_broadcaster</code>会取代程序中的<code>my_tf_broadcaster</code>，因此虽然是同一个程序，但是两个节点的名字不一样，可以运行两次。</p><h2 id="11-launch启动文件的使用方法">11. launch启动文件的使用方法</h2><p>launch文件：通过XML文件实现多节点的配置和启动（可自动启动ROS Master）</p><p>launch文件中有很多标签，标签中有很多属性，用launch文件可以不用打开很多终端启动很多节点。</p><p>原来是通过<code>roscore</code>启动ROS Master，launch文件可以自动启动ROS Master。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sim1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtlesim_node&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sim2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtlesim_node&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>基本属性</strong>：</p><p>pkg：节点所在的功能包名称</p><p>type：节点的可执行文件名称</p><p>name：节点运行时的名称</p><p><strong>可选属性</strong>：</p><p>output：是否将某个节点的日志信息打印到终端</p><p>respawn：节点启动失败是否进行重启</p><p>required：某个节点是否一定要启动起来</p><p>ns：namespace，给每个节点一个命名空间，避免命名冲突</p><p>args：给每个节点输入一些参数来使用</p><p><img src="https://vip2.loli.io/2023/03/13/4ekhgPMmuGcpzB3.png" alt="image-20220111185654776"></p><p><strong>其他常用属性</strong>：</p><p><code>&lt;param&gt;/&lt;rosparam&gt;</code>：设置ROS系统运行中的参数，存储在参数服务器中。</p><p><code>&lt;param name=&quot;output_frame&quot; value=&quot;odom&quot;/&gt;</code></p><ul><li>name：参数名</li><li>value：参数值</li></ul><p>加载参数文件中的多个参数：<code>&lt;rosparam file=&quot;params.yaml&quot; command=&quot;load&quot; ns= &quot;params&quot;/&gt;</code></p><p><code>&lt;arg&gt;</code>：launch文件内部的局部变量，仅限于launch文件使用，也可以给node作为输入参数</p><p><code>&lt;arg name=&quot;arg-name&quot; default=&quot;arg-value&quot;/&gt;</code></p><ul><li>name：参数名</li><li>value：参数值</li></ul><p>调用：</p><p><code>&lt;param name=&quot;foo&quot; value=&quot;$(arg arg-name)&quot;/&gt;</code></p><p><code>&lt;node name=&quot;node&quot; pkg=&quot;package&quot; type=&quot;type&quot; args=&quot;$arg arg-name&quot;/&gt;</code></p><p><strong>两种参数设置对比</strong>：</p><p><img src="https://vip2.loli.io/2023/03/13/YQHJjTBdm9i2brI.png" alt="image-20220111193459643"></p><p><img src="https://vip2.loli.io/2023/03/13/b2KzDvjxHQucBZ7.png" alt="image-20220111193427479"></p><p><img src="https://vip2.loli.io/2023/03/13/bKEO6wVpCq8zLHR.png" alt="image-20220111193835852"></p><h3 id="11-1-launch文件编程实现-示例一">11.1 launch文件编程实现-示例一</h3><p>launch文件编程实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src</span><br><span class="line">catkin_create_pkg learning_launch</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/3hCVeRZAuvInr6F.png" alt="image-20220111203810852"></p><p>一般在创建launch功能包之后，里面没有launch文件，通过新建launch文件夹方便管理功能包里面的各种资源。</p><p><img src="https://vip2.loli.io/2023/03/13/FcCMT8gxleuEDNG.png" alt="image-20220111204053287"></p><p>在launch文件夹中新建simple.launch文件，里面的内容为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;learning_topic&quot;</span> <span class="attr">type</span>=<span class="string">&quot;person_subscriber&quot;</span> <span class="attr">name</span>=<span class="string">&quot;talker&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;learning_topic&quot;</span> <span class="attr">type</span>=<span class="string">&quot;person_publisher&quot;</span> <span class="attr">name</span>=<span class="string">&quot;listener&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><p>两个<code>node</code>标签分别启动两个<code>node</code>节点，一个是<code>learning_topic</code>功能包下面的<code>talker</code>节点，一个是<code>learning_topic</code>功能包下面的<code>listener</code>节点，<code>talker</code>的节点名为<code>person_subscriber</code>，<code>listener</code>的节点名为<code>person_publisher</code>，默认两个节点名不会打印到终端，为了保证显示效果，将其<code>output</code>设置为<code>screen</code>。</p><p>在工作空间的根目录<code>~/catkin_ws</code>中通过<code>catkin_make</code>编译一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosluanch learning_launch simple.launch</span><br></pre></td></tr></table></figure><p><img src="https://vip2.loli.io/2023/03/13/uyxRWic4l2KqNBn.png" alt="image-20220111205437126"></p><p><img src="https://vip2.loli.io/2023/03/13/zqKBxDM5bOrWFZs.png" alt="image-20220111205515374"></p><p>可以通过图片看出，所有的节点在一个终端启动，publisher发布一个信息，subscriber订阅一个信息。</p><h3 id="11-2-launch文件编程实现-示例二">11.2 launch文件编程实现-示例二</h3><p>在launch文件夹中，新建<code>turtlesim_parameter_config.launch</code>文件，具体内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;/turtle_number&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtlesim_node&quot;</span> <span class="attr">name</span>=<span class="string">&quot;turtlesim_node&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;turtle_name1&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;Tom&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;turtle_name2&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;Jerry&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">file</span>=<span class="string">&quot;$(find learning_launch)/config/param.yaml&quot;</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtle_teleop_key&quot;</span> <span class="attr">name</span>=<span class="string">&quot;turtle_teleop_key&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><p>param和rosparam都是设置变量的，第一个参数名为turtle_number，数值为2。rosparam通过查找地址，加载一个参数文件param.yaml。</p><p><code>$(find learning_launch)</code>指的是搜索<code>learning_launch</code>文件夹的完整路径。</p><p>在<code>learning_launch</code>文件夹下新建<code>config</code>文件夹，在<code>config</code>文件夹下新建<code>param.yaml</code>文件，<code>param.yaml</code>具体内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">A:</span> <span class="number">123</span></span><br><span class="line"><span class="attr">B:</span> <span class="string">&quot;hello&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">group:</span></span><br><span class="line">  <span class="attr">C:</span> <span class="number">456</span></span><br><span class="line">  <span class="attr">D:</span> <span class="string">&quot;hello&quot;</span></span><br></pre></td></tr></table></figure><p>通过<code>roslaunch learning_launch turtlesim_parameter_config.launch</code>命令来启动<code>launch</code>文件。</p><p>通过<code>rosparam list</code>列出参数：</p><p><img src="https://vip2.loli.io/2023/03/13/yqExMonp2BQWGIL.png" alt="image-20220111215032993"></p><p><img src="https://vip2.loli.io/2023/03/13/aBsSEj1Hb4dpoUN.png" alt="image-20220111215238752"></p><h3 id="11-3-launch文件编程实现-示例三">11.3 launch文件编程实现-示例三</h3><p>在<code>~/catkin_ws/src/learning_launch/launch</code>文件夹中，新建<code>start_tf_demo_c++.launch</code>文件，具体内容如下：</p><p>相应的launch文件内容为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Turtlesim Node--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtlesim_node&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sim&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtle_teleop_key&quot;</span> <span class="attr">name</span>=<span class="string">&quot;teleop&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;learning_tf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtle_tf_broadcaster&quot;</span> <span class="attr">args</span>=<span class="string">&quot;/turtle1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;turtle1_tf_broadcaster&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;learning_tf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtle_tf_broadcaster&quot;</span> <span class="attr">args</span>=<span class="string">&quot;/turtle2&quot;</span> <span class="attr">name</span>=<span class="string">&quot;turtle2_tf_broadcaster&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;learning_tf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtle_tf_listener&quot;</span> <span class="attr">name</span>=<span class="string">&quot;listener&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在终端中运行命令<code>roslaunch learning_launch start_tf_demo_c++.launch</code>，得到如下效果：</p><p><img src="https://vip2.loli.io/2023/03/13/MQYnV3XF9gJ4dmO.png" alt="image-20220111220735050"></p><p>可以通过键盘控制小海龟1的移动，小海龟2会跟着移动。</p><p>针对python编写的launch文件如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Turtlesim Node--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtlesim_node&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sim&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtle_teleop_key&quot;</span> <span class="attr">name</span>=<span class="string">&quot;teleop&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;turtle1_tf_broadcaster&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;learning_tf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtle_tf_broadcaster.py&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;turtle&quot;</span> <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;turtle1&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;turtle2_tf_broadcaster&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;learning_tf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtle_tf_broadcaster.py&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;turtle&quot;</span> <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;turtle2&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;learning_tf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtle_tf_listener.py&quot;</span> <span class="attr">name</span>=<span class="string">&quot;listener&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="11-4-launch文件编程实现-示例四">11.4 launch文件编程实现-示例四</h3><p>在<code>~/catkin_ws/src/learning_launch/launch</code>文件夹中，新建<code>turtlesim_remap.launch</code>文件，具体内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find learning_launch)/launch/simple.launch&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtlesim_node&quot;</span> <span class="attr">name</span>=<span class="string">&quot;turtlesim_node&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">remap</span> <span class="attr">from</span>=<span class="string">&quot;/turtle1/cmd_vel&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/cmd_vel&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一个launch文件包含另外一个launch文件（simple.launch）。</p><p>第6行代码是将<code>/turtle1/cmd_vel</code>改为<code>/cmd_vel</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch learning_launch turtlesim_remap.launch</span><br></pre></td></tr></table></figure><p>效果如下：<code>/turtle1/cmd_vel</code>变为<code>/cmd_vel</code>。发布一个话题，可以看到小乌龟发生移动。</p><p><img src="https://vip2.loli.io/2023/03/13/mG6KAbpesJPNHWU.png" alt="image-20220111222426143"></p><h2 id="12-常用可视化工具的使用">12. 常用可视化工具的使用</h2><h3 id="12-1-Qt工具箱">12.1 Qt工具箱</h3><p><strong>Qt工具箱常用工具</strong>：</p><p>日志输出工具——rqt_console</p><p>计算图可视化工具——rqt_graph</p><p>数据绘图软件——rqt_plot</p><p>图像渲染工具——rqt_image_view</p><p><strong>例程实现</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br><span class="line">rosrun turtlesim turtlesim_node</span><br></pre></td></tr></table></figure><p>在终端中输入<code>rqt_</code>+Tab键，可以看到相关的工具，输入<code>rqt_console</code>命令：</p><p><img src="https://vip2.loli.io/2023/03/13/xBN4Kt7TdWVioG8.png" alt="image-20220111224658477"></p><p>例如通过控制小海龟移动撞墙后会有warning警告：</p><p><img src="https://vip2.loli.io/2023/03/13/gZFCmzHx86oUQhM.png" alt="image-20220111224647109"></p><p><img src="https://vip2.loli.io/2023/03/13/HYzhwgroA2pPF6K.png" alt="image-20220111225010422"></p><p>通过<code>rqt_plot</code>命令打开rqt_plot：</p><p><img src="https://vip2.loli.io/2023/03/13/x8CZjGSMfDJmHav.png" alt="image-20220111225556948"></p><p>命令<code>rqt_image_view</code>用来显示摄像头图像，界面如下图：</p><p><img src="https://vip2.loli.io/2023/03/13/DzECnjsvHS2OfhI.png" alt="image-20220111225753802"></p><p><img src="https://vip2.loli.io/2023/03/13/EFAVrRLmHzu7D13.png" alt="image-20220111225910615"></p><p>也可以通过在终端中输入<code>rqt</code>来进行，可以通过选择各种插件<code>Plugins</code>来进行相关操作。</p><h3 id="12-2-Rviz">12.2 Rviz</h3><p>Rviz是一款三维可视化工具，可以很好的兼容基于ROS软件框架的机器人平台。</p><ul><li>在rviz中，可以使用<strong>可扩展标记语言XML</strong>对机器人、周围物体等任何事物进行尺寸、质量、位置、材质、关节等属性的描述，并且在界面中呈现出来。</li><li>同时，rviz还可以通过<strong>图形化的方式</strong>，实时显示机器人传感器的信息、机器人的运动状态、周围环境的变化等信息。</li><li>总而言之，rviz通过机器人模型参数、机器人发布的传感信息等数据，为用户进行所有<strong>可监测信息的图形化显示</strong>。用户和开发者也可以在rviz的控制界面下，通过按钮、滑动条、数值等方式，控制机器人的行为。</li></ul><p><img src="https://vip2.loli.io/2023/03/13/8UvVPuDwG47XifO.png" alt="image-20220111231005413"></p><h3 id="12-3-Gazebo">12.3 Gazebo</h3><p>Gazebo是一款功能强大的三维物理仿真平台</p><ul><li>具备强大的物理引擎</li><li>高质量的渲染</li><li>方便的编程与图形接口</li><li>开源免费</li></ul><p>其典型应用场景包括：</p><ul><li>测试机器人算法</li><li>机器人的设计</li><li>现实场景下的回溯测试</li></ul><p><img src="https://vip2.loli.io/2023/03/13/KDATeSvkIyjlwZg.png" alt="image-20220111231618821"></p><p><img src="https://vip2.loli.io/2023/03/13/NJL5n4WHuy783st.png" alt="image-20220111231715803"></p><p>Gazebo的启动：</p><p>通过命令<code>roslaunch gazebo_ros</code>可以看到相关launch文件。</p><h2 id="13-课程总结与进阶攻略">13. 课程总结与进阶攻略</h2><p>参考链接：</p><p><a href="http://wiki.ros">http://wiki.ros</a>,org/ros_control</p><p><a href="http://wiki.ros">http://wiki.ros</a>,org/gmapping/</p><p><a href="http://wiki.ros">http://wiki.ros</a>,org/hector_slam</p><p><img src="https://vip2.loli.io/2023/03/13/8sJlq2e34kxWGO9.png" alt="image-20220111233417230"></p><p><img src="https://vip2.loli.io/2023/03/13/T12ZeO5tUy3hq8o.png" alt="image-20220111233509788"></p><p>斯坦福大学公开课——机器人学：<a href="https://www.bilibili.com/video/av4506104">https://www.bilibili.com/video/av4506104</a></p><p>台湾交通大学——机器人学：<a href="https://www.bilibili.com/video/av18516816">https://www.bilibili.com/video/av18516816</a></p><p>Andrew Davison的机器人学讲座课程：<a href="http://www.doc.ic.ac.uk/~ajd/Robotics/index.html">http://www.doc.ic.ac.uk/~ajd/Robotics/index.html</a></p><p>ETH - Robotic Systems Lab：<a href="http://www.rsl.ethz.ch/education-students/lectures.html">http://www.rsl.ethz.ch/education-students/lectures.html</a></p><p>古月学院：PC：<a href="https://class.guyuehome.com">https://class.guyuehome.com</a>     手机：“古月居”微信公众号→古月学院</p><p>ROS：<a href="https://www.ros.org/">https://www.ros.org/</a></p><p>ROS Wiki：<a href="http://wiki.ros.org/">http://wiki.ros.org/</a></p><p>ROS Con 2012 ~2019：<a href="https://roscon.ros.org/world/2021/">https://roscon.ros.org/world/2021/</a></p><p>ROS Robots：<a href="https://robots.ros.org/">https://robots.ros.org/</a></p><p>Ubuntu Wiki：<a href="https://wiki.ubuntu.org.cn/">https://wiki.ubuntu.org.cn/</a></p><p>古月居：<a href="https://www.guyuehome.com">https://www.guyuehome.com</a></p><p>古月居泡泡：<a href="https://www.guyuehome.com/Bubble">https://www.guyuehome.com/Bubble</a></p><p>古月学院：<a href="https://class.guyuehome.com">https://class.guyuehome.com</a></p><p><img src="https://vip2.loli.io/2023/03/13/TgcpWN983U4Rwtz.png" alt="image-20220111235717355"></p><p><img src="https://vip2.loli.io/2023/03/13/FEi4MwWs8hjBpfZ.png" alt="image-20220111235740995"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS服务数据类型Trigger</title>
      <link href="/2022/05/06/ROS/%E6%9C%8D%E5%8A%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BTrigger/"/>
      <url>/2022/05/06/ROS/%E6%9C%8D%E5%8A%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BTrigger/</url>
      
        <content type="html"><![CDATA[<h1>ROS服务数据类型Trigger</h1><p>可以通过在终端中输入以下命令，来检验Trigger的功能：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rossrv show std_srvs/Trigger</span><br></pre></td></tr></table></figure><p>具体显示结果如下：</p><p><img src="https://vip2.loli.io/2023/03/13/S4rqBLWRKA7iY2p.png" alt="image-20220109185848738"></p><p>—上面的内容是request的内容，图片中由于没有任何内容，所以内容为空。</p><p>—下面的内容是response的内容。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ROS </tag>
            
            <tag> Trigger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode配置Latex编译环境</title>
      <link href="/2022/05/06/Others/VSCode/VSCode%E9%85%8D%E7%BD%AELatex%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2022/05/06/Others/VSCode/VSCode%E9%85%8D%E7%BD%AELatex%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1>VSCode配置Latex编译环境</h1><p>需要在VSCode中安装<code>LaTeX Workshop</code>插件，并对setting.json文件进行配置。</p><p>setting.json文件的<code>&#123;&#125;</code>中加入如下配置代码：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***********************************</span></span><br><span class="line"><span class="comment">*  下面为Latex编译环境配置</span></span><br><span class="line"><span class="comment">***********************************/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用 SumatraPDF 预览编译好的PDF文件</span></span><br><span class="line">    <span class="comment">// 设置VScode内部查看生成的pdf文件</span></span><br><span class="line">    <span class="comment">// PDF查看器用于在\ref上的[View on PDF]链接</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.view.pdf.ref.viewer&quot;</span><span class="punctuation">:</span><span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 使用外部查看器时要执行的命令。此功能不受官方支持。</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.view.pdf.external.viewer.command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:/SumatraPDF/SumatraPDF.exe&quot;</span><span class="punctuation">,</span> <span class="comment">// 注意修改路径</span></span><br><span class="line">    <span class="comment">// 使用外部查看器时，latex-workshop.view.pdf.external.view .command的参数。此功能不受官方支持。%PDF%是用于生成PDF文件的绝对路径的占位符。</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.view.pdf.external.viewer.args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;%PDF%&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 将synctex转发到外部查看器时要执行的命令。此功能不受官方支持。</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.view.pdf.external.synctex.command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:/SumatraPDF/SumatraPDF.exe&quot;</span><span class="punctuation">,</span> <span class="comment">// 注意修改路径</span></span><br><span class="line">    <span class="comment">// latex-workshop.view.pdf.external.synctex的参数。当同步到外部查看器时。%LINE%是行号，%PDF%是生成PDF文件的绝对路径的占位符，%TEX%是触发syncTeX的扩展名为.tex的LaTeX文件路径。</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.view.pdf.external.synctex.args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;-forward-search&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;%TEX%&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;%LINE%&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-reuse-instance&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-inverse-search&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;\&quot;C:/Microsoft VS Code/Code.exe\&quot;\&quot; \&quot;C:/Microsoft VS Code/resources/app/out/cli.js\&quot; -r -g \&quot;%f:%l\&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 注意修改路径</span></span><br><span class="line">        <span class="string">&quot;%PDF%&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.minimap.enabled&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span> <span class="comment">//控制是否显示缩略图。</span></span><br><span class="line">    <span class="comment">//定义要在配方中使用的 LaTeX 编译工具。每个工具都标有其名称。 </span></span><br><span class="line">    <span class="comment">//调用时，命令会使用 args 中定义的参数和 env 中定义的环境变量生成。 </span></span><br><span class="line">    <span class="comment">//通常，除非在路径中，否则每个参数中不应出现空格。</span></span><br><span class="line">    <span class="comment">//占位符 %DOC%、%DOC_W32%、%DOC_EXT%、%DOC_EXT_W32%、%DOCFILE%、%DOCFILE_EXT%、%DIR%、%DIR_W32%、%TMPDIR% 和 %OUTDIR%、%OUTDIR_W32% 可用.</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;latexmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;latexmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;-pdf&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;%DOC%&quot;</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;%DOC%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span>          </span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;%DOC%&quot;</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;%DOCFILE%&quot;</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;latex-workshop.latex.recipes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;xelatex&quot;</span></span><br><span class="line">                      <span class="punctuation">]</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;latexmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;latexmk&quot;</span></span><br><span class="line">                      <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex -&gt; bibtex -&gt; pdflatex*2&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;pdflatex&quot;</span></span><br><span class="line">                      <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;latex-workshop.view.pdf.viewer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tab&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;latex-workshop.latex.clean.enabled&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;latex-workshop.latex.clean.fileTypes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;*.aux&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.bbl&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.blg&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.idx&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.ind&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.lof&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.lot&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.out&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.toc&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.acn&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.acr&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.alg&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.glg&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.glo&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.gls&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.ist&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.fls&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.log&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.fdb_latexmk&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//设置为onFaild 在构建失败后清除辅助文件</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.autoClean.run&quot;</span><span class="punctuation">:</span> <span class="string">&quot;onFailed&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 使用上次的recipe编译组合</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.recipe.default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lastUsed&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 用于反向同步的内部查看器的键绑定。ctrl/cmd +点击(默认)或双击</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.view.pdf.internal.synctex.keybinding&quot;</span><span class="punctuation">:</span> <span class="string">&quot;double-click&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//右键菜单</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.showContextMenu&quot;</span><span class="punctuation">:</span><span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//从使用的包中自动补全命令和环境</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.intellisense.package.enabled&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//将 glob 模式配置到编辑器(例如 &quot;*十六进制&quot;: &quot;hexEditor.hexEdit&quot;)。这些优先顺序高于默认行为。</span></span><br><span class="line">    <span class="attr">&quot;workbench.editorAssociations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;*.ipynb&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jupyter-notebook&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;kite.showWelcomeNotificationOnStartup&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span>    <span class="comment">//需要安装kite，show the Kite welcome notification on startup.</span></span><br><span class="line">    <span class="attr">&quot;python.defaultInterpreterPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;E:\\Python\\python.exe&quot;</span><span class="punctuation">,</span> <span class="comment">//python路径</span></span><br><span class="line">    <span class="comment">//应在何处显示单元格工具栏，或是否隐藏它。</span></span><br><span class="line">    <span class="attr">&quot;notebook.cellToolbarLocation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;right&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;jupyter-notebook&quot;</span><span class="punctuation">:</span> <span class="string">&quot;left&quot;</span><span class="comment">//为特定文件类型配置单元格工具栏位置</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//若设置为 true，则自动从当前 Git 存储库的默认远程库提取提交。若设置为“全部”，则从所有远程库进行提取。</span></span><br><span class="line">    <span class="attr">&quot;git.autofetch&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//始终信任工作区</span></span><br><span class="line">    <span class="attr">&quot;security.workspace.trust.untrustedFiles&quot;</span><span class="punctuation">:</span> <span class="string">&quot;open&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//不显示新版本消息</span></span><br><span class="line">    <span class="attr">&quot;vsicons.dontShowNewVersionMessage&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//针对某种语言，配置替代编辑器设置</span></span><br><span class="line">    <span class="attr">&quot;[latex]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;editor.formatOnPaste&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span><span class="comment">//针对某种语言，配置替代编辑器设置</span></span><br><span class="line">        <span class="attr">&quot;editor.suggestSelection&quot;</span><span class="punctuation">:</span> <span class="string">&quot;recentlyUsedByPrefix&quot;</span> <span class="comment">//控制在建议列表中如何预先选择建议。recentlyUsedByPrefix: 根据之前补全过的建议的前缀来进行选择。例如，co -&gt; console、con -&gt; const。</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code-runner.clearPreviousOutput&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code-runner.saveAllFilesBeforeRun&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code-runner.runInTerminal&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Latex </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode配置matlab编译环境</title>
      <link href="/2022/05/06/Others/VSCode/VSCode%E9%85%8D%E7%BD%AEmatlab%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2022/05/06/Others/VSCode/VSCode%E9%85%8D%E7%BD%AEmatlab%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1>VSCode配置matlab编译环境</h1><p>需要安装Matlab相关插件，并对setting.json文件进行配置。</p><p>setting.json文件的<code>&#123;&#125;</code>中加入如下配置代码：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***********************************</span></span><br><span class="line"><span class="comment">*  下面为matlab编译环境配置</span></span><br><span class="line"><span class="comment">***********************************/</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;matlab.mlintpath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:\\MATLAB\\bin\\win64\\mlint.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;matlab.matlabpath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:\\MATLAB\\bin\\matlab.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;matlab.linterEncoding&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gb2312&quot;</span><span class="punctuation">,</span> </span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;code-runner.executorMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;matlab&quot;</span><span class="punctuation">:</span><span class="string">&quot;cd $dir &amp;&amp; matlab -nosplash -nodesktop -r $fileNameWithoutExt&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;files.associations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;*.m&quot;</span><span class="punctuation">:</span><span class="string">&quot;matlab&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;code-runner.runInTerminal&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;[matlab]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;files.encoding&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gb2312&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;files.autoGuessEncoding&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;workbench.colorTheme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;One Dark Pro Darker&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;workbench.iconTheme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vscode-icons&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;search.smartCase&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.suggestSelection&quot;</span><span class="punctuation">:</span> <span class="string">&quot;first&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vsintellicode.modify.editor.suggestSelection&quot;</span><span class="punctuation">:</span> <span class="string">&quot;automaticallyOverrodeDefaultValue&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;files.autoSave&quot;</span><span class="punctuation">:</span> <span class="string">&quot;afterDelay&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;terminal.integrated.commandsToSkipShell&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;language-julia.interrupt&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;julia.symbolCacheDownload&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tabnine.experimentalAutoImports&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vsicons.dontShowNewVersionMessage&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.fontFamily&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Cascadia Code, &#x27;Courier New&#x27;, monospace&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;security.workspace.trust.enabled&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.fontSize&quot;</span><span class="punctuation">:</span> <span class="number">13</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>需要注意 matlab.mlintpath 和 matlab.matlabpath 的地址是否能够和自己MATLAB安装后对应的子程序的地址相匹配。否则无法在VSCode中运行matlab代码。</p>]]></content>
      
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决VSCode 运行 “conda  The term ‘conda‘ is not recognized as the name of a cmdlet, function, script “</title>
      <link href="/2022/05/06/Others/VSCode/%E8%A7%A3%E5%86%B3VSCode%20%E8%BF%90%E8%A1%8C%20%E2%80%9Cconda%20%20The%20term%20%E2%80%98conda%E2%80%98%20is%20not%20recognized%20as%20the%20name%20of%20a%20cmdlet,%20function,%20script%20%E2%80%9C/"/>
      <url>/2022/05/06/Others/VSCode/%E8%A7%A3%E5%86%B3VSCode%20%E8%BF%90%E8%A1%8C%20%E2%80%9Cconda%20%20The%20term%20%E2%80%98conda%E2%80%98%20is%20not%20recognized%20as%20the%20name%20of%20a%20cmdlet,%20function,%20script%20%E2%80%9C/</url>
      
        <content type="html"><![CDATA[<h1>解决VSCode 运行 “conda  The term ‘conda‘ is not recognized as the name of a cmdlet, function, script “</h1><p><strong>问题</strong>：</p><p>在vscode终端或者用管理员打开cmd或者powershell，输入命令conda，会出现错误，无法识别</p><p><strong>原因</strong>：</p><p>没有将conda的路径加入到环境变量中</p><p><strong>解决方法</strong>：</p><ol><li>找到anaconda的安装路径, 我这里是 D:\Anaconda\Scripts</li><li>打开系统设置，并找到<strong>高级系统设置</strong>，如图：</li></ol><p><img src="https://s2.loli.net/2023/03/12/MtYAKOuJemBp9db.png" alt="image-20220330235243278"></p><ol start="3"><li>打开系统环境变量, 在用户变量 或者系统变量里 (两个都可以, 如果不想把系统变量弄乱, 就在用户变量里添加), 找到<code>Path</code>, ==双击打开==, 然后添加一个新值, 内容为anaconda的Scripts目录的路径</li></ol><p><img src="https://s2.loli.net/2023/03/12/fnZqrUaCohJcLHu.png" alt="image-20220330235644218"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++基础入门</title>
      <link href="/2022/02/26/C++/C++%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/"/>
      <url>/2022/02/26/C++/C++%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1>C++基础入门</h1><h2 id="1-C-初识别">1 C++初识别</h2><h3 id="1-1-第一个C-程序">1.1 第一个C++程序</h3><p>编写一个C++程序总共分为4个步骤：</p><ul><li>创建项目</li><li>创建文件</li><li>编写代码</li><li>运行程序</li></ul><h4 id="1-1-1-创建项目">1.1.1 创建项目</h4><p>​           Visual Studio是我们用来编写C++程序的主要工具，我们先将它打开</p><img src="https://s2.loli.net/2023/03/12/1KcrmD26AT4fIdv.png" alt="image-20220123124340461" style="zoom: 67%;" /><img src="https://s2.loli.net/2023/03/12/1gWYmdtSAuVnBvK.png" alt="image-20220123125134404" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/12/MJ4qjgxi9hFErsK.png" alt="image-20220123125917692" style="zoom:67%;" /><h4 id="1-1-2-创建文件">1.1.2 创建文件</h4><p>右键源文件，选择添加-&gt;新建项</p><img src="https://s2.loli.net/2023/03/12/UZLcDuVi6gXKyfH.png" alt="image-20220123130442955" style="zoom:67%;" /><p>给C++文件起个名称，然后点击添加即可。</p><img src="https://s2.loli.net/2023/03/12/weDnzaNU6Sd7rx3.png" alt="image-20220123130813668" style="zoom:67%;" /><h4 id="1-1-3-编写代码">1.1.3 编写代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello C++&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-注释">1.2 注释</h3><p><strong>作用</strong>：在代码中加一些说明和解释，方便自己或其他程序员阅读代码</p><p><strong>两种格式</strong>：</p><ol><li><strong>单行注释</strong>：<code>//描述信息</code></li></ol><ul><li>通常放在一行代码的上方，或者一条语句的末尾，对改行代码说明</li></ul><ol start="2"><li><strong>多行注释</strong>：<code>/* 描述信息 */</code></li></ol><ul><li>通常放在一段代码的上方，对该段代码做整体说明</li></ul><blockquote><p>提示：编译器在编译代码时，会忽略注释的内容</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 进行</span></span><br><span class="line"><span class="comment">注释测试，只有一个main函数*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//在屏幕中输出 helloworld</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello C++&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-变量">1.3 变量</h3><p><strong>作用</strong>：给一段指定的内存空间起名，方便操作这段内存</p><p><strong>语法</strong>：<code>数据类型  变量名  =  初始值；</code></p><p><strong>示例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//变量的定义</span></span><br><span class="line">    <span class="comment">//语法：数据类型  变量名 = 初始值</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-4-常量">1.4 常量</h3><p><strong>作用</strong>：用于记录程序中不可更改的数据</p><p>C++定义常量两种方式</p><ol><li>#define 宏常量：<code>#define 常量名 常量值</code></li></ol><ul><li>==通常在文件上方定义==，表示一个常量，==不可修改==。</li></ul><ol start="2"><li>const 修饰的变量：<code>const 数据类型 常量名 = 常量值</code></li></ol><ul><li>==通常在变量定义前加关键字==，修饰该变量为常量，==不可修改==。</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//#define定义宏常量</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> day 7</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//day=20;//该行代码会报错，因为day为常量不能修改</span></span><br><span class="line">    <span class="comment">//const修饰的变量</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> month=<span class="number">12</span>;</span><br><span class="line">    <span class="comment">//month=15;//该行代码会报错，因为const将month定义为不可修改的常量</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;一周共有&quot;</span> &lt;&lt; day &lt;&lt; <span class="string">&quot;天&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;一年共有&quot;</span> &lt;&lt; month &lt;&lt; <span class="string">&quot;个月&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-5-关键字">1.5 关键字</h3><p><strong>作用</strong>：关键字是C++中预先保留的单词（标识符）</p><ul><li><strong>在定义变量或者常量时候，不要用关键字</strong></li></ul><p>C++关键字如下：</p><table><thead><tr><th style="text-align:center">asm</th><th style="text-align:center">do</th><th style="text-align:center">if</th><th style="text-align:center">return</th><th style="text-align:center">typedef</th></tr></thead><tbody><tr><td style="text-align:center">auto</td><td style="text-align:center">double</td><td style="text-align:center">inline</td><td style="text-align:center">short</td><td style="text-align:center">typeid</td></tr><tr><td style="text-align:center">bool</td><td style="text-align:center">dynamic_cast</td><td style="text-align:center">int</td><td style="text-align:center">signed</td><td style="text-align:center">typename</td></tr><tr><td style="text-align:center">break</td><td style="text-align:center">else</td><td style="text-align:center">long</td><td style="text-align:center">sizeof</td><td style="text-align:center">union</td></tr><tr><td style="text-align:center">case</td><td style="text-align:center">enum</td><td style="text-align:center">mutable</td><td style="text-align:center">static</td><td style="text-align:center">unsigned</td></tr><tr><td style="text-align:center">catch</td><td style="text-align:center">explicit</td><td style="text-align:center">namespace</td><td style="text-align:center">static_cast</td><td style="text-align:center">using</td></tr><tr><td style="text-align:center">char</td><td style="text-align:center">export</td><td style="text-align:center">new</td><td style="text-align:center">struct</td><td style="text-align:center">virtual</td></tr><tr><td style="text-align:center">class</td><td style="text-align:center">extern</td><td style="text-align:center">operator</td><td style="text-align:center">switch</td><td style="text-align:center">void</td></tr><tr><td style="text-align:center">const</td><td style="text-align:center">false</td><td style="text-align:center">private</td><td style="text-align:center">template</td><td style="text-align:center">volatile</td></tr><tr><td style="text-align:center">const_cast</td><td style="text-align:center">float</td><td style="text-align:center">protected</td><td style="text-align:center">this</td><td style="text-align:center">wchar_t</td></tr><tr><td style="text-align:center">continue</td><td style="text-align:center">for</td><td style="text-align:center">public</td><td style="text-align:center">throw</td><td style="text-align:center">while</td></tr><tr><td style="text-align:center">default</td><td style="text-align:center">friend</td><td style="text-align:center">register</td><td style="text-align:center">true</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">delete</td><td style="text-align:center">goto</td><td style="text-align:center">reinterpret_cast</td><td style="text-align:center">try</td><td style="text-align:center"></td></tr></tbody></table><p>==提示：在给变量或者常量起名称的时候，不要用C++的关键字，否则会产生歧义==。</p><h3 id="1-6-标识符命名规则">1.6 标识符命名规则</h3><p><strong>作用</strong>：C++规定给标识符（变量、常量）命名时，有一套自己的规则</p><ul><li>标识符不能是关键字</li><li>标识符只能由字母、数字、下划线组成</li><li>第一个字符必须为字母或下划线</li><li>标识符中字母区分大小写</li></ul><blockquote><p>建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//标识符学习</span></span><br><span class="line">    <span class="type">int</span> abc = <span class="number">10</span>;<span class="comment">//这里的abc为标识符</span></span><br><span class="line">    <span class="type">int</span> _abc = <span class="number">20</span>;<span class="comment">//这里的_abc为标识符</span></span><br><span class="line">    <span class="type">int</span> _12aa = <span class="number">30</span>;<span class="comment">//这里的_12aa为标识符</span></span><br><span class="line">    <span class="comment">//int 3_ab=40;//这里的书写是错误的，3_ab第一字符不能是数字</span></span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; abc &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; _abc &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; _12aa &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-数据类型">2 数据类型</h2><p>C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量分配内存。</p><h3 id="2-1-整型">2.1 整型</h3><p><strong>作用</strong>：整型变量表示的是==整数类型==的数据。</p><p>C++中能够表示整型的类型有以下几种方式，<strong>区别在于所占内存空间不同</strong>：</p><table><thead><tr><th>数据类型</th><th>占用空间</th><th>取值范围</th></tr></thead><tbody><tr><td>short（短整型）</td><td>2字节</td><td>(-2^15^ ~ 2^15^-1)</td></tr><tr><td>int（整型）</td><td>4字节</td><td>(-2^31^ ~ 2^31^-1)</td></tr><tr><td>long（长整型）</td><td>Windows为4字节，Linux为4字节（32位），8字节（64位）</td><td>(-2^31^ ~ 2^31^-1)</td></tr><tr><td>long long（长长整型）</td><td>8字节</td><td>(-2^63^ ~ 2^63^-1)</td></tr></tbody></table><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//短整型  -32768到32767，超过范围会出错</span></span><br><span class="line">    <span class="type">short</span> num1 = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">//整型</span></span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">20</span>;</span><br><span class="line">    <span class="comment">//长整型</span></span><br><span class="line">    <span class="type">long</span> num3 = <span class="number">30</span>;</span><br><span class="line">    <span class="comment">//长长整型</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> num4 = <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;num3 = &quot;</span> &lt;&lt; num3 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;num4 = &quot;</span> &lt;&lt; num4 &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-sizeof关键字">2.2 sizeof关键字</h3><p><strong>作用</strong>：利用<code>sizeof</code>关键字可以统计数据类型所占内存大小</p><p><strong>语法</strong>：<code>sizeof( 数据类型 / 变量 )</code></p><p><strong>示例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//短整型</span></span><br><span class="line">    <span class="type">short</span> num1 = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">//整型</span></span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">20</span>;</span><br><span class="line">    <span class="comment">//长整型</span></span><br><span class="line">    <span class="type">long</span> num3 = <span class="number">30</span>;</span><br><span class="line">    <span class="comment">//长长整型</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> num4 = <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;short 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(num1) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;int 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; endl;<span class="comment">//直接输出short所占内存大小</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;int 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(num2) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;long 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(num3) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;long long 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(num4) &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>整型结论：==short &lt; int &lt;= long &lt;= long long==</p></blockquote><h3 id="2-3-实型">2.3 实型</h3><p><strong>作用</strong>：用于==表示小数==</p><p>浮点型变量分为两种：</p><ol><li>单精度float</li><li>双精度double</li></ol><p>两者的<strong>区别</strong>在于表示的有效数字范围不同。</p><table><thead><tr><th>数据类型</th><th>占用空间</th><th>有效数字范围</th></tr></thead><tbody><tr><td>float</td><td>4字节</td><td>7位有效数字</td></tr><tr><td>double</td><td>8字节</td><td>15~16位有效数字</td></tr></tbody></table><p><strong>示例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//默认情况下，输出一个小数，只会显示出6位有效数字</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//单精度float</span></span><br><span class="line">    <span class="type">float</span> f1 = <span class="number">3.14f</span>;<span class="comment">//如果不加f会有double转成float的过程</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//双精度double</span></span><br><span class="line">    <span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//科学计数法</span></span><br><span class="line">    <span class="type">float</span> f2 = <span class="number">3e2</span>;</span><br><span class="line">    <span class="type">float</span> f3 = <span class="number">3e-2</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;f1 =  &quot;</span> &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;d1 =  &quot;</span> &lt;&lt; d1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;f2 =  &quot;</span> &lt;&lt; f2 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;f3 =  &quot;</span> &lt;&lt; f3 &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-字符型">2.4 字符型</h3><p><strong>作用</strong>：字符型变量用于显示单个字符</p><p><strong>语法</strong>：<code>char ch = 'a';</code></p><blockquote><p>注意：</p><ol><li>在显示字符型变量时，用单引号将字符括起来，不要用双引号</li><li>单引号只能有一个字符，不可以是字符串</li></ol></blockquote><ul><li>C和C++中字符型变量只占用==1个字节==。</li><li>字符型变量并不是把字符本身放到内存中存储，而是将对应的ASCII编码放入到存储单元。</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//字符型变量创建方式</span></span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//字符型变量所占内存</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;char字符型变量所占内存：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span>) &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//字符型变量常见错误</span></span><br><span class="line">    <span class="comment">//char ch2 = &quot;b&quot;; //不能用双引号创建字符型变量。</span></span><br><span class="line">    <span class="comment">//char ch2 = &#x27;abcdef&#x27;;//创建字符型变量时只能存放一个字符</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//字符型变量对应的ASCII编码</span></span><br><span class="line">    <span class="comment">//a - 97     A - 65</span></span><br><span class="line">    cout &lt;&lt; (<span class="type">int</span>)ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ASCII码表格：</p><table><thead><tr><th>ASCII值</th><th>控制字符</th><th>ASCII值</th><th>字符</th><th>ASCII值</th><th>字符</th><th>ASCII值</th><th>字符</th></tr></thead><tbody><tr><td>0</td><td>NUT</td><td>32</td><td>(space)</td><td>64</td><td>@</td><td>96</td><td>、</td></tr><tr><td>1</td><td>SOH</td><td>33</td><td>！</td><td>65</td><td>A</td><td>97</td><td>a</td></tr><tr><td>2</td><td>STX</td><td>34</td><td>“</td><td>66</td><td>B</td><td>98</td><td>b</td></tr><tr><td>3</td><td>ETX</td><td>35</td><td>#</td><td>67</td><td>C</td><td>99</td><td>c</td></tr><tr><td>4</td><td>EOT</td><td>36</td><td>$</td><td>68</td><td>D</td><td>100</td><td>d</td></tr><tr><td>5</td><td>ENQ</td><td>37</td><td>%</td><td>69</td><td>E</td><td>101</td><td>e</td></tr><tr><td>6</td><td>ACK</td><td>38</td><td>&amp;</td><td>70</td><td>F</td><td>102</td><td>f</td></tr><tr><td>7</td><td>BEL</td><td>39</td><td>‘</td><td>71</td><td>G</td><td>103</td><td>g</td></tr><tr><td>8</td><td>BS</td><td>40</td><td>(</td><td>72</td><td>H</td><td>104</td><td>h</td></tr><tr><td>9</td><td>HT</td><td>41</td><td>)</td><td>73</td><td>I</td><td>105</td><td>i</td></tr><tr><td>10</td><td>LF</td><td>42</td><td>*</td><td>74</td><td>J</td><td>106</td><td>j</td></tr><tr><td>11</td><td>VT</td><td>43</td><td>+</td><td>75</td><td>K</td><td>107</td><td>k</td></tr><tr><td>12</td><td>FF</td><td>44</td><td>,</td><td>76</td><td>L</td><td>108</td><td>l</td></tr><tr><td>13</td><td>CR</td><td>45</td><td>-</td><td>77</td><td>M</td><td>109</td><td>m</td></tr><tr><td>14</td><td>SO</td><td>46</td><td>.</td><td>78</td><td>N</td><td>110</td><td>n</td></tr><tr><td>15</td><td>SI</td><td>47</td><td>/</td><td>79</td><td>O</td><td>111</td><td>o</td></tr><tr><td>16</td><td>DLE</td><td>48</td><td>0</td><td>80</td><td>P</td><td>112</td><td>p</td></tr><tr><td>17</td><td>DCI</td><td>49</td><td>1</td><td>81</td><td>Q</td><td>113</td><td>q</td></tr><tr><td>18</td><td>DC2</td><td>50</td><td>2</td><td>82</td><td>R</td><td>114</td><td>r</td></tr><tr><td>19</td><td>DC3</td><td>51</td><td>3</td><td>83</td><td>S</td><td>115</td><td>s</td></tr><tr><td>20</td><td>DC4</td><td>52</td><td>4</td><td>84</td><td>T</td><td>116</td><td>t</td></tr><tr><td>21</td><td>NAK</td><td>53</td><td>5</td><td>85</td><td>U</td><td>117</td><td>u</td></tr><tr><td>22</td><td>SYN</td><td>54</td><td>6</td><td>86</td><td>V</td><td>118</td><td>v</td></tr><tr><td>23</td><td>TB</td><td>55</td><td>7</td><td>87</td><td>W</td><td>119</td><td>w</td></tr><tr><td>24</td><td>CAN</td><td>56</td><td>8</td><td>88</td><td>X</td><td>120</td><td>x</td></tr><tr><td>25</td><td>EM</td><td>57</td><td>9</td><td>89</td><td>Y</td><td>121</td><td>y</td></tr><tr><td>26</td><td>SUB</td><td>58</td><td>:</td><td>90</td><td>Z</td><td>122</td><td>z</td></tr><tr><td>27</td><td>ESC</td><td>59</td><td>;</td><td>91</td><td>[</td><td>123</td><td>{</td></tr><tr><td>28</td><td>FS</td><td>60</td><td>&lt;</td><td>92</td><td>/</td><td>124</td><td>|</td></tr><tr><td>29</td><td>GS</td><td>61</td><td>=</td><td>93</td><td>]</td><td>125</td><td>}</td></tr><tr><td>30</td><td>RS</td><td>62</td><td>&gt;</td><td>94</td><td>^</td><td>126</td><td>`</td></tr><tr><td>31</td><td>US</td><td>63</td><td>?</td><td>95</td><td>_</td><td>127</td><td>DEL</td></tr></tbody></table><p>ASCII码大致由以下<strong>两部分</strong>组成：</p><ul><li>ASCII非打印控制字符：ASCII表上的数字0-31分配给了控制字符，用于控制像打印机等一些外围设备。</li><li>ASCII打印字符：数字32-126分配给了能在键盘上找到的字符，当查看或打印文档时就会出现。</li></ul><h3 id="2-5-转义字符">2.5 转义字符</h3><p><strong>作用</strong>：用于表示一些==不能显示出来的ASCII字符==。</p><p>现阶段我们常用的转义字符有：<code>\n \\ \t</code></p><table><thead><tr><th>转义字符</th><th>含义</th><th>ASCII码值（十进制）</th></tr></thead><tbody><tr><td><code>\a</code></td><td>警报</td><td>007</td></tr><tr><td><code>\b</code></td><td>退格（BS），将当前位置移到前一列</td><td>008</td></tr><tr><td><code>\f</code></td><td>换页（FF），将当前位置移到下页开头</td><td>012</td></tr><tr><td><code>\n</code></td><td>换行（LF），将当前位置移到下一行开头</td><td>010</td></tr><tr><td><code>\r</code></td><td>回车（CR），将当前位置移到本行开头</td><td>013</td></tr><tr><td><code>\t</code></td><td>水平制表（HT）（跳到下一个TAB位置）</td><td>009</td></tr><tr><td><code>\v</code></td><td>垂直制表（VT）</td><td>011</td></tr><tr><td><code>\\</code></td><td>代表一个反斜线字符”\“</td><td>092</td></tr><tr><td><code>\'</code></td><td>代表一个单引号（撇号）字符</td><td>039</td></tr><tr><td><code>\&quot;</code></td><td>代表一个双引号字符</td><td>034</td></tr><tr><td><code>\?</code></td><td>代表一个问号</td><td>063</td></tr><tr><td><code>\0</code></td><td>数字0</td><td>000</td></tr><tr><td><code>\ddd</code></td><td>1到3位八进制数所代表的任意字符</td><td>三位八进制</td></tr><tr><td><code>\xhh</code></td><td>十六进制所代表的任意字符</td><td>十六进制</td></tr></tbody></table><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//转义字符</span></span><br><span class="line">    <span class="comment">//换行符 \n</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;hello world\n&quot;</span>;</span><br><span class="line">    <span class="comment">//反斜杠 \\</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\\&quot;</span> &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//水平制表符 \t</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;aaa\tbbb&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;aaaaa\tb&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/MrNDlEcnshpIjeg.png" alt="image-20220123200309058"></p><h3 id="2-6-字符串型">2.6 字符串型</h3><p><strong>作用</strong>：用于表示一串字符</p><p><strong>两种风格</strong></p><ol><li><strong>C风格字符串</strong>：<code>char 变量名[] = &quot;字符串值&quot;</code></li></ol><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span> str1[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">    cout &lt;&lt; str1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：C风格的字符串要用双引号括起来</p></blockquote><ol start="2"><li><strong>C++风格字符串</strong>：<code>string 变量名 = &quot;字符串值&quot;</code></li></ol><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span> <span class="comment">//用C++风格字符串的时候，要包含这个头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    string str1 = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">    cout &lt;&lt; str1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-7-布尔类型bool">2.7 布尔类型bool</h3><p><strong>作用</strong>：布尔数据类型代表真或假的值</p><p>bool类型只有两个值：</p><ul><li>true — 真（本质是1）</li><li>false — 假（本质是0）</li></ul><p><strong>bool类型占==1个字节==大小</strong></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//创建bool数据类型，本质上1代表的是真的值，0代表的是假的值。</span></span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">true</span>; <span class="comment">//代表真</span></span><br><span class="line">    cout &lt;&lt; flag &lt;&lt; endl;<span class="comment">//输出的是1</span></span><br><span class="line"></span><br><span class="line">    flag = <span class="literal">false</span>; <span class="comment">//代表真</span></span><br><span class="line">    cout &lt;&lt; flag &lt;&lt; endl;<span class="comment">//输出的是0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看bool类型所占内存空间</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;bool类型所占内存空间：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">bool</span>) &lt;&lt; endl;<span class="comment">//bool类型所占内存空间为1个字节</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-8-数据的输入">2.8 数据的输入</h3><p><strong>作用</strong>：用于从键盘获取数据</p><p><strong>关键字</strong>：cin</p><p><strong>语法</strong>：<code>cin &gt;&gt; 变量</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//整型输入</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请给整型变量a赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;整型变量a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//浮点型输入</span></span><br><span class="line">    <span class="type">float</span> f = <span class="number">3.14f</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请给浮点型变量f赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; f;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;浮点型变量f = &quot;</span> &lt;&lt; f &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//字符型输入</span></span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请给字符型变量ch赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; ch;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;字符型变量ch = &quot;</span> &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//字符串型输入</span></span><br><span class="line">    string str = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请给字符串型变量str赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; str;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;字符串型变量str = &quot;</span> &lt;&lt; str &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//bool类型输入</span></span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请给bool型变量flag赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; flag;   <span class="comment">//只要是非0的数值代表的都是真</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;bool型变量flag = &quot;</span> &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/nkL8dTc1Z5N9lfv.png" alt="image-20220123222221411"></p><h2 id="3-运算符">3 运算符</h2><p><strong>作用</strong>：用于执行代码的运算</p><p>本章我们主要讲解以下几类运算符：</p><table><thead><tr><th>运算符类型</th><th>作用</th></tr></thead><tbody><tr><td>算术运算符</td><td>用于处理四则运算</td></tr><tr><td>赋值运算符</td><td>用于将表达式的值赋给变量</td></tr><tr><td>比较运算符</td><td>用于表达式的比较，并返回一个真值或假值</td></tr><tr><td>逻辑运算符</td><td>用于根据表达式的值返回真值或假值</td></tr></tbody></table><h3 id="3-1-算术运算符">3.1 算术运算符</h3><p><strong>作用</strong>：用于处理四则运算</p><p>算术运算符包括以下符号：</p><table><thead><tr><th>运算符</th><th>术语</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>+</td><td>正号</td><td>+3</td><td>3</td></tr><tr><td>-</td><td>负号</td><td>-3</td><td>-3</td></tr><tr><td>+</td><td>加</td><td>10+5</td><td>15</td></tr><tr><td>-</td><td>减</td><td>10-5</td><td>5</td></tr><tr><td>*</td><td>乘</td><td>10*5</td><td>50</td></tr><tr><td>/</td><td>除</td><td>10/5</td><td>2</td></tr><tr><td>%</td><td>取模（取余）</td><td>10%3</td><td>1</td></tr><tr><td>++</td><td>前置递增</td><td>a=2;b=++a;</td><td>a=3;b=3;</td></tr><tr><td>++</td><td>后置递增</td><td>a=2;b=a++;</td><td>a=3;b=2;</td></tr><tr><td>–</td><td>前置递减</td><td>a=2;b=–a;</td><td>a=1;b=1;</td></tr><tr><td>–</td><td>后置递减</td><td>a=2;b=a–;</td><td>a=1;b=2;</td></tr></tbody></table><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//加减乘除</span></span><br><span class="line">    <span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b1 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; a1 + b1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; a1 - b1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; a1 * b1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; a1 / b1 &lt;&lt; endl; <span class="comment">//两个数相除，除数不能为0；两个小数可以相除</span></span><br><span class="line">    cout &lt;&lt; a1 % b1 &lt;&lt; endl; <span class="comment">//两个数取余，b1不能为0。</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：两个==小数==是不可以做取余运算的</p></blockquote><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//前置递增</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    ++a;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后置递增</span></span><br><span class="line">    <span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line">    b++;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//前置和后置的区别</span></span><br><span class="line">    <span class="comment">//前置递增，先让变量+1，然后进行表达式运算</span></span><br><span class="line">    <span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b2 = ++a2*<span class="number">10</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a2 = &quot;</span> &lt;&lt; a2 &lt;&lt; endl;<span class="comment">//a2=11</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;b2 = &quot;</span> &lt;&lt; b2 &lt;&lt; endl;<span class="comment">//b2=110</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//后置递增，先进行表达式运算，后让变量+1</span></span><br><span class="line">    <span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b3 = a3++ * <span class="number">10</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a3 = &quot;</span> &lt;&lt; a3 &lt;&lt; endl;<span class="comment">//a3=11</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;b3 = &quot;</span> &lt;&lt; b3 &lt;&lt; endl;<span class="comment">//b3=100</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：前置递增先对变量进行++，再计算表达式，后置递增相反。</p></blockquote><h3 id="3-2-赋值运算符">3.2 赋值运算符</h3><p><strong>作用</strong>：用于将表达式的值赋给变量</p><p>赋值运算符包括以下几个符号：</p><table><thead><tr><th>运算符</th><th>术语</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>=</td><td>赋值</td><td>a=2;b=3;</td><td>a=2;b=3;</td></tr><tr><td>;+=</td><td>加等于</td><td>a=0;a+=2;</td><td>a=2;</td></tr><tr><td>-=</td><td>减等于</td><td>a=5;a-=3;</td><td>a=2;</td></tr><tr><td>*=</td><td>乘等于</td><td>a=2;a*=2;</td><td>a=4;</td></tr><tr><td>/=</td><td>除等于</td><td>a=4;a/=2;</td><td>a=2;</td></tr><tr><td>%=</td><td>模等于</td><td>a=3;a%2;</td><td>a=1;</td></tr></tbody></table><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//赋值运算符</span></span><br><span class="line">    <span class="comment">// =</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    a = <span class="number">100</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;  <span class="comment">//输出100</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// +=</span></span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    a += <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;  <span class="comment">//输出12</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// -=</span></span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    a -= <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;  <span class="comment">//输出8</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// *=</span></span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    a *= <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;  <span class="comment">//输出20</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// /=</span></span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    a /= <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;  <span class="comment">//输出5</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// %=</span></span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    a %= <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;  <span class="comment">//输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-比较运算符">3.3 比较运算符</h3><p><strong>作用</strong>：用于表达式的比较，并返回一个真值或假值</p><p>比较运算符有以下符号：</p><table><thead><tr><th>运算符</th><th>术语</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>==</td><td>相等于</td><td>4==3</td><td>0</td></tr><tr><td>!=</td><td>不等于</td><td>4!=3</td><td>1</td></tr><tr><td>&lt;</td><td>小于</td><td>4&lt;3</td><td>0</td></tr><tr><td>&gt;</td><td>大于</td><td>4&gt;3</td><td>1</td></tr><tr><td>&lt;=</td><td>小于等于</td><td>4&lt;=3</td><td>0</td></tr><tr><td>&gt;=</td><td>大于等于</td><td>4&gt;=1</td><td>1</td></tr></tbody></table><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//比较运算符</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    cout &lt;&lt; (a == b) &lt;&lt; endl; <span class="comment">//输出0</span></span><br><span class="line">    <span class="comment">// !=</span></span><br><span class="line">    cout &lt;&lt; (a != b) &lt;&lt; endl; <span class="comment">//输出1</span></span><br><span class="line">    <span class="comment">// &gt;</span></span><br><span class="line">    cout &lt;&lt; (a &gt; b) &lt;&lt; endl; <span class="comment">//输出0</span></span><br><span class="line">    <span class="comment">// &lt;</span></span><br><span class="line">    cout &lt;&lt; (a &lt; b) &lt;&lt; endl; <span class="comment">//输出1</span></span><br><span class="line">    <span class="comment">// &gt;=</span></span><br><span class="line">    cout &lt;&lt; (a &gt;= b) &lt;&lt; endl; <span class="comment">//输出0</span></span><br><span class="line">    <span class="comment">// &lt;=</span></span><br><span class="line">    cout &lt;&lt; (a &lt;= b) &lt;&lt; endl; <span class="comment">//输出1</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-逻辑运算符">3.4 逻辑运算符</h3><p><strong>作用</strong>：用于根据表达式的值返回真值或假值</p><p>逻辑运算符有以下符号：</p><table><thead><tr><th>运算符</th><th>术语</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>!</td><td>非</td><td>!a</td><td>如果a为假，则!a为真；如果a为真，则!a为假。</td></tr><tr><td>&amp;&amp;</td><td>与</td><td>a &amp;&amp; b</td><td>如果a和b都为真，则结果为真，否则为假。</td></tr><tr><td>||</td><td>或</td><td>a || b</td><td>如果a和b有一个为真，则结果为真，二者都为假时，结果为假。</td></tr></tbody></table><p>示例1：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//逻辑运算符</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; !a &lt;&lt; endl;        <span class="comment">//输出0</span></span><br><span class="line">    cout &lt;&lt; !!a &lt;&lt; endl;       <span class="comment">//输出1</span></span><br><span class="line">    cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;  <span class="comment">//输出0</span></span><br><span class="line">    cout &lt;&lt; (a || b) &lt;&lt; endl;  <span class="comment">//输出1</span></span><br><span class="line">    cout &lt;&lt; (!a || b) &lt;&lt; endl; <span class="comment">//输出0</span></span><br><span class="line">    cout &lt;&lt; (a &amp;&amp; !b) &lt;&lt; endl; <span class="comment">//输出1</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ol><li>逻辑非：真变假，假变真</li><li>逻辑与：同真为真，其余为假</li><li>逻辑或：同假为假，其余为真</li></ol></blockquote><h2 id="4-程序流程结构">4 程序流程结构</h2><p>C/C++支持最基本的三种程序运行结构：顺序结构、选择结构、循环结构</p><ul><li>顺序结构：程序按顺序执行，不发生跳转</li><li>选择结构：依据条件是否满足，有选择的执行相应功能</li><li>循环结构：依据条件是否满足，循环多次执行某段代码</li></ul><h3 id="4-1-选择结构">4.1 选择结构</h3><h4 id="4-1-1-if-语句">4.1.1 if 语句</h4><p><strong>作用</strong>：执行满足条件的语句</p><p>if语句的三种形式</p><ul><li>单行格式if语句</li><li>多行格式if语句</li><li>多条件的if语句</li></ul><ol><li>单行格式if语句：<code>if(条件)&#123; 条件满足执行的语句 &#125;</code></li></ol><p><img src="https://s2.loli.net/2023/03/12/YVb3MUhOCjHAL6z.png" alt="image-20220124090309047"></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//单行格式if语句</span></span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入您的分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;您输入的分数为：&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span> (score &gt; <span class="number">600</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考上了&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：if条件表达式后不要加分号</p></blockquote><ol start="2"><li>多行格式if语句：<code>if(条件)&#123; 条件满足执行的语句 &#125;else&#123; 条件不满足执行的语句 &#125;</code></li></ol><p><img src="https://s2.loli.net/2023/03/12/Kz6MXOBDICZeYSh.png" alt="image-20220124100023655"></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//if语句</span></span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入您的分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;您输入的分数为：&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span> (score &gt; <span class="number">600</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考上了&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;很遗憾，您未考上&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>多条件的if语句：<code>if(条件1)&#123; 条件1满足执行的语句 &#125;else if(条件2)&#123; 条件2满足执行的语句 &#125;... else&#123; 都不满足执行的语句 &#125;</code></li></ol><p><img src="https://s2.loli.net/2023/03/12/jBvDQNKXeOTsgpc.png" alt="image-20220124104743901"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//if语句</span></span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入您的分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;您输入的分数为：&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span> (score &gt; <span class="number">600</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考上了一本&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考上了二本&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考上了三本&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;很遗憾，您没有考上。&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>嵌套if语句</strong>：在if语句中，可以嵌套使用if语句，达到更精确的条件判断</p><p>案例需求：</p><ul><li>提示用户输入一个高考考试分数，根据分数做如下判断；</li><li>分数如果大于600分视为考上一本，大于500分考上二本，大于400分考上三本，其余视为未考上本科；</li><li>在一本分数中，如果大于700分，考入北大，大于680分，考入清华，大于660分考入人大。</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//if语句</span></span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入您的分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;您输入的分数为：&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span> (score &gt; <span class="number">600</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考上了一本！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">if</span> (score &gt; <span class="number">700</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;恭喜您考上了北大！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">680</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;恭喜您考上了清华！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">660</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;恭喜您考上了人大！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考上了二本！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考上了三本！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;很遗憾，您没有考上。&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-1-2-三目运算符">4.1.2 三目运算符</h4><p><strong>作用</strong>：通过三目运算符实现简单的判断</p><p><strong>语法</strong>：<code>表达式1 ? 表达式2 : 表达式3</code></p><p><strong>解释</strong>：</p><p>如果表达式1的值为真，执行表达式2，并返回表达式2的结果；</p><p>如果表达式1的值为假，执行表达式3，并返回表达式3的结果；</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//三目运算符 </span></span><br><span class="line">    <span class="comment">//将a和b做比较，将变量大的值赋值给变量c</span></span><br><span class="line">    <span class="type">int</span> a ,b, c;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入a,b,c的值&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    cin &gt;&gt; b;</span><br><span class="line">    cin &gt;&gt; c;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;输入a,b,c的值分别为：&quot;</span> &lt;&lt;a&lt;&lt;<span class="string">&quot;  &quot;</span> &lt;&lt; b &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在C++中三目运算符返回的是变量，可以继续进行赋值</span></span><br><span class="line">    c = (a &gt; b ? a:b);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;c 的值为 &quot;</span>&lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    (a &gt; b ? a : b) = <span class="number">100</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a和b的值分别为 &quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：在C++中三目运算符返回的是==变量==，可以继续进行赋值</p></blockquote><h4 id="4-1-3-switch-语句">4.1.3 switch 语句</h4><p><strong>作用</strong>：执行多条件分支语句</p><p><strong>语法</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123;</span><br><span class="line">    <span class="keyword">case</span> 结果<span class="number">1</span> : 执行语句;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> 结果<span class="number">2</span> : 执行语句;<span class="keyword">break</span>;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">default</span> :执行语句;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//switch语句</span></span><br><span class="line">    <span class="comment">//给电影打分</span></span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请给电影打分：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;您给电影打的分为：&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (score)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为是经典电影！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为是经典电影！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为电影非常好！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为电影非常好！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为电影一般！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为电影一般！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为电影很烂！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><ol><li>switch语句中表达式类型只能是整型或者字符型；</li><li>case里如果没有break，那么程序会一直向下执行。</li></ol></blockquote><blockquote><p>总结：与if语句比，对于多条件判断时，switch的结构清晰，执行效率高，缺点是switch不可以判断区间。</p></blockquote><h3 id="4-2-循环结构">4.2 循环结构</h3><h4 id="4-2-1-while循环语句">4.2.1 while循环语句</h4><p><strong>作用</strong>：满足循环条件，执行循环语句</p><p><strong>语法</strong>：<code>while(循环条件)&#123; 循环语句 &#125;</code></p><p><strong>解释</strong>：只要循环条件的结果为真，就执行循环语句</p><p><img src="https://s2.loli.net/2023/03/12/UNm9Dc6dKR1XTeB.png" alt="image-20220124182129559"></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//while语句</span></span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (num&lt;<span class="number">10</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：在执行循环语句的时候，程序必须提供跳出循环的出口，否则出现死循环。</p></blockquote><p><strong>while循环案例</strong>：猜数字</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//添加随机数种子，作用利用当前系统时间生成随机数，防止每次随机数都一样</span></span><br><span class="line">    <span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));<span class="comment">//通过系统时钟来产生随机数，需要包含ctime库</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> randnum = <span class="built_in">rand</span>() % <span class="number">100</span> + <span class="number">1</span>;<span class="comment">//rand()%100生成0-99的随机整数，加1后生成1-100的随机数</span></span><br><span class="line">    <span class="type">int</span> value;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请猜一个整数：&quot;</span> &lt;&lt; randnum &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; value;</span><br><span class="line">    <span class="keyword">while</span> (value != randnum) &#123;</span><br><span class="line">        <span class="keyword">if</span> (value &gt; randnum) </span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入的值大于随机数，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入的值小于随机数，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; value;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;恭喜您猜中随机数：&quot;</span> &lt;&lt; value &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-2-do…while循环语句">4.2.2 do…while循环语句</h4><p><strong>作用</strong>：满足循环条件，执行循环语句</p><p><strong>语法</strong>：<code>do&#123; 循环语句 &#125; while( 循环条件 );</code></p><p><strong>注意</strong>：与while的区别在于do…while会先执行一次循环语句，再判断循环条件</p><p><img src="https://s2.loli.net/2023/03/12/WRATvDlQ6nhpaYo.png" alt="image-20220124194049912"></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//do...while语句</span></span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">        num++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (num &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：与while循环区别在于do…while先执行一次循环语句，再判断循环条件</p></blockquote><p><strong>do…while练习案例</strong>：水仙花数</p><p>案例描述：水仙花数是指一个3位数，它的每个位上的数字的3次幂之和等于它本身</p><p>例如：1^3 + 5^3 +3^3 = 153</p><p>请利用do…while语句，求出所有3位数中的水仙花数</p><p>方法一：此程序复杂度较高</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//do...while语句</span></span><br><span class="line">    <span class="type">int</span> num1, num2, num3;</span><br><span class="line">    num1 = <span class="number">1</span>;</span><br><span class="line">    num2 = <span class="number">0</span>;</span><br><span class="line">    num3 = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;水仙花数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> ((<span class="built_in">pow</span>(num1,<span class="number">3</span>)+ <span class="built_in">pow</span>(num2,<span class="number">3</span>)+ <span class="built_in">pow</span>(num3,<span class="number">3</span>))==<span class="number">100</span>*num1+<span class="number">10</span>*num2+num3)</span><br><span class="line">                    cout &lt;&lt;num1&lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; num2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; num3 &lt;&lt; endl;</span><br><span class="line">                num3++;</span><br><span class="line">            &#125; <span class="keyword">while</span> (num3 &lt; <span class="number">10</span>);</span><br><span class="line">            num3 = <span class="number">0</span>;</span><br><span class="line">            num2++;</span><br><span class="line">        &#125; <span class="keyword">while</span> (num2 &lt; <span class="number">10</span>);</span><br><span class="line">        num2 = <span class="number">0</span>;</span><br><span class="line">        num1++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (num1 &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：此程序复杂度低</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//do...while语句</span></span><br><span class="line">    <span class="type">int</span> num, num1, num2, num3;</span><br><span class="line">    num = <span class="number">100</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;水仙花数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        num1 = num / <span class="number">100</span>;</span><br><span class="line">        num2 = num / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">        num3 = num % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">pow</span>(num1, <span class="number">3</span>) + <span class="built_in">pow</span>(num2, <span class="number">3</span>) + <span class="built_in">pow</span>(num3, <span class="number">3</span>)) == num)</span><br><span class="line">            cout &lt;&lt; num1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; num2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; num3 &lt;&lt; endl;</span><br><span class="line">        num++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (num &lt; <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-3-for循环语句">4.2.3 for循环语句</h4><p><strong>作用</strong>：满足循环条件，执行循环语句</p><p><strong>语法</strong>：<code>for(起始表达式;条件表达式;末尾循环体) &#123; 循环语句; &#125;</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//for循环语句</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：for循环中的表达式，要用分号进行分割</p></blockquote><blockquote><p>总结：while，do…while，for都是开发中常用的循环语句，for循环结构比较清晰，比较常规</p></blockquote><p><strong>for循环练习案例</strong>：敲桌子</p><p>案例描述：从1开始数到数字100，如果数字个位含有7，或者数字十位含有7，或者该数字是7的倍数，我们打印敲桌子，其余数字直接打印输出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//for循环语句</span></span><br><span class="line">    <span class="type">int</span> num1, num2;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">        num1 = i / <span class="number">10</span>;</span><br><span class="line">        num2 = i % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>(num1==<span class="number">7</span> || num2==<span class="number">7</span>||(i % <span class="number">7</span>)==<span class="number">0</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;敲桌子&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-4-嵌套循环">4.2.4 嵌套循环</h4><p><strong>作用</strong>：在循环体中再嵌套一层循环，解决一些实际问题</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//嵌套循环</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;* &quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>嵌套循环练习案例</strong>：乘法口诀表</p><p>案例描述：利用嵌套循环，实现九九乘法表</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//嵌套循环</span></span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">            cout &lt;&lt; j&lt;&lt;<span class="string">&quot;×&quot;</span>&lt;&lt;i&lt;&lt;<span class="string">&quot;=&quot;</span>&lt;&lt;i*j&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/TiU6V7tyEFQjXw5.png" alt="image-20220124212512676"></p><h3 id="4-3-跳转语句">4.3 跳转语句</h3><h4 id="4-3-1-break语句">4.3.1 break语句</h4><p><strong>作用</strong>：用于跳出==选择结构==或者==循环结构==</p><p>break使用的时机：</p><ul><li>出现在switch条件语句中，作用是终止case并跳出switch</li><li>出现在循环语句中，作用是跳出当前的循环语句</li><li>出现再嵌套循环中，跳出最近的内层循环语句</li></ul><p>示例1：break在switch中的使用</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;选择游戏难度：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1、简单&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2、普通&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;3、困难&quot;</span> &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> select;</span><br><span class="line">    cin &gt;&gt; select;</span><br><span class="line">    <span class="keyword">switch</span> (select) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>: cout &lt;&lt; <span class="string">&quot;1、简单&quot;</span> &lt;&lt; endl; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>: cout &lt;&lt; <span class="string">&quot;2、普通&quot;</span> &lt;&lt; endl; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>: cout &lt;&lt; <span class="string">&quot;3、困难&quot;</span> &lt;&lt; endl; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例2：break在for循环中的使用</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;i = &quot;</span> &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例3：break在嵌套循环中的使用</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (j == <span class="number">5</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;* &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-2-continue语句">4.3.2 continue语句</h4><p><strong>作用</strong>：在循环语句中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环</p><p><strong>示例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;i = &quot;</span> &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;hello &quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">3</span>) &#123;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;world&quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-3-goto语句">4.3.3 goto语句</h4><p><strong>作用</strong>：可以无条件跳转语句。</p><p><strong>语法</strong>：<code>goto 标记;</code></p><p><strong>解释</strong>：如果标记的名称存在，执行到goto语句时，会跳转到标记的位置，标记一般用大写。</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1、xxxx&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2、xxxx&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">goto</span> FLAG;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;3、xxxx&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;4、xxxx&quot;</span> &lt;&lt; endl;</span><br><span class="line">    FLAG:</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;5、xxxx&quot;</span> &lt;&lt; endl;    </span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：在程序中不建议使用goto语句，以免造成程序流程混乱。</p></blockquote><h2 id="5-数组">5 数组</h2><h3 id="5-1-概述">5.1 概述</h3><p>所谓数组，就是一个集合，里面存放了相同类型的数据元素</p><p><strong>特点1</strong>：数组中每个数据元素都是相同的数据类型</p><p><strong>特点2</strong>：数组是由连续的内存位置组成的</p><h3 id="5-2-一维数组">5.2 一维数组</h3><h4 id="5-2-1-一维数组定义方式">5.2.1 一维数组定义方式</h4><p>一维数组定义的三种方式：</p><ol><li><code>数据类型 数组名[ 数组长度 ];</code></li><li><code>数据类型 数组名[ 数组长度 ] = &#123; 值1, 值2, ...&#125;;</code></li><li><code>数据类型 数组名[  ] = &#123; 值1, 值2, ...&#125;;</code></li></ol><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>];</span><br><span class="line">    <span class="type">int</span> b[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span> &#125;;<span class="comment">//如果初始化数据没有全部填写完所有的数据，会在后面自动补0</span></span><br><span class="line">    <span class="type">int</span> c[] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span> &#125;;<span class="comment">//定义数组时必须确定初始长度</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">        cout &lt;&lt; b[i] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">        cout &lt;&lt; c[i] &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ol><li>数组名的命名规范与变量名命名规范一致，不要和变量重名。</li><li>数组中下标是从0开始索引</li></ol></blockquote><h4 id="5-2-2-一维数组数组名">5.2.2 一维数组数组名</h4><p>一维数组名称的<strong>用途</strong>：</p><ol><li>可以统计整个数组在内存中的长度</li><li>可以获取数组在内存中的首地址</li></ol><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">90</span>,<span class="number">100</span> &#125;;</span><br><span class="line">    <span class="comment">//可以通过数组名统计整个数组占用内存大小</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;整个数组占用内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(a) &lt;&lt; endl;<span class="comment">//输出为40</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;每个元素占用内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(a[<span class="number">0</span>]) &lt;&lt; endl;<span class="comment">//输出为4</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;数组中元素个数为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(a)/<span class="built_in">sizeof</span>(a[<span class="number">0</span>]) &lt;&lt; endl;  <span class="comment">//输出为10</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//可以通过数组名查看数组首地址</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;数组首地址为： &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;数组中中第一个元素首地址为： &quot;</span> &lt;&lt; &amp;a[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;数组中中第二个元素首地址为： &quot;</span> &lt;&lt; &amp;a[<span class="number">1</span>] &lt;&lt; endl;<span class="comment">//由于是int类型，所以第二个元素和第一个元素相差四个字节</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：数组名是常量，不可以修改</p></blockquote><p><strong>练习案例1</strong>：五只小猪称体重</p><p><strong>案例描述</strong>：在一个数组中记录了五只小猪的体重，如：int arr[5]={300,350,200,400,250};</p><p>找出并打印最重的小猪体重。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>] = &#123; <span class="number">300</span>,<span class="number">350</span>,<span class="number">200</span>,<span class="number">400</span>,<span class="number">250</span> &#125;;</span><br><span class="line">    <span class="type">int</span> max_v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; max_v)</span><br><span class="line">            max_v = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;最重的小猪体重为：&quot;</span> &lt;&lt; max_v &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>练习案例2</strong>：数组元素逆置</p><p><strong>案例描述</strong>：请申明一个5个元素的数组，并且将元素逆置。（如原数组元素为：1，3，2，5，4；逆置后输出结果为：4，5，2，3，1）。</p><p>方法一：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span> &#125;;</span><br><span class="line">    <span class="type">int</span> b[<span class="number">5</span>] = &#123;&#125;;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;逆置前的数组值为：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">5</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        b[<span class="number">5</span> - i] = a[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;逆置后的数组值为：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">        cout &lt;&lt; b[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span> &#125;;</span><br><span class="line">    <span class="type">int</span> start, end, temp;</span><br><span class="line">    start = <span class="number">0</span>;</span><br><span class="line">    end = <span class="built_in">sizeof</span>(a) / <span class="built_in">sizeof</span>(a[<span class="number">0</span>]) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;逆置前的数组值为：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (start &lt; end) &#123;</span><br><span class="line">        temp = a[start];</span><br><span class="line">        a[start] = a[end];</span><br><span class="line">        a[end] = temp;</span><br><span class="line">    </span><br><span class="line">        start++;</span><br><span class="line">        end--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;逆置后的数组值为：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-3-冒泡排序法">5.2.3 冒泡排序法</h4><p><strong>作用</strong>：最常用的排序算法，对数组内元素进行排序</p><ol><li>比较相邻的元素，如果第一个比第二个大，就交换他们两个；</li><li>对每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值；</li><li>重复以上的步骤，每次比较次数-1，直到不需要比较。</li></ol><p>示例：将数组 {4,2,8,0,5,7,1,3,9} 进行升序排列</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> a[<span class="number">9</span>] = &#123; <span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span> &#125;;</span><br><span class="line">    <span class="type">int</span> anum, temp;</span><br><span class="line">    anum = <span class="built_in">sizeof</span>(a) / <span class="built_in">sizeof</span>(a[<span class="number">0</span>]) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;冒泡排序前的数组值为：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; anum; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; anum - i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[j] &gt; a[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                temp = a[j];</span><br><span class="line">                a[j] = a[j + <span class="number">1</span>];</span><br><span class="line">                a[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;逆置后的数组值为：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-二维数组">5.3 二维数组</h3><p>二维数组就是在一维数组上多加一个维度。</p><h4 id="5-3-1-二维数组定义方式">5.3.1 二维数组定义方式</h4><p>二维数组定义的四种方式：</p><ol><li><code>数据类型 数组名[ 行数 ][ 列数 ];</code></li><li><code>数据类型 数组名[ 行数 ][ 列数 ] = &#123; &#123; 数据1 , 数据2 &#125; , &#123; 数据3 , 数据4 &#125; &#125;;</code></li><li><code>数据类型 数组名[ 行数 ][ 列数 ] = &#123; 数据1 , 数据2 , 数据3 , 数据4 &#125;;</code></li><li><code>数据类型 数组名[  ][ 列数 ] = &#123; 数据1 , 数据2 , 数据3 , 数据4 &#125;;</code></li></ol><blockquote><p>建议：以上四种定义方式，利用第二种更加直观，提高代码的可读性。</p></blockquote><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//方式一</span></span><br><span class="line">    <span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">    arr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    arr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">    arr[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">    arr[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">    arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">    arr[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方式二</span></span><br><span class="line">    <span class="type">int</span> arr2[<span class="number">2</span>][<span class="number">3</span>] = &#123; &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;, &#123;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方式三</span></span><br><span class="line">    <span class="type">int</span> arr3[<span class="number">2</span>][<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方式四</span></span><br><span class="line">    <span class="type">int</span> arr4[][<span class="number">3</span>] = &#123; <span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">9</span> &#125;;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;数组定义方式一：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">            cout &lt;&lt; arr[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;数组定义方式二：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">            cout &lt;&lt; arr2[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;数组定义方式三：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">            cout &lt;&lt; arr3[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;数组定义方式四：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">            cout &lt;&lt; arr4[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-3-2-二维数组的名称">5.3.2 二维数组的名称</h4><ul><li>查看二维数组所占内存空间</li><li>获取二维数组首地址</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>] = &#123;</span><br><span class="line">        &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">        &#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组占用内存空间为：&quot;</span> &lt;&lt;<span class="built_in">sizeof</span>(arr) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组第一行占用内存空间为：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组每个元素占用内存空间为：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组行数为：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr)/ <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组列数为：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>])/<span class="built_in">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组的首地址为：&quot;</span> &lt;&lt; arr &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组的首地址为：&quot;</span> &lt;&lt; (<span class="type">int</span>)arr &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组的第一行数据的首地址为：&quot;</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组的第一行数据的首地址（转为十进制）为：&quot;</span> &lt;&lt; (<span class="type">int</span>)arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组的第二行数据的首地址（转为十进制）为：&quot;</span> &lt;&lt; (<span class="type">int</span>)arr[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组的第一行第一个元素的地址为：&quot;</span> &lt;&lt; &amp;arr[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组的第一行第一个元素的地址为：&quot;</span> &lt;&lt; &amp;arr[<span class="number">0</span>][<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组的第一行第一个元素的地址为：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;arr[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;二维数组的第一行第一个元素的地址为：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;arr[<span class="number">0</span>][<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/gPTjsXynbvUKZwd.png" alt="image-20220125214442785"></p><h4 id="5-3-3-二维数组应用案例">5.3.3 二维数组应用案例</h4><p><strong>考试成绩统计</strong>：</p><p>案例描述：有三名同学（张三，李四，王五），在一次考试中的成绩分别如下表，请分别输出三名同学的总成绩</p><table><thead><tr><th></th><th>语文</th><th>数学</th><th>英语</th></tr></thead><tbody><tr><td>张三</td><td>100</td><td>100</td><td>100</td></tr><tr><td>李四</td><td>90</td><td>50</td><td>100</td></tr><tr><td>王五</td><td>60</td><td>70</td><td>80</td></tr></tbody></table><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> scores[<span class="number">3</span>][<span class="number">3</span>] = &#123;</span><br><span class="line">        &#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">        &#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">        &#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    string names[<span class="number">3</span>] = &#123; <span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span> &#125;;</span><br><span class="line">    <span class="type">int</span> students[<span class="number">3</span>];</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;所有学生的分数：&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">            cout &lt;&lt; scores[i][j] &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        students[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">            students[i] = students[i] + scores[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        cout &lt;&lt;names[i]&lt;&lt;<span class="string">&quot; 的总分数：&quot;</span> &lt;&lt; students[i] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-函数">6 函数</h2><h3 id="6-1-概述">6.1 概述</h3><p><strong>作用</strong>：将一段经常使用的代码封装起来，减少重复代码</p><p>一个较大的程序，一般分为若干个程序块，每个模块实现特定的功能。</p><h3 id="6-2-函数的定义">6.2 函数的定义</h3><p>函数的定义一般主要有5个步骤：</p><ol><li>返回值类型</li><li>函数名</li><li>参数列表</li><li>函数体语句</li><li>return 表达式</li></ol><p><strong>语法</strong>：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">返回值类型 函数名 （参数列表）</span><br><span class="line">&#123;</span><br><span class="line">    函数体语句</span><br><span class="line">        </span><br><span class="line">    return 表达式</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>返回值类型：一个函数可以返回一个值，在函数定义中。</li><li>函数名：给函数起个名称。</li><li>参数列表：使用该函数时，传入的数据。</li><li>函数体语句：花括号内的代码，函数内需要执行的语句。</li><li>return 表达式：和返回值类型挂钩，函数执行完后，返回相应的数据。</li></ul><h3 id="6-3-函数的调用">6.3 函数的调用</h3><p><strong>功能</strong>：使用定义好的函数</p><p><strong>语法</strong>：<code>函数名（参数）</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">    b = <span class="number">5</span>;</span><br><span class="line">    c = <span class="built_in">add</span>(a, b);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> sum = num1 + num2;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：函数定义里小括号内称为形参，函数调用时传入的参数成为实参。</p></blockquote><h3 id="6-4-值传递">6.4 值传递</h3><p>所谓的值传递，就是函数调用时实参将数值传入给形参</p><p>值传递时，如果形参发生，并不会影响实参</p><p><strong>示例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果函数不需要返回值，声明的时候可以写void</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;交换前：&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> temp = num1;</span><br><span class="line">    num1 = num2;</span><br><span class="line">    num2 = temp;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;交换前：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//return sum;//由于返回值为空，所以不需要return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">    b = <span class="number">5</span>;</span><br><span class="line">    <span class="built_in">swap</span>(a, b);</span><br><span class="line">   </span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ol><li>如果函数不需要返回值，声明的时候可以写void；</li><li>当做值传递的时候，==函数的形参发生改变，并不会影响实参==；</li></ol></blockquote><h3 id="6-5-函数的常见样式">6.5 函数的常见样式</h3><p>常见的函数样式有4种</p><ol><li>无参无返</li><li>有参无返</li><li>无参有返</li><li>有参有返</li></ol><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//无参无返函数调用</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;This is test01.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参无返函数调用</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">(<span class="type">int</span> a)</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;This is test02 a =&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//不需要写return，返回值为空</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//无参有返函数调用</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;This is test03.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参有返函数调用</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test04</span><span class="params">(<span class="type">int</span> a)</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;This is test04. a =&quot;</span>&lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">10</span>*a;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> b, c;</span><br><span class="line">    <span class="comment">//无参无返函数调用</span></span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="comment">//有参无返函数调用</span></span><br><span class="line">    <span class="built_in">test02</span>(a);</span><br><span class="line">    <span class="comment">//无参有返函数调用</span></span><br><span class="line">    b = <span class="built_in">test03</span>();</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Test03 return value:&quot;</span>&lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//有参有返函数调用</span></span><br><span class="line">    c = <span class="built_in">test04</span>(a);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Test04 return value:&quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">   </span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-6-函数的声明">6.6 函数的声明</h3><p><strong>作用</strong>：告诉编译器函数名称及如何调用函数。函数的实际主体可以单独定义。</p><ul><li>函数的声明可以多次，但是函数的定义只能有一次</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>; <span class="comment">//函数的声明，声明可以写多次</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> num1 = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;The max value of a and b: &quot;</span> &lt;&lt; <span class="built_in">max</span>(num1, num2) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-7-函数的分文件编写">6.7 函数的分文件编写</h3><p><strong>作用</strong>：让代码结构更加清晰</p><p>函数分文件编写一般有4个步骤</p><ol><li>创建后缀名为.h的头文件</li><li>创建后缀名为.cpp的源文件</li><li>在头文件中写函数的声明</li><li>在源文件中写函数的定义</li></ol><p>示例：</p><p>main.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span> <span class="comment">//用双引号代表自己编写的头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> num3 = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> num4 = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">swap</span>(num3, num4);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>swap.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br></pre></td></tr></table></figure><p>swap.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> temp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = temp;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-指针">7 指针</h2><h3 id="7-1-指针的基本概念">7.1 指针的基本概念</h3><p><strong>指针的作用</strong>：可以通过指针间接访问内存</p><ul><li>内存编号时从0开始记录的，一般用十六进制数字表示</li><li>可以利用指针变量保存地址</li></ul><h3 id="7-2-指针变量的定义和使用">7.2 指针变量的定义和使用</h3><p>指针变量定义语法：<code>数据类型 * 变量名</code></p><p><strong>使用指针</strong>：</p><ol><li><p>通过解引用的方式来找到指针指向的内存；</p></li><li><p>指针前加*代表解引用，找到指针指向的内存中的数据。</p></li></ol><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> *p;</span><br><span class="line">    p = &amp;a;</span><br><span class="line"></span><br><span class="line">    *p = <span class="number">100</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a的地址为：&quot;</span> &lt;&lt; &amp;a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;指针 p 为：&quot;</span> &lt;&lt; p &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*p为：&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a为：&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-3-指针所占内存空间">7.3 指针所占内存空间</h3><p>在32位操作系统下，占用4个字节空间；在64位操作系统下，占用8个字节空间。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">//int *p;</span></span><br><span class="line">    <span class="comment">//p = &amp;a;</span></span><br><span class="line">    <span class="type">int</span>* p = &amp;a; <span class="comment">//和上面注释的代码具有相同的功能</span></span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;sizeof(int *) = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span>*) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;sizeof(int *) = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">float</span>*) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;sizeof(int *) = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">double</span>*) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;sizeof(int *) = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span>*) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-4-空指针和野指针">7.4 空指针和野指针</h3><p><strong>空指针</strong>：指针变量指向内存中编号位0的空间</p><p><strong>用途</strong>：初始化指针变量</p><p><strong>注意</strong>：空指针指向的内存时不可以访问的</p><p>示例1：空指针</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//空指针用于给指针变量进行初始化</span></span><br><span class="line">    <span class="type">int</span>* p=<span class="literal">NULL</span>;<span class="comment">//一开始不知道指向哪，先指向一个空。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//空指针是不可以访问的</span></span><br><span class="line">    <span class="comment">//0~255之间的内存编号是系统占用的，因此不可以访问</span></span><br><span class="line">    <span class="comment">//*p = 100;//这句命令是错误的</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><ol><li><p>0~255之间的内存编号是系统占用的，因此不可以访问；</p></li><li><p>一开始不知道指向哪，先指向一个空。</p></li></ol></blockquote><p><strong>野指针</strong>：指针变量指向非法的空间</p><p>示例2：野指针</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//野指针</span></span><br><span class="line">    <span class="comment">//int* p=(int *)0x1100;//没有访问权限，在程序中避免出现野指针</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//cout &lt;&lt; *p &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：16进制数可以通过<code>int *</code>强制转换成指针类型。</p></blockquote><blockquote><p>总结：==空指针和野指针都不是我们申请的空间，因此不要访问。==</p></blockquote><h3 id="7-5-const修饰指针">7.5 const修饰指针</h3><p>const修饰指针有三种情况：</p><ol><li>const修饰指针 — 常量指针</li><li>const修饰常量 — 指针常量</li><li>const既修饰指针，又修饰常量</li></ol><p><strong>总结</strong>：</p><p><strong>常量指针</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span>* p = &amp;a;</span><br></pre></td></tr></table></figure><p><strong>特点</strong>：指针的指向可以修改，但是指针指向的值不可以改</p><p><code>*p = 20;</code>：错误，指针指向的值不可以改</p><p><code>p = &amp;b;</code>：正确，指针的指向可以改</p><p><strong>指针常量</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* <span class="type">const</span> p = &amp;a;</span><br></pre></td></tr></table></figure><p><strong>特点</strong>：指针的指向不可以更改，但是指针指向的值可以改</p><p><code>*p = 20;</code>：正确，指针指向的值可以改</p><p><code>p = &amp;b;</code>：错误，指针的指向不可以改</p><p><strong>const既修饰指针，又修饰常量</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p = &amp;a;</span><br></pre></td></tr></table></figure><p><strong>特点</strong>：指针的指向和指针指向的值都不可以改</p><p><code>*p = 20;</code>：错误，指针指向的值不可以改</p><p><code>p = &amp;b;</code>：错误，指针的指向不可以改</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="comment">//const修饰指针</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span>* p = &amp;a;<span class="comment">//常量指针，指针的指向可以更改，指针指向的值不能更改</span></span><br><span class="line">    p = &amp;b;</span><br><span class="line">    <span class="comment">//*p=20;//这一行错误,指针指向的值不能更改</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*p的值为：&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//const修饰常量</span></span><br><span class="line">    <span class="type">int</span>* <span class="type">const</span> p2 = &amp;a;<span class="comment">//指针常量，指针指向的值可以更改，指针的指向不能更改</span></span><br><span class="line">    *p2 = <span class="number">15</span>;</span><br><span class="line">    <span class="comment">//p2=&amp;b;//这一行错误，指针的指向不能修改</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*p2的值为：&quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//const既修饰指针，又修饰常量</span></span><br><span class="line">    <span class="type">int</span>* <span class="type">const</span> p3 = &amp;a;<span class="comment">//指针指向的值不可以更改，指针的指向也不能更改</span></span><br><span class="line">    <span class="comment">//*p2 = 35;//这一行错误,指针指向的值不能更改</span></span><br><span class="line">    <span class="comment">//p2=&amp;b;//错误，指针的指向不能修改</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*p3的值为：&quot;</span> &lt;&lt; *p3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>技巧：看const右侧紧跟着的是指针还是常量，是指针就是常量指针，是常量就是指针常量。</p></blockquote><h3 id="7-6-指针和数组">7.6 指针和数组</h3><p><strong>作用</strong>：利用指针访问数组中的元素</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//指针和数组，用指针访问数组中的元素</span></span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;数组中第一个元素为：&quot;</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span>* p = arr;<span class="comment">//数组名就是数组的首地址</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;利用指针来访问数组中第一个元素：&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;利用指针来访问数组中第二个元素：&quot;</span> &lt;&lt; *(p+<span class="number">1</span>) &lt;&lt; endl;</span><br><span class="line">    p++;</span><br><span class="line">    p++;<span class="comment">//由于是int类型，向后偏移4个字节</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;利用指针来访问数组中第二个元素：&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-7-指针和函数">7.7 指针和函数</h3><p><strong>作用</strong>：利用指针作为函数参数，可以修改实参的值</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap02</span><span class="params">(<span class="type">int</span>* p1, <span class="type">int</span>* p2)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> temp = *p1;</span><br><span class="line">    *p1 = *p2;</span><br><span class="line">    *p2 = temp;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;swap02中的a = &quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;swap02中的b = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//指针和函数</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">swap02</span>(&amp;a, &amp;b);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;主函数中的a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;主函数中的b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-8-指针、数组、函数">7.8 指针、数组、函数</h3><p>案例描述：封装一个函数，利用冒泡排序，实现对整型数组的升序排列</p><p>例如数组：<code>int arr[10]=&#123;4,3,6,9,1,2,10,8,7,5&#125;;</code></p><p>示例：</p><p>方法一：</p><p>main.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;bubble.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">5</span> &#125;;</span><br><span class="line">    <span class="type">int</span> array_length;</span><br><span class="line">    array_length = <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">bubble</span>(&amp;arr[<span class="number">0</span>], array_length);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; array_length; i++)</span><br><span class="line">        cout &lt;&lt; arr[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>bubble.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubble</span><span class="params">(<span class="type">int</span>* p, <span class="type">int</span> arr_length)</span></span>;</span><br></pre></td></tr></table></figure><p>bubble.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;bubble.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubble</span><span class="params">(<span class="type">int</span>* p,<span class="type">int</span> arr_length)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> temp;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; arr_length - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; arr_length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (*(p + j) &gt; *(p + j + <span class="number">1</span>)) &#123;</span><br><span class="line">temp = *(p + j);</span><br><span class="line">*(p + j) = *(p + j + <span class="number">1</span>);</span><br><span class="line">*(p + j + <span class="number">1</span>) = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：</p><p>main.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;bubble.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printarray</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> arr_length)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; arr_length; i++)</span><br><span class="line">        cout &lt;&lt; arr[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">5</span> &#125;;</span><br><span class="line">    <span class="type">int</span> array_length;</span><br><span class="line">    array_length = <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">bubble</span>(arr, array_length);</span><br><span class="line">    <span class="built_in">printarray</span>(arr, array_length);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>bubble.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubble</span><span class="params">(<span class="type">int</span>* p, <span class="type">int</span> arr_length)</span></span>;</span><br></pre></td></tr></table></figure><p>bubble.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;bubble.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubble</span><span class="params">(<span class="type">int</span>* arr,<span class="type">int</span> arr_length)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> temp;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; arr_length - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; arr_length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-结构体">8 结构体</h2><h3 id="8-1-结构体基本概念">8.1 结构体基本概念</h3><p>结构体术语用户自定义的数据类型，允许用户存储不同的数据类型</p><h3 id="8-2-结构体定义和使用">8.2 结构体定义和使用</h3><p><strong>语法</strong>：<code>struct 结构体名 &#123; 结构体成员列表 &#125;;</code></p><p>通过结构体创建变量的方式有三种：</p><ul><li>struct  结构体名  变量名</li><li>struct  结构体名  变量名 = { 成员1值 ，成员2值… }</li><li>定义结构体时顺便创建变量</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> &#123;<span class="comment">//这里的struct不能够省略</span></span><br><span class="line">    <span class="comment">//成员列表</span></span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;s3;<span class="comment">//定义结构体时顺便创建变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//struct Student s1，这里的struct可以省略</span></span><br><span class="line">    Student s1;<span class="comment">//这里的struct可以省略</span></span><br><span class="line">    s1.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">    s1.age = <span class="number">20</span>;</span><br><span class="line">    s1.score = <span class="number">100</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s1.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; s1.age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; s1.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//struct Student s2 = &#123;...&#125;</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Student</span> s2 = &#123; <span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">80</span> &#125;;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s2.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; s2.age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; s2.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义结构体时顺便创建变量</span></span><br><span class="line">    s3.name = <span class="string">&quot;王五&quot;</span>;</span><br><span class="line">    s3.age = <span class="number">18</span>;</span><br><span class="line">    s3.score = <span class="number">89</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s3.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; s3.age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; s3.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ol><li>定义结构体时的关键字是struct，不可省略；</li><li>创建结构体变量时，关键字struct可以省略；</li><li>结构体变量利用操作符“.”访问成员。</li></ol></blockquote><h3 id="8-3-结构体数组">8.3 结构体数组</h3><p><strong>作用</strong>：将自定义的结构体放入到数组中方便维护</p><p><strong>语法</strong>：<code>struct 结构体名 数组名[元素个数] =&#123; &#123;&#125;,&#123;&#125;,...&#123;&#125; &#125;</code></p><p><strong>示例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Student</span> stuarray[<span class="number">3</span>] = &#123;</span><br><span class="line">        &#123;<span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">96</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;王五&quot;</span>,<span class="number">20</span>,<span class="number">97</span>&#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    stuarray[<span class="number">2</span>].name = <span class="string">&quot;赵六&quot;</span>;</span><br><span class="line">    stuarray[<span class="number">2</span>].age = <span class="number">30</span>;</span><br><span class="line">    stuarray[<span class="number">2</span>].score = <span class="number">60</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stuarray[i].name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stuarray[i].age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stuarray[i].score &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-4-结构体指针">8.4 结构体指针</h3><p><strong>作用</strong>：通过指针访问结构体中的成员</p><ul><li>利用操作符<code>-&gt;</code>可以通过结构体指针访问结构体属性</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建学生结构体变量</span></span><br><span class="line">    Student s= &#123;<span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span>&#125;;</span><br><span class="line">    <span class="comment">//通过指针指向结构体变量</span></span><br><span class="line">    Student* p = &amp;s;</span><br><span class="line">    <span class="comment">//通过指针访问结构体变量中的数据</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class="string">&quot;  年龄：&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class="string">&quot;  分数：&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：结构体指针可以通过<code>-&gt;</code>操作符来访问结构体中的成员。</p></blockquote><h3 id="8-5-结构体嵌套结构体">8.5 结构体嵌套结构体</h3><p><strong>作用</strong>：结构体中的成员可以是另一个结构体</p><p>例如：每个老师辅导一个学员，一个老师的结构体中，记录一个学生的结构体</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">teacher</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Student</span> stu;<span class="comment">//辅导的学生，学生的结构体在老师的前面，否则查找不到。</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建老师</span></span><br><span class="line">    teacher t;</span><br><span class="line">    t.id = <span class="number">1000</span>;</span><br><span class="line">    t.name = <span class="string">&quot;老王&quot;</span>;</span><br><span class="line">    t.age = <span class="number">50</span>;</span><br><span class="line">    t.stu.name = <span class="string">&quot;小王&quot;</span>;</span><br><span class="line">    t.stu.age = <span class="number">20</span>;</span><br><span class="line">    t.stu.score = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;老师姓名：&quot;</span> &lt;&lt; t.name &lt;&lt; <span class="string">&quot;  年龄：&quot;</span> &lt;&lt; t.age &lt;&lt; <span class="string">&quot;  老师id：&quot;</span> &lt;&lt; t.id &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;老师带的学生姓名：&quot;</span> &lt;&lt; t.stu.name &lt;&lt; <span class="string">&quot;  学生年龄：&quot;</span> &lt;&lt; t.stu.age &lt;&lt; <span class="string">&quot;  学生分数：&quot;</span> &lt;&lt; t.stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：在结构体中可以定义另一个结构体作为成员，用来解决实际问题。</p></blockquote><h3 id="8-6-结构体做函数参数">8.6 结构体做函数参数</h3><p><strong>作用</strong>：将结构体作为参数向函数中传递</p><p>传递方式有两种：</p><ul><li>值传递，不会修改主函数中的值。</li><li>地址传递，会修改主函数中的值。</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printdata</span><span class="params">(<span class="keyword">struct</span> Student s)</span> </span>&#123;</span><br><span class="line">    s.age = <span class="number">30</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;通过函数访问结构体成员 姓名：&quot;</span> &lt;&lt; s.name &lt;&lt; <span class="string">&quot;  年龄：&quot;</span> &lt;&lt; s.age &lt;&lt; <span class="string">&quot;  分数：&quot;</span> &lt;&lt; s.score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printdata2</span><span class="params">(<span class="keyword">struct</span> Student* p)</span> </span>&#123;</span><br><span class="line">    p-&gt;age = <span class="number">45</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;通过指针访问结构体成员 姓名：&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class="string">&quot;  年龄：&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class="string">&quot;  分数：&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//将学生传入到一个参数中，打印学生的所有信息</span></span><br><span class="line">    <span class="comment">//创建结构体变量</span></span><br><span class="line">    Student s;</span><br><span class="line">    s.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">    s.age = <span class="number">20</span>;</span><br><span class="line">    s.score = <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">printdata</span>(s);</span><br><span class="line">    <span class="built_in">printdata2</span>(&amp;s);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s.name &lt;&lt; <span class="string">&quot;  年龄：&quot;</span> &lt;&lt; s.age &lt;&lt; <span class="string">&quot;  分数：&quot;</span> &lt;&lt; s.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：如果不需要修改主函数中的数据，用值传递，否则用地址传递。</p></blockquote><h3 id="8-7-结构体中const使用场景">8.7 结构体中const使用场景</h3><p><strong>作用</strong>：用const来防止误操作</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//将函数中的形参改为指针，可以减少内存空间，而且不会复制新的副本出来</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printdata</span><span class="params">(<span class="type">const</span> Student* p)</span> </span>&#123;<span class="comment">//加congst可以防止误操作</span></span><br><span class="line">    <span class="comment">//p-&gt;age = 150;//由于存在const，所以无法修改其中的参数，但是读取相应的参数没有问题。</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class="string">&quot;  年龄：&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class="string">&quot;  分数：&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建结构体变量</span></span><br><span class="line">    Student s = &#123; <span class="string">&quot;张三&quot;</span>, <span class="number">20</span>, <span class="number">100</span> &#125;;</span><br><span class="line">    <span class="built_in">printdata</span>(&amp;s);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s.name &lt;&lt; <span class="string">&quot;  年龄：&quot;</span> &lt;&lt; s.age &lt;&lt; <span class="string">&quot;  分数：&quot;</span> &lt;&lt; s.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-8-结构体案例">8.8 结构体案例</h3><h4 id="8-8-1-案例1">8.8.1 案例1</h4><p><strong>案例描述</strong>：</p><p>学校正在做毕设项目，每名老师带领5个学生，总共有3名老师，需求如下：</p><p>设计学生和老师的结构体，其中在老师的结构体中，有老师姓名和一个存放5名学生的数组作为成员，学生的成员有姓名、考试分数，创建数组存放3名老师，通过函数给每个老师及所带的学生赋值，最终打印出老师数据以及老师所带的学生数据。</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> &#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">teacher</span> &#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">student</span> stu[<span class="number">5</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintInfo</span><span class="params">(<span class="keyword">struct</span> teacher tea[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;老师姓名：&quot;</span> &lt;&lt; tea[i].name &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;\t学生姓名：&quot;</span> &lt;&lt; tea[i].stu[j].name &lt;&lt; <span class="string">&quot;  学生分数为：&quot;</span> &lt;&lt; tea[i].stu[j].score &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">inputdata</span><span class="params">(<span class="keyword">struct</span> teacher p[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    string seeds = <span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        p[i].name = <span class="string">&quot;teacher_&quot;</span>;</span><br><span class="line">        p[i].name += seeds[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">            p[i].stu[j].name = <span class="string">&quot;student_&quot;</span>;</span><br><span class="line">            p[i].stu[j].name += seeds[j];</span><br><span class="line">            p[i].stu[j].score = <span class="built_in">rand</span>() % <span class="number">61</span> + <span class="number">40</span>;<span class="comment">//rand() % 61为0~60的随机数+40变成40到100的随机数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="comment">//创建结构体变量</span></span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">teacher</span> tea[<span class="number">3</span>];</span><br><span class="line">    len = <span class="built_in">sizeof</span>(tea) / <span class="built_in">sizeof</span>(tea[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">inputdata</span>(tea,len);</span><br><span class="line">    <span class="built_in">PrintInfo</span>(tea,len);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-8-2-案例2">8.8.2 案例2</h4><p>案例描述：<br>设计一个英雄的结构体，包括成员姓名，年龄，性别；创建结构体数组，数组中存放5名英雄。</p><p>通过冒泡排序的算法，将数组中的英雄按照年龄及进行升序排序，最终打印排序后的结果。</p><p>五名英雄信息如下：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;刘备&quot;,23,&quot;男&quot;&#125;,</span><br><span class="line">      &#123;&quot;关羽&quot;,22,&quot;男&quot;&#125;,</span><br><span class="line">      &#123;&quot;张飞&quot;,20,&quot;男&quot;&#125;,</span><br><span class="line">      &#123;&quot;赵云&quot;,21,&quot;男&quot;&#125;,</span><br><span class="line">      &#123;&quot;貂蝉&quot;,19,&quot;女&quot;&#125;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Hero</span> &#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    string sex;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubble</span><span class="params">(<span class="keyword">struct</span> Hero he[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line">    Hero temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (he[j].age &gt; he[j + <span class="number">1</span>].age) &#123;</span><br><span class="line">                temp = he[j];<span class="comment">//不需要进行一个一个成员信息的互换</span></span><br><span class="line">                he[j] = he[j + <span class="number">1</span>];</span><br><span class="line">                he[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintInfo</span><span class="params">(<span class="keyword">struct</span> Hero he[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;根据年龄冒泡排序后的结果：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; he[i].name &lt;&lt; <span class="string">&quot;  年龄：&quot;</span> &lt;&lt; he[i].age &lt;&lt; <span class="string">&quot;  性别：&quot;</span> &lt;&lt; he[i].sex &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建结构体变量</span></span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Hero</span> he[<span class="number">5</span>] = &#123; </span><br><span class="line">        &#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    len = <span class="built_in">sizeof</span>(he) / <span class="built_in">sizeof</span>(he[<span class="number">0</span>]);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;排序前的结果：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; he[i].name &lt;&lt; <span class="string">&quot;  年龄：&quot;</span> &lt;&lt; he[i].age &lt;&lt; <span class="string">&quot;  性别：&quot;</span> &lt;&lt; he[i].sex &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">bubble</span>(he, len);</span><br><span class="line">    <span class="built_in">PrintInfo</span>(he, len);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++高级编程</title>
      <link href="/2022/02/26/C++/C++%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B/"/>
      <url>/2022/02/26/C++/C++%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>C++进阶编程</h1><ul><li>本阶段主要针对C++==泛型编程==和==STL==技术做详细讲解，探讨C++更深层的使用</li></ul><h2 id="1-模板">1 模板</h2><h3 id="1-1-模板的概念">1.1 模板的概念</h3><p>模板就是建立<strong>通用的模具</strong>，大大提高<strong>复用性</strong>。</p><p>例如生活中的模板</p><p>一寸照片的模板：</p><p><img src="https://s2.loli.net/2023/03/12/sqyZhx9f5GTD86n.png" alt="image-20220214185436420"></p><p>PPT模板</p><p><img src="https://s2.loli.net/2023/03/12/GL395gIJrREpHk7.png" alt="image-20220214201657407"></p><p>模板的特点：</p><ul><li>模板不可以直接使用，它只是一个框架</li><li>模板的通用并不是万能的</li></ul><h3 id="1-2-函数模板">1.2 函数模板</h3><ul><li>C++另一种编程思想称为==泛型编程==，主要利用的技术就是模板</li><li>C++提供两种模板机制：<strong>函数模板</strong>和<strong>类模板</strong></li></ul><h4 id="1-2-1-函数模板语法">1.2.1 函数模板语法</h4><p>函数模板作用：建立一个通用函数，其函数返回值类型和形参类型可以不具体裁定，用一个<strong>虚拟的类型</strong>来代表。</p><p><strong>语法</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">函数声明或定义</span><br></pre></td></tr></table></figure><p><strong>解释</strong>：</p><p>template — 声明创建模板</p><p>typename — 表面其后面的符号是一种数据类型，可以用class代替</p><p>T — 通用的数据类型，名称可以替换，通常为大写字母</p><p><strong>示例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//交换两个整型函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swapInt</span><span class="params">(<span class="type">int</span>&amp; a, <span class="type">int</span>&amp; b)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//交换两个浮点型函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swapDouble</span><span class="params">(<span class="type">double</span>&amp; a, <span class="type">double</span>&amp; b)</span> </span>&#123;</span><br><span class="line"><span class="type">double</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数模板</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="comment">//声明一个模板，后面的代码中紧跟的T不要报错，T是一个通用数据类型</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mySwap</span><span class="params">(T&amp; a, T&amp; b)</span> </span>&#123;</span><br><span class="line">T temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="comment">//swapInt(a, b);//代码正确，传统方式的代码</span></span><br><span class="line"><span class="comment">//利用函数模板交换两个数据</span></span><br><span class="line"><span class="comment">//两种方式使用函数模板：1.自动类型推导 2.显示指定类型</span></span><br><span class="line"><span class="comment">//1.自动类型推导</span></span><br><span class="line"><span class="built_in">mySwap</span>(a, b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> c = <span class="number">1.1</span>;</span><br><span class="line"><span class="type">double</span> d = <span class="number">2.2</span>;</span><br><span class="line"><span class="comment">//2.显示指定类型</span></span><br><span class="line"><span class="built_in">mySwap</span>&lt;<span class="type">double</span>&gt;(c, d);</span><br><span class="line"><span class="comment">//swapDouble(c, d);//代码正确，传统方式的代码</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;d = &quot;</span> &lt;&lt; d &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ul><li>函数模板利用关键字 template</li><li>使用函数模板有两种方式：自动类型推导、显示指定类型</li><li>模板的目的是为了提高复用性，将类型参数化</li></ul></blockquote><h4 id="1-2-2-函数模板注意事项">1.2.2 函数模板注意事项</h4><p>注意事项：</p><ul><li>自动类型推导，必须推导出一致的数据类型T，才可以使用</li><li>模板必须要确定出T的数据类型，才可以使用</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数模板</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="comment">//typename可以替换成class</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mySwap</span><span class="params">(T&amp; a, T&amp; b)</span> </span>&#123;</span><br><span class="line">T temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">char</span> cc = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line"><span class="built_in">mySwap</span>(a, b);</span><br><span class="line"><span class="comment">//mySwap(a, cc);//代码错误，推导不出一致的T类型</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//func();//代码错误，必须要确定T的数据类型，才可以使用</span></span><br><span class="line"><span class="built_in">func</span>&lt;<span class="type">int</span>&gt;();<span class="comment">//代码正确</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：使用模板时必须确定出通用数据类型T，并且能够推导出一致的类型。</p></blockquote><h4 id="1-2-3-函数模板案例">1.2.3 函数模板案例</h4><p>案例描述：</p><ul><li>利用函数模板封装一个排序的函数，可以对<strong>不同数据类型数组</strong>进行排序</li><li>排序规则从大到小，排序算法为<strong>选择排序</strong></li><li>分别利用<strong>char数组</strong>和<strong>int数组</strong>进行测试</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mySwap</span><span class="params">(T&amp; a, T&amp; b)</span> </span>&#123;</span><br><span class="line">T temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现通用 对数组进行排序的函数，规则 从大到小 算法 选择排序  测试 char数组和int数组</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="comment">//typename可以替换成class</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mySort</span><span class="params">(T&amp; arr, <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line"><span class="type">int</span> max = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; len; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[max] &lt; arr[j]) &#123;</span><br><span class="line">max = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (max != i) &#123;</span><br><span class="line"><span class="comment">//交换max和i元素</span></span><br><span class="line"><span class="built_in">mySwap</span>(arr[max], arr[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printArray</span><span class="params">(T arr[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//测试char数组</span></span><br><span class="line"><span class="type">char</span> charArr[] = <span class="string">&quot;badcfe&quot;</span>;</span><br><span class="line"><span class="type">int</span> num = <span class="built_in">sizeof</span>(charArr) / <span class="built_in">sizeof</span>(<span class="type">char</span>);</span><br><span class="line"><span class="built_in">mySort</span>(charArr, num);</span><br><span class="line"><span class="built_in">printArray</span>(charArr, num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//测试int数组</span></span><br><span class="line"><span class="type">int</span> intArr[] = &#123; <span class="number">7</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">6</span> &#125;;</span><br><span class="line"><span class="type">int</span> num = <span class="built_in">sizeof</span>(intArr) / <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line"><span class="built_in">mySort</span>(intArr, num);</span><br><span class="line"><span class="built_in">printArray</span>(intArr, num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-4-普通函数与函数模板的区别">1.2.4 普通函数与函数模板的区别</h4><p><strong>普通函数与函数模板区别</strong>：</p><ul><li>普通函数调用时可以发生自动类型转换（隐式类型转换）</li><li>函数模板调用时，如果利用自动类型推导，不会发生隐式类型转换</li><li>如果利用显示指定类型的方式，可以发生隐式类型转换</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//普通函数与函数模板的区别</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">myAdd01</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function">T <span class="title">myAdd02</span><span class="params">(T a, T b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">char</span> c = <span class="string">&#x27;c&#x27;</span>;<span class="comment">//a - 97  c - 99</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">myAdd01</span>(a, c) &lt;&lt; endl;</span><br><span class="line"><span class="comment">//自动类型推导</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; myAdd02(a, c) &lt;&lt; endl;//代码错误，无法推导出一致的T的类型，无法隐式类型转换</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">myAdd02</span>&lt;<span class="type">int</span>&gt;(a, c) &lt;&lt; endl;<span class="comment">//代码正确，明确指定了T的类型，因此可以发生隐式类型转换</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：建议使用显示指定类型的方式，调用函数模板，因为可以自己确定通用类型T</p></blockquote><h4 id="1-2-5-普通函数和函数模板的区别">1.2.5 普通函数和函数模板的区别</h4><p>调用规则如下：</p><ol><li>如果函数模板和普通函数都可以实现，优先使用普通函数；</li><li>可以通过空模板参数列表来强制调用函数模板；</li><li>函数模板也可以发生重载；</li><li>如果函数模板可以产生更好的匹配，优先调用函数模板</li></ol><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//普通函数与函数模板调用规则</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myPrint</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用普通函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myPrint</span><span class="params">(T a, T b)</span> </span>&#123;  <span class="comment">//允许普通函数和函数模板同时存在</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用函数模板&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myPrint</span><span class="params">(T a, T b, T c)</span> </span>&#123;  <span class="comment">//允许普通函数和函数模板可以同时存在</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用重载的函数模板&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line"><span class="type">char</span> c1 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="type">char</span> c2 = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">myPrint</span>(a, b);<span class="comment">//优先调用的是普通函数</span></span><br><span class="line">myPrint&lt;&gt;(a, b);<span class="comment">//通过空模板参数列表，强制调用函数模板</span></span><br><span class="line"><span class="built_in">myPrint</span>(a, b, c);<span class="comment">//调用重载的函数模板</span></span><br><span class="line"><span class="built_in">myPrint</span>(c1, c2);<span class="comment">//调用的是函数模板，因为如果选择普通函数需要进行隐式类型转换，而函数模板不需要</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：既然提供了函数模板，最好不要提供普通函数，否则容易出现二义性。</p></blockquote><h4 id="1-2-6-模板的局限性">1.2.6 模板的局限性</h4><p><strong>局限性</strong>：模板的通用性并不是万能的</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(T a, T b)</span> </span>&#123;</span><br><span class="line">a = b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上述代码中提供的赋值操作，如果传入的a和b是一个数组，就无法实现了。</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(T a, T b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a &gt; b)&#123; ... &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上述代码中，如果T的数据类型传入的是像Person这样的自定义数据类型，也无法正常运行。因此C++为了解决这种问题，提供模板的重载，可以为这些<strong>特定的类型</strong>提供<strong>具体化的模板</strong>。</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">myCompare</span><span class="params">(T&amp; a,T&amp; b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a == b) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>(string name, <span class="type">int</span> age) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">&#125;</span><br><span class="line">string m_Name;</span><br><span class="line"><span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//利用具体化Person的版本实现代码，具体化代码实现</span></span><br><span class="line"><span class="keyword">template</span>&lt;&gt; <span class="function"><span class="type">bool</span> <span class="title">myCompare</span><span class="params">(Person&amp; p1, Person&amp; p2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p1.m_Name == p2.m_Name &amp;&amp; p1.m_Age == p2.m_Age) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> ret = <span class="built_in">myCompare</span>(a, b);</span><br><span class="line"><span class="keyword">if</span> (ret) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a == b&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a != b&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="string">&quot;Tom&quot;</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="string">&quot;Tom&quot;</span>, <span class="number">11</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> ret = <span class="built_in">myCompare</span>(p1, p2);</span><br><span class="line"><span class="keyword">if</span> (ret) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1 == p2&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1 != p2&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ul><li>利用具体化的模板，可以解决自定义类型的通用化</li><li>学习模板并不是为了写模板，而是在STL能够运用系统提供的模板</li></ul></blockquote><h3 id="1-3-类模板">1.3 类模板</h3><h4 id="1-3-1-类模板语法">1.3.1 类模板语法</h4><p>类模板作用：建立一个通用类，类中的成员、数据类型可以不具体确定，用一个<strong>虚拟的类型</strong>来代表。</p><p><strong>语法</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">类</span><br></pre></td></tr></table></figure><p>解释：</p><p>template — 声明创建模板</p><p>typename — 表面其后面的符号是一种数据类型，可以用class代替</p><p>T — 通用的数据类型，名称可以替换，通常为大写字母</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C++高级编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++进阶编程</title>
      <link href="/2022/02/26/C++/C++%E8%BF%9B%E9%98%B6%E7%BC%96%E7%A8%8B/"/>
      <url>/2022/02/26/C++/C++%E8%BF%9B%E9%98%B6%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>本阶段主要针对C++面向对象编程技术做详细讲解，探讨C++中的核心和精髓。</p><h2 id="1-内存分区模型">1 内存分区模型</h2><p>C++程序在执行时，将内存大方向分为<strong>4个区域</strong>：</p><ul><li>代码区：存放函数体的二进制代码，由操作系统进行管理；</li><li>全局区：存放全局变量和静态变量以及常量；</li><li>栈区：由编译器自动分配释放，存放函数的参数值，局部变量等；</li><li>堆区：由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收。</li></ul><blockquote><p>在程序运行前有代码区和全局区，程序运行后才有栈区和堆区。</p></blockquote><p>内存四区意义：</p><p>不同区域存放的数据，赋予不同的生命周期，给我们很大的灵活编程。</p><h3 id="1-1-在程序运行前">1.1 在程序运行前</h3><p>在程序编译后，生成了exe可执行文件，未执行该程序前分为两个区域：</p><p><strong>代码区</strong>：</p><p>​存放CPU执行的机器指令；</p><p>​代码区时==<strong>共享</strong>==的，共享的目的是对于频繁被执行的程序，只需要在内存中由一份代码即可；</p><p>​代码区是==<strong>只读</strong>==的，使其只读的原因是防止程序意外地修改了它的指令。</p><p><strong>全局区</strong>：</p><p>​<strong>全局变量</strong>和<strong>静态变量</strong>存放在此；</p><p>​全局区还包含了<strong>常量区</strong>，<strong>字符串常量</strong>和其他常量（也包括<code>const</code>修饰的变量）也存放在此；</p><p>​==该区域的数据在程序结束后由操作系统释放。==</p><blockquote><p>总结：</p><p><strong>不在全局区中</strong>：局部变量、const修饰的局部变量</p><p>在全局区中：全局变量、静态变量(static关键字修饰的变量)、常量(字符串常量、<code>const</code>修饰的全局变量(全局常量))</p></blockquote><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局变量</span></span><br><span class="line"><span class="type">int</span> g_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> g_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰的全局变量，全局常量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> c_g_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> c_g_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//全局区</span></span><br><span class="line"><span class="comment">//全局变量、静态变量、常量</span></span><br><span class="line"><span class="comment">//静态变量，在普通变量前面加static，属于静态变量</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> s_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> s_b = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//常量：字符串常量</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;字符串常量的地址为：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;<span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//const修饰的变量:const修饰的全局变量、const修饰的局部变量</span></span><br><span class="line"><span class="comment">//const修饰的全局变量</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;const修饰的全局常量c_g_a的地址为：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;c_g_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;const修饰的全局常量c_g_b的地址为：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;c_g_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰的局部变量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> c_l_a = <span class="number">10</span>; <span class="comment">//c-const g-global l-local</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> c_l_b = <span class="number">10</span>; <span class="comment">//</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;const修饰的局部常量c_l_a的地址为：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;c_l_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;const修饰的局部常量c_l_b的地址为：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;c_l_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建普通局部变量</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部变量a的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部变量b的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局变量g_a的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;g_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局变量g_b的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;g_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局变量s_a的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;s_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局变量s_b的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;s_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="https://s2.loli.net/2023/03/12/ti23EBWwxRSdUeJ.png" alt="image-20220128180133418" style="zoom: 80%;" /><p><img src="https://s2.loli.net/2023/03/12/qPTMgcAQBH8YdXD.png" alt="image-20220128182700919"></p><blockquote><p>总结：</p><ul><li>C++中在程序运行前分为全局区和代码区；</li><li>代码区特点是共享和只读；</li><li>全局区中存放全局变量、静态变量、常量；</li><li>常量区存放<code>const</code>修饰的全局变量(也称全局常量)和字符串常量。</li></ul></blockquote><h3 id="1-2-程序运行后">1.2 程序运行后</h3><p><strong>栈区</strong>：</p><p>由编译器自动分配释放，存放函数的参数值，局部变量等。</p><p>注意事项：==不要返回局部变量的地址==，栈区开辟的数据由编译器自动释放。</p><p>==错误示例==：<strong>下面程序中返回局部变量的地址是错误的，栈区的数据运行后会自动释放。</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">func</span><span class="params">(<span class="type">int</span> b)</span> </span>&#123;<span class="comment">//形参数据也会放在栈区</span></span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;<span class="comment">//局部变量 存放在栈区，栈区的数据在函数执行完后自动释放</span></span><br><span class="line"><span class="keyword">return</span> &amp;a;<span class="comment">//返回局部变量的地址，这样写是错误的，不能返回形参的地址</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//接受func函数的返回值</span></span><br><span class="line"><span class="type">int</span>* p = <span class="built_in">func</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;<span class="comment">//第一次可以打印正确的数字，是因为编译器做了保留</span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;<span class="comment">//第二次这个数据就不再保留(在32位运行环境中)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>堆区</strong>：</p><p>由程序员分配释放，若程序员不释放，程序结束时由操作系统回收</p><p>在C++中主要利用new在堆区开辟内存</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//利用new关键字可以将数据开辟到堆区，下面的代码将10存放到堆区，将10的地址作为栈区中指针变量p的值</span></span><br><span class="line"><span class="type">int</span>* p = <span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">10</span>);<span class="comment">//这里的指针本质也是局部变量，放在栈上，指针保存的数据是放在堆区</span></span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//在堆区开辟数据</span></span><br><span class="line"><span class="type">int</span>* p = <span class="built_in">func</span>(); </span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;<span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><p>​堆区数据由程序员管理开辟和释放。</p><p>​堆区数据利用new关键字进行开辟内存</p></blockquote><h3 id="1-3-new操作符">1.3 new操作符</h3><p>C++中利用==new==操作符在堆区开辟数据</p><p>堆区开辟的数据，由程序员手动开辟，手动释放，释放利用操作符==delete==</p><p><strong>语法</strong>：<code>new 数据类型</code></p><p>==利用new创建的数据，会返回该数据对应的类型的指针。==</p><p>示例：基本语法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//在堆区创建整型数据</span></span><br><span class="line"><span class="comment">//new返回的是该数据类型的指针</span></span><br><span class="line"><span class="type">int</span>* p = <span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">10</span>);<span class="comment">//double* p = new double(6.23);//如果是double类型这样写。</span></span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span>* p = <span class="built_in">func</span>();</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> p;<span class="comment">//释放数据的地址</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; *p &lt;&lt; endl;//不能用这句命令，由于*p的地址已经释放，没有权限访问</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//创建10整型数据的数组，在堆区</span></span><br><span class="line"><span class="type">int</span>* arr = <span class="keyword">new</span> <span class="type">int</span>[<span class="number">10</span>];<span class="comment">//</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">arr[i] = i + <span class="number">100</span>;<span class="comment">//给10个元素赋值 100~109</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//释放堆区数据</span></span><br><span class="line"><span class="comment">//释放数组的时候，要加[]才可以</span></span><br><span class="line"><span class="keyword">delete</span>[] arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-引用">2 引用</h2><h3 id="2-1-引用的基本操作">2.1 引用的基本操作</h3><p><strong>作用</strong>：给变量起别名</p><p><strong>语法</strong>：<code>数据类型 &amp;别名 = 原名</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">//引用基本语法</span></span><br><span class="line"><span class="comment">//数据类型 &amp;别名 = 原名</span></span><br><span class="line"><span class="type">int</span>&amp; b = a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-引用注意事项">2.2 引用注意事项</h3><ul><li>引用必须初始化</li><li>引用在初始化后，不可以改变</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"><span class="comment">//数据类型 &amp;别名 = 原名</span></span><br><span class="line"><span class="type">int</span>&amp; b = a;</span><br><span class="line"><span class="comment">//int&amp; b;//这一行是错误的，引用必须初始化</span></span><br><span class="line"><span class="comment">//int&amp; b = c;//这一行是错误的，此时的b已经初始化为a的别名，不能更改</span></span><br><span class="line"></span><br><span class="line">b = c;<span class="comment">//赋值操作，而不是引用</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-引用做函数参数">2.3 引用做函数参数</h3><p><strong>作用</strong>：函数传参时，可以利用引用的技术让形参修饰实参</p><p><strong>优点</strong>：可以简化指针修改实参</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//值传递，形参不会修饰实参（形参无法改变实参）</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap01</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递，形参会修饰实参</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap02</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span>* b)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> temp = *a;</span><br><span class="line">*a = *b;</span><br><span class="line">*b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//引用传递，形参会修饰实参</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap03</span><span class="params">(<span class="type">int</span>&amp; a, <span class="type">int</span>&amp; b)</span> </span>&#123;<span class="comment">//利用引用，对引用的操作即是对原始数据的操作</span></span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">swap01</span>(a, b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01 a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01 b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap02</span>(&amp;a, &amp;b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap02 a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap02 b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap03</span>(a, b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap03 a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap03 b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：通过引用参数产生的效果同按地址传递是一样的。引用的语法更加清楚简单。</p></blockquote><h3 id="2-4-引用做函数返回值">2.4 引用做函数返回值</h3><p><strong>作用</strong>：引用是可以作为函数的返回值存在的。</p><p>注意：不要返回局部变量引用</p><p>用法：函数调用作为左值</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>&amp; <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;<span class="comment">//局部变量存放在四区中的栈区</span></span><br><span class="line"><span class="keyword">return</span> a;<span class="comment">//不要返回局部变量的引用，这里的代码是错误的</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>&amp; <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a = <span class="number">10</span>;<span class="comment">//静态变量存放在全局区，全局区上的数据在程序结束后由系统释放</span></span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//引用做函数的返回值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//函数的调用可以作为左值</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">int&amp; ref = test01();</span></span><br><span class="line"><span class="comment">cout &lt;&lt; &quot;ref = &quot; &lt;&lt; ref &lt;&lt; endl;//第一次结果正确，是因为编译器做了保留</span></span><br><span class="line"><span class="comment">cout &lt;&lt; &quot;ref = &quot; &lt;&lt; ref &lt;&lt; endl;//第二次结果错误，因为a的内存已经释放（32位编译环境）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span>&amp; ref2 = <span class="built_in">test02</span>();<span class="comment">//这里的代码是</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2 = &quot;</span> &lt;&lt; ref2 &lt;&lt; endl;</span><br><span class="line"><span class="built_in">test02</span>() = <span class="number">1000</span>;<span class="comment">//如果函数的返回值是引用，这个函数的调用可以作为左值</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2 = &quot;</span> &lt;&lt; ref2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-5-引用的本质">2.5 引用的本质</h3><p>本质：引用的本质在C++内部实现是一个指针常量。</p><p>讲解示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发现是引用，转换为 int* const ref = &amp;a</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span>&amp; ref)</span> </span>&#123;</span><br><span class="line">ref = <span class="number">100</span>;<span class="comment">//ref是引用，转换为*ref = 100</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自动转换为 int* const ref = &amp;a; 指针常量是指针指向不可改，也说明为什么引用也不可更改指向</span></span><br><span class="line"><span class="type">int</span>&amp; ref = a;</span><br><span class="line">ref = <span class="number">20</span>;<span class="comment">//内部发现ref是引用，自动帮我们转换为：*ref = 20;</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a：&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2：&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"><span class="built_in">func</span>(a);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a：&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2：&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：C++推荐用引用技术，因为语法方便，引用本质是指针常量，但是所有的指针操作编译器都帮我们做了。</p></blockquote><h3 id="2-6-常量引用">2.6 常量引用</h3><p><strong>作用</strong>：常量引用主要用来修饰形参，防止误操作</p><p>在函数形参列表中，可以加const修饰形参，防止形参改变实参</p><p>示例1：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//int&amp; ref = 10;//引用必须引用合法的内存空间，不能直接引用数值</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>&amp; ref = <span class="number">10</span>;<span class="comment">//加上const之后，编译器将代码修改为：int temp = 10; const int&amp; ref = temp;</span></span><br><span class="line"><span class="comment">//ref = 20;//加入const之后，变成只读状态，不可以修改</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a：&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref：&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例2：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showValue</span><span class="params">(<span class="type">const</span> <span class="type">int</span>&amp; ref)</span> </span>&#123;<span class="comment">//加入const后无法修改数据，防止误操作</span></span><br><span class="line"><span class="comment">//ref = 1000;//无法修改</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;value：&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">showValue</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-函数提高">3 函数提高</h2><h3 id="3-1-函数默认参数">3.1 函数默认参数</h3><p>在C++中，函数的形参列表中的形参是可以有默认值的。</p><p>语法：<code>返回值类型 函数名  (参数 = 默认值) &#123;&#125;</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b = <span class="number">20</span>, <span class="type">int</span> c = <span class="number">30</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.如果某个位置已经有了默认参数，那么从这个位置往后，从左到右都必须有默认值</span></span><br><span class="line"><span class="comment">//int func(int a= 20, int b, int c) &#123;//这一行有误，b和c必须有默认参数，才是正确的</span></span><br><span class="line"><span class="comment">//return a + b + c;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.如果函数的声明有默认参数，函数实现就不能有默认参数。函数声明和函数实现只能有一个有运行参数</span></span><br><span class="line"><span class="comment">//虽然代码没有报错，但是存在错误</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a = <span class="number">10</span>, <span class="type">int</span> b = <span class="number">10</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">func</span>(<span class="number">10</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">func</span>(<span class="number">10</span>, <span class="number">30</span>) &lt;&lt; endl;<span class="comment">//如果传了某个值，则用传过去的值</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">func2</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ol><li>如果函数实现中某个位置已经有了默认参数，那么从这个位置往后，从左到右都必须有默认值；</li><li>如果函数实现中已经定义了默认参数的值，如果主函数中如果调用这个函数，则用传过去的值进行函数运算；</li><li>如果函数的声明有默认参数，函数实现就不能有默认参数。==函数声明和函数实现只能有一个有运行参数==。</li></ol></blockquote><h3 id="3-2-函数占位参数">3.2 函数占位参数</h3><p>C++中函数的形参列表里可以有占位参数，用来做占位，==调用函数时必须填补该位置==。</p><p><strong>语法</strong>：<code>返回值类型 函数名 (数据类型) &#123;&#125;</code></p><p>在现阶段函数的占位参数存在意义不大，但是后面的课程中会用到该技术。</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//占位参数还可以有默认参数，例如：</span></span><br><span class="line"><span class="comment">//void func(int a,int = 10) &#123;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span>)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;This is function.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">func</span>(a,<span class="number">10</span>);<span class="comment">//调用时必须填补该位置</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-函数重载">3.3 函数重载</h3><h4 id="3-3-1-函数重载概述">3.3.1 函数重载概述</h4><p><strong>作用</strong>：函数名可以相同，提高复用性</p><p><strong>函数重载满足条件</strong>：</p><ul><li>同一个作用域下</li><li>函数名称相同</li><li>函数参数<strong>类型不同</strong>或者<strong>个数不同</strong>或者<strong>顺序不同</strong></li></ul><p><strong>注意</strong>：函数的返回值不可以作为函数重载的条件</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数重载</span></span><br><span class="line"><span class="comment">//可以让函数名相同，提高复用性</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func 的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(int a) 的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">double</span> a)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(double a) 的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a, <span class="type">double</span> b)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(int a, double b) 的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">double</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(double a, int b) 的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//函数的返回值不可以作为函数重载的条件</span></span><br><span class="line"><span class="comment">/*//</span></span><br><span class="line"><span class="comment">int func(double a, int b) &#123;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; &quot;func(double a, int b) 的调用&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">return 0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">func</span>();</span><br><span class="line"><span class="built_in">func</span>(<span class="number">10</span>);</span><br><span class="line"><span class="built_in">func</span>(<span class="number">3.14</span>);</span><br><span class="line"><span class="built_in">func</span>(<span class="number">10</span>, <span class="number">3.14</span>);</span><br><span class="line"><span class="built_in">func</span>(<span class="number">3.14</span>,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-2-函数重载注意事项">3.3.2 函数重载注意事项</h4><ul><li>引用作为重载条件</li><li>函数重载碰到函数默认参数</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数重载的注意事项</span></span><br><span class="line"><span class="comment">//引用作为重载的条件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span>&amp; a)</span> </span>&#123;   <span class="comment">//可读可写</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(int&amp; a) 的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">const</span> <span class="type">int</span>&amp; a)</span> </span>&#123;   <span class="comment">//加入const只能读不能写；合法的代码</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(const int&amp; a) 的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b = <span class="number">10</span>)</span> </span>&#123;   <span class="comment">//当函数重载碰到默认参数会存在二义性，报错，尽量避免这种情况</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(int a,int b = 10) 的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a)</span> </span>&#123;   <span class="comment">//</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(int a) 的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">func</span>(a);</span><br><span class="line"><span class="built_in">func</span>(<span class="number">10</span>);</span><br><span class="line"><span class="comment">//func2(10);//该行代码会报错，由于函数重载碰到默认参数会存在二义性</span></span><br><span class="line"><span class="built_in">func2</span>(<span class="number">10</span>, <span class="number">20</span>);<span class="comment">//和上面注释的代码形成对比，这一行代码不存在二义性</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-类和对象">4 类和对象</h2><p>C++面向对象的三大特征：==封装、继承、多态==</p><p>C++认为万事万物都皆为对象，对象上有其属性和行为</p><p>例如：</p><p>人可以作为对象，属性有姓名、年龄、身高、体重…，行为有走、跑、跳、吃饭、唱歌…</p><p>车也可以作为对象，属性有轮胎、方向盘、车灯…，行为有载人、放音乐、放空调…</p><p>具有相同性质的==对象==，我们可以抽象成为==类==，人属于人类，车属于车类</p><h3 id="4-1-封装">4.1 封装</h3><h4 id="4-1-1-封装的意义">4.1.1 封装的意义</h4><p>封装是C++面向对象三大特征之一</p><p>封装的意义：</p><ul><li>将属性和行为作为一个整体，表现生活中的事物</li><li>将属性和行为加以权限控制</li></ul><p><strong>封装的意义一</strong>：</p><p>​在设计类的时候，属性和行为写在一起，表现事物</p><p><strong>语法</strong>：<code>class 类名&#123; 访问权限: 属性 / 行为 &#125;</code></p><p>示例1：设计一个圆类，求圆的周长</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> pi = <span class="number">3.14</span>;<span class="comment">//圆周率</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设计一个圆类，求圆的周长</span></span><br><span class="line"><span class="comment">//圆求周长的公式：2*pi*半径</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//class代表设计一个类，类后面紧跟着就是类的名称</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> &#123;</span><br><span class="line"><span class="comment">//访问权限</span></span><br><span class="line"><span class="keyword">public</span>:  <span class="comment">//访问权限，公共权限</span></span><br><span class="line"><span class="comment">//属性</span></span><br><span class="line"><span class="type">int</span> m_r;<span class="comment">//半径</span></span><br><span class="line"><span class="comment">//行为：获取圆的周长，可以用一个函数</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">calculateZC</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span> * pi * m_r;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//通过圆类创建具体的圆（对象）</span></span><br><span class="line">Circle c1;<span class="comment">//通过类实例，创建一个对象</span></span><br><span class="line">c1.m_r = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;圆的周长为：&quot;</span> &lt;&lt; c1.<span class="built_in">calculateZC</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例2：设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:  <span class="comment">//访问权限，公共权限</span></span><br><span class="line"><span class="comment">//类中的属性和行为统一称为成员</span></span><br><span class="line"><span class="comment">//属性：成员属性，成员变量</span></span><br><span class="line">string name;<span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> number;<span class="comment">//学号</span></span><br><span class="line"><span class="comment">//行为：成员函数，成员方法</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生的姓名：&quot;</span> &lt;&lt; name &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生的学号：&quot;</span> &lt;&lt; number &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setStudent</span><span class="params">(string name1)</span> </span>&#123;</span><br><span class="line">name = name1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setnumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入学号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; number;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//创建对象</span></span><br><span class="line">Student s1;<span class="comment">//通过类实例，创建一个对象</span></span><br><span class="line">s1.<span class="built_in">setStudent</span>(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">s1.<span class="built_in">setnumber</span>();</span><br><span class="line">s1.<span class="built_in">showStudent</span>();</span><br><span class="line"></span><br><span class="line">Student s2;<span class="comment">//通过类实例，创建一个对象</span></span><br><span class="line">s2.<span class="built_in">setStudent</span>(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">s2.<span class="built_in">setnumber</span>();</span><br><span class="line">s2.<span class="built_in">showStudent</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>封装的意义二</strong>：</p><p>​类在设计时，可以把属性和行为放在不同的权限下，加以控制</p><p>访问权限有三种：</p><ol><li>public公共权限</li><li>protected保护权限</li><li>private私有权限</li></ol><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//访问权限：公共权限、保护权限、私有权限</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:  <span class="comment">//成员类内可以访问，类外可以访问</span></span><br><span class="line">string name;<span class="comment">//姓名</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">string car;<span class="comment">//保护权限内容类外无法访问</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> password;<span class="comment">//私有权限内容类外无法访问</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">car = <span class="string">&quot;拖拉机&quot;</span>;</span><br><span class="line">password = <span class="number">123456</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">output</span><span class="params">()</span> </span>&#123;  <span class="comment">//外部无法访问可以通过内部输出来查看</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输出所有信息：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; car &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; password &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//创建对象</span></span><br><span class="line">person p1;</span><br><span class="line"></span><br><span class="line"><span class="comment">//p1.car = &quot;奔驰&quot;;//保护权限的内容在类外无法访问，该行密码报错</span></span><br><span class="line">p1.<span class="built_in">func</span>();</span><br><span class="line">p1.name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line">p1.<span class="built_in">output</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>==总结==：</p><ul><li>公共权限 public        成员 类内可以访问 类外可以访问</li><li>保护权限 protected     成员     类内可以访问     类外不可以访问    在继承中，儿子也可以访问父亲中的保护内容</li><li>私有权限 private          成员     类内可以访问     类外不可以访问    在继承中，儿子无法访问父亲中的私有内容</li></ul></blockquote><h4 id="4-1-2-struct和class区别">4.1.2 struct和class区别</h4><p>在C++中struct和class唯一的区别就在于<strong>默认的访问权限不同</strong></p><p>区别：</p><ul><li>struct默认权限为公共</li><li>class默认权限为私有</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C1</span> &#123;</span><br><span class="line"><span class="type">int</span> m_a;<span class="comment">//如果什么权限都不写，默认为私有权限</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">C2</span> &#123;</span><br><span class="line"><span class="type">int</span> m_a;<span class="comment">//默认权限为公共权限</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//创建对象</span></span><br><span class="line">C1 c1;</span><br><span class="line"><span class="comment">//c1.m_a = 100;//无法访问，</span></span><br><span class="line">C2 c2;</span><br><span class="line">c2.m_a = <span class="number">100</span>; <span class="comment">//在struct中默认的权限为公共，因此可以访问</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-1-3-成员属性设置为私有">4.1.3 成员属性设置为私有</h4><p><strong>优点</strong>：</p><ol><li>将所有成员属性设置为私有，可以自己控制读写权限</li><li>对于写权限，我们可以检测数据的有效性</li></ol><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123; </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//写姓名</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setname</span><span class="params">(string name1)</span> </span>&#123;</span><br><span class="line">name = name1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取姓名</span></span><br><span class="line"><span class="function">string <span class="title">getname</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getage</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//age = 0;</span></span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setlover</span><span class="params">(string lover1)</span> </span>&#123;</span><br><span class="line">lover = lover1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setage</span><span class="params">(<span class="type">int</span> age1)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (age1 &lt; <span class="number">0</span> || age1&gt;<span class="number">150</span>) &#123;</span><br><span class="line">age = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;你这个老妖精！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">age = age1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string name;<span class="comment">//设置可读可写权限</span></span><br><span class="line"><span class="type">int</span> age;<span class="comment">//设置只读权限</span></span><br><span class="line">string lover;<span class="comment">//设置只写权限</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.<span class="built_in">setname</span>(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p.<span class="built_in">getname</span>() &lt;&lt; endl;</span><br><span class="line">p.<span class="built_in">setage</span>(<span class="number">10</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; p.<span class="built_in">getage</span>() &lt;&lt; endl;</span><br><span class="line">p.<span class="built_in">setlover</span>(<span class="string">&quot;Eureka&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="练习案例1：设计立方体类">练习案例1：设计立方体类</h4><p>设计立方体类（Cube）</p><p>求出立方体的面积和体积</p><p>分别用全局函数和成员函数判断两个立方体是否相等</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cube</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_L;</span><br><span class="line"><span class="type">int</span> m_W;</span><br><span class="line"><span class="type">int</span> m_H;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//设置长</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setL</span><span class="params">(<span class="type">int</span> L)</span> </span>&#123;</span><br><span class="line">m_L = L;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取长</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getL</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_L;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置宽</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setW</span><span class="params">(<span class="type">int</span> w)</span> </span>&#123;</span><br><span class="line">m_W = w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取宽</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getW</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_W;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置高</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setH</span><span class="params">(<span class="type">int</span> h)</span> </span>&#123;</span><br><span class="line">m_H = h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取高</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getH</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_H;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取立方体面积</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cals</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span> * (m_H * m_L + m_H * m_W + m_L * m_W);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取立方体体积</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">calv</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_H * m_L * m_W;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//利用成员函数判断两个正方体相等</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isSamebyclass</span><span class="params">( Cube&amp; c)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (c.<span class="built_in">getL</span>() == m_L &amp;&amp; c.<span class="built_in">getW</span>() == m_W &amp;&amp; c.<span class="built_in">getH</span>() == m_H) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用全局函数判断两个正方体相等</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isSame</span><span class="params">(Cube&amp; c1, Cube&amp; c2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (c1.<span class="built_in">getL</span>() == c2.<span class="built_in">getL</span>() &amp;&amp; c1.<span class="built_in">getW</span>() == c2.<span class="built_in">getW</span>() &amp;&amp; c1.<span class="built_in">getH</span>() == c2.<span class="built_in">getH</span>()) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Cube c1;</span><br><span class="line">c1.<span class="built_in">setL</span>(<span class="number">10</span>);</span><br><span class="line">c1.<span class="built_in">setW</span>(<span class="number">10</span>);</span><br><span class="line">c1.<span class="built_in">setH</span>(<span class="number">10</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1的面积为：&quot;</span> &lt;&lt; c1.<span class="built_in">cals</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1的体积为：&quot;</span> &lt;&lt; c1.<span class="built_in">calv</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">Cube c2;</span><br><span class="line">c2.<span class="built_in">setL</span>(<span class="number">10</span>);</span><br><span class="line">c2.<span class="built_in">setW</span>(<span class="number">10</span>);</span><br><span class="line">c2.<span class="built_in">setH</span>(<span class="number">10</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c2的面积为：&quot;</span> &lt;&lt; c2.<span class="built_in">cals</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c2的体积为：&quot;</span> &lt;&lt; c2.<span class="built_in">calv</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> ret = <span class="built_in">isSame</span>(c1, c2);</span><br><span class="line"><span class="keyword">if</span> (ret) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局函数判断：c1和c2是相等的&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局函数判断：c1和c2是不相等的&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> ret2 = c2.<span class="built_in">isSamebyclass</span>(c1);</span><br><span class="line"><span class="comment">//bool ret2 = c1.isSamebyclass(c2);//这一行代码没有问题，可以替换上一行代码</span></span><br><span class="line"><span class="keyword">if</span> (ret2) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;By class: c1和c2是相等的&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;By class:c1和c2是不相等的&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：成员函数传入一个未知的数据就可以了。</p></blockquote><h4 id="练习案例2：点和圆的关系">练习案例2：点和圆的关系</h4><p>设计一个圆形类（Circle），和一个点类（Point），计算点和圆的关系。</p><p>整体写法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_X;</span><br><span class="line"><span class="type">int</span> m_Y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//设置x</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setX</span><span class="params">(<span class="type">int</span> X)</span> </span>&#123;</span><br><span class="line">m_X = X;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取x</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getX</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_X;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置y</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setY</span><span class="params">(<span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">m_Y = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取y</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getY</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_Y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_R;</span><br><span class="line">Point m_Center;<span class="comment">//在类中可以让另一个类作为本类中的成员</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//设置R</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setR</span><span class="params">(<span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">m_R = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取R</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getR</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setCenter</span><span class="params">(Point center)</span> </span>&#123;</span><br><span class="line">m_Center = center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Point <span class="title">getCenter</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_Center;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断点和圆的关系</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">isInCircle</span><span class="params">(Circle&amp; c,Point&amp; p)</span> </span>&#123;</span><br><span class="line"><span class="comment">//计算两点之间的距离，平方</span></span><br><span class="line"><span class="type">int</span> distance = (c.<span class="built_in">getCenter</span>().<span class="built_in">getX</span>() - p.<span class="built_in">getX</span>()) * (c.<span class="built_in">getCenter</span>().<span class="built_in">getX</span>() - p.<span class="built_in">getX</span>()) +</span><br><span class="line">(c.<span class="built_in">getCenter</span>().<span class="built_in">getY</span>() - p.<span class="built_in">getY</span>()) * (c.<span class="built_in">getCenter</span>().<span class="built_in">getY</span>() - p.<span class="built_in">getY</span>());</span><br><span class="line"><span class="comment">//计算半径的平方</span></span><br><span class="line"><span class="type">int</span> iDistance = c.<span class="built_in">getR</span>() * c.<span class="built_in">getR</span>();</span><br><span class="line"><span class="comment">//判断关系</span></span><br><span class="line"><span class="keyword">if</span> (distance == iDistance) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;点在圆上。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (distance &gt; iDistance) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;点在圆外。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;点在圆内。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建圆</span></span><br><span class="line">Circle c;</span><br><span class="line">c.<span class="built_in">setR</span>(<span class="number">10</span>);</span><br><span class="line">Point center;</span><br><span class="line">center.<span class="built_in">setX</span>(<span class="number">10</span>);</span><br><span class="line">center.<span class="built_in">setY</span>(<span class="number">0</span>);</span><br><span class="line">c.<span class="built_in">setCenter</span>(center);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建点</span></span><br><span class="line">Point p;</span><br><span class="line">p.<span class="built_in">setX</span>(<span class="number">10</span>);</span><br><span class="line">p.<span class="built_in">setY</span>(<span class="number">9</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断关系</span></span><br><span class="line"><span class="built_in">isInCircle</span>(c, p);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分体写法：</p><p>main.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;point.h&quot;</span>;</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Circle.h&quot;</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断点和圆的关系</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">isInCircle</span><span class="params">(Circle&amp; c,Point&amp; p)</span> </span>&#123;</span><br><span class="line"><span class="comment">//计算两点之间的距离，平方</span></span><br><span class="line"><span class="type">int</span> distance = (c.<span class="built_in">getCenter</span>().<span class="built_in">getX</span>() - p.<span class="built_in">getX</span>()) * (c.<span class="built_in">getCenter</span>().<span class="built_in">getX</span>() - p.<span class="built_in">getX</span>()) +</span><br><span class="line">(c.<span class="built_in">getCenter</span>().<span class="built_in">getY</span>() - p.<span class="built_in">getY</span>()) * (c.<span class="built_in">getCenter</span>().<span class="built_in">getY</span>() - p.<span class="built_in">getY</span>());</span><br><span class="line"><span class="comment">//计算半径的平方</span></span><br><span class="line"><span class="type">int</span> iDistance = c.<span class="built_in">getR</span>() * c.<span class="built_in">getR</span>();</span><br><span class="line"><span class="comment">//判断关系</span></span><br><span class="line"><span class="keyword">if</span> (distance == iDistance) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;点在圆上。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (distance &gt; iDistance) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;点在圆外。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;点在圆内。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建圆</span></span><br><span class="line">Circle c;</span><br><span class="line">c.<span class="built_in">setR</span>(<span class="number">10</span>);</span><br><span class="line">Point center;</span><br><span class="line">center.<span class="built_in">setX</span>(<span class="number">10</span>);</span><br><span class="line">center.<span class="built_in">setY</span>(<span class="number">0</span>);</span><br><span class="line">c.<span class="built_in">setCenter</span>(center);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建点</span></span><br><span class="line">Point p;</span><br><span class="line">p.<span class="built_in">setX</span>(<span class="number">10</span>);</span><br><span class="line">p.<span class="built_in">setY</span>(<span class="number">9</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断关系</span></span><br><span class="line"><span class="built_in">isInCircle</span>(c, p);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>point.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once  <span class="comment">//防止头文件重复包含</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_X;</span><br><span class="line"><span class="type">int</span> m_Y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//设置x</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setX</span><span class="params">(<span class="type">int</span> X)</span></span>;</span><br><span class="line"><span class="comment">//获取x</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getX</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//设置y</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setY</span><span class="params">(<span class="type">int</span> y)</span></span>;</span><br><span class="line"><span class="comment">//获取y</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getY</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>point.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;point.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置x</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Point::setX</span><span class="params">(<span class="type">int</span> X)</span> </span>&#123;</span><br><span class="line">m_X = X;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取x</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Point::getX</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_X;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置y</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Point::setY</span><span class="params">(<span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">m_Y = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取y</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Point::getY</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_Y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Circle.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once  <span class="comment">//防止头文件重复包含</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;point.h&quot;</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_R;</span><br><span class="line">Point m_Center;<span class="comment">//在类中可以让另一个类作为本类中的成员</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//设置R</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setR</span><span class="params">(<span class="type">int</span> r)</span></span>;</span><br><span class="line"><span class="comment">//获取R</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getR</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setCenter</span><span class="params">(Point center)</span></span>;</span><br><span class="line"><span class="function">Point <span class="title">getCenter</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Circle.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Circle.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置R</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Circle::setR</span><span class="params">(<span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">m_R = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取R</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Circle::getR</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Circle::setCenter</span><span class="params">(Point center)</span> </span>&#123;</span><br><span class="line">m_Center = center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Point <span class="title">Circle::getCenter</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_Center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-对象的初始化和清理">4.2 对象的初始化和清理</h3><ul><li>生活中我们买的电子产品都基本会有出厂设置，在某一天我们不用的时候也会删除一些自己信息数据保证安全。</li><li>C++中的面向对象来源于生活，每个对象也都会有初始设置以及对象销毁前的清理数据的设置。</li></ul><h4 id="4-2-1-构造函数和析构函数">4.2.1 构造函数和析构函数</h4><p>对象的<strong>初始化和清理</strong>也是两个非常重要的安全问题</p><p>​一个对象或者变量没有初始状态，对其使用后果是未知</p><p>​同样的使用完一个对象或变量，没有及时清理，也会造成一定的安全问题</p><p>C++利用了<strong>构造函数</strong>和<strong>析构函数</strong>解决上述问题，这两个函数将会被编译器自动调用，完成对象初始化和清理工作。对象的初始化和清理工作是编译器强制要我们做的事情，因此如果<strong>我们不提供构造和析构，编译器会提供，编译器提供的构造函数和析构函数是空实现</strong>。</p><ul><li>构造函数：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无须手动调用</li><li>析构函数：主要作用在于对象<strong>销毁前</strong>系统自动调用，执行一些清理工作。</li></ul><p><strong>构造函数用法</strong>：<code>类名()&#123;&#125;</code></p><ol><li>构造函数，没有返回值也不写void</li><li>函数名称与类名相同</li><li>构造函数可以有参数，因此可以发生重载</li><li>程序在调用对象的时候会自动调用结构，无须手动调用，而且只会调用一次</li></ol><p><strong>析构函数语法</strong>：<code>~类名()&#123;&#125;</code></p><ol><li>析构函数，没有返回值也不写void</li><li>函数名称与类名相同，在名称前面加上符号<code>~</code></li><li>析构函数不可以有参数，因此不可以发生重载</li><li>程序在对象销毁前会自动调用析构函数，无须手动调用，而且只会调用一次</li></ol><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line"><span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person析构函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;<span class="comment">//构造和析构都是必须有的实现，如果自己不提供，编译器会提供空实现的构造和析构</span></span><br><span class="line">Person p;<span class="comment">//在栈上的数据，test01执行完毕后，释放这个对象</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="comment">//Person t;//用上一行代码，test01运行结束后会释放类p，接着调用析构函数，如果用此行代码会看不到析构函数输出，因为t没有被释放。</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-2-构造函数的分类及调用">4.2.2 构造函数的分类及调用</h4><p>两种分类方式：</p><p>​按参数分为：有参构造和无参构造</p><p>​按类型分为：普通构造和拷贝构造</p><p>三种调用方式：</p><p>​括号法</p><p>​显示法</p><p>​隐式转换法</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的无参构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a) &#123;</span><br><span class="line">age = a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的有参构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拷贝构造函数</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person &amp;p) &#123;<span class="comment">//通过const限定，不能更改原始的类的数据，通过引用的方式实现</span></span><br><span class="line"><span class="comment">//将传入的人身上的所有属性，拷贝到我身上</span></span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的拷贝构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person析构函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//括号法</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;括号法：&quot;</span> &lt;&lt; endl;</span><br><span class="line">Person p1;<span class="comment">//无参构造函数调用</span></span><br><span class="line"><span class="comment">//Person p1();//这行代码错误，因为这行代码编译器认为是函数的申明，不会认为在创建对象</span></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;<span class="comment">//有参构造函数的调用</span></span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(p2)</span></span>;<span class="comment">//拷贝构造函数的调用，将p2上所有的属性拷贝到p3上</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1的年龄：&quot;</span> &lt;&lt; p1.age &lt;&lt; endl;<span class="comment">//由于构造函数没有对p1上的成员属性age进行赋值，因此age没有具体的数值</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄：&quot;</span> &lt;&lt; p2.age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p3的年龄：&quot;</span> &lt;&lt; p3.age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示法</span></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;显示法：&quot;</span> &lt;&lt; endl;</span><br><span class="line">Person p4;</span><br><span class="line">Person p5 = <span class="built_in">Person</span>(<span class="number">15</span>);<span class="comment">//有参构造</span></span><br><span class="line">Person p6 = <span class="built_in">Person</span>(p5);<span class="comment">//拷贝构造</span></span><br><span class="line"><span class="comment">//注意事项一：匿名对象</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="number">10</span>);<span class="comment">//匿名对象，特点：当执行结束后，系统会立即回收掉匿名对象，即立刻进行析构</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaa&quot;</span> &lt;&lt; endl;<span class="comment">//匿名对象构造函数和析构函数结束之后才会运行此行代码</span></span><br><span class="line"><span class="comment">//注意事项二：不要利用拷贝构造函数，初始化匿名对象</span></span><br><span class="line"><span class="comment">//Person(p6);//该行代码错误，编译器认为 Person(p6)和Person p6相等;前面已经有p6，再进行操作则为重定义</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//隐式转换法</span></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;隐式转换法：&quot;</span> &lt;&lt; endl;</span><br><span class="line">Person p7 = <span class="number">10</span>;<span class="comment">//有参构造。相当于写了 Person p7 = Person(10)；</span></span><br><span class="line">Person p8 = p7;<span class="comment">//拷贝构造</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-3-拷贝构造函数调用时机">4.2.3 拷贝构造函数调用时机</h4><p>C++中拷贝构造函数调用时机通常有三种情况：</p><ul><li>使用一个已经创建完毕的对象来初始化一个新对象</li><li>值传递的方式给函数参数传值</li><li>以值方式返回局部对象</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的无参构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a) &#123;</span><br><span class="line">age = a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的有参构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拷贝构造函数</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person &amp;p) &#123;<span class="comment">//通过const限定，不能更改原始的类的数据，通过引用的方式实现</span></span><br><span class="line"><span class="comment">//将传入的人身上的所有属性，拷贝到我身上</span></span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的拷贝构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person析构函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//1.使用一个已经创建完毕的对象来初始化一个新对象</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;括号法：&quot;</span> &lt;&lt; endl;</span><br><span class="line">Person p1;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(p2)</span></span>;<span class="comment">//使用一个已经创建完毕的对象来初始化一个新对象</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄：&quot;</span> &lt;&lt; p2.age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p3的年龄：&quot;</span> &lt;&lt; p3.age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.值传递的方式给函数参数传值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doWork</span><span class="params">(Person p)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p;</span><br><span class="line"><span class="built_in">doWork</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.值方式返回局部对象</span></span><br><span class="line"><span class="function">Person <span class="title">doWork2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p1;</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>*)&amp;p1 &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> p1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p = <span class="built_in">doWork2</span>();</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>*)&amp;p &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//test01();//1.使用一个已经创建完毕的对象来初始化一个新对象</span></span><br><span class="line"><span class="comment">//test02();//2.值传递的方式给函数参数传值</span></span><br><span class="line"><span class="built_in">test03</span>();<span class="comment">//3.值方式返回局部对象</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/AQK7VBqaRgpE9Pi.png" alt="image-20220203113315094"></p><h4 id="4-2-4-构造函数调用规则">4.2.4 构造函数调用规则</h4><p>默认情况下，C++编译器==至少给一个类添加3个函数==</p><ol><li>默认构造函数（无参，函数体为空）</li><li>默认析构函数（无参，函数体为空）</li><li>默认拷贝构造函数，对属性进行值拷贝</li></ol><p>构造函数调用规则如下：</p><ul><li>如果用户定义有参构造函数，C++不再提供默认无参构造函数，但是会提供默认拷贝构造</li><li>如果用户定义拷贝构造函数，C++不会再提供其他构造函数</li></ul><p>示例1：如果存在用户定义的无参构造函数和拷贝构造函数，C++编译器将不再提供无参构造函数和拷贝构造函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的无参构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a) &#123;<span class="comment">//如果写了有参构造函数，编译器就不再提供默认构造，依然提供拷贝构造</span></span><br><span class="line">age = a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的有参构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拷贝构造函数</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person &amp;p) &#123;</span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的拷贝构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person析构函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.age = <span class="number">18</span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄：&quot;</span> &lt;&lt; p2.age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/j87VsaI3Dg42mYN.png" alt="image-20220203152240469"></p><p>示例2：如果编写了有参构造函数，编译器就不再提供默认构造函数（无参构造函数），依然提供拷贝构造函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a) &#123;<span class="comment">//如果写了有参构造函数，编译器就不再提供默认构造，依然提供拷贝构造</span></span><br><span class="line">age = a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的有参构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person析构函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//Person p;//这行命令出错，由于存在自定义有参构造函数，所以编译器不提供无参构造函数</span></span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(<span class="number">28</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄为：&quot;</span> &lt;&lt; p2.age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/D1Z4sQSoNFP8Xzf.png" alt="image-20220203153454787"></p><p>示例3：由于存在拷贝构造函数，所以编译器不再提供有参构造函数和无参构造函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//拷贝构造函数</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person&amp; p) &#123;</span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的拷贝构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person析构函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//Person p;//由于存在自定义的拷贝构造函数，所以不提供无参构造函数</span></span><br><span class="line"><span class="comment">//Person p(28);//由于存在自定义的拷贝构造函数，所以不提供有参构造函数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line">    </span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-5-深拷贝与浅拷贝">4.2.5 深拷贝与浅拷贝</h4><p>深浅拷贝是面试经典问题，也是常见的一个坑</p><p><strong>浅拷贝</strong>：简单的赋值拷贝操作</p><p><strong>深拷贝</strong>：在堆区重新申请空间，进行拷贝操作</p><p><img src="https://s2.loli.net/2023/03/12/qHhWfaSlFiGvJDe.png" alt="image-20220203163504382"></p><p><img src="https://s2.loli.net/2023/03/12/jeWyvhw86bHRJOf.png" alt="image-20220203163424882"></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的无参构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a,<span class="type">int</span> height) &#123;<span class="comment">//如果写了有参构造函数，编译器就不再提供默认构造，依然提供拷贝构造</span></span><br><span class="line">age = a;</span><br><span class="line">heig = <span class="keyword">new</span> <span class="built_in">int</span>(height);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的有参构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//自己实现拷贝构造函数，解决浅拷贝带来的问题</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person&amp; p) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person拷贝构造函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">age = p.age;</span><br><span class="line"><span class="comment">//heig = p.heig;//编译器默认实现就是这行代码,即浅拷贝</span></span><br><span class="line"><span class="comment">//深拷贝操作</span></span><br><span class="line">heig = <span class="keyword">new</span> <span class="built_in">int</span>(*p.heig);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line"><span class="comment">//析构代码，将堆区开辟的数据做释放操作</span></span><br><span class="line"><span class="keyword">if</span> (heig != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> heig;</span><br><span class="line">heig = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person析构函数的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> age;<span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span>* heig;<span class="comment">//身高</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>,<span class="number">160</span>)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1的年龄为：&quot;</span> &lt;&lt; p1.age &lt;&lt; <span class="string">&quot;   p1的身高为：&quot;</span> &lt;&lt; *p1.heig &lt;&lt; endl;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄为：&quot;</span> &lt;&lt; p2.age &lt;&lt; <span class="string">&quot;   p2的身高为：&quot;</span> &lt;&lt; *p2.heig &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：如果属性有在堆区开辟的，一定要自己提供拷贝构造函数，防止浅拷贝带来的问题（eg：堆区内存重复释放）。</p></blockquote><h4 id="4-2-6-初始化列表">4.2.6 初始化列表</h4><p><strong>作用</strong>：C++提供了初始化列表语法，用来初始化属性</p><p><strong>语法</strong>：<code>构造函数():属性1(值1),属性2(值2)...&#123;&#125;</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//传统初始化操作</span></span><br><span class="line"><span class="comment">//Person(int a, int b, int c) &#123;</span></span><br><span class="line"><span class="comment">//m_A = a;</span></span><br><span class="line"><span class="comment">//m_B = b;</span></span><br><span class="line"><span class="comment">//m_C = c;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化列表初始化属性</span></span><br><span class="line"><span class="comment">//样式一：</span></span><br><span class="line"><span class="built_in">Person</span>() :<span class="built_in">m_A</span>(<span class="number">10</span>), <span class="built_in">m_B</span>(<span class="number">20</span>), <span class="built_in">m_C</span>(<span class="number">30</span>) &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//样式二：</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c) :<span class="built_in">m_A</span>(a), <span class="built_in">m_B</span>(c), <span class="built_in">m_C</span>(b) &#123;<span class="comment">//b和c的顺序可以调换</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line"><span class="type">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//Person p(10, 20, 30);//传统初始化操作</span></span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span>)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;m_A =&quot;</span> &lt;&lt; p.m_A &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;m_B =&quot;</span> &lt;&lt; p.m_B &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;m_C =&quot;</span> &lt;&lt; p.m_C &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-7-类对象作为类成员">4.2.7 类对象作为类成员</h4><p>C++类中的成员可以是另一个类的对象，我们称该成员为<strong>对象成员</strong>。</p><p>例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    A a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>B类中有对象A作为成员，A为对象成员</p><p>那么当创建B对象时，A与B的构造和析构的顺序是谁先谁后？</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Phone</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Phone</span>(string pname) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Phone的构造函数调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">m_Pname = pname;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Phone</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Phone的析构函数调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">string m_Pname;<span class="comment">//手机品牌名称</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//下一行的m_phone(pname)等同于Phone m_phone = pname 隐式转换法</span></span><br><span class="line"><span class="built_in">Person</span>(string name, string pname) :<span class="built_in">m_name</span>(name),<span class="built_in">m_phone</span>(pname) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的构造函数调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的析构函数调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">string m_name;<span class="comment">//人名</span></span><br><span class="line">Phone m_phone;<span class="comment">//手机</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;苹果MAX&quot;</span>)</span></span>;</span><br><span class="line">cout &lt;&lt; p.m_name &lt;&lt; <span class="string">&quot;拿着&quot;</span> &lt;&lt; p.m_phone.m_Pname &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//当其他类的对象作为本类成员，先构造类对象，再构造自身</span></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/81mYSWD5oUtdrML.png" alt="image-20220203202207534"></p><h4 id="4-2-8-静态成员">4.2.8 静态成员</h4><p>静态成员就是在成员变量和成员函数前加上关键字static，称为静态成员。</p><p>静态成员分为：</p><ul><li>静态成员变量<ul><li>所有对象共享一份数据</li><li>在编译阶段分配内存</li><li>类内申明，类外初始化</li></ul></li><li>静态成员函数<ul><li>所有对象共享同一个函数</li><li>静态成员函数只能访问静态成员变量</li></ul></li></ul><p>示例1：静态成员函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//静态成员函数</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">m_A = <span class="number">100</span>;<span class="comment">//静态成员函数可以访问静态成员变量，m_A是共享的，不需要区分是哪个对象的m_A</span></span><br><span class="line"><span class="comment">//m_B = 200;//静态成员函数不可以访问非静态成员变量，无法区分需要修改是哪个对象的m_B</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;static void func()的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> m_A;</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;static void func2()的调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Person::m_A = <span class="number">0</span>;<span class="comment">//m_A是共享的</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;<span class="comment">//静态成员函数的两种访问方式：</span></span><br><span class="line"><span class="comment">//1.通过对象访问静态成员函数</span></span><br><span class="line">Person p;</span><br><span class="line">p.<span class="built_in">func</span>();</span><br><span class="line"><span class="comment">//2.通过类名调用静态成员函数</span></span><br><span class="line">Person::<span class="built_in">func</span>();</span><br><span class="line"><span class="comment">//Person::func2();//类外访问不到私有静态成员函数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//当其他类的对象作为本类成员，先构造类对象，再构造自身</span></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-C-对象模型和this指针">4.3 C++对象模型和this指针</h3><h4 id="4-3-1-成员变量和成员函数分开存储">4.3.1 成员变量和成员函数分开存储</h4><p>在C++中，类内的成员变量和成员函数分开存储，只有非静态成员变量才属于类的对象上</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person2</span> &#123;</span><br><span class="line"><span class="type">int</span> m_A;<span class="comment">//非静态成员变量，属于类的对象上</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> m_B;<span class="comment">//静态成员变量</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person3</span> &#123;</span><br><span class="line"><span class="type">int</span> m_A;<span class="comment">//非静态成员变量，属于类的对象上</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> m_B;<span class="comment">//静态成员变量，不属于类的对象上</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Person3::m_B = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person4</span> &#123;</span><br><span class="line"><span class="type">int</span> m_A;<span class="comment">//非静态成员变量，属于类的对象上</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> m_B;<span class="comment">//静态成员变量，不属于类的对象上</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;<span class="comment">//非静态成员函数，不属于类的对象上</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func2</span><span class="params">()</span> </span>&#123;<span class="comment">//静态成员函数，不属于类的对象上</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Person4::m_B = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p;</span><br><span class="line"><span class="comment">//C++编译器会给每个空对象分配一个内存空间，为了区分空对象占内存的位置</span></span><br><span class="line"><span class="comment">//每个空对象也有一个独一无二的内存地址</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sizeof p = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;<span class="comment">//空对象占用的内存空间为1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person2 p2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sizeof p = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p2) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person3 p3;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sizeof p = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p3) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test04</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person4 p4;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sizeof p = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p4) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();<span class="comment">//占用空间为1字节</span></span><br><span class="line"><span class="built_in">test02</span>();<span class="comment">//占用空间为4字节</span></span><br><span class="line"><span class="built_in">test03</span>();<span class="comment">//占用空间为4字节</span></span><br><span class="line"><span class="built_in">test04</span>();<span class="comment">//占用空间为4字节</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-2-this指针概念">4.3.2 this指针概念</h4><p>通过4.3.1我们知道在C++中成员变量和成员函数是分开存储的</p><p>每一个非静态成员函数只会诞生一份函数示例，也就是说多个同类型的对象会共用一块代码，那么问题是：这一块代码是如何区分那个对象调用自己的呢？</p><p>C++通过提供特殊的对象指针，this指针，解决上述问题。<strong>this指针指向被调用的成员函数所属的对象</strong></p><ul><li>this指针是隐含每一个非静态成员函数内的一种指针；</li><li>this指针不需要定义，直接使用即可。</li></ul><p>this指针的用途：</p><ul><li>当形参和成员变量同名时，可用this指针来区分；</li><li>在类的非静态成员函数中返回对象本身，可使用<code>return *this</code>。</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//this的作用：解决名称冲突，this指针隐藏在每一个成员函数内部，直接用即可</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> age) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;age = age;<span class="comment">//this指针指向的是被调用的成员函数所属的对象，这里的this指向的是对象p1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Person&amp; <span class="title">PersonAddAge</span><span class="params">(Person&amp; p)</span> </span>&#123;<span class="comment">//如果返回的是引用的方式返回，则返回的是p2</span></span><br><span class="line"><span class="comment">//Person PersonAddAge(Person&amp; p) &#123;//如果返回的是值，则会返回一个新的对象，和p2本身不同，见Person2</span></span><br><span class="line"><span class="keyword">this</span>-&gt;age += p.age;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;<span class="comment">//this指向p2的指针，而*this指向的就是p2这个对象的本体</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person2</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person2</span>(<span class="type">int</span> age) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Person2 <span class="title">PersonAddAge</span><span class="params">(Person2&amp; p)</span> </span>&#123;<span class="comment">//注意，这里返回的是值，会返回一个新的对象，和p2本身不同</span></span><br><span class="line"><span class="keyword">this</span>-&gt;age += p.age;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1的年龄：&quot;</span> &lt;&lt; p1.age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;返回的是Person&amp;：&quot;</span> &lt;&lt; endl;</span><br><span class="line">p2.<span class="built_in">PersonAddAge</span>(p1).<span class="built_in">PersonAddAge</span>(p1);<span class="comment">//链式编程思想</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄：&quot;</span> &lt;&lt; p2.age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">Person2 <span class="title">p1</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function">Person2 <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">p2.<span class="built_in">PersonAddAge</span>(p1).<span class="built_in">PersonAddAge</span>(p1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;返回的是Person：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄：&quot;</span> &lt;&lt; p2.age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄：&quot;</span> &lt;&lt; p2.<span class="built_in">PersonAddAge</span>(p1).age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"><span class="built_in">test03</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/nAg5rHWIl9pExqh.png" alt="image-20220203225717622"></p><h4 id="4-3-3-空指针访问成员函数">4.3.3 空指针访问成员函数</h4><p>C++中空指针也是可以调用成员函数的，但是也要注意有没有用到this指针，如果用到this指针，需要加以判断保证代码的健壮性。</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showClassName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is Person class&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPersonAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> == <span class="literal">NULL</span>) &#123; <span class="comment">//通常会加入此判断，防止传入空指针，对空指针的属性进行操作</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age = &quot;</span> &lt;&lt; m_Age &lt;&lt; endl;<span class="comment">//属性前面默认加了this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person* p = <span class="literal">NULL</span>;</span><br><span class="line">p-&gt;<span class="built_in">showClassName</span>();</span><br><span class="line"><span class="comment">//p-&gt;showPersonAge();//此行代码出错，由于传入的指针为空，再访问其中的属性是错误的</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-4-const修饰成员函数">4.3.4 const修饰成员函数</h4><p><strong>常函数</strong>：</p><ul><li>成员函数后加<code>const</code>后我们称为这个函数为<strong>常函数</strong>；</li><li>常函数内不可以修改成员属性；</li><li>成员属性声明时加关键字<code>mutable</code>后，在常函数中依然可以修改。</li></ul><p><strong>常对象</strong>：</p><ul><li>声明对象前加<code>const</code>称该对象为常对象；</li><li>常对象只能调用常函数。</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//this指针的本质是指针常量，指针指向的是不可以修改的</span></span><br><span class="line"><span class="comment">//Person * const this;这是this指针的本质，this等同于一个指针常量</span></span><br><span class="line"><span class="comment">//const Person * const this;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPerson</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="comment">//加入const后，属性就无法修改,等同于const Person * const this;</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_B = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//this-&gt;m_Age = 100;//该行代码等同于m_Age = 100;一般会隐藏this-&gt;。由于存在const，因此不能够对m_Age进行更改</span></span><br><span class="line"><span class="comment">//this = NULL;//错误。不可以修改this指针的指向</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> m_Age;</span><br><span class="line"><span class="keyword">mutable</span> <span class="type">int</span> m_B; <span class="comment">//特殊变量，即使在常函数中也可以修改这个值</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//常函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.<span class="built_in">showPerson</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//常对象</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">const</span> Person p;<span class="comment">//在对象前加const，变为常对象</span></span><br><span class="line"><span class="comment">//p.m_Age = 100;//错误，这个对象也是不能修改的</span></span><br><span class="line">p.m_B = <span class="number">100</span>;<span class="comment">//m_B是特殊值，在常对象下也可以修改</span></span><br><span class="line"><span class="comment">//常对象只能调用常函数</span></span><br><span class="line">p.<span class="built_in">showPerson</span>();</span><br><span class="line"><span class="comment">//p.func();//此行代码错误，类中普通函数是可以修改属性的，但是常对象是不能修改属性的</span></span><br><span class="line"><span class="comment">//如果能够调用普通函数，则能够修改属性，与常对象只能调用常函数矛盾</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-友元">4.4 友元</h3><p>生活中你的家有客厅（Public），有你的卧室（Private）</p><p>客厅所有来的客人都可以进去，但是你的卧室是私有的，也就是说只有你能进去，但是呢，你也可以允许你的好闺蜜好基友进去。</p><p>在程序里，有些私有属性也想让类外特殊的一些函数或者类进行访问，就需要用到友元的技术</p><p>友元的目的即使让一个函数或者类访问另一个类中的私有成员</p><p>友元的关键字为<code>friend</code></p><p>友元的三种实现：</p><ul><li>全局函数做友元</li><li>类做友元</li><li>成员函数做友元</li></ul><h4 id="4-4-1-全局函数做友元">4.4.1 全局函数做友元</h4><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//建筑物的类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span> &#123;</span><br><span class="line">    <span class="comment">//告诉编译器 goodGay全局函数 是Building类的好朋友，可以访问类中的私有内容</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">goodGay</span><span class="params">(Building* building)</span></span>;<span class="comment">//将全局函数的声明放在类中，并在前面加上friend，即为全局函数做友元</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Building</span>() &#123;</span><br><span class="line">m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string m_SittingRoom;<span class="comment">//客厅</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//全局函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">goodGay</span><span class="params">(Building* building)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友的全局函数 正在访问：&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友的全局函数 正在访问：&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Building building;</span><br><span class="line"><span class="built_in">goodGay</span>(&amp;building);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-4-2-类做友元">4.4.2 类做友元</h4><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GoodGay</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">GoodGay</span>();</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">visit</span><span class="params">()</span></span>; <span class="comment">//参观函数 访问Building中的属性</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Building* building;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span> &#123;</span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">class</span> <span class="title class_">GoodGay</span>;<span class="comment">//GoodGay类是好朋友，可以访问本类中的私有成员</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Building</span>();</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string m_SittingRoom;<span class="comment">//客厅</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//类外写成员函数</span></span><br><span class="line">Building::<span class="built_in">Building</span>() &#123;<span class="comment">//类外写构造函数</span></span><br><span class="line">m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">GoodGay::<span class="built_in">GoodGay</span>() &#123;<span class="comment">//类外写构造函数</span></span><br><span class="line"><span class="comment">//创建建筑物对象</span></span><br><span class="line">building = <span class="keyword">new</span> Building;<span class="comment">//初始化指针指向堆区的一段内存,返回给building是指向堆区的地址</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span> </span>&#123;<span class="comment">//类外写成员函数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友类正在访问：&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友类正在访问：&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">GoodGay gg;</span><br><span class="line">gg.<span class="built_in">visit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-4-3-成员函数做友元">4.4.3 成员函数做友元</h4><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GoodGay</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">GoodGay</span>();</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">visit</span><span class="params">()</span></span>; <span class="comment">//让visit函数可以访问Building中的私有成员</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">visit2</span><span class="params">()</span></span>;<span class="comment">//让visit2函数不可以访问Building中的私有成员</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Building* building;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span></span>;<span class="comment">//friend void GoodGay::visit();//GoodGay类下的visit成员函数作为本类的好朋友，可以访问私有成员</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Building</span>();</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string m_SittingRoom;<span class="comment">//客厅</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//类外写成员函数</span></span><br><span class="line">Building::<span class="built_in">Building</span>() &#123;<span class="comment">//类外写构造函数</span></span><br><span class="line">m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">GoodGay::<span class="built_in">GoodGay</span>() &#123;<span class="comment">//类外写构造函数</span></span><br><span class="line"><span class="comment">//创建建筑物对象</span></span><br><span class="line">building = <span class="keyword">new</span> Building;<span class="comment">//初始化指针指向堆区的一段内存</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span> </span>&#123;<span class="comment">//类外写成员函数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友类正在访问：&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友类正在访问：&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GoodGay::visit2</span><span class="params">()</span> </span>&#123;<span class="comment">//类外写成员函数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友类正在访问：&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;好基友类正在访问：&quot; &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;//该行代码错误，因为成员函数没有做友元</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">GoodGay gg;</span><br><span class="line">gg.<span class="built_in">visit</span>();</span><br><span class="line">gg.<span class="built_in">visit2</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5-运算符重载">4.5 运算符重载</h3><p>运算符重载概念：对已有的运算符重新进行定义，赋予其另一种功能，以适应不同的数据类型。</p><h4 id="4-5-1-加号运算符重载">4.5.1 加号运算符重载</h4><p>对于内置数据类型，编译器知道如何进行运算。但是两个实例化的对象相加，编译器就无法操作。</p><p>作用：实现两个自定义数据类型相加的运算</p><p>示例1：成员函数运算符重载</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加号运算符重载//1.成员函数重载+号//2.全局函数重载+号</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//1.成员函数重载+号</span></span><br><span class="line">Person <span class="keyword">operator</span>+(Person&amp; p) &#123;</span><br><span class="line">Person temp;</span><br><span class="line">temp.m_A = <span class="keyword">this</span>-&gt;m_A + p.m_B;</span><br><span class="line">temp.m_B = <span class="keyword">this</span>-&gt;m_B + p.m_A;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p1;</span><br><span class="line">p1.m_A = <span class="number">10</span>;</span><br><span class="line">p1.m_B = <span class="number">10</span>;</span><br><span class="line">Person p2;</span><br><span class="line">p2.m_A = <span class="number">10</span>;</span><br><span class="line">p2.m_B = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">Person p3 = p1 + p2;</span><br><span class="line"><span class="comment">//Person p3 = p1.operator+(p2);//当为成员函数运算符重载时，此行代码等同于：Person p3 = p1.operator+(p2);</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p3.m_A = &quot;</span> &lt;&lt; p3.m_A &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p3.m_B = &quot;</span> &lt;&lt; p3.m_B &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例2：全局函数运算符重载</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加号运算符重载//1.成员函数重载+号//2.全局函数重载+号</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//2.全局函数重载+号</span></span><br><span class="line">Person <span class="keyword">operator</span>+(Person&amp; p1, Person&amp; p2) &#123;</span><br><span class="line">Person temp;</span><br><span class="line">temp.m_A = p1.m_A + p2.m_B;</span><br><span class="line">temp.m_B = p1.m_B + p2.m_A;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line">Person <span class="keyword">operator</span>+(Person&amp; p1, <span class="type">int</span> num) &#123;</span><br><span class="line">Person temp;</span><br><span class="line">temp.m_A = p1.m_A + num;</span><br><span class="line">temp.m_B = p1.m_B + num;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p1;</span><br><span class="line">p1.m_A = <span class="number">10</span>;</span><br><span class="line">p1.m_B = <span class="number">10</span>;</span><br><span class="line">Person p2;</span><br><span class="line">p2.m_A = <span class="number">10</span>;</span><br><span class="line">p2.m_B = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//运算符重载</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;运算符重载：&quot;</span> &lt;&lt; endl;</span><br><span class="line">Person p3 = p1 + p2;<span class="comment">//当为全局函数运算符重载时，此行代码等同于：Person p3 = operator+(p1, p2);</span></span><br><span class="line"><span class="comment">//Person p3 = operator+(p1, p2);</span></span><br><span class="line">Person p4 = p1 + <span class="number">13</span>;<span class="comment">//函数重载</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p3.m_A = &quot;</span> &lt;&lt; p3.m_A &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p3.m_B = &quot;</span> &lt;&lt; p3.m_B &lt;&lt; endl;</span><br><span class="line"><span class="comment">//函数重载</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;函数重载：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p4.m_A = &quot;</span> &lt;&lt; p4.m_A &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p4.m_B = &quot;</span> &lt;&lt; p4.m_B &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ol><li>运算符重载也可以发生函数重载；</li><li>对于内置的数据类型的表达式的运算符是不能改变的；</li><li>不要滥用运算符重载，例如operator+里面写的是相减、相除、相乘等，和名称不匹配。</li></ol></blockquote><h4 id="4-5-2-左移运算符重载">4.5.2 左移运算符重载</h4><p>作用：可以输出自定义数据类型。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//左移运算符</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; cout, Person p);</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a, <span class="type">int</span> b) &#123;</span><br><span class="line">m_A = a;</span><br><span class="line">m_B = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">//利用成员函数重载左移运算符 如果通过void operator&lt;&lt;(cout)&#123;&#125;建立成员函数，则最后输出的命令为 p.operator&lt;&lt;(cout) 简化版本 p &lt;&lt; cout</span></span><br><span class="line"><span class="comment">//通常不会利用成员函数重载&lt;&lt;运算符，因为无法实现 cout 在左侧</span></span><br><span class="line"><span class="comment">//void operator&lt;&lt;( ostream&amp; cout ) &#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//只能利用全局函数重载左移运算符</span></span><br><span class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; cout, Person p) &#123;  <span class="comment">//本质 operator&lt;&lt;(cout,p) 简化 cout&lt;&lt;p</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;m_A = &quot;</span> &lt;&lt; p.m_A &lt;&lt; <span class="string">&quot;  m_B = &quot;</span> &lt;&lt; p.m_B;</span><br><span class="line"><span class="keyword">return</span> cout;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//上面的代码 等同于 下面的代码，主要就是cout和out的不同，引用也就是起别名</span></span><br><span class="line"><span class="comment">//ostream&amp; operator&lt;&lt;(ostream&amp; out, Person p) &#123;  //本质 operator&lt;&lt;(cout,p) 简化 cout&lt;&lt;p</span></span><br><span class="line"><span class="comment">//out &lt;&lt; &quot;m_A = &quot; &lt;&lt; p.m_A &lt;&lt; &quot;  m_B = &quot; &lt;&lt; p.m_B;</span></span><br><span class="line"><span class="comment">//return out;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>,<span class="number">10</span>)</span></span>;</span><br><span class="line">cout &lt;&lt; p1 &lt;&lt; endl;<span class="comment">//进行链式编程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-5-3-递增运算符重载">4.5.3 递增运算符重载</h4><p>作用：通过重载递增运算符，实现自己的整型数据</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重载递增运算符</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyInteger</span> &#123;</span><br><span class="line"><span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; cout, MyInteger p);</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">MyInteger</span>() &#123;</span><br><span class="line">m_Num = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重载前置**运算符</span></span><br><span class="line">MyInteger&amp; <span class="keyword">operator</span>++() &#123;</span><br><span class="line">m_Num++;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;<span class="comment">//将自身作为返回，*this是解引用，返回自身是为了防止++(++a)出现，这样能够对一个数据进行递增操作。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重载后置**运算符</span></span><br><span class="line">MyInteger <span class="keyword">operator</span>++(<span class="type">int</span>) &#123;<span class="comment">//int代表占位参数，可以用于区分前置和后置递增，只能用int，不能用float或者double。</span></span><br><span class="line">MyInteger temp = *<span class="keyword">this</span>;</span><br><span class="line">m_Num++;</span><br><span class="line"><span class="keyword">return</span> temp;<span class="comment">//由于返回的是temp，所以返回的是值，不是引用，返回之后temp会被释放</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_Num;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//只能利用全局函数重载左移运算符</span></span><br><span class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; cout, MyInteger myint) &#123; <span class="comment">//本质 operator&lt;&lt;(cout,p) 简化 cout&lt;&lt;p</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;m_Num = &quot;</span> &lt;&lt; myint.m_Num ;</span><br><span class="line"><span class="keyword">return</span> cout;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">MyInteger myint;</span><br><span class="line">cout &lt;&lt; ++(++myint) &lt;&lt; endl;<span class="comment">//输出结果为2</span></span><br><span class="line">cout &lt;&lt; myint &lt;&lt; endl;<span class="comment">//输出结果为2，因为能够重复对myint进行操作，上一行命令第二次++后改变的还是原来的myint</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">MyInteger myint;</span><br><span class="line">cout &lt;&lt; myint++ &lt;&lt; endl;<span class="comment">//输出结果为0</span></span><br><span class="line">cout &lt;&lt; myint &lt;&lt; endl;<span class="comment">//输出结果为1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同理，递减运算符重载示例如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">myInteger</span> &#123;</span><br><span class="line"><span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; cout, myInteger myint);</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">myInteger</span>() &#123;</span><br><span class="line">m_Num = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//前置--运算符</span></span><br><span class="line">myInteger&amp; <span class="keyword">operator</span>--() &#123;</span><br><span class="line">m_Num--;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//后置--运算符</span></span><br><span class="line">myInteger <span class="keyword">operator</span>--(<span class="type">int</span>) &#123;</span><br><span class="line">myInteger temp = *<span class="keyword">this</span>;</span><br><span class="line">m_Num--;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_Num;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; cout, myInteger myint) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;myint = &quot;</span> &lt;&lt; myint.m_Num;</span><br><span class="line"><span class="keyword">return</span> cout;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">myInteger myint;</span><br><span class="line">cout &lt;&lt; --myint &lt;&lt; endl;<span class="comment">//输出为-1</span></span><br><span class="line">cout &lt;&lt; myint-- &lt;&lt; endl;<span class="comment">//输出为-1</span></span><br><span class="line">cout &lt;&lt; --(--myint) &lt;&lt; endl;<span class="comment">//输出为-4</span></span><br><span class="line">cout &lt;&lt; myint &lt;&lt; endl;<span class="comment">//输出为-4</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-5-4-赋值运算符重载">4.5.4 赋值运算符重载</h4><p>C++编译器至少给一个类添加4个函数</p><ol><li>默认构造函数（无参，函数体为空）</li><li>默认析构函数（无参，函数体为空）</li><li>默认拷贝构造函数，对属性进行值拷贝</li><li>赋值运算符<code>operator=</code>，对属性进行值拷贝</li></ol><p>如果类中有属性指向堆区，做赋值操作时也会出现深浅拷贝问题</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//赋值运算符的重载</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> age) &#123;</span><br><span class="line">m_Age = <span class="keyword">new</span> <span class="built_in">int</span>(age);<span class="comment">//通过new将数据创建在堆区，将m_Age指针指向age</span></span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> (m_Age != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> m_Age;</span><br><span class="line">m_Age = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重载赋值运算符</span></span><br><span class="line">Person&amp; <span class="keyword">operator</span>=(Person&amp; p) &#123; <span class="comment">//编译器提供的是浅拷贝，即m_Age = age;</span></span><br><span class="line"><span class="comment">//先判断是否有属性在堆区，如果有先释放干净，再进行深拷贝</span></span><br><span class="line"><span class="keyword">if</span> (m_Age != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> m_Age;</span><br><span class="line">m_Age = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">m_Age = <span class="keyword">new</span> <span class="built_in">int</span>(*p.m_Age);</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;<span class="comment">//指向自身的指针为this指针，找回自身用*进行解引用，即*this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(<span class="number">30</span>)</span></span>;</span><br><span class="line">p3 = p2 = p1;<span class="comment">//赋值操作</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1的年龄为：&quot;</span> &lt;&lt; *p1.m_Age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄为：&quot;</span> &lt;&lt; *p2.m_Age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p3的年龄为：&quot;</span> &lt;&lt; *p3.m_Age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-5-5-关系运算符重载">4.5.5 关系运算符重载</h4><p>作用：重载关系运算符，可以让两个自定义类型对象进行对比操作</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>(string name, <span class="type">int</span> age) &#123;</span><br><span class="line">m_Name = name;</span><br><span class="line">m_Age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重载关系运算符==</span></span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>==(Person&amp; p) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Name == p.m_Name &amp;&amp; <span class="keyword">this</span>-&gt;m_Age == p.m_Age) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string m_Name;</span><br><span class="line"><span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="string">&quot;Tom&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="string">&quot;Jerry&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(<span class="string">&quot;Jerry&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (p1 == p2) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1 和 p2 是相等的！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1 和 p2 是不相等的！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p2 == p3) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2 和 p3 是相等的！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2 和 p3 是不相等的！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-5-6-函数调用运算符重载">4.5.6 函数调用运算符重载</h4><p>函数调用运算符重载：</p><ul><li>函数调用运算符<code>()</code>也可以重载；</li><li>由于重载后使用的方式非常像函数的调用，因此称为仿函数；</li><li>仿函数没有固定写法，非常灵活</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//函数调用运算符重载</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">myPrint</span> &#123;</span><br><span class="line"><span class="keyword">public</span>: <span class="comment">//重载函数调用运算符</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(string test)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; test &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myPrint02</span><span class="params">(string test)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; test &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">myPrint myprint;<span class="comment">//由于使用起来非常像一个函数，因此称为仿函数</span></span><br><span class="line"><span class="built_in">myprint</span>(<span class="string">&quot;hello world&quot;</span>);<span class="comment">//使用重载后的()</span></span><br><span class="line"><span class="comment">//与下面的函数调用对比</span></span><br><span class="line"><span class="built_in">myPrint02</span>(<span class="string">&quot;hello world&quot;</span>);<span class="comment">//函数调用</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//仿函数非常灵活，没有固定的写法</span></span><br><span class="line"><span class="comment">//加法类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyAdd</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span> </span>&#123; <span class="comment">//没有固定的类型，即传入参数可以是多个，返回的参数也可以是不同类型</span></span><br><span class="line"><span class="keyword">return</span> num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">MyAdd myadd;</span><br><span class="line"><span class="type">int</span> res = <span class="built_in">myadd</span>(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;res = &quot;</span> &lt;&lt; res &lt;&lt; endl;<span class="comment">//输出res =200</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">MyAdd</span>()(<span class="number">100</span>, <span class="number">100</span>) &lt;&lt; endl;<span class="comment">//同样输出为200，创建匿名对象，使用过后就立即释放</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();<span class="comment">//</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-6-继承">4.6 继承</h3><p><strong>继承是面向对象三大特征之一</strong></p><p>有些类与类之间存在特殊的关系，例如下图中：</p><p><img src="https://s2.loli.net/2023/03/12/e1E6kByLMh3XKRT.png" alt="image-20220209185313149"></p><p>我们发现，定义这些类时，下级别的成员除了拥有上一级的共性，还有自己的特征。这个时候我们就可以考虑利用继承的技术，减少重复代码。</p><h4 id="4-6-1-继承的基本语法">4.6.1 继承的基本语法</h4><p>例如我们看到很多网站中，都有公共的头部，公共的底部，甚至公共的左侧列表，只有中心内容不同，接下来我们分别利用普通写法和继承的写法来实现网页中的内容，看一下继承存在的意义以及好处。</p><p>继承的语法：<code>class 子类 : 继承方式 父类</code></p><p>子类也称为<strong>派生类</strong>，父类也称为<strong>基类</strong></p><p><strong>普通实现</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//普通实现页面</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Java</span> &#123;</span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">header</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;首页、公开课、登录、注册...（公共头部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">footer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;帮助中心、交流合作、站内地图...（公共底部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java、Python、C++...（公共分类列表）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Python</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Python</span> &#123;</span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">header</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;首页、公开课、登录、注册...（公共头部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">footer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;帮助中心、交流合作、站内地图...（公共底部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java、Python、C++...（公共分类列表）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Python学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C++</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cplusplus</span> &#123;</span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">header</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;首页、公开课、登录、注册...（公共头部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">footer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;帮助中心、交流合作、站内地图...（公共底部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java、Python、C++...（公共分类列表）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;C++学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Java ja;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java下载视频页面如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">ja.<span class="built_in">header</span>();</span><br><span class="line">ja.<span class="built_in">footer</span>();</span><br><span class="line">ja.<span class="built_in">left</span>();</span><br><span class="line">ja.<span class="built_in">content</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">Python py;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Python下载视频页面如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">py.<span class="built_in">header</span>();</span><br><span class="line">py.<span class="built_in">footer</span>();</span><br><span class="line">py.<span class="built_in">left</span>();</span><br><span class="line">py.<span class="built_in">content</span>(); </span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">Cplusplus cp;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Cplusplus下载视频页面如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cp.<span class="built_in">header</span>();</span><br><span class="line">cp.<span class="built_in">footer</span>();</span><br><span class="line">cp.<span class="built_in">left</span>();</span><br><span class="line">cp.<span class="built_in">content</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>继承代码实现</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//继承实现页面</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BasePage</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">header</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;首页、公开课、登录、注册...（公共头部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">footer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;帮助中心、交流合作、站内地图...（公共底部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java、Python、C++...（公共分类列表）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//Java页面</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Java</span> :<span class="keyword">public</span> BasePage &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Python</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Python</span> :<span class="keyword">public</span> BasePage &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Python学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C++</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cplusplus</span> :<span class="keyword">public</span> BasePage &#123;</span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;C++学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Java ja;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Java下载视频页面如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">ja.<span class="built_in">header</span>();</span><br><span class="line">ja.<span class="built_in">footer</span>();</span><br><span class="line">ja.<span class="built_in">left</span>();</span><br><span class="line">ja.<span class="built_in">content</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">Python py;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Python下载视频页面如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">py.<span class="built_in">header</span>();</span><br><span class="line">py.<span class="built_in">footer</span>();</span><br><span class="line">py.<span class="built_in">left</span>();</span><br><span class="line">py.<span class="built_in">content</span>(); </span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">Cplusplus cp;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Cplusplus下载视频页面如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cp.<span class="built_in">header</span>();</span><br><span class="line">cp.<span class="built_in">footer</span>();</span><br><span class="line">cp.<span class="built_in">left</span>();</span><br><span class="line">cp.<span class="built_in">content</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>继承的优点：减少重复的代码。</p></blockquote><p><strong>总结</strong>：</p><p><code>class A : public B&#123;&#125;;</code></p><p>A类称为子类或派生类</p><p>B类称为父类或基类</p><p><strong>派生类中的成员，包含两大部分</strong>：</p><ol><li><p>一类时从基类继承过来的，一类是自己增加的成员。</p></li><li><p>从基类继承过来的表现其共性，而新增的成员体现了其个性。</p></li></ol><h4 id="4-6-2-继承方式">4.6.2 继承方式</h4><p>继承的语法：<code>class 子类 : 继承方式 父类</code></p><p><strong>继承方式一共有三种</strong>：</p><ul><li>公共继承</li><li>保护继承</li><li>私有继承</li></ul><p><img src="https://s2.loli.net/2023/03/12/VUNxaBmA683K4ob.png" alt="image-20220209200035205"></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承方式</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base1</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son1</span> :<span class="keyword">public</span> Base1 &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">m_A = <span class="number">10</span>;<span class="comment">//父类中的公共权限成员在子类中依然是公共权限</span></span><br><span class="line">m_B = <span class="number">10</span>;<span class="comment">//父类中的保护权限成员在子类中依然是保护权限</span></span><br><span class="line"><span class="comment">//m_C = 10;//此行代码错误，父类中的私有权限成员在子类中访问不到</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Son1 s1;</span><br><span class="line">s1.m_A = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//s1.m_B = 100;//此行代码错误，保护权限无法访问</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base2</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son2</span> :<span class="keyword">protected</span> Base2 &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">m_A = <span class="number">100</span>;<span class="comment">//父类中的公共权限成员在子类中变为是保护权限</span></span><br><span class="line">m_B = <span class="number">100</span>;<span class="comment">//父类中的保护权限成员在子类中依然是保护权限</span></span><br><span class="line"><span class="comment">//m_C = 10;//此行代码错误，父类中的私有权限成员在子类中访问不到</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Son2 s2;</span><br><span class="line"><span class="comment">//s2.m_A = 100;//此行代码错误，保护权限无法访问</span></span><br><span class="line"><span class="comment">//s1.m_B = 100;//此行代码错误，保护权限无法访问</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base3</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son3</span> :<span class="keyword">private</span> Base3 &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">m_A = <span class="number">1000</span>;<span class="comment">//父类中的公共权限成员在子类中变为是私有权限</span></span><br><span class="line">m_B = <span class="number">1000</span>;<span class="comment">//父类中的保护权限成员在子类中变为是私有权限</span></span><br><span class="line"><span class="comment">//m_C = 10;//此行代码错误，父类中的私有权限成员在子类中访问不到</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GrandSon3</span> :<span class="keyword">public</span> Son3 &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//m_A = 1000;//此行代码错误，父类中的私有权限成员在子类中访问不到</span></span><br><span class="line"><span class="comment">//m_B = 1000;//此行代码错误，父类中的私有权限成员在子类中访问不到</span></span><br><span class="line"><span class="comment">//m_C = 1000;//此行代码错误，父类中的私有权限成员在子类中访问不到</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Son3 s3;</span><br><span class="line"><span class="comment">//s3.m_A = 100;//此行代码错误，私有权限无法访问</span></span><br><span class="line"><span class="comment">//s3.m_B = 100;//此行代码错误，私有权限无法访问</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"><span class="built_in">test03</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-6-3-继承中的对象模型">4.6.3 继承中的对象模型</h4><p><strong>问题</strong>：从父类继承过来的成员，哪些属于子类对象中？</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承中的对象模型</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_D;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用开发人员命令提示工具查看对象模型</span></span><br><span class="line"><span class="comment">//跳转盘符 F:</span></span><br><span class="line"><span class="comment">//跳转文件路径 cd 具体路径</span></span><br><span class="line"><span class="comment">//查看命名</span></span><br><span class="line"><span class="comment">// c1 /dl reportSingleClassLayout类名 &quot;文件名&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//父类中非静态成员都会被子类继承下去，父类中的私有成员属性是被编译器隐藏了，因此访问不到，但是确实是被继承下去了</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of Son = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(Son) &lt;&lt; endl;<span class="comment">//输出结果为16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用工具查看：</p><ol><li>跳转盘符 <code>F:</code>；</li><li>跳转文件路径 <code>cd 具体路径</code>；</li><li>查看命名 <code>cl /d1 reportSingleClassLayout类名 &quot;文件名&quot;</code>。</li></ol><p><img src="https://s2.loli.net/2023/03/12/Kt2cAgzxheGMZV1.png" alt="image-20220209205432418"></p><p><img src="https://s2.loli.net/2023/03/12/KzFwDk3qrQxYUL2.png" alt="image-20220209211258974"></p><h4 id="4-6-4-继承中构造和析构的顺序">4.6.4 继承中构造和析构的顺序</h4><p>子类继承父类后，当创建子类对象，也会调用父类的构造函数。</p><p>问题：父类和子类的构造和析构顺序是谁先谁后？</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Base</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base的构造函数！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Base</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base的析构函数！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Son</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Son的构造函数！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Son</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Son的析构函数！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;<span class="comment">//继承中的构造和析构顺序，先构造父类，再构造子类，析构的顺序和构造的顺序相反</span></span><br><span class="line">Son s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：继承中先调用父类构造函数，再调用子类构造函数，析构的顺序和构造的顺序相反</p></blockquote><h4 id="4-6-5-继承同名成员处理方式">4.6.5 继承同名成员处理方式</h4><p>问题：当子类与父类出现同名的成员，如何通过子类对象，访问到子类和父类中同名的数据呢？</p><ul><li>访问子类同名成员，直接访问即可</li><li>访问父类同名成员，需要加作用域</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Base</span>() &#123;</span><br><span class="line">m_A = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base - func()调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base - func(int a)调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Son</span>() &#123;</span><br><span class="line">m_A = <span class="number">200</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Son - func()调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Son s;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;父类中的 m_A = &quot;</span> &lt;&lt; s.Base::m_A &lt;&lt; endl;<span class="comment">//访问的是父类中的同名成员属性</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子类中的 m_A = &quot;</span> &lt;&lt; s.m_A &lt;&lt; endl;<span class="comment">//直接输出访问的是子类中的同名成员属性</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Son s;</span><br><span class="line">s.<span class="built_in">func</span>();</span><br><span class="line">s.Base::<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果子类中出现和父类同名的成员函数，子类的同名成员函数会隐藏掉父类中所有同名成员函数</span></span><br><span class="line"><span class="comment">//如果想访问到父类中被隐藏的同名成员函数，需要加作用域</span></span><br><span class="line">s.Base::<span class="built_in">func</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ol><li>子类对象可以直接访问到子类中同名成员；</li><li>子类对象加作用域可以访问到父类同名成员；</li><li>当子类与父类拥有同名的成员函数，子类会隐藏父类中同名成员函数，加作用域可以访问到父类中同名函数。</li></ol></blockquote><h4 id="4-6-6-继承同名静态成员处理方式">4.6.6 继承同名静态成员处理方式</h4><p>问题：继承中同名的静态成员在子类对象上如何进行访问？</p><p>静态成员和非静态成员出现同名，处理方式一致</p><ul><li>访问子类同名成员，直接访问即可</li><li>访问父类同名成员，需要加作用域</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承中的同名静态成员处理方式</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> m_A;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base - static void func()&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base - static void func()&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Base::m_A = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> m_A;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Son - static void func()&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Son::m_A = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//同名静态成员属性</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//1.通过对象来访问数据</span></span><br><span class="line">Son s;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通过对象来访问数据：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;父类中的 m_A = &quot;</span> &lt;&lt; s.Base::m_A &lt;&lt; endl;<span class="comment">//访问的是父类中的同名静态成员属性</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子类中的 m_A = &quot;</span> &lt;&lt; s.m_A &lt;&lt; endl;<span class="comment">//直接输出访问的是子类中的同名静态成员属性</span></span><br><span class="line"><span class="comment">//通过类名来访问数据</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通过类名来访问数据：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通过类名访问父类中的 m_A = &quot;</span> &lt;&lt; Base::m_A &lt;&lt; endl;<span class="comment">//访问的是父类中的同名静态成员属性</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通过类名访问子类中的 m_A = &quot;</span> &lt;&lt; Son::m_A &lt;&lt; endl;<span class="comment">//直接输出访问的是子类中的同名静态成员属性</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通过类名方式访问父类作用域下的 m_A = &quot;</span> &lt;&lt; Son::Base::m_A &lt;&lt; endl;<span class="comment">//第一个::代表通过类名方式访问 第二个::代表访问父类作用域下</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//同名静态成员函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Son s;</span><br><span class="line"><span class="comment">//通过对象来访问静态成员函数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通过对象来访问静态成员函数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">s.<span class="built_in">func</span>();</span><br><span class="line">s.Base::<span class="built_in">func</span>();</span><br><span class="line"><span class="comment">//通过类名来访问静态成员函数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通过类名来访问静态成员函数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">Son::<span class="built_in">func</span>();<span class="comment">//通过类名方式访问子类作用域下的静态成员函数</span></span><br><span class="line">Base::<span class="built_in">func</span>();<span class="comment">//通过类名方式访问父类作用域下的静态成员函数</span></span><br><span class="line">Son::Base::<span class="built_in">func</span>();<span class="comment">//通过类名方式访问父类作用域下的静态成员函数</span></span><br><span class="line"><span class="comment">//Son::func(100);//改行命令错误，因为子类中存在和父类同名的函数，父类中的同名函数都被隐藏了</span></span><br><span class="line"><span class="comment">//可以即使父类中存在同名函数的重载，父类中中的同名函数全部被隐藏，如果想调用父类中的成员函数，需要通过加作用域::来访问</span></span><br><span class="line"><span class="comment">//可以通过以下方式访问父类中的同名成员重载的函数：</span></span><br><span class="line">    Son::Base::<span class="built_in">func</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：同名静态成员处理方式和非静态处理方式一样，只不过有两种访问的方式（通过对象和通过类名进行访问）。</p></blockquote><h4 id="4-6-7-多继承语法">4.6.7 多继承语法</h4><p><strong>C++允许一个类继承多个类</strong></p><p>语法：<code>class 子类 : 继承方式 父类1 , 继承方式 父类2 ...&#123;&#125;</code></p><p>多继承可能会引发父类中有同名成员出现，需要加作用域区分</p><p><strong>C++实际开发中不建议用多继承</strong></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//多继承的语法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base1</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Base1</span>() &#123;</span><br><span class="line">m_A = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base2</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Base2</span>() &#123;</span><br><span class="line">m_A = <span class="number">200</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//子类 需要继承Base1和Base2</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base1, <span class="keyword">public</span> Base2 &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Son</span>() &#123;</span><br><span class="line">m_C = <span class="number">300</span>;</span><br><span class="line">m_D = <span class="number">400</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> m_C;</span><br><span class="line"><span class="type">int</span> m_D;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Son s;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of Son = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(Son) &lt;&lt; endl;<span class="comment">//输出16</span></span><br><span class="line"><span class="comment">//当父类中出现同名成员，需要加作用域区分</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base1中m_A = &quot;</span> &lt;&lt; s.Base1::m_A &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base2中m_A = &quot;</span> &lt;&lt; s.Base2::m_A &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：多继承中如果父类出现了同名情况，子类使用的时候要加作用域。</p></blockquote><h4 id="4-6-8-菱形继承">4.6.8 菱形继承</h4><p><strong>菱形继承概念</strong>：</p><ul><li>两个派生类继承同一个基类</li><li>某个类同时继承这两个派生类</li></ul><p>这种继承被称为菱形继承，或者钻石继承。</p><p>典型的菱形继承案例：</p><p><img src="https://s2.loli.net/2023/03/12/y2ObFfcDSoT6u18.png" alt="image-20220210095702446"></p><p>菱形继承问题：</p><ol><li>羊继承了动物的数据，驼同样继承了动物的数据，当草泥马使用数据时，就会产生二义性。</li><li>草泥马继承自动物的数据继承了两份，其实我们应该清楚，这份数据我们只需要一份就可以了。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菱形继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;<span class="comment">//动物</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sheep</span> :<span class="keyword">virtual</span> <span class="keyword">public</span> Animal &#123; <span class="comment">//羊类，加上关键字virtual变为虚继承 Animal类称为虚基类</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tuo</span> :<span class="keyword">virtual</span> <span class="keyword">public</span> Animal &#123; <span class="comment">//驼类</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SheepTuo</span> :<span class="keyword">public</span> Sheep,<span class="keyword">public</span> Tuo &#123; <span class="comment">//羊驼类</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">SheepTuo st;</span><br><span class="line">st.Sheep::m_Age = <span class="number">18</span>;</span><br><span class="line">st.Tuo::m_Age = <span class="number">28</span>;<span class="comment">//当出现菱形继承时，两个父类拥有相同的数据，需要加以作用域区分</span></span><br><span class="line">    <span class="comment">//实际中这份数据只要有一份就可以，两份数据导致资源浪费。</span></span><br><span class="line">    </span><br><span class="line">cout &lt;&lt; <span class="string">&quot;st.Sheep::m_Age = &quot;</span> &lt;&lt; st.Sheep::m_Age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;st.Tuo::m_Age = &quot;</span> &lt;&lt; st.Tuo::m_Age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;st.m_Age = &quot;</span> &lt;&lt; st.m_Age &lt;&lt; endl;<span class="comment">//采用虚继承后，才可以写此行代码，因为只有一个m_Age，否则此行代码错误</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>vbptr</code> - virtual base pointer 虚基类指针</p><p><code>vbtable</code> - virtual base table 虚基类表</p><p>父类中拿到的只是虚基类指针，指针指向的地址只有一个，为m_Age。</p><p><img src="https://s2.loli.net/2023/03/12/jq6XrNd1tVpAyGl.png" alt="image-20220210103038957"></p><blockquote><p>总结：</p><ol><li>菱形继承带来的主要问题是子类继承两份相同的数据，导致资源浪费以及毫无意义。</li><li>利用虚基类可以解决菱形继承问题。</li></ol></blockquote><h3 id="4-7-多态">4.7 多态</h3><h4 id="4-7-1-多态的基本概念">4.7.1 多态的基本概念</h4><p><strong>多态是C++面向对象的三大特征之一</strong></p><p>多态分为两类：</p><ul><li>静态多态：函数重载和运算符重载属于静态多态，复用函数名</li><li>动态多态：派生类和虚函数实现运行时多态</li></ul><p>静态多态和动态多态区别：</p><ul><li>静态多态的函数地址早绑定 - 编译阶段确定函数地址</li><li>动态多态的函数地址晚绑定 - 运行阶段确定函数地址</li></ul><p>下面通过案例进行讲解多态：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//多态  满足条件：1.有继承关系 2.子类重写父类的虚函数</span></span><br><span class="line"><span class="comment">//多态的使用：父类的指针或者引用，执行子类对象</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;<span class="comment">//动物</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//虚函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span> </span>&#123;<span class="comment">//父类中的virtual必须要写</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;动物在说话。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> :<span class="keyword">public</span> Animal &#123;<span class="comment">//猫类</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">()</span> </span>&#123;<span class="comment">//重写：函数返回值类型、函数名、参数列表完全相同</span></span><br><span class="line"><span class="comment">//virtual void speak() &#123;//重写时前面的virtual关键字在子类中可写可不写，二者效果相同</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;小猫在说话。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> :<span class="keyword">public</span> Animal &#123;<span class="comment">//猫类</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;小狗在说话。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doSpeak</span><span class="params">(Animal&amp; animal)</span> </span>&#123;<span class="comment">//父类的引用可以直接指向子类，Animal&amp; animal = cat;</span></span><br><span class="line">animal.<span class="built_in">speak</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Cat cat;</span><br><span class="line"><span class="built_in">doSpeak</span>(cat);<span class="comment">//基类中成员函数前无virtual时，输出的是 动物在说话。基类中成员函数前有virtual时，输出的是 小猫在说话。</span></span><br><span class="line"><span class="comment">//基类中成员函数前无virtual时，属于地址早绑定，在编译阶段就确定函数地址</span></span><br><span class="line"><span class="comment">//如果想执行晚绑定，需要在运行阶段绑定，即地址晚绑定，具体操作：基类中成员函数前加virtual</span></span><br><span class="line"></span><br><span class="line">Dog dog;</span><br><span class="line"><span class="built_in">doSpeak</span>(dog);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><p>多态满足条件：</p><ul><li>有继承关系</li><li>子类重写父类中的虚函数</li></ul><p>多态使用条件：父类指针或引用指向子类对象</p><p>重写：==函数返回值类型、函数名、参数列表==完全一致称为重写</p></blockquote><p><img src="https://s2.loli.net/2023/03/12/lEICvzxbaZQcPtN.png" alt="image-20220210121040937"></p><p>不加<code>virtual</code>的<code>Animal</code>基类内部结构：</p><p><img src="https://s2.loli.net/2023/03/12/lphLsgGMPJ2avWz.png" alt="image-20220210121306857"></p><p>加<code>virtual</code>的<code>Animal</code>基类内部结构：</p><p><img src="https://s2.loli.net/2023/03/12/3HTvUn2cQdpEAxC.png" alt="image-20220210121534225"></p><p>加<code>virtual</code>的<code>Cat</code>子类内部结构：</p><p><img src="https://s2.loli.net/2023/03/12/8ObSPgD1qy3BUad.png" alt="image-20220210121655537"></p><h4 id="4-7-2-多态案例-计算器类">4.7.2 多态案例-计算器类</h4><p>案例描述：分别利用普通写法和多态技术，设计实现两个操作数进行运算的计算器类</p><p>多态的优点：</p><ul><li>代码组织结构清晰</li><li>可读性强</li><li>利于前期和后期的扩展以及维护</li></ul><p>示例：</p><p>普通写法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Calculator</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getResult</span><span class="params">(string oper)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (oper == <span class="string">&quot;+&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> m_Num1 + m_Num2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (oper == <span class="string">&quot;-&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> m_Num1 - m_Num2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (oper == <span class="string">&quot;*&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> m_Num1 * m_Num2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m_Num1;<span class="comment">//操作数1</span></span><br><span class="line"><span class="type">int</span> m_Num2;<span class="comment">//操作数2</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Calculator c;</span><br><span class="line">c.m_Num1 = <span class="number">10</span>;</span><br><span class="line">c.m_Num2 = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; c.m_Num1 &lt;&lt; <span class="string">&quot; + &quot;</span> &lt;&lt; c.m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.<span class="built_in">getResult</span>(<span class="string">&quot;+&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; c.m_Num1 &lt;&lt; <span class="string">&quot; - &quot;</span> &lt;&lt; c.m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.<span class="built_in">getResult</span>(<span class="string">&quot;-&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; c.m_Num1 &lt;&lt; <span class="string">&quot; * &quot;</span> &lt;&lt; c.m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; c.<span class="built_in">getResult</span>(<span class="string">&quot;*&quot;</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用多态写法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果想拓展新的功能，需要修改源码</span></span><br><span class="line"><span class="comment">//在真正开发中，提倡开闭原则，开闭原则：对拓展进行开放，对修改进行关闭</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AbstractCalculator</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">getResult</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> m_Num1;<span class="comment">//操作数1</span></span><br><span class="line"><span class="type">int</span> m_Num2;<span class="comment">//操作数2</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AddCalculator</span> :<span class="keyword">public</span> AbstractCalculator &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getResult</span><span class="params">()</span> </span>&#123;  <span class="comment">//virtual可加可不加</span></span><br><span class="line"><span class="keyword">return</span> m_Num1 + m_Num2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SubCalculator</span> :<span class="keyword">public</span> AbstractCalculator &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getResult</span><span class="params">()</span> </span>&#123;  <span class="comment">//virtual可加可不加</span></span><br><span class="line"><span class="keyword">return</span> m_Num1 - m_Num2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MulCalculator</span> :<span class="keyword">public</span> AbstractCalculator &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getResult</span><span class="params">()</span> </span>&#123;  <span class="comment">//virtual可加可不加</span></span><br><span class="line"><span class="keyword">return</span> m_Num1 * m_Num2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//多态的使用条件：父类指针或者引用指向子类对象</span></span><br><span class="line">AbstractCalculator* abc = <span class="keyword">new</span> AddCalculator;</span><br><span class="line">abc-&gt;m_Num1 = <span class="number">10</span>;</span><br><span class="line">abc-&gt;m_Num2 = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; <span class="string">&quot; + &quot;</span> &lt;&lt; abc-&gt;m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; abc-&gt;<span class="built_in">getResult</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> abc;</span><br><span class="line"><span class="comment">//只是对建立的堆区的内存进行释放，但是abc依然存在，abc为指针，指向堆区的内存</span></span><br><span class="line">abc = <span class="keyword">new</span> SubCalculator;</span><br><span class="line">abc-&gt;m_Num1 = <span class="number">10</span>;</span><br><span class="line">abc-&gt;m_Num2 = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; <span class="string">&quot; - &quot;</span> &lt;&lt; abc-&gt;m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; abc-&gt;<span class="built_in">getResult</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> abc;</span><br><span class="line"></span><br><span class="line">abc = <span class="keyword">new</span> MulCalculator;</span><br><span class="line">abc-&gt;m_Num1 = <span class="number">10</span>;</span><br><span class="line">abc-&gt;m_Num2 = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; <span class="string">&quot; * &quot;</span> &lt;&lt; abc-&gt;m_Num2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; abc-&gt;<span class="built_in">getResult</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> abc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：C++开发提倡利用多态设计程序架构，因为多态优点很多。</p></blockquote><h4 id="4-7-3-纯虚函数和抽象类">4.7.3 纯虚函数和抽象类</h4><p>在多态中，通常父类中虚函数的实现是毫无意义的，主要都是调用子类重写的内容，因此可以将虚函数改为<strong>纯虚函数</strong>。</p><p>纯虚函数语法：<code>virtual 返回值类型 函数名 (参数列表) = 0;</code></p><p>当类中有了纯虚函数，这个类也称为==抽象类==。</p><p><strong>抽象类特点</strong>：</p><ul><li>无法实例化对象</li><li>子类必须重写抽象类中的纯虚函数，否则也属于抽象类</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;<span class="comment">//只要有一个纯虚函数，这个类称为抽象类</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son1</span> :<span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:<span class="comment">//子类必须重写父类中的纯虚函数，否则无法实例化对象</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;<span class="comment">//子类必须重写父类中的纯虚函数，否则无法实例化对象</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func函数调用。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//Base b;//该行代码错误，抽象类无法实例化对象</span></span><br><span class="line"><span class="comment">//new Base;//该行代码错误，抽象类无法实例化对象</span></span><br><span class="line"><span class="comment">//Son1 s;//子类没有重写纯虚函数</span></span><br><span class="line">Son s;</span><br><span class="line"></span><br><span class="line">Base* base = <span class="keyword">new</span> Son;</span><br><span class="line">base-&gt;<span class="built_in">func</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-7-4-多态案例二-制作饮品">4.7.4 多态案例二 - 制作饮品</h4><p>案例描述：</p><p>制作饮品的大致流程为：煮水 - 冲泡 - 倒入杯中 - 加入辅料</p><p>利用多态技术实现本案例，提供抽象制作饮品基类，提供子类制作咖啡和茶叶</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AbstractDrinking</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Boil</span><span class="params">()</span> </span>= <span class="number">0</span>;<span class="comment">//煮水</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Brew</span><span class="params">()</span> </span>= <span class="number">0</span>;<span class="comment">//冲泡</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PourInCup</span><span class="params">()</span> </span>= <span class="number">0</span>;<span class="comment">//倒入杯中</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PutSomething</span><span class="params">()</span> </span>= <span class="number">0</span>;<span class="comment">//放入辅料</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">makeDrink</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">Boil</span>();</span><br><span class="line"><span class="built_in">Brew</span>();</span><br><span class="line"><span class="built_in">PourInCup</span>();</span><br><span class="line"><span class="built_in">PutSomething</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Coffee</span> :<span class="keyword">public</span> AbstractDrinking &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Boil</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;煮水&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Brew</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冲泡咖啡&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PourInCup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;倒入杯中&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PutSomething</span><span class="params">()</span> </span>&#123;\</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加入糖和牛奶&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tea</span> :<span class="keyword">public</span> AbstractDrinking &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Boil</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;煮矿泉水&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Brew</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冲泡茶叶&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PourInCup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;倒入杯子&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PutSomething</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加入枸杞&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doWork</span><span class="params">(AbstractDrinking* abs)</span> </span>&#123;</span><br><span class="line">abs-&gt;<span class="built_in">makeDrink</span>();</span><br><span class="line"><span class="keyword">delete</span> abs;<span class="comment">//堆区的数据手动释放</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">doWork</span>(<span class="keyword">new</span> Coffee);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">doWork</span>(<span class="keyword">new</span> Tea);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-7-5-虚析构和纯虚析构">4.7.5 虚析构和纯虚析构</h4><p>多态使用时，如果子类中有属性开辟到堆区，那么父类指针在释放时无法调用到子类的析构代码</p><p>解决方式：将父类中的析构函数改为<strong>虚析构</strong>或者<strong>纯虚析构</strong></p><p>虚析构和纯虚析构共性：</p><ul><li>可以解决父类指针释放子类对象</li><li>都需要有具体的函数实现</li></ul><p>虚析构和纯虚析构区别：</p><ul><li>如果是纯虚析构，该类属于抽象类，无法实例化对象</li></ul><p>虚析构语法：<code>virtual ~类名()&#123;&#125;</code></p><p>纯虚析构语法：<code>virtual ~类名() = 0;</code> 和 <code>类名::~类名()&#123;&#125;</code></p><p>示例1：虚析构</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="built_in">Animal</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Animal的构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">virtual</span> ~<span class="built_in">Animal</span>() &#123;<span class="comment">//加入virtual才能把子类中的数据释放干净，否则无法调用子类的析构函数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Animal的析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> :<span class="keyword">public</span> Animal &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Cat</span>(string name) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Cat的构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">m_Name = <span class="keyword">new</span> <span class="built_in">string</span>(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; *m_Name &lt;&lt;<span class="string">&quot;小猫在说话&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Cat</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> (m_Name != <span class="literal">NULL</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Cat的析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> m_Name;</span><br><span class="line">m_Name = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string* m_Name;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Animal* animal = <span class="keyword">new</span> <span class="built_in">Cat</span>(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">animal-&gt;<span class="built_in">speak</span>();</span><br><span class="line"><span class="keyword">delete</span> animal;<span class="comment">//父类指针在析构的时候，不会调用子类中析构函数，导致子类如果有堆区属性，堆区内存不会释放，即出现内存泄露，需要在父类中加virtual变为虚析构</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例2：纯虚析构</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="built_in">Animal</span>() &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Animal的构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">virtual</span> ~<span class="built_in">Animal</span>() = <span class="number">0</span>;<span class="comment">//纯虚析构需要申明也需要实现，有了纯虚析构之后这个类也属于抽象类，无法实例化对象</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Animal::~<span class="built_in">Animal</span>() &#123;<span class="comment">//纯虚析构需要申明也需要实现</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Animal的纯虚析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> :<span class="keyword">public</span> Animal &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Cat</span>(string name) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Cat的构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">m_Name = <span class="keyword">new</span> <span class="built_in">string</span>(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; *m_Name &lt;&lt;<span class="string">&quot;小猫在说话&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Cat</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> (m_Name != <span class="literal">NULL</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Cat的析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> m_Name;</span><br><span class="line">m_Name = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string* m_Name;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Animal* animal = <span class="keyword">new</span> <span class="built_in">Cat</span>(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">animal-&gt;<span class="built_in">speak</span>();</span><br><span class="line"><span class="keyword">delete</span> animal;<span class="comment">//父类指针在析构的时候，不会调用子类中析构函数，导致子类如果有堆区属性，出现内存泄露，需要在父类中加virtual变为虚析构</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ol><li>虚析构或纯虚析构就是用来解决通过父类指针释放子类对象的问题；</li><li>如果子类中没有堆区数据，可以不写虚析构和纯虚析构；</li><li>拥有纯虚析构函数的类也属于抽象类。</li></ol></blockquote><h4 id="4-7-6-多态案例三-电脑组装">4.7.6 多态案例三 - 电脑组装</h4><p>案例描述：电脑主要组成部件为CPU（用于计算），显卡（用于显示），内存条（用于存储），将每个零件封装出抽象基类，并且提供不同的厂商生产不同的零件，例如Intel厂商和Lenovo厂商，创建电脑类提供让电脑工作的函数，并且调用每个零件工作的接口，测试时组装三台不同的进行工作。</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象不同零件类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CPU</span> &#123;<span class="comment">//抽象CPU类</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VideoCard</span> &#123;<span class="comment">//抽象显卡类</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span> <span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MemoryCard</span> &#123;<span class="comment">//抽象内存条类</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">storage</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//电脑类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Computer</span>(CPU* cpu, VideoCard* vc, MemoryCard* mem) &#123;</span><br><span class="line">m_cpu = cpu;</span><br><span class="line">m_vc = vc;</span><br><span class="line">m_mem = mem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//提供工作的函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;</span><br><span class="line">m_cpu-&gt;<span class="built_in">calculate</span>();</span><br><span class="line">m_vc-&gt;<span class="built_in">display</span>();</span><br><span class="line">m_mem-&gt;<span class="built_in">storage</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~<span class="built_in">Computer</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> (m_cpu != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> m_cpu;</span><br><span class="line">m_cpu = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (m_vc != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> m_vc;</span><br><span class="line">m_vc = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (m_mem != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> m_mem;</span><br><span class="line">m_mem = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">CPU* m_cpu;<span class="comment">//CPU的零件指针</span></span><br><span class="line">VideoCard* m_vc;<span class="comment">//显卡零件指针</span></span><br><span class="line">MemoryCard* m_mem;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Intel厂商</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntelCPU</span> :<span class="keyword">public</span> CPU &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Intel的CPU开始计算了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntelVideoCard</span> :<span class="keyword">public</span> VideoCard &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Intel的显卡开始计算了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntelMemory</span> :<span class="keyword">public</span> MemoryCard &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">storage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Intel的内存条开始存储了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//联想厂商</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LenovoCPU</span> :<span class="keyword">public</span> CPU &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Lenovo的CPU开始计算了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LenovoVideoCard</span> :<span class="keyword">public</span> VideoCard &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Lenovo的显卡开始计算了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LenovoMemory</span> :<span class="keyword">public</span> MemoryCard &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">storage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Lenovo的内存条开始存储了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//第一台电脑的零件</span></span><br><span class="line">CPU* intelCp = <span class="keyword">new</span> IntelCPU;</span><br><span class="line">VideoCard* intelCard = <span class="keyword">new</span> IntelVideoCard;</span><br><span class="line">MemoryCard* intelMem = <span class="keyword">new</span> IntelMemory;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建第一台电脑</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一台电脑开始工作！&quot;</span> &lt;&lt; endl;</span><br><span class="line">Computer* computer1 = <span class="keyword">new</span> <span class="built_in">Computer</span>(intelCp, intelCard, intelMem);</span><br><span class="line">computer1-&gt;<span class="built_in">work</span>();</span><br><span class="line"><span class="keyword">delete</span> computer1;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第二台电脑组装</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第二台电脑开始工作！&quot;</span> &lt;&lt; endl;</span><br><span class="line">Computer* computer2 = <span class="keyword">new</span> <span class="built_in">Computer</span>(<span class="keyword">new</span> LenovoCPU, <span class="keyword">new</span> LenovoVideoCard, <span class="keyword">new</span> LenovoMemory);</span><br><span class="line">computer2-&gt;<span class="built_in">work</span>();</span><br><span class="line"><span class="keyword">delete</span> computer2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第三台电脑组装</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第三台电脑开始工作！&quot;</span> &lt;&lt; endl;</span><br><span class="line">Computer* computer3 = <span class="keyword">new</span> <span class="built_in">Computer</span>(<span class="keyword">new</span> IntelCPU, <span class="keyword">new</span> LenovoVideoCard, <span class="keyword">new</span> LenovoMemory);</span><br><span class="line">computer3-&gt;<span class="built_in">work</span>();</span><br><span class="line"><span class="keyword">delete</span> computer3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-文件操作">5 文件操作</h2><p>程序运行时产生的数据都属于临时数据，程序一旦运行结束都会被释放</p><p><strong>通过文件可以将数据持久化</strong></p><p>C++中对文件操作需要包含头文件==<fstream>==</p><p>文件类型分为两种：</p><ol><li><strong>文本文件</strong>  -  文件以文本的<strong>ASCII</strong>码形式存储在计算机中</li><li><strong>二进制文件</strong>  -  文件以文本的<strong>二进制</strong>形式存储在计算机中，用户一般不能直接读懂它们</li></ol><p>操作文件的三大类：</p><ol><li><code>ofstream</code>：写操作</li><li><code>ifstream</code>：读操作</li><li><code>fstream</code>：读写操作</li></ol><h3 id="5-1-文本文件">5.1 文本文件</h3><h4 id="5-1-1-写文件">5.1.1 写文件</h4><p>写文件步骤如下：</p><ol><li>包含头文件    <code>#include&lt;fstream&gt;</code></li><li>创建流对象   <code>ofstream ofs;</code></li><li>打开文件     <code>ofs.open(&quot;文件路径&quot;,打开方式);</code></li><li>写数据    <code>ofs&lt;&lt;&quot;写入的数据&quot;;</code></li><li>关闭文件    <code>ofs.close();</code></li></ol><p>文件打开方式：</p><table><thead><tr><th>打开方式</th><th>解释</th></tr></thead><tbody><tr><td><code>ios::in</code></td><td>为读文件而打开文件</td></tr><tr><td><code>ios::out</code></td><td>为写文件而打开文件</td></tr><tr><td><code>ios::ate</code></td><td>初始位置：文件尾</td></tr><tr><td><code>ios::app</code></td><td>追加方式写文件</td></tr><tr><td><code>ios::trunc</code></td><td>如果文件存在先删除，再创建</td></tr><tr><td><code>ios::binary</code></td><td>二进制方式</td></tr></tbody></table><p><strong>注意</strong>：文件打开方式可以配合使用，利用<code>|</code>操作符</p><p><strong>例如</strong>：用二进制和普通方式来写文件 <code>ios::binary | ios::out</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span><span class="comment">//1.包含头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ofstream ofs;<span class="comment">//2.创建流对象</span></span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>, ios::out);<span class="comment">//3.指定打开方式</span></span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;姓名：张三&quot;</span> &lt;&lt; endl;<span class="comment">//4.写内容</span></span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;性别：男&quot;</span> &lt;&lt; endl;</span><br><span class="line">ofs &lt;&lt; <span class="string">&quot;年龄：18&quot;</span> &lt;&lt; endl;</span><br><span class="line">ofs.<span class="built_in">close</span>();<span class="comment">//5.关闭文件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ul><li>文件操作必须包含头文件<code>fstream</code></li><li>读文件可以利用<code>ofstream</code>，或者<code>fstream</code>类</li><li>打开文件时后需要指定操作文件的路径，以及打开方式</li><li>利用 <code>&lt;&lt;</code> 可以向文件中写数据</li><li>操作完毕，要关闭文件</li></ul></blockquote><h4 id="5-1-2-读文件">5.1.2 读文件</h4><p>读文件与写文件步骤相似，但是读取方式相对于比较多</p><p>读文件步骤如下：</p><ol><li>包含头文件  <code>#include&lt;fstream&gt;</code></li><li>创建流对象  <code>ifstream ifs; </code></li><li>打开文件并判断文件是否打开成功  <code>ifs.open(&quot;文件路径&quot;,打开方式);</code></li><li>读数据  四种方式读取</li><li>关闭文件  <code>ifs.close();</code></li></ol><p><strong>示例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span><span class="comment">//1.包含头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ifstream ifs;<span class="comment">//2.创建流对象</span></span><br><span class="line">ifs.<span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>, ios::in);<span class="comment">//3.指定打开方式,in是读</span></span><br><span class="line"><span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件打开失败。&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//第一种读取方式</span></span><br><span class="line"><span class="comment">//char buf[1024] = &#123; 0 &#125;;</span></span><br><span class="line"><span class="comment">//while (ifs &gt;&gt; buf) &#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//第二种</span></span><br><span class="line"><span class="comment">//char buf[1024] = &#123; 0 &#125;;</span></span><br><span class="line"><span class="comment">//while (ifs.getline(buf, sizeof(buf))) &#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//第三种</span></span><br><span class="line">string buf;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">getline</span>(ifs,buf)) &#123;</span><br><span class="line">cout &lt;&lt; buf &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第四种，不推荐使用</span></span><br><span class="line"><span class="comment">//char c;</span></span><br><span class="line"><span class="comment">//while ((c=ifs.get())!=EOF) &#123;//EOF end of file，文件尾</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; c;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">ifs.<span class="built_in">close</span>();<span class="comment">//5.关闭文件</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ul><li>读文件可以利用<code>ifstream</code>，或者<code>fstream</code>类</li><li>利用<code>is_open</code>函数可以判断文件是否打开成功</li><li><code>close</code>关闭文件</li></ul></blockquote><h3 id="5-2-二进制文件">5.2 二进制文件</h3><p>以二进制的方式对文件进行读写</p><p>打开方式要指定为<code>ios::binary</code></p><h4 id="5-2-1-写文件">5.2.1 写文件</h4><p>二进制方式写文件主要利用流对象调用陈冠函数<code>write</code></p><p>函数原型：<code>ostream&amp; write(const char* buffer, int len);</code></p><p>参数解释：字符指针<code>buffer</code>指向内存中一段存储空间。<code>len</code>是读写的字节数。</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span><span class="comment">//1.包含头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">char</span> m_Name[<span class="number">64</span>];<span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> m_Age;<span class="comment">//年龄</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ofstream ofs;<span class="comment">//2.创建流对象，也可以通过 ofstream ofs(&quot;person.txt&quot;, ios::out | ios::binary)</span></span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">&quot;person.txt&quot;</span>, ios::out | ios::binary);<span class="comment">//3.打开文件</span></span><br><span class="line"><span class="comment">//4.写文件</span></span><br><span class="line">Person p = &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span> &#125;;</span><br><span class="line">ofs.<span class="built_in">write</span>((<span class="type">const</span> <span class="type">char</span>*)&amp;p, <span class="built_in">sizeof</span>(Person));</span><br><span class="line">ofs.<span class="built_in">close</span>();<span class="comment">//5.关闭文件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：文件输出流对象，可以通过<code>write</code>函数，以二进制方式写数据</p></blockquote><h4 id="5-2-2-读文件">5.2.2 读文件</h4><p>二进制方式读文件主要利用流对象调用成员函数<code>read</code></p><p>函数原型：<code>istream&amp; read(char* buffer, int len);</code></p><p>参数解释：字符指针<code>buffer</code>指向内存中一段存储空间，<code>len</code>是读写的字节数</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span><span class="comment">//1.包含头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">char</span> m_Name[<span class="number">64</span>];<span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> m_Age;<span class="comment">//年龄</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ifstream ifs;<span class="comment">//2.创建流对象，也可以通过 ifstream ofs(&quot;person.txt&quot;, ios::in | ios::binary)</span></span><br><span class="line">ifs.<span class="built_in">open</span>(<span class="string">&quot;person.txt&quot;</span>, ios::in | ios::binary);<span class="comment">//3.打开文件，判断文件是否打开成功</span></span><br><span class="line"><span class="keyword">while</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件打开失败。&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4.读文件</span></span><br><span class="line">Person p;</span><br><span class="line">ifs.<span class="built_in">read</span>((<span class="type">char</span>*)&amp;p, <span class="built_in">sizeof</span>(Person));</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p.m_Name &lt;&lt; <span class="string">&quot;  年龄：&quot;</span> &lt;&lt; p.m_Age &lt;&lt; endl;</span><br><span class="line">ifs.<span class="built_in">close</span>();<span class="comment">//5.关闭文件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>文件输入流对象可以通过<code>read</code>函数，以二进制方式读数据</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C++工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于多态的职工管理系统</title>
      <link href="/2022/02/26/C++/%E5%9F%BA%E4%BA%8E%E5%A4%9A%E6%80%81%E7%9A%84%E8%81%8C%E5%B7%A5%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/02/26/C++/%E5%9F%BA%E4%BA%8E%E5%A4%9A%E6%80%81%E7%9A%84%E8%81%8C%E5%B7%A5%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="1-管理系统要求">1 管理系统要求</h2><p>职工管理系统可以用来管理公司内所有员工的信息，本教程主要利用C++来实现一个基于多态的职工管理系统</p><p>公司中职工分为三类：普通员工、经理、老板，显示信息时，需要显示职工编号、职工姓名、职工岗位、以及职责</p><p>普通职工职责：完成经理交给的任务</p><p>经理职责：完成老板交给的任务，并下发任务给员工</p><p>老板职责：管理公司所有事务</p><p>管理系统中需要实现的功能如下：</p><ul><li>退出管理程序：退出当前管理系统</li><li>增加职工信息：实现批量增加职工功能，将信息录入到文件中，职工信息为：职工编号、姓名、部门编号</li><li>显示职工信息：显示公司内部所有职工的信息</li><li>删除离职职工：按照编号删除指定的职工</li><li>修改职工信息：按照编号修改职工个人信息</li><li>查找职工信息：按照职工编号或者职工姓名进行查找相关的人员信息</li><li>按照编号排序：按照职工编号进行排序，排序规则由用户指定</li><li>清理所有文档：清空文件中记录的所有职工信息（清空前需要再次确认，防止误删）</li></ul><h2 id="2-创建项目">2 创建项目</h2><p>创建项目步骤如下：</p><ul><li>创建新项目</li><li>添加文件</li></ul><h3 id="2-1-创建项目">2.1 创建项目</h3><p>打开Visual studio后，点击创建新项目，创建新的C++项目</p><img src="https://s2.loli.net/2023/03/12/1KcrmD26AT4fIdv.png" alt="image-20220123124340461" style="zoom: 67%;" /><img src="https://s2.loli.net/2023/03/12/1gWYmdtSAuVnBvK.png" alt="image-20220123125134404" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/12/MJ4qjgxi9hFErsK.png" alt="image-20220123125917692" style="zoom:67%;" /><h3 id="2-2-创建文件">2.2 创建文件</h3><p>右键源文件，选择添加-&gt;新建项</p><img src="https://s2.loli.net/2023/03/12/UZLcDuVi6gXKyfH.png" alt="image-20220123130442955" style="zoom:67%;" /><p>给C++文件起个名称，然后点击添加即可。</p><img src="https://s2.loli.net/2023/03/12/weDnzaNU6Sd7rx3.png" alt="image-20220123130813668" style="zoom:67%;" /><h2 id="3-创建管理类">3 创建管理类</h2><p>管理类负责的内容如下：</p><ul><li>与用户的沟通菜单界面</li><li>对职工增删改查的操作</li><li>与文件的读写交互</li></ul><h3 id="3-1-创建文件">3.1 创建文件</h3><p>在头文件与源文件的文件夹下分别创建<code>workerManager.h</code>和<code>workerManager.cpp</code>文件</p><p><code>workerManager.h</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once  <span class="comment">//防止头文件重复包含</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span>  <span class="comment">//包含输入输出流头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;  <span class="comment">//使用标准命名空间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WorkerManager</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">WorkerManager</span>(); <span class="comment">//构造函数</span></span><br><span class="line">~<span class="built_in">WorkerManager</span>(); <span class="comment">//析构函数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>workerManager.cpp</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;workerManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">WorkerManager::<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">WorkerManager::~<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-菜单功能">4 菜单功能</h2><p>功能描述：与用户的沟通界面</p><h3 id="4-1-添加成员函数">4.1 添加成员函数</h3><p>在管理类<code>workManager.h</code>中添加成员函数<code>void Show_Menu();</code></p><p><img src="https://s2.loli.net/2023/03/12/mJwi6cxGDqg9FsI.png" alt="image-20220212224622220"></p><h3 id="4-2-菜单功能实现">4.2 菜单功能实现</h3><p>在管理类<code>workerManager.cpp</code>中实现<code>Show_Menu()</code>函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Show_Menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;******************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********  欢迎使用职工管理系统！ **********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********     0.退出管理程序     **********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********     1.增加职工信息     **********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********     2.显示职工信息     **********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********     3.删除离职职工     **********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********     4.修改职工信息     **********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********     5.查找职工信息     **********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********     6.按照编号排序     **********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********     7.清空所有文档     **********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;******************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-测试菜单功能">4.3 测试菜单功能</h3><p>在controlsystem.cpp中测试菜单功能</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;workerManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">WorkerManager wm;<span class="comment">//实例化管理者对象</span></span><br><span class="line"></span><br><span class="line">wm.<span class="built_in">Show_Menu</span>();<span class="comment">//调用展示菜单成员函数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果图：</p><p><img src="https://s2.loli.net/2023/03/12/vw3ZCsFPTfrRJYy.png" alt="image-20220212230614288"></p><h2 id="5-退出功能">5 退出功能</h2><h3 id="5-1-提供功能接口">5.1 提供功能接口</h3><p>在main函数中体哦概念股分支选择，提供每个功能接口</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;workerManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">WorkerManager wm;<span class="comment">//实例化管理者对象</span></span><br><span class="line"><span class="type">int</span> choice = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">wm.<span class="built_in">Show_Menu</span>();<span class="comment">//调用展示菜单成员函数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; choice;</span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//退出系统</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//添加职工</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//显示职工</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//删除职工</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="comment">//修改职工</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="comment">//查找职工</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="comment">//排序职工</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:<span class="comment">//清空文件</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-实现退出功能">5.2 实现退出功能</h3><p>在<code>workerManager.h</code>中提供退出系统的成员函数<code>void exitSystem();</code></p><p>在<code>workerManager.cpp</code>中提供具体的功能实现</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::exitSystem</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎下次使用&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-测试功能">5.3 测试功能</h3><p>在main函数分支 0 选项中调用退出程序的接口</p><p><img src="https://s2.loli.net/2023/03/12/XHoty7DUuh6eOlT.png" alt="image-20220212232411609"></p><h2 id="6-创建职工类">6 创建职工类</h2><h3 id="6-1-创建职工抽象类">6.1 创建职工抽象类</h3><p>职工的分类为：普通职工、经理、老板</p><p>将三种职工抽象到一个类（worker）中，利用多态管理不同职工种类</p><p>职工的属性为：职工编号、职工姓名、职工所在部门编号</p><p>职工的行为为：岗位职责信息描述，获取岗位名称</p><p>头文件文件夹下，创建文件worker.h文件并且添加如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Worker</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">showInfo</span><span class="params">()</span> </span>= <span class="number">0</span>; <span class="comment">//显示个人信息</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> string <span class="title">getDeptName</span><span class="params">()</span> </span>= <span class="number">0</span>;<span class="comment">//获取岗位名称</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m_ID;<span class="comment">//职工编号</span></span><br><span class="line">string m_Name;<span class="comment">//职工姓名</span></span><br><span class="line"><span class="type">int</span> m_DeptID;<span class="comment">//部门编号</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="6-2-创建普通员工类">6.2 创建普通员工类</h3><p>普通员工类<strong>继承</strong>职工抽象类，并重写父类中纯虚函数</p><p>在头文件和源文件的文件夹下分别创建<code>employee.h</code>和<code>employee.cpp</code>文件</p><p><code>employee.h</code>中代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> :<span class="keyword">public</span> Worker &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Employee</span>(<span class="type">int</span> id,string name,<span class="type">int</span> dId);<span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">showInfo</span><span class="params">()</span></span>;<span class="comment">//显示个人信息</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> string <span class="title">getDeptName</span><span class="params">()</span></span>;<span class="comment">//获取岗位名称</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>employee.cpp</code>中代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;employee.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Employee::<span class="built_in">Employee</span>(<span class="type">int</span> id, string name, <span class="type">int</span> dId) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_ID = id;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_DeptID = dId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Employee::showInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_ID</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t职工姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t岗位： &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;<span class="built_in">getDeptName</span>()</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t岗位职责：完成经理交给的任务。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Employee::getDeptName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;员工&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-创建经理类">6.3 创建经理类</h3><p>经理类<strong>继承</strong>职工抽象类，并重写父类中纯虚函数，和普通员工类似</p><p>在头文件和源文件的文件夹下分别创建<code>manager.h</code>和<code>manager.cpp</code>文件</p><p><code>manager.h</code>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//经理类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Manager</span> :<span class="keyword">public</span> Worker &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Manager</span>(<span class="type">int</span> id, string name, <span class="type">int</span> dId);<span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">showInfo</span><span class="params">()</span></span>; <span class="comment">//显示个人信息</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> string <span class="title">getDeptName</span><span class="params">()</span></span>;<span class="comment">//获取岗位名称</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>manager.cpp</code>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line">Manager::<span class="built_in">Manager</span>(<span class="type">int</span> id, string name, <span class="type">int</span> dId) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_ID = id;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_DeptID = dId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::showInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_ID</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t职工姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t岗位： &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;<span class="built_in">getDeptName</span>()</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t岗位职责：完成老板交给的任务，并下发任务给普通员工。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Manager::getDeptName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;经理&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在头文件和源文件的文件夹下分别创建<code>boss.h</code>和<code>boss.cpp</code>文件</p><p><code>boss.h</code>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//老板类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Boss</span> :<span class="keyword">public</span> Worker &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Boss</span>(<span class="type">int</span> id, string name, <span class="type">int</span> dId);<span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">showInfo</span><span class="params">()</span></span>; <span class="comment">//显示个人信息</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> string <span class="title">getDeptName</span><span class="params">()</span></span>;<span class="comment">//获取岗位名称</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>boss.cpp</code>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;boss.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line">Boss::<span class="built_in">Boss</span>(<span class="type">int</span> id, string name, <span class="type">int</span> dId) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_ID = id;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_DeptID = dId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Boss::showInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_ID</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t职工姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t岗位： &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;<span class="built_in">getDeptName</span>()</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t岗位职责：管理公司所有事务。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Boss::getDeptName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;总裁&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-添加职工">7 添加职工</h2><p>功能描述：批量添加职工，并且保存到文件中</p><h3 id="7-1-功能分析">7.1 功能分析</h3><p>分析：</p><p>用户在批量创建时，可能会创建不同种类的职工</p><p>如果想将所有不同种类的员工都放入到一个数组中，可以将所有员工的指针维护到一个数组中，如果想在程序中维护这个不定长度的数组，可以将数组创建到堆区，并利用Worker**的指针维护</p><p><img src="https://s2.loli.net/2023/03/12/IQTcHvoG5RwBeph.png" alt="image-20220213104849463"></p><h3 id="7-2-功能实现">7.2 功能实现</h3><p>在<code>WorkerManager.h</code>头文件中添加成员属性。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//记录文件中的人数个数</span></span><br><span class="line"><span class="type">int</span> m_EmpNum;</span><br><span class="line"></span><br><span class="line"><span class="comment">//员工数组的指针</span></span><br><span class="line">Worker** m_EmpArray;</span><br></pre></td></tr></table></figure><p>在<code>WorkerManager</code>构造函数中初始化属性</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">WorkerManager::<span class="built_in">WorkerManager</span>()&#123;</span><br><span class="line"><span class="comment">//初始化人数</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//初始化数组指针</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>workerManager.h</code>中添加成员函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加职工</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Add_Emp</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p><code>workerManager.cpp</code>中实现该函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;workerManager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;employee.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;boss.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">WorkerManager::<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">WorkerManager::~<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Show_Menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********  欢迎使用职工管理系统！ *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      0.退出管理程序     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      1.增加职工信息     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      2.显示职工信息     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      3.删除离职职工     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      4.修改职工信息     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      5.查找职工信息     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      6.按照编号排序     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      7.清空所有文档     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::exitSystem</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎下次使用&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Add_Emp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入添加职工的数量：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> addNum = <span class="number">0</span>;<span class="comment">//保存用户的输入数量</span></span><br><span class="line">cin &gt;&gt; addNum;</span><br><span class="line"><span class="keyword">if</span> (addNum &gt; <span class="number">0</span>) &#123;  <span class="comment">//添加</span></span><br><span class="line"><span class="comment">//计算添加空间大小</span></span><br><span class="line"><span class="type">int</span> newSize = <span class="keyword">this</span>-&gt;m_EmpNum + addNum;<span class="comment">//新空间人数 = 原来记录人数 + 新增人数</span></span><br><span class="line"><span class="comment">//开辟新空间</span></span><br><span class="line">Worker** newSpace = <span class="keyword">new</span> Worker* [newSize];</span><br><span class="line"><span class="comment">//将原来空间下的数据，拷贝到新空间下</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum; i++) &#123;</span><br><span class="line">newSpace[i] = <span class="keyword">this</span>-&gt;m_EmpArray[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//批量添加新数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; addNum; i++) &#123;</span><br><span class="line"><span class="type">int</span> id;<span class="comment">//职工编号</span></span><br><span class="line">string name;<span class="comment">//职工姓名</span></span><br><span class="line"><span class="type">int</span> dSelect;<span class="comment">//部门选择</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新职工姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请选择该职工岗位：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、普通职工&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、经理&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3、老板&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; dSelect;</span><br><span class="line">Worker* worker = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">switch</span> (dSelect) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Employee</span>(id, name, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Manager</span>(id, name, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Boss</span>(id, name, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将创建的职工职责，保存到数组中</span></span><br><span class="line">newSpace[<span class="keyword">this</span>-&gt;m_EmpNum + i] = worker;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//释放原有的空间</span></span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_EmpArray;</span><br><span class="line"><span class="comment">//修改新空间指向</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = newSpace;</span><br><span class="line"><span class="comment">//更新新的职工人数</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = newSize;</span><br><span class="line"><span class="comment">//提示添加成功</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;成功添加&quot;</span> &lt;&lt; addNum &lt;&lt; <span class="string">&quot;名新职工！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数据有误。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);<span class="comment">//按任意键后</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">//清屏回到上级目录</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-文件交互-写文件">8 文件交互 - 写文件</h2><p>功能描述：对文件进行读写</p><p>​在上一个添加功能中，我们只是将所有的数据添加到了内存中，一旦程序结束就无法保存了</p><p>​因此文件管理类中需要一个与文件进行交互的功能，对于文件进行读写操作</p><h3 id="8-1-设定文件路径">8.1 设定文件路径</h3><p>首先我们将文件路径，在<code>workerManager.h</code>中添加宏常量，并且包含头文件<code>fstream</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILENAME <span class="string">&quot;empFile.txt&quot;</span></span></span><br></pre></td></tr></table></figure><h3 id="8-2-成员函数声明">8.2 成员函数声明</h3><p>在<code>workerManager.h</code>中类里添加成员函数<code>void save()</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h3 id="8-3-保存文件功能实现">8.3 保存文件功能实现</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(FILENAME, ios::out);<span class="comment">//用输出的方式打开文件 -- 写文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将每个人的数据写入到文件中</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum; i++) &#123;</span><br><span class="line">ofs &lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_ID &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Name &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_DeptID &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">ofs.<span class="built_in">close</span>();<span class="comment">//关闭文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-4-保存文件功能测试">8.4 保存文件功能测试</h3><p>在添加职工功能中添加成功后添加保存文件函数</p><p><img src="https://s2.loli.net/2023/03/12/guKo23ilNCdqAw6.png" alt="image-20220213174506769"></p><p>再运行文件，添加职工</p><p><img src="https://s2.loli.net/2023/03/12/NSBsyPth3mvEz4J.png" alt="image-20220213174631810"></p><p>在同级目录下多出文件，并且保存了添加的信息。</p><p><img src="https://s2.loli.net/2023/03/12/XJasvEbujnm4lHB.png" alt="image-20220213183010518"></p><h2 id="9-文件交互-读文件">9 文件交互 - 读文件</h2><p>功能描述：将文件中的内容读取到程序中</p><p>虽然我们实现了添加职工后爆粗到文件的操作，但是每次开始运行程序，并没有将文件中数据读取到程序中，而我们的程序功能中还有清空文件的需求，因此构造函数初始化数据的清空分为三种</p><ol><li>第一次使用，文件未创建</li><li>文件存在，但是数据被用户清空</li><li>文件存在，并且保存职工的所有数据</li></ol><h3 id="9-1-文件未创建">9.1 文件未创建</h3><p>在<code>workerManager.h</code>中添加新的成员属性<code>m_FileIsEmpty</code>标志文件是否为空</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//标志文件是否为空</span></span><br><span class="line"><span class="type">bool</span> m_FileIsEmpty;</span><br></pre></td></tr></table></figure><p>修改<code>WorkerManager.cpp</code>中构造函数代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">WorkerManager::<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line"><span class="comment">//文件不存在</span></span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(FILENAME, ios::in);<span class="comment">//读文件</span></span><br><span class="line"><span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在。&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="comment">//初始化记录人员</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//初始化数组指针</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//初始化文件是否为空</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除文件后，测试文件不存在时初始化数据功能。</p><h3 id="9-2-文件存在且数据为空">9.2 文件存在且数据为空</h3><p>在<code>workManager.cpp</code>中的构造函数追加代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">WorkerManager::<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line"><span class="comment">//文件不存在</span></span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(FILENAME, ios::in);<span class="comment">//读文件</span></span><br><span class="line"><span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在。&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="comment">//初始化记录人员</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//初始化数组指针</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//初始化文件是否为空</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line">ifs &gt;&gt; ch;</span><br><span class="line"><span class="keyword">if</span> (ifs.<span class="built_in">eof</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将文件创建后清空文件内容，并测试该情况下初始化功能。</p><p>我们发现文件不存在或者为空，清空<code>m_FileIsEmpty</code>判断文件是否为空的标志都为真，那何时为假？</p><p>成功添加职工后，应该更改文件不为空的标志</p><p>在<code>void WorkerManager::Add_Emp()</code>成员函数中添加：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新职工不为空标志</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/mgeh7NQ8ZVRusEk.png" alt="image-20220213223956477"></p><h3 id="9-3-文件为空且保存职工数据">9.3 文件为空且保存职工数据</h3><h4 id="9-3-1-获取记录的职工人数">9.3.1 获取记录的职工人数</h4><p>在<code>workerManager.h</code>中添加成员函数<code>int get_EmpNum;</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//统计人数</span></span><br><span class="line"><span class="type">int</span> get_EmpNum;</span><br></pre></td></tr></table></figure><p><code>workerManager.cpp</code>中实现</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">WorkerManager::get_EmpNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(FILENAME, ios::in);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> dId;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; id &amp;&amp; ifs &gt;&gt; name &amp;&amp; ifs &gt;&gt; dId) &#123;</span><br><span class="line"><span class="comment">//记录人员</span></span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-3-2-初始化数组">9.3.2 初始化数组</h4><p>根据职工的数据初始化<code>workerManager</code>中的<code>Worker** m_EmpArray</code>指针</p><p>在<code>WorkerManager.h</code>中添加成员函数<code>void init_Emp();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化员工</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init_Emp</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>在<code>WorkerManager.cpp</code>中实现</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::init_Emp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(FILENAME, ios::in);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> dId;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; id &amp;&amp; ifs &gt;&gt; name &amp;&amp; ifs &gt;&gt; dId) &#123;</span><br><span class="line">Worker* worker = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//根据不同的部门Id创建不同对象</span></span><br><span class="line"><span class="keyword">if</span> (dId == <span class="number">1</span>) &#123; <span class="comment">//1普通员工</span></span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Employee</span>(id, name, dId);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (dId == <span class="number">2</span>) &#123; <span class="comment">//2经理</span></span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Manager</span>(id, name, dId);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="comment">//总裁</span></span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Boss</span>(id, name, dId);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//存放在数组中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[index] = worker;</span><br><span class="line">index++;</span><br><span class="line">&#125;</span><br><span class="line">    ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>workerManager.cpp</code>构造函数中追加代码后为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">WorkerManager::<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line"><span class="comment">//1.文件不存在</span></span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(FILENAME, ios::in);<span class="comment">//读文件</span></span><br><span class="line"><span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在。&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="comment">//初始化记录人员</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//初始化数组指针</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//初始化文件是否为空</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.文件存在 数据为空</span></span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line">ifs &gt;&gt; ch;</span><br><span class="line"><span class="keyword">if</span> (ifs.<span class="built_in">eof</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.文件存在 数据不为空</span></span><br><span class="line"><span class="type">int</span> num = <span class="keyword">this</span>-&gt;<span class="built_in">get_EmpNum</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;职工人数为：&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = num;</span><br><span class="line"><span class="comment">//开辟空间</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="keyword">new</span> Worker * [<span class="keyword">this</span>-&gt;m_EmpNum];</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">init_Emp</span>();<span class="comment">//将文件中的数据，存到数组中</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum; i++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_ID</span><br><span class="line">&lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">&quot; 部门编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_DeptID &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-显示职工">10 显示职工</h2><p>功能描述：显示当前所有职工信息</p><h3 id="10-1-显示职工函数声明">10.1 显示职工函数声明</h3><p>在<code>workerManager.h</code>中添加成员函数<code>void Show_Emp();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示职工</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Show_Emp</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h3 id="10-2-显示职工函数实现">10.2 显示职工函数实现</h3><p>在<code>workerManager.cpp</code>中实现成员函数<code>void Show_Emp();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Show_Emp</span><span class="params">()</span> </span>&#123; <span class="comment">//显示职工</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m_EmpNum; i++) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;<span class="built_in">showInfo</span>();<span class="comment">//利用多态调用程序接口</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">//按任意键清屏</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-3-测试显示职工">10.3 测试显示职工</h3><p><img src="https://s2.loli.net/2023/03/12/KfH8LJP4qd1WrC6.png" alt="image-20220214003737834"></p><h2 id="11-删除职工">11 删除职工</h2><p>功能描述：按照职工的编号进行删除职工操作</p><h3 id="11-1-删除职工函数声明">11.1 删除职工函数声明</h3><p>在<code>workerManager.h</code>中添加成员函数<code>void Del_Emp();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除职工</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Del_Emp</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h3 id="11-2-职工是否存在函数声明">11.2 职工是否存在函数声明</h3><p>很多功能都需要用到根据职工是否存在来进行操作如：删除职工、修改职工、查找职工</p><p>在<code>workerManager.h</code>中添加成员函数<code>int IsExist(int id);</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按照职工编号判断职工是否存在，若存在，返回职工在数组中位置，不存在返回-1</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">IsExist</span><span class="params">(<span class="type">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="11-3-职工是否存在函数实现">11.3 职工是否存在函数实现</h3><p>在<code>workManager.cpp</code>中实现成员函数<code>int IsExist(int id);</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">WorkerManager::IsExist</span><span class="params">(<span class="type">int</span> id)</span> </span>&#123; <span class="comment">//判断职工是否存在，如果存在返回职工所在数组中的位置，不存在返回-1</span></span><br><span class="line"><span class="type">int</span> index = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_ID == id) &#123;</span><br><span class="line"><span class="comment">//找到职工</span></span><br><span class="line">index = i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> index;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-4-删除职工函数实现">11.4 删除职工函数实现</h3><p>在<code>workManager.cpp</code>中实现成员函数<code>void Del_Emp();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Del_Emp</span><span class="params">()</span> </span>&#123;  <span class="comment">//删除职工</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//按照职工编号删除</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入想要删除职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> id = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> index = <span class="keyword">this</span>-&gt;<span class="built_in">IsExist</span>(id);</span><br><span class="line"><span class="keyword">if</span> (index != <span class="number">-1</span>) &#123; <span class="comment">//说明职工存在，并且要删除index位置上的员工</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = index; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[i] = <span class="keyword">this</span>-&gt;m_EmpArray[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum--;<span class="comment">//更新数组中记录人员个数</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">save</span>();<span class="comment">//数据同步更新到文件中</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;删除失败，未找到该职工！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-5-测试删除职工">11.5 测试删除职工</h3><p>在main函数switch分支3中，调用删除职工：</p><p><img src="https://s2.loli.net/2023/03/12/ubMWYLKGIgEi5Re.png" alt="image-20220214125125296"></p><p>测试1-删除不存在职工的情况</p><p><img src="https://s2.loli.net/2023/03/12/kjWRF5lLtAyQixg.png" alt="image-20220214125539975"></p><p>测试2-删除职工存在的情况</p><p><img src="https://s2.loli.net/2023/03/12/8V69vLjnmUtKSXh.png" alt="image-20220214125422157"></p><p>查看文件中信息，再次核实员工已被完全删除。</p><p><img src="https://s2.loli.net/2023/03/12/fANw5MOk3DFL9pJ.png" alt="image-20220214125613696"></p><p>至此，删除职工功能实现完毕。</p><h2 id="12-修改职工">12 修改职工</h2><p>功能描述：能够按照职工的编号对职工信息进行修改并保存</p><h3 id="12-1-修改职工函数声明">12.1 修改职工函数声明</h3><p>在<code>workerManager.h</code>中添加成员函数<code>void Mod_Emp();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改职工</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Mod_Emp</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h3 id="12-2-修改职工函数实现">12.2 修改职工函数实现</h3><p>在<code>workerManager.cpp</code>中实现成员函数<code>void Mod_Emp();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Mod_Emp</span><span class="params">()</span> </span>&#123;  <span class="comment">//修改职工</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//按照职工编号修改</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入想要修改职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="keyword">this</span>-&gt;<span class="built_in">IsExist</span>(id);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>) &#123; <span class="comment">//说明职工存在，并且要删除ret位置上的员工</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_EmpArray[ret];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> newId = <span class="number">0</span>;</span><br><span class="line">string newName = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="type">int</span> dSelect = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查到：&quot;</span> &lt;&lt; id &lt;&lt; <span class="string">&quot;号职工，请输入新职工：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; newId;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入新姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; newName;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入岗位：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1.普通职工&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2.经理&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3.老板&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; dSelect;</span><br><span class="line"></span><br><span class="line">Worker* worker = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">switch</span> (dSelect)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Employee</span>(newId, newName, dSelect);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Manager</span>(newId, newName, dSelect);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Boss</span>(newId, newName, dSelect);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;修改失败，查无此人！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-查找职工">13 查找职工</h2><p>功能描述：提供两种查找职工方式，一种按照职工编号，一种按照职工姓名</p><h3 id="13-1-查找职工函数声明">13.1 查找职工函数声明</h3><p>在<code>workerManager.h</code>中添加成员函数<code>void Find_Emp();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找职工</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Find_Emp</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h3 id="13-2-查找职工函数实现">13.2 查找职工函数实现</h3><p>在<code>workerManager.cpp</code>中实现成员函数<code>void Find_Emp();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Find_Emp</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入查找的方式：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1.按照职工编号查找&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2.按姓名查找&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入查找的职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">IsExist</span>(id);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查找成功！该职工信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[ret]-&gt;<span class="built_in">showInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查找失败！查无此人&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">2</span>) &#123;</span><br><span class="line">string name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入查找的职工姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;<span class="comment">//查找到的标志</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m_EmpNum;i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (m_EmpArray[i]-&gt;m_Name == name) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查找成功，职工编号为：&quot;</span></span><br><span class="line">&lt;&lt; m_EmpArray[i]-&gt;m_ID</span><br><span class="line">&lt;&lt; <span class="string">&quot;号的信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;<span class="built_in">showInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="literal">false</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查找失败！查无此人&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入选项有误&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14-排序">14 排序</h2><p>功能描述：按照职工编号进行排序，排序的顺序由用户指定</p><h3 id="14-1-排序函数声明">14.1 排序函数声明</h3><p>在<code>workerManager.h</code>中添加成员函数<code>void Sort_Emp();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//排序职工</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Sort_Emp</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h3 id="14-2-排序函数实现">14.2 排序函数实现</h3><p>在<code>workerManager.cpp</code>中实现成员函数<code>void Sort_Emp();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Sort_Emp</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请选择排序方式&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1.按职工编号进行升序&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2.按职工编号进行降序&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m_EmpNum; i++) &#123;</span><br><span class="line"><span class="type">int</span> minOrMax = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; m_EmpNum; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (m_EmpArray[minOrMax]-&gt;m_ID &gt; m_EmpArray[j]-&gt;m_ID) &#123;</span><br><span class="line">minOrMax = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (m_EmpArray[minOrMax]-&gt;m_ID &lt; m_EmpArray[j]-&gt;m_ID) &#123;</span><br><span class="line">minOrMax = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i != minOrMax) &#123;</span><br><span class="line">Worker* temp = m_EmpArray[i];</span><br><span class="line">m_EmpArray[i] = m_EmpArray[minOrMax];</span><br><span class="line">m_EmpArray[minOrMax] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;排序成功，排序后结果为：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">save</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">Show_Emp</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="15-清空文件">15 清空文件</h2><p>功能描述：将文件中记录数据清空</p><h3 id="15-1-清空函数声明">15.1 清空函数声明</h3><p>在<code>workerManager.h</code>中添加成员函数<code>void Clean_File();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Clean_File</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h3 id="15-3-清空函数实现">15.3 清空函数实现</h3><p>在<code>workerManager.cpp</code>中添加成员函数<code>void Clean_File();</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Clean_File</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;确认清空？&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1.确认&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2.返回&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//打开模式 ios::trunc 如果存在删除文件并重新创建</span></span><br><span class="line"><span class="function">ofstream <span class="title">ofs</span><span class="params">(FILENAME,ios::trunc)</span></span>;<span class="comment">//删除文件后重新创建</span></span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_EmpArray[i];<span class="comment">//把每一个对象清理干净</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_EmpArray;<span class="comment">//删除堆区数组指针</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;清空成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="15-3-测试清空文件">15.3 测试清空文件</h3><p>在main函数分支7选项中，调用清空文件接口</p><p><img src="https://s2.loli.net/2023/03/12/pAc4qu3HeFWnPa5.png" alt="image-20220214182502476"></p><p>测试：确认清空文件</p><p><img src="https://s2.loli.net/2023/03/12/q3xUkX7Yo9Ppb2O.png" alt="image-20220214182637594"></p><p><img src="https://s2.loli.net/2023/03/12/jHZ2TBpxmneKrIh.png" alt="image-20220214182726104"></p><p>打开文件，里面数据已确保清空，该功能慎用！</p><p><img src="https://s2.loli.net/2023/03/12/sDiQGqgJlFyYexP.png" alt="image-20220214182937151"></p><p>案例制作完毕！</p><h2 id="代码">代码</h2><h3 id="主函数-controlsystem-cpp">主函数 controlsystem.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;workerManager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;employee.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;boss.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="comment">//Worker* worker = NULL;</span></span><br><span class="line"><span class="comment">//worker = new Employee(1, &quot;张三&quot;, 1);</span></span><br><span class="line"><span class="comment">//worker-&gt;showInfo();</span></span><br><span class="line"><span class="comment">//delete worker;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//worker = new Manager(2, &quot;李四&quot;, 2);</span></span><br><span class="line"><span class="comment">//worker-&gt;showInfo();</span></span><br><span class="line"><span class="comment">//delete worker;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//worker = new Boss(3, &quot;王五&quot;, 3);</span></span><br><span class="line"><span class="comment">//worker-&gt;showInfo();</span></span><br><span class="line"><span class="comment">//delete worker;</span></span><br><span class="line"></span><br><span class="line">WorkerManager wm;<span class="comment">//实例化管理者对象</span></span><br><span class="line"><span class="type">int</span> choice = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">wm.<span class="built_in">Show_Menu</span>();<span class="comment">//调用展示菜单成员函数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您的选择：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; choice;</span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//退出系统</span></span><br><span class="line">wm.<span class="built_in">exitSystem</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//添加职工</span></span><br><span class="line">wm.<span class="built_in">Add_Emp</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//显示职工</span></span><br><span class="line">wm.<span class="built_in">Show_Emp</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//删除职工</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//测试代码：</span></span><br><span class="line"><span class="comment">//int ret = wm.IsExist(5);</span></span><br><span class="line"><span class="comment">//if (ret != -1) &#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;职工存在。&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else &#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;职工不存在。&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">wm.<span class="built_in">Del_Emp</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="comment">//修改职工</span></span><br><span class="line">wm.<span class="built_in">Mod_Emp</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="comment">//查找职工</span></span><br><span class="line">wm.<span class="built_in">Find_Emp</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="comment">//排序职工</span></span><br><span class="line">wm.<span class="built_in">Sort_Emp</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:<span class="comment">//清空文件</span></span><br><span class="line">wm.<span class="built_in">Clean_File</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="workerManager-h">workerManager.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once  <span class="comment">//防止头文件重复包含</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span>  <span class="comment">//包含输入输出流头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;  <span class="comment">//使用标准命名空间</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILENAME <span class="string">&quot;empFile.txt&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WorkerManager</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">WorkerManager</span>(); <span class="comment">//构造函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Show_Menu</span><span class="params">()</span></span>; <span class="comment">//展示菜单</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">exitSystem</span><span class="params">()</span></span>;<span class="comment">//退出系统</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">save</span><span class="params">()</span></span>;<span class="comment">//保存文件</span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> m_FileIsEmpty;<span class="comment">//判断文件是否为空标志</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Show_Emp</span><span class="params">()</span></span>;<span class="comment">//显示职工</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_EmpNum</span><span class="params">()</span></span>;<span class="comment">//统计文件中人数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init_Emp</span><span class="params">()</span></span>;<span class="comment">//初始化员工</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Del_Emp</span><span class="params">()</span></span>;<span class="comment">//删除职工</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">IsExist</span><span class="params">(<span class="type">int</span> id)</span></span>;<span class="comment">//判断职工是否存在，如果存在返回职工所在数组中的位置，不存在返回-1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Mod_Emp</span><span class="params">()</span></span>;<span class="comment">//修改职工</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Find_Emp</span><span class="params">()</span></span>;<span class="comment">//查找职工</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Sort_Emp</span><span class="params">()</span></span>;<span class="comment">//排序职工</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Clean_File</span><span class="params">()</span></span>;<span class="comment">//清空文件</span></span><br><span class="line"></span><br><span class="line">~<span class="built_in">WorkerManager</span>(); <span class="comment">//析构函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//记录文件中的人数个数</span></span><br><span class="line"><span class="type">int</span> m_EmpNum;</span><br><span class="line"></span><br><span class="line"><span class="comment">//员工数组的指针</span></span><br><span class="line">Worker** m_EmpArray;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Add_Emp</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="workerManager-cpp">workerManager.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;workerManager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;employee.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;boss.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">WorkerManager::<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line"><span class="comment">//1.文件不存在</span></span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(FILENAME, ios::in);<span class="comment">//读文件</span></span><br><span class="line"><span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在。&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="comment">//初始化记录人员</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//初始化数组指针</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//初始化文件是否为空</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.文件存在 数据为空</span></span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line">ifs &gt;&gt; ch;</span><br><span class="line"><span class="keyword">if</span> (ifs.<span class="built_in">eof</span>()) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.文件存在,并且记录数据</span></span><br><span class="line"><span class="type">int</span> num = <span class="keyword">this</span>-&gt;<span class="built_in">get_EmpNum</span>();</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;职工人数为：&quot; &lt;&lt; num &lt;&lt; endl;//测试代码</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = num;</span><br><span class="line"><span class="comment">//开辟空间</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="keyword">new</span> Worker * [<span class="keyword">this</span>-&gt;m_EmpNum];</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">init_Emp</span>();<span class="comment">//将文件中的数据，存到数组中</span></span><br><span class="line"><span class="comment">//测试代码：</span></span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; this-&gt;m_EmpNum; i++) &#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;职工编号：&quot; &lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_ID</span></span><br><span class="line"><span class="comment">//&lt;&lt; &quot; 姓名：&quot; &lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_Name</span></span><br><span class="line"><span class="comment">//&lt;&lt; &quot; 部门编号：&quot; &lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_DeptID &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">WorkerManager::~<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_EmpArray;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Show_Menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********  欢迎使用职工管理系统！ *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      0.退出管理程序     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      1.增加职工信息     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      2.显示职工信息     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      3.删除离职职工     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      4.修改职工信息     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      5.查找职工信息     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      6.按照编号排序     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**********      7.清空所有文档     *********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::exitSystem</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎下次使用&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Add_Emp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入添加职工的数量：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> addNum = <span class="number">0</span>;<span class="comment">//保存用户的输入数量</span></span><br><span class="line">cin &gt;&gt; addNum;</span><br><span class="line"><span class="keyword">if</span> (addNum &gt; <span class="number">0</span>) &#123;  <span class="comment">//添加</span></span><br><span class="line"><span class="comment">//计算添加空间大小</span></span><br><span class="line"><span class="type">int</span> newSize = <span class="keyword">this</span>-&gt;m_EmpNum + addNum;<span class="comment">//新空间人数 = 原来记录人数 + 新增人数</span></span><br><span class="line"><span class="comment">//开辟新空间</span></span><br><span class="line">Worker** newSpace = <span class="keyword">new</span> Worker* [newSize];</span><br><span class="line"><span class="comment">//将原来空间下的数据，拷贝到新空间下</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum; i++) &#123;</span><br><span class="line">newSpace[i] = <span class="keyword">this</span>-&gt;m_EmpArray[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//批量添加新数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; addNum; i++) &#123;</span><br><span class="line"><span class="type">int</span> id;<span class="comment">//职工编号</span></span><br><span class="line">string name;<span class="comment">//职工姓名</span></span><br><span class="line"><span class="type">int</span> dSelect;<span class="comment">//部门选择</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个新职工姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请选择该职工岗位：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、普通职工&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、经理&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3、老板&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; dSelect;</span><br><span class="line">Worker* worker = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">switch</span> (dSelect) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Employee</span>(id, name, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Manager</span>(id, name, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Boss</span>(id, name, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将创建的职工职责，保存到数组中</span></span><br><span class="line">newSpace[<span class="keyword">this</span>-&gt;m_EmpNum + i] = worker;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//释放原有的空间</span></span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_EmpArray;</span><br><span class="line"><span class="comment">//修改新空间指向</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = newSpace;</span><br><span class="line"><span class="comment">//更新新的职工人数</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = newSize;</span><br><span class="line"><span class="comment">//更新职工不为空标志</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//提示添加成功</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;成功添加&quot;</span> &lt;&lt; addNum &lt;&lt; <span class="string">&quot;名新职工！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">save</span>();<span class="comment">//调用保存文件</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数据有误。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);<span class="comment">//按任意键后</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">//清屏回到上级目录</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(FILENAME, ios::out);<span class="comment">//用输出的方式打开文件 -- 写文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将每个人的数据写入到文件中</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum; i++) &#123;</span><br><span class="line">ofs &lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_ID &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Name &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_DeptID &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">ofs.<span class="built_in">close</span>();<span class="comment">//关闭文件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">WorkerManager::get_EmpNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(FILENAME, ios::in);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> dId;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; id &amp;&amp; ifs &gt;&gt; name &amp;&amp; ifs &gt;&gt; dId) &#123;</span><br><span class="line"><span class="comment">//记录人员</span></span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::init_Emp</span><span class="params">()</span> </span>&#123; <span class="comment">//初始化员工</span></span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(FILENAME, ios::in);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> dId;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; id &amp;&amp; ifs &gt;&gt; name &amp;&amp; ifs &gt;&gt; dId) &#123;</span><br><span class="line">Worker* worker = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//根据不同的部门Id创建不同对象</span></span><br><span class="line"><span class="keyword">if</span> (dId == <span class="number">1</span>) &#123; <span class="comment">//1普通员工</span></span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Employee</span>(id, name, dId);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (dId == <span class="number">2</span>) &#123; <span class="comment">//2经理</span></span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Manager</span>(id, name, dId);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="comment">//总裁</span></span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Boss</span>(id, name, dId);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//存放在数组中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[index] = worker;</span><br><span class="line">index++;</span><br><span class="line">&#125;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Show_Emp</span><span class="params">()</span> </span>&#123; <span class="comment">//显示职工</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m_EmpNum; i++) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;<span class="built_in">showInfo</span>();<span class="comment">//利用多态调用程序接口</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">//按任意键清屏</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Del_Emp</span><span class="params">()</span> </span>&#123;  <span class="comment">//删除职工</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//按照职工编号删除</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入想要删除职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> id = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> index = <span class="keyword">this</span>-&gt;<span class="built_in">IsExist</span>(id);</span><br><span class="line"><span class="keyword">if</span> (index != <span class="number">-1</span>) &#123; <span class="comment">//说明职工存在，并且要删除index位置上的员工</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = index; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[i] = <span class="keyword">this</span>-&gt;m_EmpArray[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum--;<span class="comment">//更新数组中记录人员个数</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">save</span>();<span class="comment">//数据同步更新到文件中</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;删除失败，未找到该职工！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">WorkerManager::IsExist</span><span class="params">(<span class="type">int</span> id)</span> </span>&#123; <span class="comment">//判断职工是否存在，如果存在返回职工所在数组中的位置，不存在返回-1</span></span><br><span class="line"><span class="type">int</span> index = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_ID == id) &#123;</span><br><span class="line"><span class="comment">//找到职工</span></span><br><span class="line">index = i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> index;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Mod_Emp</span><span class="params">()</span> </span>&#123; <span class="comment">//修改职工</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//按照职工编号修改</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入想要修改职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="keyword">this</span>-&gt;<span class="built_in">IsExist</span>(id);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>) &#123; <span class="comment">//说明职工存在，并且要删除ret位置上的员工</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_EmpArray[ret];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> newId = <span class="number">0</span>;</span><br><span class="line">string newName = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="type">int</span> dSelect = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查到：&quot;</span> &lt;&lt; id &lt;&lt; <span class="string">&quot;号职工，请输入新职工：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; newId;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入新姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; newName;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入岗位：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1.普通职工&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2.经理&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3.老板&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; dSelect;</span><br><span class="line"></span><br><span class="line">Worker* worker = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">switch</span> (dSelect)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Employee</span>(newId, newName, dSelect);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Manager</span>(newId, newName, dSelect);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">worker = <span class="keyword">new</span> <span class="built_in">Boss</span>(newId, newName, dSelect);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;修改失败，查无此人！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Find_Emp</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入查找的方式：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1.按照职工编号查找&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2.按姓名查找&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入查找的职工编号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">IsExist</span>(id);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查找成功！该职工信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[ret]-&gt;<span class="built_in">showInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查找失败！查无此人&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">2</span>) &#123;</span><br><span class="line">string name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入查找的职工姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;<span class="comment">//查找到的标志</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m_EmpNum;i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (m_EmpArray[i]-&gt;m_Name == name) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查找成功，职工编号为：&quot;</span></span><br><span class="line">&lt;&lt; m_EmpArray[i]-&gt;m_ID</span><br><span class="line">&lt;&lt; <span class="string">&quot;号的信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;<span class="built_in">showInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="literal">false</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查找失败！查无此人&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入选项有误&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Sort_Emp</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileIsEmpty) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请选择排序方式&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1.按职工编号进行升序&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2.按职工编号进行降序&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m_EmpNum; i++) &#123;</span><br><span class="line"><span class="type">int</span> minOrMax = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; m_EmpNum; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (m_EmpArray[minOrMax]-&gt;m_ID &gt; m_EmpArray[j]-&gt;m_ID) &#123;</span><br><span class="line">minOrMax = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (m_EmpArray[minOrMax]-&gt;m_ID &lt; m_EmpArray[j]-&gt;m_ID) &#123;</span><br><span class="line">minOrMax = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i != minOrMax) &#123;</span><br><span class="line">Worker* temp = m_EmpArray[i];</span><br><span class="line">m_EmpArray[i] = m_EmpArray[minOrMax];</span><br><span class="line">m_EmpArray[minOrMax] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;排序成功，排序后结果为：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">save</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">Show_Emp</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">WorkerManager::Clean_File</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;确认清空？&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1.确认&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2.返回&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//打开模式 ios::trunc 如果存在删除文件并重新创建</span></span><br><span class="line"><span class="function">ofstream <span class="title">ofs</span><span class="params">(FILENAME,ios::trunc)</span></span>;<span class="comment">//删除文件后重新创建</span></span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_EmpArray[i];<span class="comment">//把每一个对象清理干净</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_EmpArray;<span class="comment">//删除堆区数组指针</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;清空成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="worker-h">worker.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Worker</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">showInfo</span><span class="params">()</span> </span>= <span class="number">0</span>; <span class="comment">//显示个人信息</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> string <span class="title">getDeptName</span><span class="params">()</span> </span>= <span class="number">0</span>;<span class="comment">//获取岗位名称</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m_ID;<span class="comment">//职工编号</span></span><br><span class="line">string m_Name;<span class="comment">//职工姓名</span></span><br><span class="line"><span class="type">int</span> m_DeptID;<span class="comment">//部门编号</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="employee-h">employee.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> :<span class="keyword">public</span> Worker &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Employee</span>(<span class="type">int</span> id,string name,<span class="type">int</span> dId);<span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">showInfo</span><span class="params">()</span></span>;<span class="comment">//显示个人信息</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> string <span class="title">getDeptName</span><span class="params">()</span></span>;<span class="comment">//获取岗位名称</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="employee-cpp">employee.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;employee.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line">Employee::<span class="built_in">Employee</span>(<span class="type">int</span> id, string name, <span class="type">int</span> dId) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_ID = id;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_DeptID = dId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Employee::showInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_ID</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t职工姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t岗位： &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;<span class="built_in">getDeptName</span>()</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t岗位职责：完成经理交给的任务。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Employee::getDeptName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;员工&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="manager-h">manager.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//经理类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Manager</span> :<span class="keyword">public</span> Worker &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Manager</span>(<span class="type">int</span> id, string name, <span class="type">int</span> dId);<span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">showInfo</span><span class="params">()</span></span>; <span class="comment">//显示个人信息</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> string <span class="title">getDeptName</span><span class="params">()</span></span>;<span class="comment">//获取岗位名称</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="manager-cpp">manager.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;manager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line">Manager::<span class="built_in">Manager</span>(<span class="type">int</span> id, string name, <span class="type">int</span> dId) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_ID = id;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_DeptID = dId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::showInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_ID</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t职工姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t岗位： &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;<span class="built_in">getDeptName</span>()</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t岗位职责：完成老板交给的任务，并下发任务给普通员工。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Manager::getDeptName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;经理&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="boss-h">boss.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//老板类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Boss</span> :<span class="keyword">public</span> Worker &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Boss</span>(<span class="type">int</span> id, string name, <span class="type">int</span> dId);<span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">showInfo</span><span class="params">()</span></span>; <span class="comment">//显示个人信息</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> string <span class="title">getDeptName</span><span class="params">()</span></span>;<span class="comment">//获取岗位名称</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="boss-cpp">boss.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;boss.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line">Boss::<span class="built_in">Boss</span>(<span class="type">int</span> id, string name, <span class="type">int</span> dId) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_ID = id;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_DeptID = dId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Boss::showInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;职工编号：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_ID</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t职工姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t岗位： &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;<span class="built_in">getDeptName</span>()</span><br><span class="line">&lt;&lt; <span class="string">&quot;\t岗位职责：管理公司所有事务。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Boss::getDeptName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;总裁&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C++工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通讯录管理系统</title>
      <link href="/2022/02/26/C++/%E9%80%9A%E8%AE%AF%E5%BD%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/02/26/C++/%E9%80%9A%E8%AE%AF%E5%BD%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1>通讯录管理系统</h1><h2 id="1-系统需求">1 系统需求</h2><p>通讯录是一个可以记录亲人、好友信息的工具。</p><p>本教程主要利用C++来实现一个通讯录管理系统</p><p>系统中需要实现的功能如下：</p><ul><li>添加联系人：向通讯录中添加新人，信息包括（姓名、性别、年龄、联系电话、家庭住址）最多记录1000人；</li><li>显示联系人：显示通讯录中所有联系人信息</li><li>删除联系人：按照姓名进行删除指定联系人</li><li>查找联系人：按照姓名进查看指定联系人信息</li><li>修改联系人：按照姓名重新修改指定联系人</li><li>清空联系人：清空通讯录中所有信息</li><li>退出通讯录：退出当前使用的通讯录</li></ul><h2 id="2-创建项目-3">2 创建项目</h2><p>创建项目步骤如下：</p><ul><li>创建新项目</li><li>添加文件</li></ul><h3 id="2-1-创建项目-5">2.1 创建项目</h3><p>打开Visual studio后，点击创建新项目，创建新的C++项目</p><img src="https://s2.loli.net/2023/03/12/7neYcNWEyLC34Xk.png" alt="image-20220123124340461" style="zoom: 67%;" /><img src="https://s2.loli.net/2023/03/12/OL9a4HXWxu2YNUP.png" alt="image-20220123125134404" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/12/VoBACc47EKJ3iq8.png" alt="image-20220123125917692" style="zoom:67%;" /><h3 id="2-2-创建文件-4">2.2 创建文件</h3><p>右键源文件，选择添加-&gt;新建项</p><img src="https://s2.loli.net/2023/03/12/AMfNtn4CFOaH8KD.png" alt="image-20220123130442955" style="zoom:67%;" /><p>给C++文件起个名称，然后点击添加即可。</p><img src="https://s2.loli.net/2023/03/12/fsNvDALp9Ojdm7J.png" alt="image-20220123130813668" style="zoom:67%;" /><h2 id="3-菜单功能">3 菜单功能</h2><p><strong>功能描述</strong>：用户选择功能的节目</p><p>菜单界面效果如下图：</p><p><img src="https://s2.loli.net/2023/03/12/SiFkqlKPQDp5bBd.png" alt="image-20220127201349127"></p><p><strong>步骤</strong>：</p><ul><li>封装函数显示该界面，如<code>void showMenu()</code></li><li>在main函数中调用封装好的函数</li></ul><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  1.添加联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  2.显示联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  3.删除联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  4.查找联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  5.修改联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  6.清空联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  0.退出通讯录  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//调用菜单</span></span><br><span class="line"><span class="built_in">showMenu</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-退出功能">4 退出功能</h2><p>功能描述：退出通讯录系统</p><p>思路：根据用户不同的选择，进入不同的功能，可以选择switch分支结构，将整个架构进行搭建</p><p>当用户选择0的时候，执行退出，选择其他先不做操作，也不退出程序</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  1.添加联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  2.显示联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  3.删除联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  4.查找联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  5.修改联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  6.清空联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  0.退出通讯录  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;<span class="comment">//创建用户选择的输入的变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">//调用菜单</span></span><br><span class="line"><span class="built_in">showMenu</span>();</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"><span class="keyword">switch</span> (select) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//添加联系人</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//显示联系人</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//删除联系人</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="comment">//查找联系人</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="comment">//修改联系人</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="comment">//清空联系人</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//退出通讯录</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎下次使用!&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);<span class="comment">//按任意键退出系统</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="https://s2.loli.net/2023/03/12/qVbvzsmciTFQUXN.png" alt="image-20220127204035545"></p><h2 id="5-添加联系人">5 添加联系人</h2><p>功能描述：</p><p>实现添加联系人功能，联系人上限为1000人，联系人信息包括（姓名、性别、年龄、联系电话、家庭住址）</p><p>添加联系人实现步骤：</p><ul><li>设计联系人结构体</li><li>设计通讯录结构体</li><li>main函数中创建通讯录</li><li>封装添加联系人函数</li><li>测试添加联系人功能</li></ul><h3 id="5-1-设计联系人结构体">5.1 设计联系人结构体</h3><p>联系人信息包括：姓名、性别、年龄、联系电话、家庭住址</p><p>设计如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span> <span class="comment">//string头文件</span></span></span><br><span class="line"><span class="comment">//联系人结构体</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    string m_Name;<span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> m_Sex;<span class="comment">//性别</span></span><br><span class="line">    <span class="type">int</span> m_Age;<span class="comment">//年龄</span></span><br><span class="line">    string m_Phone;<span class="comment">//电话</span></span><br><span class="line">    string m_Addr;<span class="comment">//住址</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="5-2-设计通讯录结构体">5.2 设计通讯录结构体</h3><p>设计的时候可以在通讯录结构体中，维护一个容量为1000的存放联系人的数组，并记录当前通讯录中联系人数量</p><p>设计如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 1000 <span class="comment">//</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//通讯录结构体</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Addressbooks</span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Person</span> personArray[MAX];<span class="comment">//通讯录中保存的联系人数组</span></span><br><span class="line">    <span class="type">int</span> m_Size;<span class="comment">//通讯录中人员个数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-main函数中创建通讯录">5.3 main函数中创建通讯录</h3><p>添加联系人函数封装好后，在main函数中创建一个通讯录变量，这个就是我们需要一直维护的通讯录。</p><p>在main函数起始位置添加：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Addressbooks abs;<span class="comment">//创建通讯录</span></span><br><span class="line">abs.m_Size = <span class="number">0</span>;<span class="comment">//初始化通讯录中的人数</span></span><br></pre></td></tr></table></figure><h3 id="5-4-封装添加联系人函数">5.4 封装添加联系人函数</h3><p>思路：添加联系人前先判断通讯录是否已满，如果满了就不再添加，未满就将新联系人信息逐个添加到通讯录中。</p><p>添加联系人代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">addPerson</span><span class="params">(Addressbooks* abs)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (abs-&gt;m_Size == MAX) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通讯录已满，无法添加！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">string name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">abs-&gt;personArray[abs-&gt;m_Size].m_Name = name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sex = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入性别：&quot;</span> &lt;&lt; <span class="string">&quot;1 --- 男&quot;</span> &lt;&lt; <span class="string">&quot;2 --- 女&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">cin &gt;&gt; sex;</span><br><span class="line"><span class="keyword">if</span> (sex == <span class="number">1</span> || sex == <span class="number">2</span>) &#123;</span><br><span class="line">abs-&gt;personArray[abs-&gt;m_Size].m_Sex = sex;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入错误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">cin &gt;&gt; age;</span><br><span class="line"><span class="keyword">if</span> (age &gt;= <span class="number">0</span> || age &lt;= <span class="number">150</span>) &#123;</span><br><span class="line">abs-&gt;personArray[abs-&gt;m_Size].m_Age = age;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入错误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string phonenumber;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; phonenumber;</span><br><span class="line">abs-&gt;personArray[abs-&gt;m_Size].m_Phone = phonenumber;</span><br><span class="line"></span><br><span class="line">string address;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入家庭住址：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; address;</span><br><span class="line">abs-&gt;personArray[abs-&gt;m_Size].m_Addr = address;</span><br><span class="line"></span><br><span class="line">abs-&gt;m_Size++;<span class="comment">//更新通讯录人数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;添加成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);<span class="comment">//按任意键继续</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">//清屏操作</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-5-测试添加联系人功能">5.5 测试添加联系人功能</h3><p>选择界面中，如果玩家选择了1，代表添加联系人，可以测试下该功能</p><p>在switch case语句中，case1里添加：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//添加联系人</span></span><br><span class="line"><span class="built_in">addPerson</span>(&amp;abs);<span class="comment">//利用地址传递，可以修饰形参</span></span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>测试效果图：</p><p><img src="https://s2.loli.net/2023/03/12/irCDIx81fqkMog3.png" alt="image-20220127223018395"></p><h2 id="6-显示联系人">6 显示联系人</h2><p>功能描述：显示通讯录中已有的联系人信息</p><p>显示联系人实现步骤：</p><ul><li>封装显示联系人函数</li><li>测试显示联系人功能</li></ul><h3 id="6-1-封装显示联系人函数">6.1 封装显示联系人函数</h3><p>思路：判断如果当前通讯录中有没有人员，如果没有则提示记录为空，人数大于0，则显示通讯录中的信息。</p><p>显示联系人代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示所有联系人</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPerson</span><span class="params">(Addressbooks* abs)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (abs-&gt;m_Size == <span class="number">0</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通讯录为空。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; abs-&gt;m_Size; i++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; abs-&gt;personArray[i].m_Name&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄：\t&quot;</span> &lt;&lt; abs-&gt;personArray[i].m_Age &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;性别：\t&quot;</span> &lt;&lt; (abs-&gt;personArray[i].m_Sex == <span class="number">1</span> ? <span class="string">&quot;男&quot;</span> : <span class="string">&quot;女&quot;</span>) &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;电话：\t&quot;</span> &lt;&lt; abs-&gt;personArray[i].m_Phone &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; abs-&gt;personArray[i].m_Addr &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2-测试显示联系人功能">6.2 测试显示联系人功能</h3><p>在switch case语句中，case 2里添加</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//显示联系人</span></span><br><span class="line"><span class="built_in">showPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>测试效果图：</p><p><img src="https://s2.loli.net/2023/03/12/MPpqEj6wmzK3bTc.png" alt="image-20220127225933453"></p><h2 id="7-删除联系人">7 删除联系人</h2><p>功能描述：按照姓名进行删除指定联系人</p><p>删除联系人实现步骤：</p><ul><li>封装检测联系人是否存在</li><li>封装删除联系人函数</li><li>测试删除联系人功能</li></ul><h3 id="7-1-封装检测联系人是否存在">7.1 封装检测联系人是否存在</h3><p>设计思路：删除联系人前，需要先判断用户输入的联系人是否存在，如果存在则删除，如果不存在则提示用户没有要删除的联系人，因此把检测联系人是否存在封装成一个函数，如果存在，返回联系人在通讯录中的位置，不存在返回-1。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//检测联系人是否存在，如果存在，返回联系人所在数组中的具体位置，不存在返回-1</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">isExist</span><span class="params">(Addressbooks* abs, string name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; abs-&gt;m_Size; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (abs-&gt;personArray[i].m_Name == name) &#123;</span><br><span class="line"><span class="keyword">return</span> i;<span class="comment">//找到，返回这个人在数组中的编号</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//如果没有找到，返回-1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-2-封装删除联系人函数">7.2 封装删除联系人函数</h3><p>根据用户输入的联系人判断该通讯录中是否有此人，查找并进行删除，并提示删除成功；查不到此人，则提示查无此人。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">deletePerson</span><span class="params">(Addressbooks* abs)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您要删除的联系人：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>) &#123;<span class="comment">//删除李四，将李四后的数据前移</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = ret; i &lt; abs-&gt;m_Size; i++) &#123;</span><br><span class="line">abs-&gt;personArray[i] = abs-&gt;personArray[i + <span class="number">1</span>];<span class="comment">//数据前移</span></span><br><span class="line">&#125;</span><br><span class="line">abs-&gt;m_Size--;<span class="comment">//更新通讯录中的人员数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查无此人！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-3-测试删除联系人功能">7.3 测试删除联系人功能</h3><p>在switch case语句中，case3里添加：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//删除联系人</span></span><br><span class="line"><span class="built_in">deletePerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h2 id="8-查找联系人">8 查找联系人</h2><p>功能描述：按照姓名查看指定联系人信息</p><p>查找联系人实现步骤</p><ul><li>封装查找联系人函数</li><li>测试查找指定联系人</li></ul><h3 id="8-1-封装查找联系人函数">8.1 封装查找联系人函数</h3><p>实现思路：判断用户指定的联系人是否存在，如果存在，则显示信息，否则提示查无此人。</p><p>查找联系人代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">findPerson</span><span class="params">(Addressbooks* abs)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您要查找的联系人：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>) &#123;<span class="comment">//找到联系人</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; abs-&gt;personArray[ret].m_Name &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄：\t&quot;</span> &lt;&lt; abs-&gt;personArray[ret].m_Age &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;性别：\t&quot;</span> &lt;&lt; (abs-&gt;personArray[ret].m_Sex == <span class="number">1</span> ? <span class="string">&quot;男&quot;</span> : <span class="string">&quot;女&quot;</span>) &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;电话：\t&quot;</span> &lt;&lt; abs-&gt;personArray[ret].m_Phone &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; abs-&gt;personArray[ret].m_Addr &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查无此人！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-2-测试查找指定联系人">8.2 测试查找指定联系人</h3><p>在switch case语句中，case4里添加：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="comment">//查找联系人</span></span><br><span class="line"><span class="built_in">findPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h2 id="9-修改联系人">9 修改联系人</h2><p>功能描述：按照姓名重新修改指定联系人</p><p>修改联系人实现步骤：</p><ul><li>封装修改联系人函数</li><li>测试修改联系人功能</li></ul><h3 id="9-1-封装修改联系人函数">9.1 封装修改联系人函数</h3><p>实现思路：查找用户输入的联系人，如果茶渣成功进行修改操作，查找失败提示查无此人。</p><p>修改联系人代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">modifyPerson</span><span class="params">(Addressbooks* abs)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您要修改的联系人：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>) &#123;<span class="comment">//找到联系人</span></span><br><span class="line"></span><br><span class="line">string name1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name1;</span><br><span class="line">abs-&gt;personArray[ret].m_Name = name1;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sex = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入性别：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1 - 男&quot;</span> &lt;&lt; <span class="string">&quot;  2 - 女&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; sex;</span><br><span class="line"><span class="keyword">if</span> (sex == <span class="number">1</span> || sex == <span class="number">2</span>) &#123;</span><br><span class="line">abs-&gt;personArray[ret].m_Sex = sex;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">cin &gt;&gt; age;</span><br><span class="line"><span class="keyword">if</span> (age &gt;= <span class="number">0</span> || age &lt;= <span class="number">150</span>) &#123;</span><br><span class="line">abs-&gt;personArray[ret].m_Age = age;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入错误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string phonenumber;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; phonenumber;</span><br><span class="line">abs-&gt;personArray[ret].m_Phone = phonenumber;</span><br><span class="line"></span><br><span class="line">string address;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入家庭住址：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; address;</span><br><span class="line">abs-&gt;personArray[ret].m_Addr = address;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;修改成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);<span class="comment">//按任意键继续</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">//清屏操作</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查无此人！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-2-测试修改联系人功能">9.2 测试修改联系人功能</h3><p>在switch case语句中，case5里添加：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="comment">//修改联系人</span></span><br><span class="line"><span class="built_in">modifyPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h2 id="10-清空联系人">10 清空联系人</h2><p>功能描述：清空通讯录中所有信息</p><p>清空联系人实现步骤</p><ul><li>封装清空联系人函数</li><li>测试清空联系人</li></ul><h3 id="10-1-封装清空联系人函数">10.1 封装清空联系人函数</h3><p>实现思路：将通讯录所有联系人信息清楚掉，只要将通讯录记录的联系人数量置为0，做逻辑清空即可。</p><p>清空联系人代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">cleanPerson</span><span class="params">(Addressbooks* abs)</span> </span>&#123;</span><br><span class="line">abs-&gt;m_Size = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通讯录已清空！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);<span class="comment">//按任意键继续</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">//清屏操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-2-测试清空联系人">10.2 测试清空联系人</h3><p>在switch case语句中，case6里添加：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="comment">//清空联系人</span></span><br><span class="line"><span class="built_in">cleanPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h2 id="11-整体程序">11 整体程序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span> <span class="comment">//string头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 1000 <span class="comment">//</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设计联系人的结构体</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line">string m_Name;<span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> m_Sex;<span class="comment">//性别</span></span><br><span class="line"><span class="type">int</span> m_Age;<span class="comment">//年龄</span></span><br><span class="line">string m_Phone;<span class="comment">//电话</span></span><br><span class="line">string m_Addr;<span class="comment">//住址</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通讯录结构体</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Addressbooks</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span> personArray[MAX];<span class="comment">//通讯录中保存的联系人数组</span></span><br><span class="line"><span class="type">int</span> m_Size;<span class="comment">//通讯录中人员个数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.添加联系人</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addPerson</span><span class="params">(Addressbooks* abs)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (abs-&gt;m_Size == MAX) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通讯录已满，无法添加！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">string name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">abs-&gt;personArray[abs-&gt;m_Size].m_Name = name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sex = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入性别：&quot;</span> &lt;&lt; <span class="string">&quot;1 - 男&quot;</span> &lt;&lt; <span class="string">&quot;   2 - 女&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">cin &gt;&gt; sex;</span><br><span class="line"><span class="keyword">if</span> (sex == <span class="number">1</span> || sex == <span class="number">2</span>) &#123;</span><br><span class="line">abs-&gt;personArray[abs-&gt;m_Size].m_Sex = sex;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入错误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">cin &gt;&gt; age;</span><br><span class="line"><span class="keyword">if</span> (age &gt;= <span class="number">0</span> || age &lt;= <span class="number">150</span>) &#123;</span><br><span class="line">abs-&gt;personArray[abs-&gt;m_Size].m_Age = age;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入错误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string phonenumber;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; phonenumber;</span><br><span class="line">abs-&gt;personArray[abs-&gt;m_Size].m_Phone = phonenumber;</span><br><span class="line"></span><br><span class="line">string address;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入家庭住址：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; address;</span><br><span class="line">abs-&gt;personArray[abs-&gt;m_Size].m_Addr = address;</span><br><span class="line"></span><br><span class="line">abs-&gt;m_Size++;<span class="comment">//更新通讯录人数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;添加成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);<span class="comment">//按任意键继续</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">//清屏操作</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示所有联系人</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPerson</span><span class="params">(Addressbooks* abs)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (abs-&gt;m_Size == <span class="number">0</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通讯录为空。&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; abs-&gt;m_Size; i++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; abs-&gt;personArray[i].m_Name&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄：\t&quot;</span> &lt;&lt; abs-&gt;personArray[i].m_Age &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;性别：\t&quot;</span> &lt;&lt; (abs-&gt;personArray[i].m_Sex == <span class="number">1</span> ? <span class="string">&quot;男&quot;</span> : <span class="string">&quot;女&quot;</span>) &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;电话：\t&quot;</span> &lt;&lt; abs-&gt;personArray[i].m_Phone &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; abs-&gt;personArray[i].m_Addr &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检测联系人是否存在，如果存在，返回联系人所在数组中的具体位置，不存在返回-1</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">isExist</span><span class="params">(Addressbooks* abs, string name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; abs-&gt;m_Size; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (abs-&gt;personArray[i].m_Name == name) &#123;</span><br><span class="line"><span class="keyword">return</span> i;<span class="comment">//找到，返回这个人在数组中的编号</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//如果没有找到，返回-1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deletePerson</span><span class="params">(Addressbooks* abs)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您要删除的联系人：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>) &#123;<span class="comment">//删除李四，将李四后的数据前移</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = ret; i &lt; abs-&gt;m_Size; i++) &#123;</span><br><span class="line">abs-&gt;personArray[i] = abs-&gt;personArray[i + <span class="number">1</span>];<span class="comment">//数据前移</span></span><br><span class="line">&#125;</span><br><span class="line">abs-&gt;m_Size--;<span class="comment">//更新通讯录中的人员数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查无此人！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">findPerson</span><span class="params">(Addressbooks* abs)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您要查找的联系人：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>) &#123;<span class="comment">//找到联系人</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; abs-&gt;personArray[ret].m_Name &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄：\t&quot;</span> &lt;&lt; abs-&gt;personArray[ret].m_Age &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;性别：\t&quot;</span> &lt;&lt; (abs-&gt;personArray[ret].m_Sex == <span class="number">1</span> ? <span class="string">&quot;男&quot;</span> : <span class="string">&quot;女&quot;</span>) &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;电话：\t&quot;</span> &lt;&lt; abs-&gt;personArray[ret].m_Phone &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; abs-&gt;personArray[ret].m_Addr &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查无此人！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modifyPerson</span><span class="params">(Addressbooks* abs)</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您要修改的联系人：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>) &#123;<span class="comment">//找到联系人</span></span><br><span class="line"></span><br><span class="line">string name1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name1;</span><br><span class="line">abs-&gt;personArray[ret].m_Name = name1;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sex = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入性别：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1 - 男&quot;</span> &lt;&lt; <span class="string">&quot;  2 - 女&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; sex;</span><br><span class="line"><span class="keyword">if</span> (sex == <span class="number">1</span> || sex == <span class="number">2</span>) &#123;</span><br><span class="line">abs-&gt;personArray[ret].m_Sex = sex;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">cin &gt;&gt; age;</span><br><span class="line"><span class="keyword">if</span> (age &gt;= <span class="number">0</span> || age &lt;= <span class="number">150</span>) &#123;</span><br><span class="line">abs-&gt;personArray[ret].m_Age = age;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入错误，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string phonenumber;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; phonenumber;</span><br><span class="line">abs-&gt;personArray[ret].m_Phone = phonenumber;</span><br><span class="line"></span><br><span class="line">string address;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入家庭住址：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; address;</span><br><span class="line">abs-&gt;personArray[ret].m_Addr = address;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;修改成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);<span class="comment">//按任意键继续</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">//清屏操作</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查无此人！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cleanPerson</span><span class="params">(Addressbooks* abs)</span> </span>&#123;</span><br><span class="line">abs-&gt;m_Size = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通讯录已清空！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);<span class="comment">//按任意键继续</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">//清屏操作</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  1.添加联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  2.显示联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  3.删除联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  4.查找联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  5.修改联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  6.清空联系人  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*****  0.退出通讯录  *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Addressbooks abs;<span class="comment">//创建通讯录</span></span><br><span class="line">abs.m_Size = <span class="number">0</span>;<span class="comment">//初始化通讯录中的人数</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;<span class="comment">//创建用户选择的输入的变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">//调用菜单</span></span><br><span class="line"><span class="built_in">showMenu</span>();</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"><span class="keyword">switch</span> (select) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//添加联系人</span></span><br><span class="line"><span class="built_in">addPerson</span>(&amp;abs);<span class="comment">//利用地址传递，可以修饰形参</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//显示联系人</span></span><br><span class="line"><span class="built_in">showPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//删除联系人</span></span><br><span class="line"><span class="built_in">deletePerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="comment">//查找联系人</span></span><br><span class="line"><span class="built_in">findPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="comment">//修改联系人</span></span><br><span class="line"><span class="built_in">modifyPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="comment">//清空联系人</span></span><br><span class="line"><span class="built_in">cleanPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//退出通讯录</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎下次使用!&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);<span class="comment">//按任意键继续</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C++工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Latex教程</title>
      <link href="/2022/02/26/Latex/Latex%E6%95%99%E7%A8%8B/"/>
      <url>/2022/02/26/Latex/Latex%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>Latex教程</h1><p>Latex是一种撰写文档的一种方式，适合数学公式较多的场景，对文档编辑的自由度较高，比较容易，不会出现Word中格式的问题。</p><p>相关文档查看以及学习资源：<a href="https://www.latexstudio.net/">https://www.latexstudio.net/</a></p><p>通过电脑cmd终端输入命令<code>texdoc ctex</code>或者<code>texdoc lshort-zh </code>查看相应的文档</p><p>示例：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="comment">% 在导言区主要进行全局设置</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125; <span class="comment">%article, book, report, letter</span></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;ctex&#125;</span><br><span class="line"><span class="comment">% 或者上面两行可以用   \documentclass&#123;ctexart&#125; 来代替，效果相同</span></span><br><span class="line"><span class="comment">%ctexart, ctexbook, ctexrep, ctexbook, ctexbeamer 没有letter这样的文档类</span></span><br><span class="line"><span class="keyword">\title</span>&#123;<span class="keyword">\heiti</span> 杂谈勾股定理&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;<span class="keyword">\kaishu</span> 张三&#125;</span><br><span class="line"><span class="keyword">\date</span>&#123;<span class="keyword">\today</span>&#125;</span><br><span class="line"><span class="keyword">\newcommand</span><span class="keyword">\degree</span>&#123;<span class="built_in">^</span><span class="keyword">\circ</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125; <span class="comment">% 一个latex文件有且只有一个document环境</span></span><br><span class="line"><span class="keyword">\maketitle</span>  <span class="comment">% 使用此命令输出整个标题</span></span><br><span class="line">Hello world！</span><br><span class="line"></span><br><span class="line"><span class="comment">%通过增加空行来进行换行</span></span><br><span class="line">let <span class="built_in">$</span>f(x)<span class="built_in">$</span> be defined by the formula <span class="built_in">$</span>f(x)=3x<span class="built_in">^</span>2+x-1<span class="built_in">$</span> <span class="comment">% 通过 $ $来编写公式</span></span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span>f(x)=3x<span class="built_in">^</span>2+x-1<span class="built_in">$</span><span class="built_in">$</span> which is a ploynomial of degree 2.  <span class="comment">% 可以通过 $$ $$来另起一行进行显示公式</span></span><br><span class="line"></span><br><span class="line">勾股定理可以用现代语言表述如下：</span><br><span class="line"></span><br><span class="line">直角三角形斜边的平方等于两腰的平方和。<span class="comment">%是否定格写和最终输出结果没有关系</span></span><br><span class="line"></span><br><span class="line">可以用符号语言表述为：设直角三角形 <span class="built_in">$</span> ABC <span class="built_in">$</span>，其中 <span class="built_in">$</span> <span class="keyword">\angle</span> C = 90 <span class="keyword">\degree</span><span class="built_in">$</span>，则有：</span><br><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">AB<span class="built_in">^</span>2 = BC<span class="built_in">^</span>2 + AC<span class="built_in">^</span>2</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/mLh5qzRAvtCVXPp.png" alt="image-20220422193602438"></p><h2 id="1-字体属性">1 字体属性</h2><p>在Latex中，一个字体有5中属性：</p><ul><li>字体编码<ul><li>正文字体编码：OT1，T1，EU1等</li><li>数学字体编码：OML、OMS、OMX等</li></ul></li><li>字体族<ul><li>罗马字体：笔画起始处有装饰</li><li>无衬线字体：笔画起始处无装饰</li><li>打字机字体：每个字符宽度相同，有称等宽字体</li></ul></li><li>字体系列<ul><li>粗细</li><li>宽度</li></ul></li><li>字体形状<ul><li>直立</li><li>斜体</li><li>伪斜体</li><li>小型大写</li></ul></li><li>字体大小</li></ul><p>示例：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="comment">% 在导言区主要进行全局设置</span></span><br><span class="line"><span class="keyword">\documentclass</span>[10pt]&#123;article&#125;</span><br><span class="line"><span class="keyword">\date</span>&#123;<span class="keyword">\today</span>&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;ctex&#125;</span><br><span class="line"><span class="comment">%\setmainfont&#123;Minion Pro&#125;</span></span><br><span class="line"><span class="keyword">\usepackage</span>[T1]&#123;fontenc&#125;</span><br><span class="line"><span class="keyword">\setmainfont</span>&#123;TeX Gyre Termes&#125;</span><br><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\myfont</span>&#125;&#123;<span class="keyword">\textbf</span>&#123;<span class="keyword">\textsf</span>&#123;Fancy Text&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="comment">% 字体族设置（罗马字体、无衬线字体、打字机字体）</span></span><br><span class="line">字体族设置：</span><br><span class="line"><span class="keyword">\textrm</span>&#123;Roman Family&#125; <span class="keyword">\textsf</span>&#123;Sans Serif Family&#125; <span class="keyword">\texttt</span>&#123;Typewriter Family&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\rmfamily</span> Roman Family &#123;<span class="keyword">\sffamily</span> Sans Serif Family&#125; &#123;<span class="keyword">\ttfamily</span> Typewriter Family&#125; <span class="comment">%可以用&#123;&#125;限制字体作用的范围</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\sffamily</span> Here show sffamily font style</span><br><span class="line"><span class="comment">%如果不用&#123;&#125;来限定字体作用范围，等到达下一个字体格式时会自动停止当前字体的格式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\ttfamily</span> Here show ttfamily font style</span><br><span class="line"></span><br><span class="line">&#123;<span class="keyword">\rmfamily</span> Here show rmfamily font style.&#125;  <span class="comment">% 可以通过&#123;&#125;限制字体作用的范围</span></span><br><span class="line"></span><br><span class="line">Here show ttfamily font style!</span><br><span class="line"></span><br><span class="line"><span class="comment">% 字体系列设置（粗细、宽度）</span></span><br><span class="line"><span class="keyword">\songti</span> 字体系列设置：</span><br><span class="line"><span class="keyword">\textmd</span>&#123;Medium Series&#125; <span class="keyword">\textbf</span>&#123;Boldface Series&#125;</span><br><span class="line">&#123;<span class="keyword">\mdseries</span> Medium Series&#125; &#123;<span class="keyword">\bfseries</span> Boldface Series&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 字体形状（直立、斜体、伪斜体、小型大写）</span></span><br><span class="line"><span class="keyword">\songti</span> 字体形状：</span><br><span class="line"> <span class="keyword">\textup</span>&#123;Upright Shape&#125; <span class="keyword">\textit</span>&#123;Italic Shape&#125;</span><br><span class="line"> <span class="keyword">\textsl</span>&#123;Slanted Shape&#125; <span class="keyword">\textsc</span>&#123;Small Caps Shape&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="keyword">\upshape</span> Upright Shape&#125; &#123;<span class="keyword">\itshape</span> Italic Shape&#125; &#123;<span class="keyword">\slshape</span> Slanted Shape&#125; &#123;<span class="keyword">\scshape</span> Small Caps Shape&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 中文字体 注意需要使用ctex宏包，否则无法使用中文的相关设置</span></span><br><span class="line"><span class="keyword">\songti</span> 中文字体：</span><br><span class="line">&#123;<span class="keyword">\songti</span> 宋体&#125; <span class="keyword">\quad</span>&#123;<span class="keyword">\heiti</span> 黑体&#125; <span class="keyword">\quad</span> &#123;<span class="keyword">\fangsong</span> 仿宋&#125;<span class="keyword">\quad</span>&#123;<span class="keyword">\kaishu</span> 楷书&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\songti</span> 中文字体的&#123;<span class="keyword">\bf</span> 粗体&#125;&#123;<span class="keyword">\songti</span> 与&#125;<span class="keyword">\textit</span>&#123;斜体&#125;<span class="keyword">\\</span> <span class="comment">% 中文的粗体是用黑体表示的，斜体是用楷书表示的</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 字体大小</span></span><br><span class="line">&#123;<span class="keyword">\tiny</span>          Hello&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\scriptsize</span>     Hello&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\footnotesize</span>    Hello&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\small</span>         Hello&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\normalsize</span>     Hello&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\large</span>         Hello&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\Large</span>         Hello&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\LARGE</span>         Hello&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\huge</span>          Hello&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\Huge</span>          Hello&#125;<span class="keyword">\\</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 中文字号设置命令</span></span><br><span class="line"><span class="keyword">\zihao</span>&#123;-0&#125; 你好！<span class="keyword">\\</span><span class="comment">% 参数为 -0 为小初号</span></span><br><span class="line"><span class="keyword">\zihao</span>&#123;5&#125; 大人</span><br><span class="line"></span><br><span class="line"><span class="keyword">\myfont</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/ClxvAHNU72B4GOr.png" alt="image-20220423090110564"></p><h2 id="2-Latex文档基本结构">2 Latex文档基本结构</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;ctexbook&#125;</span><br><span class="line"><span class="comment">%\usepackage&#123;ctex&#125;</span></span><br><span class="line"><span class="keyword">\ctexset</span>&#123;</span><br><span class="line">section = &#123;</span><br><span class="line">format+ = <span class="keyword">\zihao</span>&#123;-4&#125; <span class="keyword">\heiti</span> <span class="keyword">\raggedright</span>,</span><br><span class="line">name = &#123;,、&#125;,</span><br><span class="line">number = <span class="keyword">\chinese</span>&#123;section&#125;,</span><br><span class="line">beforeskip = 1.0ex plus 0.2ex minus .2ex,</span><br><span class="line">afterskip  = 1.0ex plus 0.2ex minus .2ex,</span><br><span class="line">aftername = <span class="keyword">\hspace</span>&#123;0pt&#125;</span><br><span class="line">&#125;,</span><br><span class="line">subsection = &#123;</span><br><span class="line">format+ =<span class="keyword">\zihao</span>&#123;5&#125; <span class="keyword">\heiti</span> <span class="keyword">\raggedright</span>,</span><br><span class="line"><span class="comment">% name=&#123;\thesubsection、&#125;,</span></span><br><span class="line">name = &#123;,、&#125;,</span><br><span class="line">number = <span class="keyword">\chinese</span>&#123;section&#125;,</span><br><span class="line">beforeskip = 1.0ex plus 0.2ex minus .2ex,</span><br><span class="line">afterskip  = 1.0ex plus 0.2ex minus .2ex,</span><br><span class="line">aftername = <span class="keyword">\hspace</span>&#123;0pt&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\tableofcontents</span>  <span class="comment">%产生整个文档的目录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\chapter</span>&#123;绪论&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;引言&#125;</span><br><span class="line">近年来,随着互联网技术的发展,我国的数字化教育资源建设取得了巨大的成就。很多高校建立了自己的数字化学习平台,数字化教学在教育中发挥着越来越大的作用。</span><br><span class="line"></span><br><span class="line">new近年来,随着互联网技术的发展,我国的数字化教育资源建设取得了巨大的成就。</span><br><span class="line"><span class="keyword">\\</span>很多高校建立了自己的数字化学习平台,数字化教学在教育中发挥着越来越大的作用</span><br><span class="line"><span class="comment">% 采用\\的方法来换行并不能缩进，但是如果采用\par的方式，能够产生新的段落，通常为了保证源文件的清晰，通过插入空行来实现</span></span><br><span class="line">近年来,随着互联网技术的发展,我国的数字化教育资源建设取得了巨大的成就。</span><br><span class="line"><span class="keyword">\par</span> 很多高校建立了自己的数字化学习平台,数字化教学在教育中发挥着越来越大的作用</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;实验方法&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;实验结果&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;数据&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;图表&#125;</span><br><span class="line"><span class="keyword">\subsubsection</span>&#123;实验条件&#125;  <span class="comment">%subsubsection在book中不起作用</span></span><br><span class="line"><span class="keyword">\subsubsection</span>&#123;实验过程&#125; 实验过程实验过程</span><br><span class="line"><span class="keyword">\subsection</span>&#123;结果分析&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;结论&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;致谢&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\chapter</span>&#123;实验与结果分析&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;引言&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;实验方法&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;实验结果&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;数据&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;图表&#125;</span><br><span class="line"><span class="keyword">\subsubsection</span>&#123;实验条件&#125;</span><br><span class="line"><span class="keyword">\subsubsection</span>&#123;实验过程&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;结果分析&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;结论&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;致谢&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/inocHgrFepOhaWk.png" alt="image-20220423093807202"></p><p><img src="https://s2.loli.net/2023/03/12/17fDhrBImVZRpPb.png" alt="image-20220423093737903"></p><p><img src="https://s2.loli.net/2023/03/12/3DrthUq1mQ4Jigf.png" alt="image-20220423093839745"></p><p><img src="https://s2.loli.net/2023/03/12/JtwoPlXAp7if26G.png" alt="image-20220423093914057"></p><p><img src="https://s2.loli.net/2023/03/12/VQSJtNbO6DL1dxU.png" alt="image-20220423093939903"></p><h2 id="3-Latex中的特殊字符">3 Latex中的特殊字符</h2><p>在Latex中，特殊字符使用如下：</p><ul><li>空行分段，多个空行等同一个</li><li>自动缩进，绝对不能使用空格代替</li><li>英文中多个空格处理为一个空格，中文中空格将被忽略</li><li>汉字与其他字符的间距会自动由XeLaTeX处理</li><li>禁止使用中文全角空格</li></ul><p>示例：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;ctex&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;xltxtra&#125; <span class="comment">% 提供了针对XeTeX的改进并且加入了XeTeXd的LOGO</span></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;texnames&#125; <span class="comment">% 一些LOGO</span></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;mflogo&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;空白符号&#125;</span><br><span class="line">Are you wiser than      others? ddefinitely no. in some ways. may it is true. What can you achieve?</span><br><span class="line"></span><br><span class="line">近年来，随着逆向工程      和三维重建技术in some ways.的发展和应用，获取现实世界中物体的三维数据的方法越来越多的关注和研究。</span><br><span class="line"></span><br><span class="line"><span class="comment">% 1em（）当前字体中M的宽度</span></span><br><span class="line">a<span class="keyword">\quad</span> b</span><br><span class="line"><span class="comment">% 2em</span></span><br><span class="line"></span><br><span class="line">a<span class="keyword">\qquad</span> b</span><br><span class="line"></span><br><span class="line"><span class="comment">% 约为1/6个em</span></span><br><span class="line">a<span class="keyword">\,</span>b </span><br><span class="line"></span><br><span class="line">a<span class="keyword">\thinspace</span> b</span><br><span class="line"></span><br><span class="line"> 0.5个em：</span><br><span class="line"> </span><br><span class="line">a<span class="keyword">\enspace</span> b</span><br><span class="line"></span><br><span class="line">空格：</span><br><span class="line"></span><br><span class="line">a<span class="keyword">\ </span>b</span><br><span class="line"></span><br><span class="line">硬空格：<span class="comment">% 也就是不能分割的空格</span></span><br><span class="line"></span><br><span class="line">a~b</span><br><span class="line"></span><br><span class="line">1pc=12pt=4.218mm</span><br><span class="line"></span><br><span class="line">a<span class="keyword">\kern</span> 1pc b</span><br><span class="line"></span><br><span class="line">-1em:</span><br><span class="line"></span><br><span class="line">a<span class="keyword">\kern</span> -1em b</span><br><span class="line"></span><br><span class="line">a<span class="keyword">\kern</span> 1em b</span><br><span class="line"></span><br><span class="line">a<span class="keyword">\hspace</span>&#123;35pt&#125;b</span><br><span class="line"></span><br><span class="line">占位高度</span><br><span class="line"></span><br><span class="line">a<span class="keyword">\hphantom</span>&#123;xyzttt&#125;b  <span class="comment">%和输入框中的占用宽度相同</span></span><br><span class="line"></span><br><span class="line">弹性长度</span><br><span class="line"></span><br><span class="line">ddddddddda<span class="keyword">\hfill</span> b</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;<span class="keyword">\LaTeX</span> 控制符&#125;</span><br><span class="line"><span class="keyword">\#</span> <span class="keyword">\$</span> <span class="keyword">\&#123;</span> <span class="keyword">\&#125;</span>  </span><br><span class="line"></span><br><span class="line"><span class="keyword">\~</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\_</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\^</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\textbackslash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\&amp;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;排版符号&#125;</span><br><span class="line"><span class="keyword">\S</span> <span class="keyword">\P</span> <span class="keyword">\dag</span>  <span class="keyword">\ddag</span>   </span><br><span class="line"></span><br><span class="line"><span class="keyword">\copyright</span>  <span class="keyword">\pounds</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;<span class="keyword">\TeX</span> 标志符号&#125;</span><br><span class="line"><span class="comment">% 基本符号</span></span><br><span class="line"><span class="keyword">\TeX</span>&#123;&#125;  <span class="keyword">\LaTeX</span>&#123;&#125; <span class="keyword">\LaTeXe</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\XeLaTeX</span> <span class="comment">%xltxtra宏包提供</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%texnames宏包提供</span></span><br><span class="line"><span class="keyword">\AmSTeX</span>&#123;&#125; <span class="keyword">\AmS</span>-<span class="keyword">\LaTeX</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\BibTeX</span>&#123;&#125; <span class="keyword">\LuaLaTeX</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%mflog宏包提供</span></span><br><span class="line"><span class="keyword">\METAFONT</span>&#123;&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">\MF</span>&#123;&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">\MP</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;引号&#125;</span><br><span class="line">单引号 <span class="keyword">\quad</span> ` &#x27; </span><br><span class="line"></span><br><span class="line">双引号 <span class="keyword">\quad</span> `` &#x27;&#x27;</span><br><span class="line"><span class="keyword">\section</span>&#123;连字符&#125;</span><br><span class="line">-<span class="keyword">\quad</span> -- <span class="keyword">\quad</span> ---</span><br><span class="line"><span class="keyword">\section</span>&#123;非英文字符&#125;</span><br><span class="line"><span class="keyword">\oe</span> <span class="keyword">\quad</span> <span class="keyword">\OE</span> <span class="keyword">\quad</span> <span class="keyword">\ae</span> <span class="keyword">\quad</span> <span class="keyword">\AE</span> <span class="keyword">\quad</span> <span class="keyword">\aa</span> <span class="keyword">\quad</span> <span class="keyword">\AA</span> <span class="keyword">\quad</span> <span class="keyword">\o</span> <span class="keyword">\quad</span> </span><br><span class="line"><span class="keyword">\O</span> <span class="keyword">\quad</span> <span class="keyword">\l</span> <span class="keyword">\quad</span> <span class="keyword">\L</span> <span class="keyword">\quad</span> <span class="keyword">\ss</span> <span class="keyword">\quad</span> <span class="keyword">\SS</span> <span class="keyword">\quad</span> !` <span class="keyword">\quad</span> ?`</span><br><span class="line"><span class="keyword">\section</span>&#123;重音字符(以o为例)&#125;</span><br><span class="line"><span class="keyword">\`</span>o <span class="keyword">\quad</span> <span class="keyword">\&#x27;</span>o <span class="keyword">\quad</span> <span class="keyword">\^</span>o <span class="keyword">\quad</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">\&#x27;</span>&#x27;o <span class="keyword">\quad</span> <span class="keyword">\~</span>o <span class="keyword">\quad</span> <span class="keyword">\=</span>o <span class="keyword">\quad</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">\.</span>o <span class="keyword">\quad</span> <span class="keyword">\u</span>&#123;o&#125; <span class="keyword">\quad</span> <span class="keyword">\v</span>&#123;o&#125; <span class="keyword">\quad</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">\H</span>&#123;o&#125; <span class="keyword">\quad</span> <span class="keyword">\r</span>&#123;o&#125; <span class="keyword">\quad</span> <span class="keyword">\t</span>&#123;o&#125; <span class="keyword">\quad</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">\b</span>&#123;o&#125; <span class="keyword">\quad</span> <span class="keyword">\c</span>&#123;o&#125; <span class="keyword">\quad</span> <span class="keyword">\d</span>&#123;o&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/9unkZOhQbp2jeg3.png" alt="document_1"></p><p><img src="https://s2.loli.net/2023/03/12/t7wpo3iREF2S6aW.png" alt="document_2"></p><p><img src="https://s2.loli.net/2023/03/12/vgxMwJ8GhBrmuDp.png" alt="document_3"></p><h2 id="4-Latex中的插图">4 Latex中的插图</h2><p>导言区：<code>\usepackage&#123;graphicx&#125;</code></p><p>语法：<code>\includegraphics[&lt;选项&gt;]&#123;&lt;文件名&gt;&#125;</code></p><p>格式：<code>EPS,PDF,PEG,JPEG,BMP</code></p><p>示例：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">%usepackage&#123;ctex&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%导言区：\usepackage&#123;graphicx&#125;</span></span><br><span class="line"><span class="comment">%语法：\includegraphics[&lt;选项&gt;]&#123;&lt;文件名&gt;&#125;</span></span><br><span class="line"><span class="comment">%格式：EPS,PDF,PEG,JPEG,BMP</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%\usepackage&#123;graphics&#125;</span></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"><span class="keyword">\graphicspath</span>&#123;&#123;figures/&#125;,&#123;pics/&#125;&#125; <span class="comment">%图片在当前目录下的 figures 目录，图片可以放在多个目录中用&#123;&#125;包含进来</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\LaTeX</span>&#123;&#125;中的插图：</span><br><span class="line"></span><br><span class="line"><span class="keyword">\includegraphics</span>&#123;new&#125; <span class="comment">% 可以加入文件后缀名，也可以不加</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\includegraphics</span>&#123;baa.bmp&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\includegraphics</span>[scale=0.3]&#123;new&#125;</span><br><span class="line"><span class="keyword">\includegraphics</span>[scale=0.3]&#123;baa.bmp&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\includegraphics</span>[height=2cm]&#123;new&#125;</span><br><span class="line"><span class="keyword">\includegraphics</span>[height=2cm]&#123;baa.bmp&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\includegraphics</span>[width=2cm]&#123;new&#125;</span><br><span class="line"><span class="keyword">\includegraphics</span>[width=2cm]&#123;baa.bmp&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\includegraphics</span>[height=0.1<span class="keyword">\textheight</span>]&#123;new&#125;</span><br><span class="line"><span class="keyword">\includegraphics</span>[height=0.1<span class="keyword">\textheight</span>]&#123;baa.bmp&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\includegraphics</span>[width=0.2<span class="keyword">\textheight</span>]&#123;new&#125;</span><br><span class="line"><span class="keyword">\includegraphics</span>[width=0.2<span class="keyword">\textheight</span>]&#123;baa.bmp&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\includegraphics</span>[angle=-45,width=0.2<span class="keyword">\textwidth</span>]&#123;baa&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/zRdMEYIViUbJxC9.png" alt="image-20220423150611435"></p><p><img src="https://s2.loli.net/2023/03/12/X8FGkgCyfUqP5oW.png" alt="image-20220423150638099"></p><h2 id="5-Latex中添加表格">5 Latex中添加表格</h2><p>Latex中插入表格方式：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;[&lt;垂直对齐方式&gt;]&#123;&lt;列格式说明&gt;&#125;</span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">&lt;表项&gt; <span class="built_in">&amp;</span> &lt;表项&gt; <span class="built_in">&amp;</span> ... <span class="built_in">&amp;</span> &lt;表项&gt; <span class="built_in">&amp;</span> &lt;表项&gt; <span class="keyword">\\</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br></pre></td></tr></table></figure><p>用<code>\\</code>表示换行，用<code>&amp;</code>表示不同的列</p><p><code>l</code>—本列左对齐，<code>c</code>—本列居中对齐，<code>r</code>—本列右对齐，<code>p&#123;&lt;宽&gt;&#125;</code>—本列宽度固定，能够自动换行</p><p>可以在cmd中输入<code>texdoc booktab</code>或<code>texdoc longtab</code>或<code>texdoc tabu</code>等命令查看表格对应的文档。</p><p>示例：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125; <span class="comment">% ctexbook,ctexrep</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%usepackage&#123;ctex&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;&#123;| l || c | c | c | r |&#125;</span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">姓名 <span class="built_in">&amp;</span> 语文 <span class="built_in">&amp;</span> 数学 <span class="built_in">&amp;</span> 外语 <span class="built_in">&amp;</span> 备注<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span> <span class="keyword">\hline</span></span><br><span class="line">张三 <span class="built_in">&amp;</span> 87 <span class="built_in">&amp;</span> 100 <span class="built_in">&amp;</span> 93 <span class="built_in">&amp;</span> 优秀<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">李四 <span class="built_in">&amp;</span> 75 <span class="built_in">&amp;</span> 64 <span class="built_in">&amp;</span> 53 <span class="built_in">&amp;</span> 补考<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">王二 <span class="built_in">&amp;</span> 80 <span class="built_in">&amp;</span> 82 <span class="built_in">&amp;</span> 78 <span class="built_in">&amp;</span><span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;&#123;| l || c | c | c | p&#123;1.5cm&#125; |&#125; <span class="comment">% 可以通过p来设置列宽</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">姓名 <span class="built_in">&amp;</span> 语文 <span class="built_in">&amp;</span> 数学 <span class="built_in">&amp;</span> 外语 <span class="built_in">&amp;</span> 备注<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span> <span class="keyword">\hline</span></span><br><span class="line">张三 <span class="built_in">&amp;</span> 87 <span class="built_in">&amp;</span> 100 <span class="built_in">&amp;</span> 93 <span class="built_in">&amp;</span> 优秀<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">李四 <span class="built_in">&amp;</span> 75 <span class="built_in">&amp;</span> 64 <span class="built_in">&amp;</span> 53 <span class="built_in">&amp;</span> 补考另行通知<span class="keyword">\\</span> <span class="comment">%当字数超过规定的列宽时，会自动换行</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">王二 <span class="built_in">&amp;</span> 80 <span class="built_in">&amp;</span> 82 <span class="built_in">&amp;</span> 78 <span class="built_in">&amp;</span><span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/qM2uT1U8EzypWIC.png" alt="image-20220423161146330"></p><h2 id="6-Latex中的浮动体">6 Latex中的浮动体</h2><p>利用浮动体可以实现灵活分页（避免无法分割的内容产生的页面留白），给图表添加标题，交叉引用</p><p>语法：figure环境（table环境与之类似）</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[&lt;允许位置&gt;]</span><br><span class="line">&lt; 任意内容 &gt;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br></pre></td></tr></table></figure><p><code>&lt;允许位置&gt;</code>参数（默认tbp）</p><ul><li>h，此处（here）— 代码所在的上下文位置</li><li>t，页顶（top）— 代码所在页面或之后页面的顶部</li><li>b，页底（bottom）— 代码所在页面或之后页面的底部</li><li>p，独立一页（page）— 浮动页面</li></ul><p>标题控制（caption、bicaption等宏包）</p><p>并排与子图表（subcaption、subfig、floatrow等宏包）</p><p>绕排（picinpar、wrapfig等宏包）</p><p>示例：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%导言区</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"><span class="comment">%\usepackage&#123;graphics&#125;</span></span><br><span class="line"><span class="keyword">\graphicspath</span>&#123;&#123;figures/&#125;,&#123;pics/&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="comment">%有figure浮动体环境</span></span><br><span class="line"><span class="keyword">\LaTeX</span>&#123;&#125;中<span class="keyword">\TeX</span> 系统的吉祥物---小狮子见图<span class="keyword">\ref</span>&#123;fig-lion&#125;:<span class="comment">%通过标签的方式实现引用</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[htbp] <span class="comment">%将该部分内容排在合适的位置</span></span><br><span class="line"><span class="keyword">\centering</span> <span class="comment">%通过此命令将环境中的内容居中排版，该排版只影响环境中的内容</span></span><br><span class="line"><span class="keyword">\includegraphics</span>[scale=1]&#123;baa&#125;</span><br><span class="line"><span class="keyword">\caption</span>&#123;<span class="keyword">\TeX</span> 系统的吉祥物---小狮子&#125;<span class="keyword">\label</span>&#123;fig-lion&#125; <span class="comment">%该插图被自动进行了编号,可以对图片打标签从而进行实现引用</span></span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">walle是电影机器人总动员中的主角，见图<span class="keyword">\ref</span>&#123;fig-ba&#125;:</span><br><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[htbp]</span><br><span class="line"><span class="keyword">\centering</span></span><br><span class="line"><span class="keyword">\includegraphics</span>[scale=0.5]&#123;ba&#125;</span><br><span class="line"><span class="keyword">\caption</span>&#123;walle&#125;<span class="keyword">\label</span>&#123;fig-ba&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在<span class="keyword">\LaTeX</span>&#123;&#125;中的表格中使用表格<span class="keyword">\ref</span>&#123;table-score&#125;所示的表格：</span><br><span class="line"><span class="keyword">\begin</span>&#123;table&#125;[h]</span><br><span class="line"><span class="keyword">\centering</span></span><br><span class="line"><span class="keyword">\caption</span>&#123;考试成绩单&#125;<span class="keyword">\label</span>&#123;table-score&#125; <span class="comment">%表格也被进行自动编号，和插图编号相互独立</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;&#123;|l|c|c|c|r|&#125;</span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">姓名 <span class="built_in">&amp;</span> 语文 <span class="built_in">&amp;</span> 数学 <span class="built_in">&amp;</span> 外语 <span class="built_in">&amp;</span> 备注<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span> <span class="keyword">\hline</span></span><br><span class="line">张三 <span class="built_in">&amp;</span> 87 <span class="built_in">&amp;</span> 100 <span class="built_in">&amp;</span> 93 <span class="built_in">&amp;</span> 优秀<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">李四 <span class="built_in">&amp;</span> 75 <span class="built_in">&amp;</span> 64 <span class="built_in">&amp;</span> 53 <span class="built_in">&amp;</span> 补考<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">王二 <span class="built_in">&amp;</span> 80 <span class="built_in">&amp;</span> 82 <span class="built_in">&amp;</span> 78 <span class="built_in">&amp;</span><span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;table&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/wlx5qCodUIQAZPR.png" alt="document_1"></p><p><img src="https://s2.loli.net/2023/03/12/AaonBwl16cz7jUJ.png" alt="document_2"></p><h2 id="7-Latex数学公式初步">7 Latex数学公式初步</h2><p>Latex中公式的使用方式见示例：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;amsmath&#125; <span class="comment">%带*号的equation需要用到此宏包</span></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;lmodern&#125;</span><br><span class="line"><span class="comment">% 正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;简介&#125;</span><br><span class="line"><span class="keyword">\LaTeX</span>&#123;&#125;将排版内容分为文本模式和数学模式，文本模式用于普通文本排版，数学模式用于数学公式排版。</span><br><span class="line"><span class="keyword">\section</span>&#123;行内公式&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;美元符号&#125;</span><br><span class="line">交换律是<span class="built_in">$</span>a+b=b+a<span class="built_in">$</span>,如<span class="built_in">$</span>1+2=2+1<span class="built_in">$</span>。</span><br><span class="line"><span class="keyword">\subsection</span>&#123;小括号&#125;</span><br><span class="line">交换律是<span class="keyword">\(</span>a+b=b+a<span class="keyword">\)</span>,如<span class="keyword">\(</span>1+2=2+1<span class="keyword">\)</span>。</span><br><span class="line"><span class="keyword">\subsection</span>&#123;math环境&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;math&#125;</span><br><span class="line">1+2=2+1=3</span><br><span class="line"><span class="keyword">\end</span>&#123;math&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;上下标&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;上标&#125;</span><br><span class="line"><span class="built_in">$</span>3x<span class="built_in">^</span>&#123;20&#125; + 2x<span class="built_in">^</span>2 - x + 2 =0<span class="built_in">$</span> <span class="comment">%使用&#123;&#125;里面的内容为上标内容</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span>3x<span class="built_in">^</span>&#123;3x<span class="built_in">^</span>&#123;20&#125; + 2x<span class="built_in">^</span>2 - x + 2&#125; + 2x<span class="built_in">^</span>2 - x + 2 =0<span class="built_in">$</span></span><br><span class="line"><span class="keyword">\subsection</span>&#123;下标&#125;</span><br><span class="line"><span class="built_in">$</span>a<span class="built_in">_</span>0, a<span class="built_in">_</span>1, a<span class="built_in">_</span>2, ... ,a<span class="built_in">_</span>&#123;100&#125;,a<span class="built_in">_</span>&#123;2x<span class="built_in">^</span>2 - x + 2&#125;<span class="built_in">$</span></span><br><span class="line"><span class="keyword">\subsection</span>&#123;希腊字母&#125;</span><br><span class="line"><span class="built_in">$</span><span class="keyword">\alpha</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\beta</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\gamma</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\epsilon</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\pi</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\omega</span><span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\Gamma</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\Delta</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\Theta</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\Pi</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\Omega</span><span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\alpha</span><span class="built_in">^</span>3 + <span class="keyword">\beta</span><span class="built_in">^</span>2 +<span class="keyword">\gamma</span> = 0<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;数学函数&#125;</span><br><span class="line"><span class="built_in">$</span><span class="keyword">\log</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\sin</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\cos</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\arcsin</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\arccos</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\ln</span><span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\sin</span><span class="built_in">^</span>2 x + <span class="keyword">\cos</span><span class="built_in">^</span>2 x = 1<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span>y = <span class="keyword">\arcsin</span> x<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span>y = <span class="keyword">\sin</span><span class="built_in">^</span>&#123;-1&#125; x<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span>y = <span class="keyword">\log</span><span class="built_in">_</span>2 x<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span>y = <span class="keyword">\ln</span> x<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\sqrt</span>&#123;2&#125;<span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\sqrt</span>&#123;x<span class="built_in">^</span>2 + y<span class="built_in">^</span>2&#125;<span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span>2<span class="keyword">\sqrt</span>&#123;2 + <span class="keyword">\sqrt</span>&#123;2&#125;&#125;<span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\sqrt</span>[4]&#123;x&#125;<span class="built_in">$</span></span><br><span class="line"><span class="keyword">\section</span>&#123;分式&#125;</span><br><span class="line">大约是原体积的<span class="built_in">$</span>3/4<span class="built_in">$</span>。</span><br><span class="line">大约是原体积的<span class="built_in">$</span><span class="keyword">\frac</span>&#123;3&#125;&#123;4&#125;<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\frac</span>&#123;x&#125;&#123;x<span class="built_in">^</span>2 + x + 1&#125;<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\frac</span>&#123;<span class="keyword">\sqrt</span>&#123;x-1&#125;&#125;&#123;<span class="keyword">\sqrt</span>&#123;x+1&#125;&#125;<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\frac</span>&#123;1&#125;&#123;1 + <span class="keyword">\frac</span>&#123;1&#125;&#123;x&#125;&#125;<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span><span class="keyword">\sqrt</span>&#123;<span class="keyword">\frac</span>&#123;x&#125;&#123;x<span class="built_in">^</span>2 + x + 1&#125;&#125;<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;行间公式&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;美元符号&#125;</span><br><span class="line">交换律是 </span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span>a+b=b+a<span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line">如 </span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span>1+2=2+1=3<span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\subsection</span>&#123;中括号&#125;</span><br><span class="line">交换律是</span><br><span class="line"><span class="keyword">\[</span>a+b=b+a<span class="keyword">\]</span></span><br><span class="line">如</span><br><span class="line"><span class="keyword">\[</span>1+2=2+1=3<span class="keyword">\]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\subsection</span>&#123;displaymath环境&#125;</span><br><span class="line">交换律是</span><br><span class="line"><span class="keyword">\begin</span>&#123;displaymath&#125;</span><br><span class="line">a+b=b+a</span><br><span class="line"><span class="keyword">\end</span>&#123;displaymath&#125;</span><br><span class="line">如</span><br><span class="line"><span class="keyword">\begin</span>&#123;displaymath&#125;</span><br><span class="line">1+2=2+1=3</span><br><span class="line"><span class="keyword">\end</span>&#123;displaymath&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\subsection</span>&#123;自动编号公式equation环境&#125;</span><br><span class="line">交换律见式 <span class="keyword">\ref</span>&#123;eq:commutative&#125;：</span><br><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">a+b=b+a <span class="keyword">\label</span>&#123;eq:commutative&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\subsection</span>&#123;不编号公式equation*环境&#125;</span><br><span class="line">交换律见式 <span class="keyword">\ref</span>&#123;eq:commutative2&#125;：<span class="comment">%此时交叉引用的编号是小节编号</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;equation*&#125;</span><br><span class="line">a+b=b+a <span class="keyword">\label</span>&#123;eq:commutative2&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation*&#125;</span><br><span class="line"></span><br><span class="line">公式的编号与交叉引用也是自动实现的，大家在排版中要习惯于采用自动化的方式处理诸如图、表、公式的编号与交叉引用。再如公式<span class="keyword">\ref</span>&#123;eq:pol&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">x<span class="built_in">^</span>5 - 7x<span class="built_in">^</span>3 + 4x = 0 <span class="keyword">\label</span>&#123;eq:pol&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/Ge7YfI96MnmSkaA.png" alt="document_1"></p><p><img src="https://s2.loli.net/2023/03/12/q21IPoYFtEy7lwe.png" alt="document_2"></p><p><img src="https://s2.loli.net/2023/03/12/Ud3Cw5cxP9lSJvK.png" alt="document_3"></p><h2 id="8-Latex数学公式的矩阵">8 Latex数学公式的矩阵</h2><p>用Latex排版复杂数学公式的矩阵如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;amsmath&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;lmodern&#125;</span><br><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\adots</span>&#125;&#123;<span class="keyword">\mathinner</span>&#123;<span class="keyword">\mkern</span>2mu<span class="comment">%</span></span><br><span class="line"><span class="keyword">\raisebox</span>&#123;0.1em&#125;&#123;.&#125;<span class="keyword">\mkern</span>2mu<span class="keyword">\raisebox</span>&#123;0.4em&#125;&#123;.&#125;<span class="comment">%</span></span><br><span class="line">    <span class="keyword">\mkern</span>2mu<span class="keyword">\raisebox</span>&#123;0.7em&#125;&#123;.&#125;<span class="keyword">\mkern</span>1mu&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\[</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;matrix&#125;</span><br><span class="line">0 <span class="built_in">&amp;</span> 1<span class="keyword">\\</span></span><br><span class="line">1 <span class="built_in">&amp;</span> 0</span><br><span class="line"><span class="keyword">\end</span>&#123;matrix&#125;<span class="keyword">\qquad</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;vmatrix&#125;</span><br><span class="line">i <span class="built_in">&amp;</span> v <span class="keyword">\\</span></span><br><span class="line">0 <span class="built_in">&amp;</span> -i</span><br><span class="line"><span class="keyword">\end</span>&#123;vmatrix&#125;<span class="keyword">\qquad</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;Vmatrix&#125;</span><br><span class="line">i <span class="built_in">&amp;</span> V <span class="keyword">\\</span></span><br><span class="line">0 <span class="built_in">&amp;</span> -i</span><br><span class="line"><span class="keyword">\end</span>&#123;Vmatrix&#125;<span class="keyword">\qquad</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;pmatrix&#125;</span><br><span class="line">i <span class="built_in">&amp;</span> p <span class="keyword">\\</span></span><br><span class="line">0 <span class="built_in">&amp;</span> -i</span><br><span class="line"><span class="keyword">\end</span>&#123;pmatrix&#125;<span class="keyword">\qquad</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;bmatrix&#125;</span><br><span class="line">i <span class="built_in">&amp;</span> b <span class="keyword">\\</span></span><br><span class="line">0 <span class="built_in">&amp;</span> -i</span><br><span class="line"><span class="keyword">\end</span>&#123;bmatrix&#125;<span class="keyword">\qquad</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;Bmatrix&#125;</span><br><span class="line">i <span class="built_in">&amp;</span> B <span class="keyword">\\</span></span><br><span class="line">0 <span class="built_in">&amp;</span> -i</span><br><span class="line"><span class="keyword">\end</span>&#123;Bmatrix&#125;<span class="keyword">\qquad</span></span><br><span class="line"><span class="keyword">\]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 可以使用上下标</span></span><br><span class="line"><span class="keyword">\[</span></span><br><span class="line">A = </span><br><span class="line"><span class="keyword">\begin</span>&#123;pmatrix&#125;</span><br><span class="line">a<span class="built_in">_</span>&#123;11&#125;<span class="built_in">^</span>2 <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;12&#125;<span class="built_in">^</span>2 <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;13&#125;<span class="built_in">^</span>2 <span class="keyword">\\</span></span><br><span class="line">0 <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;22&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;23&#125; <span class="keyword">\\</span></span><br><span class="line">0 <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;33&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;pmatrix&#125;</span><br><span class="line"><span class="keyword">\]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 常用省略号：\dots、 \vdots、 \ddots</span></span><br><span class="line"><span class="keyword">\[</span></span><br><span class="line">A = <span class="keyword">\begin</span>&#123;bmatrix&#125;</span><br><span class="line">a<span class="built_in">_</span>&#123;11&#125; <span class="built_in">&amp;</span> <span class="keyword">\dots</span> <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;ln&#125; <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span> <span class="keyword">\ddots</span> <span class="built_in">&amp;</span> <span class="keyword">\vdots</span> <span class="keyword">\\</span></span><br><span class="line">0 <span class="built_in">&amp;</span> <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;nn&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;bmatrix&#125;<span class="built_in">_</span>&#123;n <span class="keyword">\times</span> n&#125; <span class="comment">% 在数学公式中可以用\times来排版 × 号</span></span><br><span class="line"><span class="keyword">\]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 常用省略号：\dots、 \vdots、 \ddots、 \adots(这个是自定义的一个命令，可以通过newcommand来新建一个格式)</span></span><br><span class="line"><span class="keyword">\[</span></span><br><span class="line">A = <span class="keyword">\begin</span>&#123;bmatrix&#125;</span><br><span class="line">a<span class="built_in">_</span>&#123;11&#125; <span class="built_in">&amp;</span> <span class="keyword">\dots</span> <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;ln&#125; <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\adots</span> <span class="built_in">&amp;</span> <span class="keyword">\ddots</span> <span class="built_in">&amp;</span> <span class="keyword">\vdots</span> <span class="keyword">\\</span></span><br><span class="line">0 <span class="built_in">&amp;</span> <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;nn&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;bmatrix&#125;<span class="built_in">_</span>&#123;n <span class="keyword">\times</span> n&#125; <span class="comment">% 在数学公式中可以用\times来排版 × 号</span></span><br><span class="line"><span class="keyword">\]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 分块矩阵</span></span><br><span class="line"><span class="keyword">\[</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;pmatrix&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;matrix&#125; 1 <span class="built_in">&amp;</span> 0 <span class="keyword">\\</span> 0 <span class="built_in">&amp;</span> 1 <span class="keyword">\end</span>&#123;matrix&#125;</span><br><span class="line"><span class="built_in">&amp;</span> <span class="keyword">\text</span>&#123;<span class="keyword">\Large</span> 0&#125; <span class="keyword">\\</span>   <span class="comment">%此处的text将数学模式临时切换到文本模式</span></span><br><span class="line"><span class="keyword">\text</span>&#123;<span class="keyword">\Large</span> 0&#125; <span class="built_in">&amp;</span> <span class="keyword">\begin</span>&#123;matrix&#125;</span><br><span class="line">1<span class="built_in">&amp;</span>0<span class="keyword">\\</span>0<span class="built_in">&amp;</span>-1 <span class="keyword">\end</span>&#123;matrix&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;pmatrix&#125;</span><br><span class="line"><span class="keyword">\]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 三角矩阵</span></span><br><span class="line"><span class="keyword">\[</span><span class="keyword">\begin</span>&#123;pmatrix&#125;</span><br><span class="line">a<span class="built_in">_</span>&#123;11&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;12&#125; <span class="built_in">&amp;</span> <span class="keyword">\cdots</span> <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;ln&#125; <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;22&#125; <span class="built_in">&amp;</span> <span class="keyword">\cdots</span> <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;2n&#125; <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span>        <span class="built_in">&amp;</span> <span class="keyword">\ddots</span> <span class="built_in">&amp;</span> <span class="keyword">\vdots</span> <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\multicolumn</span>&#123;2&#125;&#123;c&#125;&#123;<span class="keyword">\raisebox</span>&#123;1.3ex&#125;[0pt]&#123;<span class="keyword">\Huge</span> 0&#125;&#125; <span class="built_in">&amp;</span>  <span class="built_in">&amp;</span>a<span class="built_in">_</span>&#123;nn&#125; <span class="comment">% 通过multicolumn来合并多列，通过raisebox来调整高度</span></span><br><span class="line"><span class="keyword">\end</span>&#123;pmatrix&#125;</span><br><span class="line"><span class="keyword">\]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 跨列的省略号：\hdotsfor&#123;&lt;列数&gt;&#125;</span></span><br><span class="line"><span class="keyword">\[</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;pmatrix&#125;</span><br><span class="line">1 <span class="built_in">&amp;</span> <span class="keyword">\frac</span> 12 <span class="built_in">&amp;</span> <span class="keyword">\dots</span> <span class="built_in">&amp;</span> <span class="keyword">\frac</span> ln <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hdotsfor</span>&#123;4&#125; <span class="keyword">\\</span></span><br><span class="line">m <span class="built_in">&amp;</span> <span class="keyword">\frac</span> m2 <span class="built_in">&amp;</span> <span class="keyword">\dots</span> <span class="built_in">&amp;</span> <span class="keyword">\frac</span> mn</span><br><span class="line"><span class="keyword">\end</span>&#123;pmatrix&#125;</span><br><span class="line"><span class="keyword">\]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 行内小矩阵（smallmatrix）环境</span></span><br><span class="line">复数 <span class="built_in">$</span>z = (x,y)<span class="built_in">$</span>也可用矩阵</span><br><span class="line"><span class="keyword">\begin</span>&#123;math&#125;</span><br><span class="line"><span class="keyword">\left</span>(<span class="comment">% 需要手动加上左括号</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;smallmatrix&#125;</span><br><span class="line">x <span class="built_in">&amp;</span> -y <span class="keyword">\\</span> y <span class="built_in">&amp;</span> x</span><br><span class="line"><span class="keyword">\end</span>&#123;smallmatrix&#125;</span><br><span class="line"><span class="keyword">\right</span>)<span class="comment">% 需要手动加上右括号</span></span><br><span class="line"><span class="keyword">\end</span>&#123;math&#125;来表示。</span><br><span class="line"></span><br><span class="line"><span class="comment">% array环境（类似于表格环境tabular）</span></span><br><span class="line"><span class="keyword">\[</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;array&#125;&#123;r|r&#125;</span><br><span class="line"><span class="keyword">\frac</span>&#123;1&#125;&#123;2&#125; <span class="built_in">&amp;</span> 0<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">0 <span class="built_in">&amp;</span> -<span class="keyword">\frac</span> a&#123;bc&#125; <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;array&#125;</span><br><span class="line"><span class="keyword">\]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 用array环境构造复杂矩阵</span></span><br><span class="line"><span class="keyword">\[</span></span><br><span class="line"><span class="comment">% @&#123;&lt;内容&gt;&#125;-添加任意内容，不占表项计数</span></span><br><span class="line"><span class="comment">% 此处添加一个负值空白，表示向左移-5pt的距离</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;array&#125;&#123;c@&#123;<span class="keyword">\hspace</span>&#123;-5pt&#125;&#125;l&#125;</span><br><span class="line"><span class="comment">%第1行，第1列</span></span><br><span class="line"><span class="keyword">\left</span>(</span><br><span class="line"><span class="keyword">\begin</span>&#123;array&#125;&#123;ccc|ccc&#125;</span><br><span class="line">a <span class="built_in">&amp;</span> <span class="keyword">\cdots</span> <span class="built_in">&amp;</span> a <span class="built_in">&amp;</span> b <span class="built_in">&amp;</span><span class="keyword">\cdots</span> <span class="built_in">&amp;</span>b <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span> <span class="keyword">\ddots</span> <span class="built_in">&amp;</span> <span class="keyword">\vdots</span> <span class="built_in">&amp;</span> <span class="keyword">\vdots</span> <span class="built_in">&amp;</span> <span class="keyword">\adots</span> <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span> <span class="built_in">&amp;</span> a <span class="built_in">&amp;</span> b <span class="keyword">\\</span> <span class="keyword">\hline</span></span><br><span class="line"><span class="built_in">&amp;</span>  <span class="built_in">&amp;</span>   <span class="built_in">&amp;</span> c <span class="built_in">&amp;</span><span class="keyword">\cdots</span> <span class="built_in">&amp;</span> c <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span>  <span class="built_in">&amp;</span>   <span class="built_in">&amp;</span> <span class="keyword">\vdots</span> <span class="built_in">&amp;</span> <span class="built_in">&amp;</span><span class="keyword">\vdots</span> <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\multicolumn</span>&#123;3&#125;&#123;c|&#125;&#123;<span class="keyword">\raisebox</span>&#123;2ex&#125;[0pt]&#123;<span class="keyword">\Huge</span> 0&#125;&#125;</span><br><span class="line"><span class="built_in">&amp;</span> c <span class="built_in">&amp;</span> <span class="keyword">\cdots</span> <span class="built_in">&amp;</span> c</span><br><span class="line"><span class="keyword">\end</span>&#123;array&#125;</span><br><span class="line"><span class="keyword">\right</span>)</span><br><span class="line"><span class="built_in">&amp;</span></span><br><span class="line"><span class="comment">% 第1行第2列</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;array&#125;&#123;l&#125;</span><br><span class="line"><span class="comment">%\left.仅表示与\right\&#125;配对，什么都不输出</span></span><br><span class="line"><span class="keyword">\left</span>.<span class="keyword">\rule</span>&#123;0mm&#125;&#123;7mm&#125;<span class="keyword">\right</span><span class="keyword">\&#125;</span>p<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\left</span>.<span class="keyword">\rule</span>&#123;0mm&#125;&#123;7mm&#125;<span class="keyword">\right</span><span class="keyword">\&#125;</span>q<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;array&#125;</span><br><span class="line"><span class="keyword">\\</span>[-5pt]</span><br><span class="line"><span class="comment">% 第2行，第1列</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;array&#125;&#123;cc&#125;</span><br><span class="line"><span class="keyword">\underbrace</span>&#123;<span class="keyword">\rule</span>&#123;17mm&#125;&#123;0mm&#125;&#125;<span class="built_in">_</span>m <span class="built_in">&amp;</span></span><br><span class="line"><span class="keyword">\underbrace</span>&#123;<span class="keyword">\rule</span>&#123;17mm&#125;&#123;0mm&#125;&#125;<span class="built_in">_</span>m</span><br><span class="line"><span class="keyword">\end</span>&#123;array&#125;</span><br><span class="line"><span class="built_in">&amp;</span> <span class="comment">% 第2行第2列</span></span><br><span class="line"><span class="keyword">\end</span>&#123;array&#125;</span><br><span class="line"><span class="keyword">\]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/dUWot4O6mgihDlp.png" alt="document_1"></p><p><img src="https://s2.loli.net/2023/03/12/XFO9WKqwIjTe6v2.png" alt="document_2"></p><h2 id="9-Latex中多行公式排版方法">9 Latex中多行公式排版方法</h2><p>针对多行公式排版问题，可以参考示例：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;amsmath&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;amssymb&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;gather&#125; <span class="comment">%可以使用gather实现多行公式排版</span></span><br><span class="line"><span class="comment">% gather 和 gather* 环境（可以使用\\换行）</span></span><br><span class="line"><span class="comment">% 带编号</span></span><br><span class="line">a + b = b + a <span class="keyword">\\</span></span><br><span class="line">ab ba</span><br><span class="line"><span class="keyword">\end</span>&#123;gather&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;gather*&#125;</span><br><span class="line">3 + 5 = 5 + 3 = 8 <span class="keyword">\\</span></span><br><span class="line">3 <span class="keyword">\times</span> 5 = 5 <span class="keyword">\times</span> 3</span><br><span class="line"><span class="keyword">\end</span>&#123;gather*&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 在\\前使用 \notag 阻止编号</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;gather&#125;</span><br><span class="line">3<span class="built_in">^</span>2 + 4<span class="built_in">^</span>2 = 5<span class="built_in">^</span>2 <span class="keyword">\notag</span> <span class="keyword">\\</span></span><br><span class="line">5<span class="built_in">^</span>2 + 12<span class="built_in">^</span>2 = 13<span class="built_in">^</span>2 <span class="keyword">\notag</span> <span class="keyword">\\</span></span><br><span class="line">a<span class="built_in">^</span>2 + b<span class="built_in">^</span>2 = c<span class="built_in">^</span>2</span><br><span class="line"><span class="keyword">\end</span>&#123;gather&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% align 和 align* 环境（用 &amp; 进行对齐）</span></span><br><span class="line"><span class="comment">% 带编号</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;align&#125;</span><br><span class="line">x <span class="built_in">&amp;</span>= t + <span class="keyword">\cos</span> t + 1 <span class="keyword">\\</span></span><br><span class="line">y <span class="built_in">&amp;</span>= 2<span class="keyword">\sin</span> t</span><br><span class="line"><span class="keyword">\end</span>&#123;align&#125;</span><br><span class="line"><span class="comment">% 不带编号</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;align*&#125;</span><br><span class="line">x <span class="built_in">&amp;</span>= t <span class="built_in">&amp;</span> x <span class="built_in">&amp;</span>= <span class="keyword">\cos</span> t <span class="built_in">&amp;</span> x <span class="built_in">&amp;</span>= t <span class="keyword">\\</span></span><br><span class="line">x <span class="built_in">&amp;</span>= 2t <span class="built_in">&amp;</span> x <span class="built_in">&amp;</span>= <span class="keyword">\sin</span>(t+1) <span class="built_in">&amp;</span> y <span class="built_in">&amp;</span>= <span class="keyword">\sin</span> t</span><br><span class="line"><span class="keyword">\end</span>&#123;align*&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% split 环境（对齐采用 align 环境的方式，编号在中间）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;split&#125;</span><br><span class="line"><span class="keyword">\cos</span> 2x <span class="built_in">&amp;</span>= <span class="keyword">\cos</span><span class="built_in">^</span>2 x - <span class="keyword">\sin</span><span class="built_in">^</span>2 x <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span>= 2<span class="keyword">\cos</span><span class="built_in">^</span>2 x - 1</span><br><span class="line"><span class="keyword">\end</span>&#123;split&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% case 环境</span></span><br><span class="line"><span class="comment">% 每行公式中使用 &amp; 分隔为两部分，通常表示值和后面的条件</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">D(x) = <span class="keyword">\begin</span>&#123;cases&#125; <span class="comment">% 数学公式中无法实现中文排版，需要\text切换到文本模式</span></span><br><span class="line">1, <span class="built_in">&amp;</span> <span class="keyword">\text</span>&#123;如果 &#125; x <span class="keyword">\in</span> <span class="keyword">\mathbb</span>&#123;Q&#125;; <span class="keyword">\\</span> <span class="comment">% \in 命令用于输出 属于 符号</span></span><br><span class="line">0, <span class="built_in">&amp;</span> <span class="keyword">\text</span>&#123;如果 &#125; x <span class="keyword">\in</span> <span class="keyword">\mathbb</span>&#123;R&#125;<span class="keyword">\setminus</span><span class="keyword">\mathbb</span>&#123;Q&#125;. <span class="comment">% \mathbb 用于输出花体字符，需要amssymb宏包支持</span></span><br><span class="line"><span class="keyword">\end</span>&#123;cases&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/DKQfANu5JhsEvxB.png" alt="document_1"></p><h2 id="10-Latex中的参考文献BibTeX">10 Latex中的参考文献BibTeX</h2><p>一次管理，一次使用<br>参考文献格式：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;thebibliography&#125;&#123;编号样本&#125;</span><br><span class="line"><span class="keyword">\bibitem</span>[记号]&#123;引用标志&#125;文献条目1</span><br><span class="line"><span class="keyword">\bibitem</span>[记号]&#123;引用标志&#125;文献条目2</span><br><span class="line">......</span><br><span class="line"><span class="keyword">\end</span>&#123;thebibliography&#125;</span><br></pre></td></tr></table></figure><p>其中文献条目包括：作者，题目，出版社，年代，页码等。<br>引用时候要可以采用：<code>\cite&#123;引用标志1，引用标志2，...&#125;</code></p><p>示例：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;natbib&#125;</span><br><span class="line"><span class="keyword">\bibliographystyle</span>&#123;plain&#125; <span class="comment">% plain unsrt alpha abbrv 选择采用不同的排版样式 需要清理样式文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="comment">%一次管理，一次使用</span></span><br><span class="line"><span class="comment">%参考文献格式：</span></span><br><span class="line"><span class="comment">%\begin&#123;thebibliography&#125;&#123;编号样本&#125;</span></span><br><span class="line"><span class="comment">%\bibitem[记号]&#123;引用标志&#125;文献条目1</span></span><br><span class="line"><span class="comment">%\bibitem[记号]&#123;引用标志&#125;文献条目2</span></span><br><span class="line"><span class="comment">%......</span></span><br><span class="line"><span class="comment">%\end&#123;thebibliography&#125;</span></span><br><span class="line"><span class="comment">%其中文献条目包括：作者，题目，出版社，年代，页码等。</span></span><br><span class="line"><span class="comment">%引用时候要可以采用：\cite&#123;引用标志1，引用标志2，...&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">引用一篇文章 <span class="keyword">\cite</span>&#123;bernd<span class="built_in">_</span>bullnheimer<span class="built_in">_</span>improved<span class="built_in">_</span>nodate&#125;</span><br><span class="line">引用另外一篇文章<span class="keyword">\cite</span>&#123;chengzhi<span class="built_in">_</span>qu<span class="built_in">_</span>novel<span class="built_in">_</span>2020&#125;</span><br><span class="line">引用第三篇文章<span class="keyword">\cite</span>&#123;haibin<span class="built_in">_</span>duan<span class="built_in">_</span>three-dimension<span class="built_in">_</span>2010&#125;</span><br><span class="line">引用另个一文献<span class="keyword">\cite</span>&#123;article4&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;thebibliography&#125;&#123;99&#125;</span><br><span class="line"><span class="keyword">\bibitem</span>&#123;article4&#125;陈立辉,苏伟,蔡川,陈晓云.<span class="keyword">\emph</span>&#123;基于LaTeX的Web数学公式提取方法研究&#125;[j].计算机科学. 2014(06)</span><br><span class="line"><span class="keyword">\end</span>&#123;thebibliography&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\bibliography</span>&#123;paper,newpapers&#125;</span><br><span class="line"><span class="keyword">\nocite</span>&#123;xianwei<span class="built_in">_</span>wang<span class="built_in">_</span>path<span class="built_in">_</span>2020&#125;  <span class="comment">% 可以使用 \nocite 插入未引用的特定的参考文献</span></span><br><span class="line"><span class="comment">%\nocite&#123;*&#125; % 该命令是排版未引用的所有文献。需要在 工具 选项中点击 清理辅助文件，然后重新运行即可看到排版的所有未引用的参考文献</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/bT7yzKoXa41SYDU.png" alt="document_1"></p><h2 id="11-Latex中的参考文献BibLaTeX">11 Latex中的参考文献BibLaTeX</h2><p>通过BibLaTeX来插入参考文献：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"><span class="comment">% biblatex/biber</span></span><br><span class="line"><span class="comment">% 新的TEX参考文献排版引擎</span></span><br><span class="line"><span class="comment">% 样式文件（）参考文献样式文件--bbx文件，引用样式文件--cbx）使用LATEX编写</span></span><br><span class="line"><span class="comment">% 支持根据本地化排版，如：</span></span><br><span class="line"><span class="comment">% biber -l zh_pinyin texfile, 用于指定按拼音排序</span></span><br><span class="line"><span class="comment">% biber -l zh_stroke texfile, 用于按笔画排序</span></span><br><span class="line"><span class="comment">%\usepackage[style=numeric,backend=biber]&#123;biblatex&#125;</span></span><br><span class="line"><span class="keyword">\usepackage</span>[style=caspervector,backend=biber,utf8,sorting=cenyt]&#123;biblatex&#125;</span><br><span class="line"><span class="comment">%sorting是将参考文献按照中英文姓名等进行排序，cenyt分别表示c为中文e为英文n为作者姓名t为文献标题y为出版年，也可以为ecnyt</span></span><br><span class="line"><span class="comment">%如果不需要进行sorting，则sorting=cenyt这句命令可以不用写</span></span><br><span class="line"><span class="keyword">\addbibresource</span>&#123;paper.bib&#125; <span class="comment">% 文件名 .bib 不能省略</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="comment">%一次管理多次使用</span></span><br><span class="line"></span><br><span class="line">无格式化引用<span class="keyword">\cite</span>&#123;bernd<span class="built_in">_</span>bullnheimer<span class="built_in">_</span>improved<span class="built_in">_</span>nodate&#125;</span><br><span class="line"></span><br><span class="line">带方括号的引用<span class="keyword">\parencite</span>&#123;<span class="built_in">_</span><span class="built_in">_</span>2020&#125;</span><br><span class="line"></span><br><span class="line">上标引用<span class="keyword">\supercite</span>&#123;fatin<span class="built_in">_</span>hassan<span class="built_in">_</span>ajeil<span class="built_in">_</span>grid-based<span class="built_in">_</span>2020&#125;</span><br><span class="line"></span><br><span class="line">又一篇文章<span class="keyword">\supercite</span>&#123;huchunyangGaiJinYiQunSuanFaZaiAGVLuJingGuiHuaZhongDeYingYong2020&#125;</span><br><span class="line"></span><br><span class="line">有一篇文章<span class="keyword">\supercite</span>&#123;NewRankBased&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">%\nocite&#123;*&#125; % 输出未引用的参考文献</span></span><br><span class="line"><span class="keyword">\printbibliography</span>  <span class="comment">% 输出参考文献列表</span></span><br><span class="line"><span class="comment">%\printbibliography[title=&#123;参考文献&#125;] % 可以通过此命令将 References 改为中文 参考文献</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/sSyR9wvznqeoMmX.png" alt="document_1"></p><p>也可以在文件夹下通过新建<code>build.bat</code>文件，并写入如下代码：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xelatex document</span><br><span class="line">biber -l zh__pinyin document</span><br><span class="line">xelatex document</span><br><span class="line">xelatex document</span><br><span class="line">del *.aux *.bbl *.bcf *.bcf *.blg *.log *.xml</span><br></pre></td></tr></table></figure><p>其中<code>document</code>和<code>document.tex</code>文件名相对应，且<code>.bat</code>文件和<code>.tex</code>文件放在同级目录下。并对TeXstudio的Biber进行更改如下：</p><p><img src="https://s2.loli.net/2023/03/12/chFMtElXQDSeidV.png" alt="image-20220424153250969"></p><p>然后双击执行，不需要用管理员来运行，用管理员运行会出错。</p><h2 id="12-Latex中的自定义命令和环境">12 Latex中的自定义命令和环境</h2><p>Latex中自定义命令和环境示例：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"><span class="comment">% \newcommand - 定义命令</span></span><br><span class="line"><span class="comment">% 命令只能由字母组成，不能以\end开头</span></span><br><span class="line"><span class="comment">% \newcommand&lt;命令&gt;[&lt;参数个数&gt;][&lt;首参数默认值&gt;]&#123;&lt;具体定义&gt;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \newcommand可以是简单字符串替换，例如：</span></span><br><span class="line"><span class="comment">% 使用\RPC相当于People&#x27;s Republic of\emph&#123;China&#125;这一串内容</span></span><br><span class="line"><span class="keyword">\newcommand</span><span class="keyword">\PRC</span>&#123;People&#x27;s Republic of <span class="keyword">\emph</span>&#123;China&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% \newcommand也可以使用参数</span></span><br><span class="line"><span class="comment">% 参数个数可以从 1 到 9，使用时用 #1,#2,...,#9 表示</span></span><br><span class="line"><span class="keyword">\newcommand</span><span class="keyword">\loves</span>[2]&#123;<span class="params">#1</span> 喜欢 <span class="params">#2</span>&#125;</span><br><span class="line"><span class="keyword">\newcommand</span><span class="keyword">\hatedby</span>[2]&#123;<span class="params">#2</span> 不受 <span class="params">#1</span> 喜欢&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% \newcommand的参数也可以由默认值</span></span><br><span class="line"><span class="comment">% 指定参数个数的同时指定了首个参数的默认值，那么这个命令的第一个参数就称为可选的参数（要使用中括号指定）</span></span><br><span class="line"><span class="keyword">\newcommand</span><span class="keyword">\love</span>[3][喜欢]&#123;<span class="params">#2</span><span class="params">#1</span><span class="params">#3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% \renewcommand - 重定义命令</span></span><br><span class="line"><span class="comment">% 与\newcommand 命令作用和用法相同，但只能用于已有命令</span></span><br><span class="line"><span class="comment">% \renewcommand&lt;命令&gt;[&lt;参数个数&gt;][&lt;首参数默认值&gt;]&#123;&lt;具体定义&gt;&#125;</span></span><br><span class="line"><span class="keyword">\renewcommand</span><span class="keyword">\abstractname</span>&#123;内容简介&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 定义和重定义环境</span></span><br><span class="line"><span class="comment">% \newenvironment&#123;&lt;环境名称&gt;&#125;[&lt;参数个数&gt;][&lt;首参数默认值&gt;]</span></span><br><span class="line"><span class="comment">% &#123;&lt;环境前定义&gt;&#125;</span></span><br><span class="line"><span class="comment">% &#123;&lt;环境后定义&gt;&#125;</span></span><br><span class="line"><span class="comment">% \renewenvironment&#123;&lt;环境名称&gt;&#125;[&lt;参数个数&gt;][&lt;首参数默认值&gt;]</span></span><br><span class="line"><span class="comment">% &#123;&lt;环境前定义&gt;&#125;</span></span><br><span class="line"><span class="comment">% &#123;&lt;环境后定义&gt;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 为 book 类中定义摘要 (abstract) 环境</span></span><br><span class="line"><span class="keyword">\newenvironment</span>&#123;myabstract&#125;[1][摘要]</span><br><span class="line">&#123;<span class="keyword">\small</span> <span class="comment">%设定字号</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;center&#125;<span class="keyword">\bfseries</span> <span class="params">#1</span><span class="keyword">\end</span>&#123;center&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;quotation&#125;&#125;</span><br><span class="line">&#123;<span class="keyword">\end</span>&#123;quotation&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 环境参数只有&lt;环境前定义&gt;中可以使用参数，</span></span><br><span class="line"><span class="comment">% &lt;环境后定义&gt;中不能再使用环境参数</span></span><br><span class="line"><span class="comment">% 如果需要，可以先把前面得到的参数保存在一个命令中，在后面使用：</span></span><br><span class="line"><span class="keyword">\newenvironment</span>&#123;Quotation&#125;[1]</span><br><span class="line">&#123;<span class="keyword">\newcommand</span><span class="keyword">\quotesource</span>&#123;<span class="params">#1</span>&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;quotation&#125;&#125;</span><br><span class="line">&#123;<span class="keyword">\par</span><span class="keyword">\hfill</span>--- 《<span class="keyword">\textit</span>&#123;<span class="keyword">\quotesource</span>&#125;》</span><br><span class="line"><span class="keyword">\end</span>&#123;quotation&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">%正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;abstract&#125;</span><br><span class="line">这是一段摘要</span><br><span class="line"><span class="keyword">\end</span>&#123;abstract&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\PRC</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\loves</span>&#123;猫&#125;&#123;鱼&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\hatedby</span>&#123;猫儿&#125;&#123;萝卜&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\love</span>&#123;猫儿&#125;&#123;鱼&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\love</span>&#123;最爱&#125;&#123;猫儿&#125;&#123;鱼&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;myabstract&#125;[我的摘要]  <span class="comment">%将 我的摘要 替换 摘要</span></span><br><span class="line">这是一段自定义格式的摘要...</span><br><span class="line"><span class="keyword">\end</span>&#123;myabstract&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;Quotation&#125;&#123;易<span class="built_in">$</span><span class="keyword">\cdot</span><span class="built_in">$</span>乾&#125;</span><br><span class="line">初九，潜龙勿用。</span><br><span class="line"><span class="keyword">\end</span>&#123;Quotation&#125;</span><br><span class="line"></span><br><span class="line">定义命令和环境是进行<span class="keyword">\LaTeX</span>&#123;&#125;格式定制、达成内容与格式分离目标的利器。使用自定义的命令和环境把字体、字号、缩进、对齐、间距等各种繁琐的内容包装起来，赋以一个有意义的名字，可以使文档结构清晰、代码整洁、易于维护。在使用宏定义功能时，要综合利用各种已有的命令、环境、变量等功能，事实上，前面所介绍的长度变量与盒子、字体字号等内容，大多并不直接出现在文档正文中，而主要都是用在实现各种结构化的宏定义中。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/ZUy3VvGRISpc514.png" alt="document_1"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 论文排版 </tag>
            
            <tag> Latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB常用命令</title>
      <link href="/2022/02/26/MATLAB/MATLAB%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/02/26/MATLAB/MATLAB%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1>MATLAB常用命令</h1><h2 id="1-常用命令">1 常用命令</h2><p>A</p><p>abs绝对值，模<br>acos反余弦<br>acosh反双曲余弦<br>acot反切<br>acoth反双曲余切<br>acsc反余割<br>acsch反双曲余割<br>all所有元素均非零则为真<br>alpha透明控制<br>angle相角<br>ans最新表达式的运算结<br>any有非零元则为真<br>area面域图<br>asec反正割<br>asech反双曲正割<br>asin反正弦<br>asinh反双曲正弦<br>atan反正切<br>atan2四象限反正切<br>atanh反双曲正切<br>autumn红、黄浓淡色<br>axis轴的刻度和表现</p><p>B</p><p>bar直方图<br>binocdf二项分布概率<br>binopdf二项分布累积概率<br>binornd产生二项分布随机数组<br>blanks空格符号<br>bode给出系统的对数频率曲线<br>bone蓝色调浓淡色阵<br>box坐标封闭开关<br>break终止最内循环<br>brighten控制色彩的明暗<br>butter ButterWorth低通滤波器</p><p>C</p><p>caxis（伪）颜色轴刻度<br>cd设置当前工作目录<br>cdf2rdf复数对角型转换到实块对角型<br>ceil朝正无穷大方向取整<br>cell创建单元数组<br>char创建字符串数组或者将其他类型变量转化为字符串数组<br>charfcn Maple函数<br>Children图形对象的子对象<br>clabel等高线标注<br>class判别数据类别<br>clc清除指窗中显示内容<br>clear从内存中清除变量和函数<br>cIf清除当前图形窗图形<br>close关闭图形窗<br>colect合井同类项<br>Color图形对象色彩属性<br>colorbar显示色条<br>colorcube三浓淡多彩交错色<br>colordef定义图形窗色彩<br>colormap设置色图<br>comet慧星状轨迹图<br>comet3三维彗星动态轨迹线图<br>compass射线图；主用于方向和速度<br>cond矩阵条件数<br>conj复数共轭<br>continue将控制转交给外层的for或while循环<br>contour等高线图<br>contourf填色等高线图<br>conv卷积和多项式相乘<br>cool青和品红浓淡色图<br>copper线性变化纯铜色调图<br>corrcoef相关系数<br>cos余弦<br>cosh双曲余弦<br>cot余切<br>coth双曲余切<br>cov协方差矩阵<br>csc余割<br>csch双曲余割<br>cumsum元素累计和<br>cumtrapz梯形法累计积分</p><p>D</p><p>dblquad二重（闭型）数值积分指令<br>deconv解卷和多项式相除<br>del2计算曲率<br>demos演示函数<br>det行列式的值<br>diag创建对角阵，抽取对角向量<br>diff求导数，差分和近似微分<br>digits控制符号数值的有效数字位数<br>dir列出目录清单<br>dirac单位冲激函数<br>disp显示矩阵和文字内容<br>disttool概率分布计算交互界面<br>doc列出指定工具包中所有函数名<br>docsearch进行多词条检索<br>double把符号常数转化为16位相对精度的浮点数值对象<br>drawnow刷新屏幕<br>dsolve求解符号常微分方程</p><p>E</p><p>edit矩阵编辑器，打开M文件<br>Eimaple指数积分<br>eig矩阵特征值和特征向量<br>end数组的最大下标，结束for while if语句<br>eps浮点相对误差<br>EraseMode图形对象属性<br>error显示错误信息<br>exit关闭MATLAB<br>exp指数<br>expand对指定项展开<br>expm矩阵指数<br>eye单位阵<br>ezcontour画等位线<br>ezcontourf画填色等位线<br>ezmesh画网线图<br>ezmeshc画带等位线的网线图<br>ezplot绘制符号表达式的二维图形<br>ezplot3画三维曲线<br>ezpolar画极坐标曲线<br>ezsurf画曲面图<br>ezsurfc画带等位线的曲面图</p><p>F</p><p>factor进行因式或因子分解<br>false按指定大小创建全0逻辑数组<br>feather从x轴出发的复数向量图，羽毛图<br>feval函数宏指令<br>fill多边形填色图<br>find寻找非数单下标标识<br>findsym确认表达式中自由符号变量<br>fix朝零方向取整<br>flag红-白-蓝-黑交错色图<br>fliplr矩阵的左右翻转<br>flipud矩阵的上下翻转<br>floor朝负无穷大方向取整<br>fminbnd非线性函数在某区间中极小值<br>fminsearch单纯形法求多元函数极值点指令<br>for（end）按规定次数重复执行语句<br>format设置数据输出格式<br>fourier Fourier变换<br>fsolve解非线性方程组的最简单格式<br>function函数文件头<br>functions观察函数句柄内涵<br>functionhandle函数句柄<br>funfun数值泛函函数和<br>ODE解算器<br>funm计算一般矩阵函数<br>fzero单变量函数的零点</p><p>G</p><p>gallery产生测试矩阵<br>gca获得当前轴的柄<br>gcf获得当前图的柄<br>general通用指令<br>get获得图柄<br>getframe获得影片动画图象的顿<br>ginput用鼠标在图上获取数据<br>global定义全局变量<br>gradient梯度<br>gray线性灰度<br>grid on/off画坐标网格线</p><p>H</p><p>heaviside 单位阶跃函数<br>help 在线帮助指令<br>helpbrowser 超文本文档帮助信息<br>helpdesk 超文本文档帮助信息<br>helpwin 打开在线帮助窗<br>hidden 网线图消隐开关<br>hist 统计频数直方图<br>histfit 带拟曲线的统计频数直方图<br>hold on/off 图形的保持<br>horner 转换成嵌套形式<br>hot 黑-红-黄-白交错色图<br>hsv饱和色彩图</p><p>i</p><p>i，j虚数单位<br>if end 条件执行语句<br>if-else-end程序分支控制<br>ifourierFourie反变换<br>ilaplaceLaplace变换<br>imag复数虚部<br>image图像<br>impulse给出系统的冲激响应<br>ind2sub据单下标换算出全下标<br>inf 或 Inf无穷大<br>inline创建内联函数<br>input提示键盘输入<br>int计算积分<br>int2str整数转换为字符串<br>inv矩阵的逆<br>invhilbHilber恒阵法求逆阵<br>isa判断指定变量类别<br>ischar若是字符串则为真<br>isempty若是空矩阵则为真<br>isfinite若是有限数则为真<br>isglobal若是全局变量则为真<br>ishandle是否图柄<br>isinf若是无穷大则为真<br>isletter串中是字母则为真<br>islogical若是逻辑数则为真<br>isnan若为非数则为真<br>isnumeric若是数值则为真<br>isolatemaple的特殊指令<br>isprime是否质数<br>isreal若是实数矩阵则为真<br>isspace串中是空格则为真<br>iztrans Z反变换</p><p>J</p><p>jacobian Jacobian矩阵<br>jet变异<br>HSV色图<br>jordan Jordan分解</p><p>K</p><p>keyboard键盘获得控制权</p><p>L</p><p>laplaceLaplace变换<br>legend形成图例说明<br>length确定数组长度<br>light灯光控制<br>lighting设置照明模式<br>limit求极限<br>line创建线对象<br>LineStyle图形线对象属性线型<br>LineWidth图形属性-线宽<br>linmod2从SIMULINK模型得到系统的状态方程<br>linspace线性等分向量<br>load从磁盘调入数据变量<br>Location图形对象属性-位置<br>log自然对数<br>log10常用对数<br>log2以2为底的对数<br>logical将数值转化为逻辑值<br>logspace对数等分向量<br>lookfor关键词检索</p><p>M</p><p>magic魔方阵<br>maple进入MAPLE工作空间计算<br>Marker图形对象属性点形状<br>MarkerEdge-Color图形对象属性-点边界色彩<br>MarkerFace-Color图形对象属性-点域色彩<br>MaekerSize图形对象属性-点大小<br>material对象材质<br>max最大值<br>md创建目录<br>mean平均值<br>mesh三维网线图<br>meshgrid用于三维曲面的分格线坐标<br>mfun对MAPLE中若干经典特殊函数的数值计算<br>mfunlistMAPL经典特殊函数列表<br>mhelp查阅Maple中的库函数及其调用方法<br>min最小值<br>minreal状态方程最小实现<br>mkdir创建目录<br>mod模数求余<br>more命令窗口分页输出的控制开关<br>movie播放影片动画<br>moviein影片动画内存初始化<br>mtaylorTaylor级数展开</p><p>N</p><p>NaN 或 nan非数<br>nargin函数输入最的个数<br>nargout函数输出量的个数<br>ndims数组的维数<br>norm矩阵或向量范数<br>normcdf正态分布累计概率<br>normpdf服从N分布的随机变量取值x的概率密度<br>normrnd产生服从N分布的随机数组<br>notebook创建或打开M-book文件<br>null零空间<br>num2str把数值转换为字符串<br>numden提取公因式</p><p>O</p><p>ode45高阶法解微分方程<br>ones全1数组<br>optimset<br>orth值空间</p><p>P</p><p>pack合并工作内存中的碎块<br>pascalPascal矩阵<br>path控制MATLAB的搜索路径<br>pathtool修改搜索路径<br>pause暂停<br>pcolor用颜色反映数据的伪色图<br>peaks产生peaks图形数据<br>PI3.1415926535897<br>pie饼形统计图<br>pink淡粉红色图阵<br>plot直角坐标下线性刻度线<br>plot3三维直角坐标曲线图<br>plotyy双纵坐标图<br>polar极坐标曲线图<br>poly特征多项式，由根创建多项式<br>poly2sym将多项式转换为符号多项式<br>polyfit多项式拟合<br>polyval求多项式的值<br>polyvalm求矩阵多项式的值<br>pow22的幂<br>pretty习惯方式显示<br>prism光谱色图阵<br>prod元素积</p><p>Q</p><p>quad低阶法数值积分<br>quadl高阶法数值积分<br>quit退出MATLAB<br>quiver二维箭头图；主用于场强、流向</p><p>R</p><p>rand均匀分布随机数组<br>randn正态分布随机数组<br>random产生各种分布随机数组<br>randsrc产生均布数组<br>rank秩<br>real复数实部<br>realmax最大浮点数<br>realmin最小正浮点数<br>rem求余数<br>repmat铺放模块数组<br>reshape矩阵变维<br>residue求部分分式表达<br>return返回<br>roots求多项式的根<br>rose频数扇形图；主用于统计<br>rot90矩阵逆时针旋转90度<br>rotate旋转指令<br>round四舍五入取整<br>rref转换为行阶梯形<br>save把内存变量存入磁盘</p><p>S</p><p>sec正割<br>sech双曲正割<br>set设置图形对象属性<br>shading图形泣染模式<br>shg显示图形窗<br>sign函数符号，符号函数<br>simple运用各种指令化简符号表达式<br>simplify恒等式简化<br>simulink打开SIMULINK集成环境<br>sin正弦<br>sinh双曲正弦<br>size确定数组大小<br>slice切片图<br>solve求解代数方程组<br>sphere产生球面数据<br>spinmap颜色周期性变化操纵<br>spring青、黄浓淡色<br>sgrt平方根<br>square轴属性为方型<br>ss产生状态方程LTI对象<br>stairs阶梯形曲线图<br>std标准差<br>stem杆图<br>stem3三维离散杆图<br>str2func创建函数句柄（punct）<br>strcmp比较字符串<br>String图形对象属性-字符串<br>subexpr运用符号变量置换子表达式<br>subplot创建子图<br>subs通用置换指令<br>sum元素和<br>summer绿、黄浓淡色图阵<br>surf三维表面图<br>surfc带等高线的三维表面图<br>switch-case多个条件分支<br>sym产生符号对象<br>syms定义基本符号对象<br>symsum符号序列的求和</p><p>T</p><p>tan正切<br>tanh双曲正切<br>taylorTaylor级数<br>text图形上文字标注<br>tf产生传递函数LTI对象<br>tfdata从对象中提取传递函数分子分母多项式系数<br>tic秒表起动<br>title图形名<br>toc秒表终止和显示<br>trace迹<br>trapz梯形数值积分<br>true按指定大小创建全1逻辑数组<br>triplequad三重（闭型）数值积分指令<br>type显示文件内容</p><p>V</p><p>Var求方差<br>versionMATLAB版本<br>view设定3-D图形观测点<br>vpa给出数值型符号结果</p><p>W</p><p>what列出当前目录上的MMAT、MEX文件<br>which确定指定文件所在的目录<br>whileend不确定次数重复执行语句<br>whitebg图形底色控制<br>who列出工作内存中的变量名<br>whos列出工作内存中的变量细节winter蓝、绿浓淡色</p><p>X</p><p>xlabelx轴名标注<br>xor异或</p><p>Y</p><p>Ycolor图形对象属性纵轴颜色<br>ylabelY轴名标注</p><p>Z</p><p>zeros全零矩阵<br>zlabelz轴名标注<br>zoom二维图形的变焦放大<br>ztransZ变换</p><h2 id="2-Simulink模块">2 Simulink模块</h2><p>Add求和模块<br>Breaker开关<br>Current Measurement电流测量器<br>Dc Voltage Source直流电压源<br>DiscreteFilter离散滤波器模块<br>Gain增益模块<br>In1输入端口模块<br>Integrator连续函数积分<br>Out1输出端口模块<br>Parallel RLC BranchRLC并联支路</p><p>Powergui</p><p>Product乘法器</p><p>Random SOURCE</p><p>Scope示波模块<br>Series RLC Branch RLCRLC联支路<br>Simulink SIMULINK基本库<br>Sine Wave正弦波输出<br>Step阶跃输出<br>Transfer Fcn传递函数模块<br>Voltage Measurement电压测量器</p><h2 id="3-MATLAB常用的基本数学函数">3 MATLAB常用的基本数学函数</h2><p>abs（x）：纯量的绝对值或向量的长度<br>angle（z）：复数z的相角（Phase angle）<br>sqrt（x）：开平方<br>real（z）：复数z的实部<br>imag（z）：复数z的虚部<br>conj（z）：复数z的共轭复数<br>round（x）：四舍五入至最近整数<br>fix（x）：无论正负，舍去小数至最近整数<br>floor（x）：地板函数，即舍去正小数至最近整数<br>ceil（x）：天花板函数，即加入正小数至最近整数<br>rat（x）：将实数x化为分数表示<br>rats（x）：将实数x化为多项分数展开<br>sign（x）：符号函数（Signum function）。当x&lt;0时，sign(x)= -1；当x=0时，sign(x)=0；当&gt;0时，sign(x)=1。<br>rem（x,y）：求x除以y的徐数<br>gcd（x,y）：整数×和的最大公因数<br>lcm（x,y）：整数x和y的最小公倍数<br>exp（x）：自然指数pow2（x）：2的指数<br>log（x）：以e为底的对数，即自然对数<br>log2（x）：以2为底的对数<br>log10（x）：以10为底的对数</p><h2 id="4-MATLAB常用的三角函数">4 MATLAB常用的三角函数</h2><p>sin（x）：正弦函数<br>COS（x）：余弦函数<br>tan（x）：正切函数<br>asin（x）：反正弦函数<br>acos（x）：反余弦函数<br>atan（x）：反正切函数<br>atan2（x,y）：四象限的反正切函数<br>sinh（x）：超越正弦函数<br>cosh（x）：超越徐弦函数<br>tanh（x）：超越正切函数<br>asinh（x）：反超越正弦函数<br>acosh（x）：反超越徐弦函数<br>atanh（x）：反超越正切函数</p><h2 id="5-适用于向量的常用函数">5 适用于向量的常用函数</h2><p>min（x）：向量x的元素的最小值<br>max（x）：向量x的元素的最大值<br>mean（（x）：向量x的元素的平均值<br>median（x）：向量x的元素的中位数<br>std（x）：向量x的元素的标准差<br>diff（x）：向量X的相邻元素的差<br>sort（x）：对向量x的元素进行排序<br>（Sorting）<br>length（x）：向量x的元素个数<br>norm（x）：向量x的欧氏（Euclidean）长度<br>sum（x）：向量x的元素总和<br>prod（x）：向量x的元素总乘积<br>cumsum（x）：向量x的累计元素总和<br>cumprod（x）：向量x的累计元素总乘积<br>dot（x,y）：向量x和的内积<br>cross（x,y）：向量x和y的外积</p><h2 id="6-MATLAB的永久常数">6 MATLAB的永久常数</h2><p>i 或 J：基本虚数单位（即）<br>eps：系统的浮点（Floating-point）精确度<br>inf：无限大，例如1/0<br>nan或NaN：非数值（Notanumber），例如0/0<br>pi：圆周率P（=3.1415926…）<br>realmax：系统所能表示的最大数值<br>realmin：系统所能表示的最小数值<br>nargin：函数的输入引数个数<br>nargin：函数的输出引数个数</p><h2 id="7-MATLAB基本绘图函数">7 MATLAB基本绘图函数</h2><p>plot：x轴和y轴均为线性刻度（Linear scale）<br>loglog：x轴和y轴均为对数刻度（Logarithmic scale）<br>semilogx：x轴为对数刻度，y轴为线性刻度<br>semilogy：x轴为线性刻度，y轴为对数刻度</p><h2 id="8-plot绘图函数的叁数字元颜色">8 plot绘图函数的叁数字元颜色</h2><p>y黄色k黑色w白色b蓝色g绿色g红色c亮青色m锰紫色<br><code>.</code>点<code>o</code>圆<code>x</code>x<code>+</code> +<code>-</code>实线<code>:</code>点线<code>-.</code>点虚线<code>--</code>虚线</p><h2 id="9-注解">9 注解</h2><p>xlabel(‘Input Value’);% x轴注解</p><p>ylabel(‘Function Value’);% y轴注解</p><p>title(‘Two Trigonometric Function’);% 图形标题</p><p>legend(‘y=sin(x)’, ‘y=cos(x)’);% 图形注解</p><p>grid on;% 显示格线</p><h2 id="10-二维绘图函数">10 二维绘图函数</h2><p>bar长条图<br>errorbar图形加上误差范围<br>fplot较精确的函数图形<br>polar极座标图<br>hist累计图<br>rose极座标累计图<br>stairs阶梯图<br>stem针状图<br>fill实心图<br>feather羽毛图<br>compass罗盘图<br>quiver向量场图</p><h3 id="10-1-特殊变量与常数">10.1 特殊变量与常数</h3><p>ans计算结果的变量名<br>computer确定运行的计算机<br>eps浮点相对精度<br>Inf无穷大<br>I虚数单位<br>inputname输入参数名<br>NaN非数<br>nargin输入参数个数<br>nargout输出参数的数目<br>pi圆周率<br>nargoutchk有效的输出参数数目<br>realmax最大正浮点数<br>realmin最小正浮点数<br>varargin实际输入的参量<br>varargout实际返回的参量</p><p>操作符与特殊字符</p><p><code>+</code>加<code>-</code>减<br><code>*</code>矩阵乘法<code>.＊</code>数组乘（对应元素相乘）<br><code>^</code>矩阵幂<code>.^</code>数组幂（各个元素求幂）<br><code>\</code>左除或反斜杠<code>/</code>右除或斜面杠<code>./</code>数组除（对应元素除）</p><p>张量积</p><p><code>:</code>冒号<code>()</code>圆括<code>[]</code>方括<code>.</code>小数点<code>..</code>父目录<code>...</code>继续<code>,</code>逗号（分割多条命令）<br><code>;</code>分号（禁止结果显示）<code>%</code>注释<code>!</code>感叹号<code>‘</code>转置或引用<code>=</code>赋值<code>==</code>相等<code>&lt;&gt;</code>不等于<br><code>&amp;</code>逻辑与 <code>|</code>逻辑或<code>~</code>逻辑非<code>xor</code>逻辑异或</p><h3 id="10-2-基本数学函数">10.2 基本数学函数</h3><p>abs绝对值和复数模长<br>acosacodh反余弦，反双曲余弦<br>acotacoth反余切，反双曲余切<br>acscacsch反余割，反双曲余割<br>angle相角<br>asecasech反正割，反双曲正割<br>secant正切<br>asin,asinh反正弦，反双曲正弦<br>atan,atanh反正切，双曲正切<br>tangent正切<br>atan2四象限反正切<br>ceil向着无穷大舍入<br>complex建立一个复数<br>conj复数配对<br>coscosh余弦，双曲余弦<br>csc,csch余切，双曲余切<br>cot,coth余切，双曲余切<br>exp指数<br>fix朝0方向取整<br>floor朝负无穷取整<br>gcd最大公因数<br>imag复数值的虚部<br>lcm最小公倍数<br>log自然对数<br>log2以2为底的对数<br>log10常用对数<br>mod有符号的求余<br>nchoosek二项式系数和全部组合数<br>real复数的实部<br>rem相除后求余<br>round取整为最近的整数<br>sec,sech正割，双曲正割<br>sign符号数<br>sin,sinh正弦，双曲正弦<br>sqrt平方根<br>tan,tanh正切，双曲正切</p><h3 id="10-3-基本矩阵和矩阵操作">10.3 基本矩阵和矩阵操作</h3><p>blkding从输入参量建立块对角矩阵<br>eye单位矩阵<br>linespace产生线性间隔的向量<br>logspace产生对数间隔的向量<br>numel元素个数<br>ones产生全为1的数组<br>rand均匀颁随机数和数组<br>randn正态分布随机数和数组<br>zeros建立一个全0矩阵<br>colon等间隔向量<br>cat连接数组<br>diag对角矩阵和矩阵对角线<br>fliplr从左自右翻转矩阵<br>flipud从上到下翻转矩阵<br>repmat复制一个数组<br>reshape改造矩阵<br>roy90矩阵翻转90度<br>tril矩阵的下三角<br>triu矩阵的上三角<br>dot向量点集<br>cross向量叉集<br>ismember检测一个集合的元素<br>intersect向量的交集<br>setxor向量异或集<br>setdiff向是的差集<br>union向量的并集</p><p><strong>数值分析和傅立叶变换</strong></p><p>cumprod累积<br>cumsum累加<br>cumtrapz累计梯形法计算数值微分<br>factor 质因子<br>inpolygon删除多边形区域内的点<br>max最大值<br>mean数组的均值<br>mediam中值<br>min最小值<br>perms所有可能的转换<br>polyarea多边形区域<br>primes生成质数列表<br>prod数组元素的乘积<br>rectint矩形交集区域<br>sort按升序排列矩阵元素<br>sortrows按升序排列行<br>std标准偏差<br>sum求和<br>trapz梯形数值积分<br>var 方差<br>del2离散拉普拉斯<br>diff差值和微分估计<br>gradient数值梯度<br>cov协方差矩阵<br>corrcoef相关系数<br>conv2二维卷积<br>conv卷积和多项式乘法</p><p><strong>filterIIR或FIR滤波器</strong></p><p>deconv反卷积和多项式除法<br>filter2二维数字滤波器<br>cplxpair将复数值分类为共轭对<br>fft一维的快速傅立叶变换<br>fft2二维快速傅立叶变换<br>fftshift将FFT的DC分量移到频谱中心<br>ifft一维快速反博立叶变换<br>ifft2二维傅立叶反变换<br>ifftn多维快速傅立叶变换<br>ifftshift反FFT偏移<br>nextpow2最靠近的2的幂次<br>unwrap校正相位角</p><p><strong>多项式与插值</strong></p><p>conv卷积和多项式乘法<br>roots多项式的根<br>poly具有设定根的多项式<br>polyder多项式微分<br>polyeig多项式的特征根<br>polyfit多项式拟合<br>polyint解析多项式积分<br>polyval多项式求值<br>polyvalm矩阵变量多项式求值<br>residue部分分式展开<br>interp1一维插值<br>interp2二维插值<br>interp3三维插值<br>interpft使用FFT的一维插值<br>interpn多维插值<br>meshgrid为3维点生成 x 和 y 的网格<br>ndgrid生成多维函数和插值的数组<br>pchip分段3次Hermite插值多项式<br>ppval分段多项式的值<br>spline3次样条数据插值</p><p><strong>绘图函数</strong></p><p>bar竖直条图<br>barh水平条图<br>hist直方图<br>histc直方图计数<br>hold保持当前图形<br>loglogxy对数坐标图<br>pie饼状图<br>plot绘二维图<br>polar极坐标图<br>semilogyy轴对数坐标图<br>semilogxx轴对数坐标<br>subplot绘制子图<br>bar3数值3D竖条图<br>bar3h水平3D条形图<br>comet33D慧星图<br>cylinder圆柱体<br>fill3填充的3D多边形<br>plot33维空间绘图<br>quiver33D震动（速度）图<br>slice体积薄片图<br>sphere球<br>stem3绘制离散表面数据<br>waterfall绘制瀑布<br>trisurf三角表面<br>clabel增加轮廓标签到等高线图中<br>datetick数据格式标记<br>grid加网格线<br>gtext用鼠标将文本放在2D图中<br>legend图注<br>plotyy左右边都绘Y轴<br>title标题<br>xlabelx轴标签<br>ylabely轴标签<br>zlabelz轴标签<br>contour等高线图<br>contourc等高线计算<br>contourf填充的等高线图<br>hidden网格线消影<br>meshc连接网格/等高线<br>mesh具有参考轴的3D网格<br>peaks具有两个变量的采样函数<br>Surf3D阴影表面图<br>surface建立表面低层对象<br>surfc海浪和等高线的结合<br>surfl具有光照的3D阴影表面<br>trimesh三角网格图</p>]]></content>
      
      
      
        <tags>
            
            <tag> MATLAB函数 </tag>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python运行环境多平台结合</title>
      <link href="/2022/02/26/Others/Anaconda/Python%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%BB%93%E5%90%88/"/>
      <url>/2022/02/26/Others/Anaconda/Python%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%BB%93%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h1>Python运行环境多平台结合</h1><h2 id="1-Anaconda-vscode-python">1 Anaconda+vscode+python</h2><p>首先电脑中安装好Anaconda和vscode，并创建过工程环境：</p><p>打开vscode的命令面板，并输入命令：<code>Python:select interpreter</code>，效果如图：</p><p><img src="https://s2.loli.net/2023/03/12/TxW6DLGqiwIlcgJ.png" alt="image-20220330234006634"></p><p>然后选择对应的python解释器：</p><p><img src="https://s2.loli.net/2023/03/12/SIYivC6wcW9MaNq.png" alt="image-20220330234053444"></p><p>然后运行代码，会出现如下运行结果：</p><p><img src="https://s2.loli.net/2023/03/12/zsjrJApBlNPKmd2.png" alt="image-20220330234225053"></p><h2 id="2-Anaconda-pycharm-python">2 Anaconda+pycharm+python</h2><p>在pycharm中配置python运行的Anaconda环境</p><p><img src="https://s2.loli.net/2023/03/12/mp2IPLcJ86M3sSx.png" alt="image-20220331002831080"></p><p>选择<code>Show All</code>之后，选择合适的解释器，点击<code>OK</code>，如下所示：</p><p><img src="https://s2.loli.net/2023/03/12/RmcS75pd2CWhtYa.png" alt="image-20220331002953335"></p><p>如果没有合适的解释器，则通过<code>+</code>添加之前添加过的解释器。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
            <tag> 环境配置 </tag>
            
            <tag> Python </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qt Creator打造VScode one dark pro主题配色</title>
      <link href="/2022/02/26/Others/QT/Qt%20Creator%E9%85%8D%E7%BD%AEone%20dark%20pro%E4%B8%BB%E9%A2%98%E9%85%8D%E8%89%B2/"/>
      <url>/2022/02/26/Others/QT/Qt%20Creator%E9%85%8D%E7%BD%AEone%20dark%20pro%E4%B8%BB%E9%A2%98%E9%85%8D%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<h1>Qt Creator打造VScode one dark pro主题配色</h1><p>我喜欢用one dark pro主题，但是Qt Creator中没有好看的主题，我根据网上的大神，做了相应的配置</p><p>我将QT安装在D:\QT路径下，所以根据需要对路径修改。一共需要进行两次配置，实际效果如图：</p><p><img src="https://s2.loli.net/2023/03/12/t1Jqc8xIikzosOW.png" alt="image-20220410224215763"></p><h2 id="1-配置主题颜色">1 配置主题颜色</h2><p>新建文件<code>onedark.creatortheme</code>，并将其放在 D:\QT\Tools\QtCreator\share\qtcreator\themes 路径下</p><p>onedark.creatortheme配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br></pre></td><td class="code"><pre><span class="line">[General]</span><br><span class="line">ThemeName=One Dark</span><br><span class="line">PreferredStyles=Fusion</span><br><span class="line">DefaultTextEditorColorScheme=onedark.xml</span><br><span class="line"></span><br><span class="line">[Palette]</span><br><span class="line">shadowBackground=ff21252b</span><br><span class="line">text=ffabb2bf</span><br><span class="line">textDisabled=99abb2bf</span><br><span class="line">textHighlighted=ffd7dae0</span><br><span class="line">toolBarItem=ffabb2bf</span><br><span class="line">toolBarItemDisabled=99abb2bf</span><br><span class="line">fancyBarsNormalTextColor=ffabb2bf</span><br><span class="line">fancyBarsBoldTextColor=ffabb2bf</span><br><span class="line">hoverBackground=ff31363f</span><br><span class="line">selectedBackground=ff3a3f4b</span><br><span class="line">selectedBackgroundText=ffd7dae0</span><br><span class="line">normalBackground=ff282c34</span><br><span class="line">alternateBackground=ff31363f</span><br><span class="line">error=ffe06c75</span><br><span class="line">warning=ffe5c07b</span><br><span class="line">success=ff98c379</span><br><span class="line">message=ff61afef</span><br><span class="line">splitter=ff181a1f</span><br><span class="line">textColorLink=61afef</span><br><span class="line">textColorLinkVisited=c678dd</span><br><span class="line">backgroundColorDisabled=ff21252b</span><br><span class="line"></span><br><span class="line">[Colors]</span><br><span class="line"></span><br><span class="line">;DS controls theme START</span><br><span class="line">DScontrolBackground=normalBackground</span><br><span class="line">DScontrolOutline=splitter</span><br><span class="line">DStextColor=text</span><br><span class="line">DSdisabledTextColor=textDisabled</span><br><span class="line">DSpanelBackground=ff454444</span><br><span class="line">DShoverHighlight=hoverBackground</span><br><span class="line">DScolumnBackground=ff363636</span><br><span class="line">DSfocusEdit=normalBackground</span><br><span class="line">DSfocusDrag=ff565656</span><br><span class="line">DScontrolBackgroundPressed=selectedBackground</span><br><span class="line">DScontrolBackgroundChecked=selectedBackground</span><br><span class="line">DSinteraction=selectedBackground</span><br><span class="line">DSsliderActiveTrack=ff7a7a7a</span><br><span class="line">DSsliderInactiveTrack=ff4d4d4d</span><br><span class="line">DSsliderHandle=ff4b5362</span><br><span class="line">DSsliderActiveTrackHover=ff7f7f7f</span><br><span class="line">DSsliderInactiveTrackHover=ff505050</span><br><span class="line">DSsliderHandleHover=ff7a7a7a</span><br><span class="line">DSsliderActiveTrackFocus=ffaaaaaa</span><br><span class="line">DSsliderInactiveTrackFocus=ff7a7a7a</span><br><span class="line">DSsliderHandleFocus=ff1d545c</span><br><span class="line">DSerrorColor=error</span><br><span class="line">DScontrolBackgroundDisabled=backgroundColorDisabled</span><br><span class="line">DScontrolOutlineDisabled=ff4d4d4d</span><br><span class="line">DStextColorDisabled=textDisabled</span><br><span class="line">DStextSelectionColor=selectedBackground</span><br><span class="line">DStextSelectedTextColor=selectedBackgroundText</span><br><span class="line">DSscrollBarTrack=ff4d4d4d</span><br><span class="line">DSscrollBarHandle=ff4b5362</span><br><span class="line">DScontrolBackgroundInteraction=ff4d4d4d</span><br><span class="line">DStranslationIndicatorBorder=splitter</span><br><span class="line">DSsectionHeadBackground=alternateBackground</span><br><span class="line">DSchangedStateText=message</span><br><span class="line">DS3DAxisXColor=error</span><br><span class="line">DS3DAxisYColor=success</span><br><span class="line">DS3DAxisZColor=message</span><br><span class="line">;DS controls theme END</span><br><span class="line"></span><br><span class="line">BackgroundColorAlternate=alternateBackground</span><br><span class="line">BackgroundColorDark=shadowBackground</span><br><span class="line">BackgroundColorHover=hoverBackground</span><br><span class="line">BackgroundColorNormal=normalBackground</span><br><span class="line">BackgroundColorDisabled=backgroundColorDisabled</span><br><span class="line">BackgroundColorSelected=selectedBackground</span><br><span class="line">BadgeLabelBackgroundColorChecked=text</span><br><span class="line">BadgeLabelBackgroundColorUnchecked=text</span><br><span class="line">BadgeLabelTextColorChecked=normalBackground</span><br><span class="line">BadgeLabelTextColorUnchecked=normalBackground</span><br><span class="line">CanceledSearchTextColor=error</span><br><span class="line">ComboBoxArrowColor=toolBarItem</span><br><span class="line">ComboBoxArrowColorDisabled=toolBarItemDisabled</span><br><span class="line">ComboBoxTextColor=fancyBarsNormalTextColor</span><br><span class="line">DetailsButtonBackgroundColorHover=hoverBackground</span><br><span class="line">DetailsWidgetBackgroundColor=shadowBackground</span><br><span class="line">DockWidgetResizeHandleColor=splitter</span><br><span class="line">DoubleTabWidget1stSeparatorColor=splitter</span><br><span class="line">DoubleTabWidget1stTabActiveTextColor=text</span><br><span class="line">DoubleTabWidget1stTabBackgroundColor=normalBackground</span><br><span class="line">DoubleTabWidget1stTabInactiveTextColor=text</span><br><span class="line">DoubleTabWidget2ndSeparatorColor=toolBarItemDisabled</span><br><span class="line">DoubleTabWidget2ndTabActiveTextColor=text</span><br><span class="line">DoubleTabWidget2ndTabBackgroundColor=selectedBackground</span><br><span class="line">DoubleTabWidget2ndTabInactiveTextColor=text</span><br><span class="line">EditorPlaceholderColor=shadowBackground</span><br><span class="line">FancyToolBarSeparatorColor=toolBarItemDisabled</span><br><span class="line">FancyTabBarBackgroundColor=shadowBackground</span><br><span class="line">FancyTabBarSelectedBackgroundColor=selectedBackground</span><br><span class="line">FancyTabWidgetDisabledSelectedTextColor=toolBarItemDisabled</span><br><span class="line">FancyTabWidgetDisabledUnselectedTextColor=toolBarItemDisabled</span><br><span class="line">FancyTabWidgetEnabledSelectedTextColor=fancyBarsBoldTextColor</span><br><span class="line">FancyTabWidgetEnabledUnselectedTextColor=fancyBarsBoldTextColor</span><br><span class="line">FancyToolButtonHoverColor=hoverBackground</span><br><span class="line">FancyToolButtonSelectedColor=selectedBackground</span><br><span class="line">FutureProgressBackgroundColor=shadowBackground</span><br><span class="line">IconsBaseColor=toolBarItem</span><br><span class="line">IconsDisabledColor=toolBarItemDisabled</span><br><span class="line">IconsInfoColor=message</span><br><span class="line">IconsInfoToolBarColor=message</span><br><span class="line">IconsWarningColor=warning</span><br><span class="line">IconsWarningToolBarColor=warning</span><br><span class="line">IconsErrorColor=error</span><br><span class="line">IconsErrorToolBarColor=error</span><br><span class="line">IconsRunColor=success</span><br><span class="line">IconsRunToolBarColor=success</span><br><span class="line">IconsStopColor=error</span><br><span class="line">IconsStopToolBarColor=error</span><br><span class="line">IconsInterruptColor=message</span><br><span class="line">IconsInterruptToolBarColor=message</span><br><span class="line">IconsDebugColor=toolBarItem</span><br><span class="line">IconsNavigationArrowsColor=warning</span><br><span class="line">IconsBuildHammerHandleColor=b06112</span><br><span class="line">IconsBuildHammerHeadColor=toolBarItem</span><br><span class="line">IconsModeWelcomeActiveColor=success</span><br><span class="line">IconsModeEditActiveColor=message</span><br><span class="line">IconsModeDesignActiveColor=warning</span><br><span class="line">IconsModeDebugActiveColor=message</span><br><span class="line">IconsModeProjectActiveColor=success</span><br><span class="line">IconsModeAnalyzeActiveColor=message</span><br><span class="line">IconsModeHelpActiveColor=warning</span><br><span class="line">IconsCodeModelKeywordColor=ff777777</span><br><span class="line">IconsCodeModelClassColor=ffc0b550</span><br><span class="line">IconsCodeModelStructColor=ff53b053</span><br><span class="line">IconsCodeModelFunctionColor=ffd34373</span><br><span class="line">IconsCodeModelVariableColor=ff2bbbcc</span><br><span class="line">IconsCodeModelEnumColor=ffc0b550</span><br><span class="line">IconsCodeModelMacroColor=ff476ba0</span><br><span class="line">IconsCodeModelAttributeColor=ff316511</span><br><span class="line">IconsCodeModelUniformColor=ff994899</span><br><span class="line">IconsCodeModelVaryingColor=ffa08833</span><br><span class="line">IconsCodeModelOverlayBackgroundColor=normalBackground</span><br><span class="line">IconsCodeModelOverlayForegroundColor=text</span><br><span class="line">InfoBarBackground=shadowBackground</span><br><span class="line">InfoBarText=text</span><br><span class="line">MenuBarEmptyAreaBackgroundColor=shadowBackground</span><br><span class="line">MenuBarItemBackgroundColor=shadowBackground</span><br><span class="line">MenuBarItemTextColorDisabled=textDisabled</span><br><span class="line">MenuBarItemTextColorNormal=text</span><br><span class="line">MenuItemTextColorDisabled=textDisabled</span><br><span class="line">MenuItemTextColorNormal=text</span><br><span class="line">MiniProjectTargetSelectorBackgroundColor=shadowBackground</span><br><span class="line">MiniProjectTargetSelectorBorderColor=shadowBackground</span><br><span class="line">MiniProjectTargetSelectorSummaryBackgroundColor=normalBackground</span><br><span class="line">MiniProjectTargetSelectorTextColor=fancyBarsNormalTextColor</span><br><span class="line">PanelStatusBarBackgroundColor=shadowBackground</span><br><span class="line">PanelsWidgetSeparatorLineColor=splitter</span><br><span class="line">PanelTextColorDark=text</span><br><span class="line">PanelTextColorMid=text</span><br><span class="line">PanelTextColorLight=textHighlighted</span><br><span class="line">ProgressBarColorError=error</span><br><span class="line">ProgressBarColorFinished=success</span><br><span class="line">ProgressBarColorNormal=message</span><br><span class="line">ProgressBarTitleColor=text</span><br><span class="line">ProgressBarBackgroundColor=alternateBackground</span><br><span class="line">SplitterColor=splitter</span><br><span class="line">TextColorDisabled=textDisabled</span><br><span class="line">TextColorError=error</span><br><span class="line">TextColorHighlight=textHighlighted</span><br><span class="line">TextColorHighlightBackground=hoverBackground</span><br><span class="line">TextColorLink=textColorLink</span><br><span class="line">TextColorLinkVisited=textColorLinkVisited</span><br><span class="line">TextColorNormal=text</span><br><span class="line">ToggleButtonBackgroundColor=shadowBackground</span><br><span class="line">ToolBarBackgroundColor=shadowBackground</span><br><span class="line">TreeViewArrowColorNormal=hoverBackground</span><br><span class="line">TreeViewArrowColorSelected=text</span><br><span class="line"></span><br><span class="line">OutputPanes_DebugTextColor=text</span><br><span class="line">OutputPanes_ErrorMessageTextColor=error</span><br><span class="line">OutputPanes_MessageOutput=message</span><br><span class="line">OutputPanes_NormalMessageTextColor=text</span><br><span class="line">OutputPanes_StdErrTextColor=error</span><br><span class="line">OutputPanes_StdOutTextColor=text</span><br><span class="line">OutputPanes_WarningMessageTextColor=warning</span><br><span class="line">OutputPanes_TestPassTextColor=success</span><br><span class="line">OutputPanes_TestFailTextColor=error</span><br><span class="line">OutputPanes_TestXFailTextColor=error</span><br><span class="line">OutputPanes_TestXPassTextColor=message</span><br><span class="line">OutputPanes_TestSkipTextColor=message</span><br><span class="line">OutputPanes_TestWarnTextColor=warning</span><br><span class="line">OutputPanes_TestFatalTextColor=error</span><br><span class="line">OutputPanes_TestDebugTextColor=text</span><br><span class="line">OutputPaneButtonFlashColor=error</span><br><span class="line">OutputPaneToggleButtonTextColorChecked=fancyBarsNormalTextColor</span><br><span class="line">OutputPaneToggleButtonTextColorUnchecked=fancyBarsNormalTextColor</span><br><span class="line"></span><br><span class="line">Debugger_LogWindow_LogInput=ff56b6c2</span><br><span class="line">Debugger_LogWindow_LogStatus=message</span><br><span class="line">Debugger_LogWindow_LogTime=error</span><br><span class="line"></span><br><span class="line">Debugger_WatchItem_ValueNormal=text</span><br><span class="line">Debugger_WatchItem_ValueInvalid=textDisabled</span><br><span class="line">Debugger_WatchItem_ValueChanged=error</span><br><span class="line"></span><br><span class="line">Debugger_Breakpoint_TextMarkColor=message</span><br><span class="line"></span><br><span class="line">Welcome_TextColor=text</span><br><span class="line">Welcome_ForegroundPrimaryColor=text</span><br><span class="line">Welcome_ForegroundSecondaryColor=text</span><br><span class="line">Welcome_BackgroundColor=normalBackground</span><br><span class="line">Welcome_ButtonBackgroundColor=normalBackground</span><br><span class="line">Welcome_DividerColor=splitter</span><br><span class="line">Welcome_HoverColor=hoverBackground</span><br><span class="line">Welcome_LinkColor=textColorLink</span><br><span class="line">Welcome_DisabledLinkColor=textDisabled</span><br><span class="line"></span><br><span class="line">Timeline_TextColor=text</span><br><span class="line">Timeline_BackgroundColor1=normalBackground</span><br><span class="line">Timeline_BackgroundColor2=shadowBackground</span><br><span class="line">Timeline_DividerColor=splitter</span><br><span class="line">Timeline_HighlightColor=selectedBackground</span><br><span class="line">Timeline_PanelBackgroundColor=alternateBackground</span><br><span class="line">Timeline_PanelHeaderColor=normalBackground</span><br><span class="line">Timeline_HandleColor=ff4b5362</span><br><span class="line">Timeline_RangeColor=selectedBackground</span><br><span class="line"></span><br><span class="line">VcsBase_FileStatusUnknown_TextColor=text</span><br><span class="line">VcsBase_FileAdded_TextColor=success</span><br><span class="line">VcsBase_FileModified_TextColor=warning</span><br><span class="line">VcsBase_FileDeleted_TextColor=error</span><br><span class="line">VcsBase_FileRenamed_TextColor=message</span><br><span class="line">VcsBase_FileUnmerged_TextColor=error</span><br><span class="line"></span><br><span class="line">Bookmarks_TextMarkColor=message</span><br><span class="line"></span><br><span class="line">TextEditor_SearchResult_ScrollBarColor=success</span><br><span class="line">TextEditor_CurrentLine_ScrollBarColor=message</span><br><span class="line"></span><br><span class="line">ProjectExplorer_TaskError_TextMarkColor=error</span><br><span class="line">ProjectExplorer_TaskWarn_TextMarkColor=warning</span><br><span class="line"></span><br><span class="line">CodeModel_Error_TextMarkColor=error</span><br><span class="line">CodeModel_Warning_TextMarkColor=warning</span><br><span class="line"></span><br><span class="line">QmlDesigner_BackgroundColor=normalBackground</span><br><span class="line">QmlDesigner_HighlightColor=selectedBackground</span><br><span class="line">QmlDesigner_FormEditorSelectionColor=message</span><br><span class="line">QmlDesigner_FormEditorForegroundColor=normalBackground</span><br><span class="line">QmlDesigner_BackgroundColorDarkAlternate=shadowBackground</span><br><span class="line">QmlDesigner_BackgroundColorDarker=splitter</span><br><span class="line">QmlDesigner_BorderColor=splitter</span><br><span class="line">QmlDesigner_ButtonColor=normalBackground</span><br><span class="line">QmlDesigner_TabDark=shadowBackground</span><br><span class="line">QmlDesigner_TabLight=text</span><br><span class="line">QmlDesigner_FormeditorBackgroundColor=normalBackground</span><br><span class="line">QmlDesigner_AlternateBackgroundColor=alternateBackground</span><br><span class="line">QmlDesigner_ScrollBarHandleColor=ff4b5362</span><br><span class="line"></span><br><span class="line">PaletteWindow=shadowBackground</span><br><span class="line">PaletteWindowText=text</span><br><span class="line">PaletteBase=normalBackground</span><br><span class="line">PaletteAlternateBase=alternateBackground</span><br><span class="line">PaletteButton=shadowBackground</span><br><span class="line">PaletteBrightText=error</span><br><span class="line">PaletteText=text</span><br><span class="line">PaletteButtonText=text</span><br><span class="line">PaletteButtonTextDisabled=textDisabled</span><br><span class="line">PaletteToolTipBase=hoverBackground</span><br><span class="line">PaletteHighlight=selectedBackground</span><br><span class="line">PaletteDark=shadowBackground</span><br><span class="line">PaletteHighlightedText=selectedBackgroundText</span><br><span class="line">PaletteToolTipText=text</span><br><span class="line">PaletteLink=textColorLink</span><br><span class="line">PaletteLinkVisited=textColorLinkVisited</span><br><span class="line">PaletteWindowDisabled=backgroundColorDisabled</span><br><span class="line">PaletteWindowTextDisabled=textDisabled</span><br><span class="line">PaletteBaseDisabled=backgroundColorDisabled</span><br><span class="line">PaletteTextDisabled=textDisabled</span><br><span class="line"></span><br><span class="line">[Flags]</span><br><span class="line">ComboBoxDrawTextShadow=false</span><br><span class="line">DerivePaletteFromTheme=true</span><br><span class="line">DrawIndicatorBranch=true</span><br><span class="line">DrawSearchResultWidgetFrame=false</span><br><span class="line">DrawTargetSelectorBottom=false</span><br><span class="line">DrawToolBarHighlights=false</span><br><span class="line">DrawToolBarBorders=false</span><br><span class="line">ApplyThemePaletteGlobally=true</span><br><span class="line">FlatToolBars=true</span><br><span class="line">FlatSideBarIcons=true</span><br><span class="line">FlatProjectsMode=true</span><br><span class="line">FlatMenuBar=true</span><br><span class="line">ToolBarIconShadow=true</span><br><span class="line">WindowColorAsBase=true</span><br><span class="line">DarkUserInterface=true</span><br><span class="line"></span><br><span class="line">[Gradients]</span><br><span class="line">DetailsWidgetHeaderGradient\1\color=normalBackground</span><br><span class="line">DetailsWidgetHeaderGradient\1\pos=1</span><br><span class="line">DetailsWidgetHeaderGradient\size=1</span><br></pre></td></tr></table></figure><h2 id="2-配置编辑器颜色">2 配置编辑器颜色</h2><p>新建文件<code>onedark.xml</code>，并将其放在 D:\QT\Tools\QtCreator\share\qtcreator\styles 路径下</p><p>onedark.xml代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style-scheme</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span> <span class="attr">name</span>=<span class="string">&quot;One Dark&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Text&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#abb2bf&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#282c34&quot;</span>/&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Link&quot;</span> <span class="attr">underlineStyle</span>=<span class="string">&quot;SingleUnderline&quot;</span>/&gt;</span><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Selection&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#3e4451&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;LineNumber&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#4b5363&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;SearchResult&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#324365&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;SearchScope&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#3e4451&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Parentheses&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#515a6b&quot;</span> /&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;ParenthesesMismatch&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#000000&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#c678dd&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;AutoComplete&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#3e4451&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;CurrentLine&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#3a3f4b&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;CurrentLineNumber&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#abb2bf&quot;</span> /&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Occurrences&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#324365&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Occurrences.Unused&quot;</span> <span class="attr">underlineColor</span>=<span class="string">&quot;#d19a66&quot;</span> <span class="attr">underlineStyle</span>=<span class="string">&quot;DashUnderline&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Occurrences.Rename&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#e06c75&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Number&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#d19a66&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;String&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#98c379&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Type&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#61afef&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Local&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#e06c75&quot;</span> /&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Parameter&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#e06c75&quot;</span> /&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Global&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#e06c75&quot;</span> /&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Field&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#e06c75&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Static&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#56b6c2&quot;</span> /&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;VirtualMethod&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#61afef&quot;</span> <span class="attr">italic</span>=<span class="string">&quot;true&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Function&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#61afef&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Keyword&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#c678dd&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;PrimitiveType&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#c678dd&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Type&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#e5c07b&quot;</span> /&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Operator&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#56b6c2&quot;</span> /&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Overloaded Operator&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#c678dd&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Punctuation&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Preprocessor&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#c678dd&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Label&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#e06c75&quot;</span> <span class="attr">bold</span>=<span class="string">&quot;true&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Comment&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#5c6370&quot;</span> <span class="attr">italic</span>=<span class="string">&quot;true&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Doxygen.Comment&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#5c6370&quot;</span> <span class="attr">italic</span>=<span class="string">&quot;true&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Doxygen.Tag&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#61afef&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;VisualWhitespace&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#3c4049&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;QmlLocalId&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#61afef&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;QmlExternalId&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;QmlTypeId&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#61afef&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;QmlRootObjectProperty&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#61afef&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;QmlScopeObjectProperty&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#61afef&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;QmlExternalObjectProperty&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;JsScopeVar&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;JsImportVar&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#d19a66&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;JsGlobalVar&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#d19a66&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;QmlStateName&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#61afef&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Binding&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#c678dd&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DisabledCode&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#5c6370&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;AddedLine&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#98c379&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;RemovedLine&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#e06c75&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DiffFile&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#61afef&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DiffLocation&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#d19a66&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DiffFileLine&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#000000&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#e5c07b&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DiffContextLine&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#000000&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#56b6c2&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DiffSourceLine&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#000000&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#be5046&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DiffSourceChar&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#000000&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#e06c75&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DiffDestLine&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#000000&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#789353&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DiffDestChar&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#000000&quot;</span> <span class="attr">background</span>=<span class="string">&quot;#98c379&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;LogChangeLine&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#e06c75&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;LogAuthorName&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#61afef&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;LogCommitDate&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#98c379&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;LogCommitHash&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#e06c75&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;LogCommitSubject&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;LogDecoration&quot;</span> <span class="attr">foreground</span>=<span class="string">&quot;#c678dd&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Warning&quot;</span> <span class="attr">underlineColor</span>=<span class="string">&quot;#d19a66&quot;</span> <span class="attr">underlineStyle</span>=<span class="string">&quot;SingleUnderline&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;WarningContext&quot;</span> <span class="attr">underlineColor</span>=<span class="string">&quot;#d19a66&quot;</span> <span class="attr">underlineStyle</span>=<span class="string">&quot;DotLine&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Error&quot;</span> <span class="attr">underlineColor</span>=<span class="string">&quot;#e06c75&quot;</span> <span class="attr">underlineStyle</span>=<span class="string">&quot;SingleUnderline&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;ErrorContext&quot;</span> <span class="attr">underlineColor</span>=<span class="string">&quot;#e06c75&quot;</span> <span class="attr">underlineStyle</span>=<span class="string">&quot;DotLine&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Declaration&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;FunctionDefinition&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;OutputArgument&quot;</span> <span class="attr">italic</span>=<span class="string">&quot;true&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;LastStyleSentinel&quot;</span>/&gt;</span><span class="language-xml"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="language-xml"><span class="tag">&lt;/<span class="name">style-scheme</span>&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Qt </tag>
            
            <tag> 主题 </tag>
            
            <tag> One dark pro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows安全防护</title>
      <link href="/2022/02/26/Others/others/Windows%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4/"/>
      <url>/2022/02/26/Others/others/Windows%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4/</url>
      
        <content type="html"><![CDATA[<h1>Windows安全防护</h1><p>Windows电脑不需要杀毒软件，微软自带的Windows Defender就已经足够了，除此之外还需要进行一些设置。</p><p><strong>开启隐藏功能</strong></p><p>在Windows 10/11的专业版和企业版上，按下<code>Win + R</code>再输入<code>gpedit.msc</code>进入组策略编辑器，找到<code>计算机配置 -&gt; 管理模板 -&gt; Windows组件 -&gt; Windows Defender 防病毒 -&gt; MAPS</code>并启用<code>加入Microsoft MAPS</code>，如图：</p><p><img src="https://s2.loli.net/2023/03/12/GNsQ3Pc8ay7mYVR.png" alt="image-20220424215818724"></p><p>在个人版和家庭版上，组策略编辑器默认是用不了的，需要用脚本开启MAPS功能。以<strong>管理员权限</strong>打开<code>PowerShell</code>，输入<code>Get-MpPreference</code>查看安全设置。其中 MAPSReporting 控制MAPS的设置，0是关闭，1是基本模式，2是高级模式。输入<code>Set-MpPreference -MAPSReporting 2</code>就可以开启高级模式。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Windows安全防护 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
